#Test Results (version 2)
#Fri Apr 12 13:30:39 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=351 0\:00\:00.351
end=Fri Apr 12 13\:30\:39 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.6 (x86_64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Fri Apr 12 13\:30\:39 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.6,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.6
totalTime=351
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Collection

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5, mixed mode, sharing)

#section:build
----------messages:(7/234)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Fri Apr 12 13:30:39 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Fri Apr 12 13:30:39 UTC 2024
elapsed time (seconds): 0.208
result: Passed. Build successful

#section:compile
----------messages:(7/293)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:30:39 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Apr 12 13:30:39 UTC 2024
elapsed time (seconds): 0.208
----------configuration:(10/723)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d

----------rerun:(33/3384)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
----------direct:(7/587)----------
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/292)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Fri Apr 12 13:30:39 UTC 2024
Mode: agentvm
Agent id: 3
finished: Fri Apr 12 13:30:39 UTC 2024
elapsed time (seconds): 0.142
----------configuration:(13/971)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection

----------rerun:(26/2874)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34428)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0  7.713
ArrayList spliterator().tryAdvance()                               0  4.708
ArrayList spliterator().forEachRemaining()                         0  3.549
ArrayList contains                                                 0  5.731
ArrayList containsAll                                              0  0.970
ArrayList forEach                                                  0  4.365
ArrayList toArray()                                                0  0.178
ArrayList toArray(a)                                               0  0.188
ArrayList toArray(empty)                                           0  0.159
ArrayList stream().forEach                                         0  4.137
ArrayList stream().mapToInt                                        0 18.667
ArrayList stream().collect                                         0 17.245
ArrayList stream()::iterator                                       0  5.864
ArrayList parallelStream().forEach                                 1 44.318
ArrayList parallelStream().mapToInt                                0 12.877
ArrayList parallelStream().collect                                 0  8.066
ArrayList parallelStream()::iterator                               0  4.361
ArrayList removeIf                                                 0  4.150
ArrayList remove(Object)                                           0  1.221
ArrayList listIterator forward loop                                0  0.704
ArrayList listIterator backward loop                               0  0.292
ArrayList indexOf                                                  0  0.588
ArrayList lastIndexOf                                              0  0.226
ArrayList equals                                                   0  0.238
ArrayList hashCode                                                 0  0.406
ArrayList replaceAll                                               0  4.617
ArrayList$SubList iterate for loop                                 0  0.608
ArrayList$SubList iterator().forEachRemaining()                    0  0.299
ArrayList$SubList spliterator().tryAdvance()                       0  3.231
ArrayList$SubList spliterator().forEachRemaining()                 0  0.117
ArrayList$SubList contains                                         0  0.135
ArrayList$SubList containsAll                                      0  0.144
ArrayList$SubList forEach                                          0  0.538
ArrayList$SubList toArray()                                        0  0.249
ArrayList$SubList toArray(a)                                       0  0.061
ArrayList$SubList toArray(empty)                                   0  0.121
ArrayList$SubList stream().forEach                                 0  0.169
ArrayList$SubList stream().mapToInt                                0  0.373
ArrayList$SubList stream().collect                                 0  0.259
ArrayList$SubList stream()::iterator                               0  0.229
ArrayList$SubList parallelStream().forEach                         0  8.702
ArrayList$SubList parallelStream().mapToInt                        0  2.579
ArrayList$SubList parallelStream().collect                         0  1.465
ArrayList$SubList parallelStream()::iterator                       0  0.245
ArrayList$SubList removeIf                                         0  0.095
ArrayList$SubList remove(Object)                                   0  0.341
ArrayList$SubList listIterator forward loop                        0  0.126
ArrayList$SubList listIterator backward loop                       0  0.114
ArrayList$SubList indexOf                                          0  0.054
ArrayList$SubList lastIndexOf                                      0  0.138
ArrayList$SubList equals                                           0  0.507
ArrayList$SubList hashCode                                         0  0.128
ArrayList$SubList replaceAll                                       0  0.140
Vector iterate for loop                                            0  0.127
Vector iterator().forEachRemaining()                               0  0.360
Vector spliterator().tryAdvance()                                  0  0.204
Vector spliterator().forEachRemaining()                            0  0.080
Vector contains                                                    0  1.013
Vector containsAll                                                 0  0.355
Vector forEach                                                     0  0.105
Vector toArray()                                                   0  0.034
Vector toArray(a)                                                  0  0.086
Vector toArray(empty)                                              0  0.070
Vector stream().forEach                                            0  0.130
Vector stream().mapToInt                                           0  0.277
Vector stream().collect                                            0  0.320
Vector stream()::iterator                                          0  0.215
Vector parallelStream().forEach                                    0  2.334
Vector parallelStream().mapToInt                                   0  1.555
Vector parallelStream().collect                                    0  2.626
Vector parallelStream()::iterator                                  0  0.229
Vector removeIf                                                    0  0.095
Vector remove(Object)                                              0  0.719
Vector listIterator forward loop                                   0  0.130
Vector listIterator backward loop                                  0  0.131
Vector indexOf                                                     0  0.449
Vector lastIndexOf                                                 0  0.134
Vector equals                                                      0  0.388
Vector hashCode                                                    0  0.136
Vector replaceAll                                                  0  0.158
SynchronizedRandomAccessList iterate for loop                      0  0.483
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.136
SynchronizedRandomAccessList spliterator().tryAdvance()            0  3.861
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.219
SynchronizedRandomAccessList contains                              0  0.330
SynchronizedRandomAccessList containsAll                           0  0.204
SynchronizedRandomAccessList forEach                               0  0.260
SynchronizedRandomAccessList toArray()                             0  0.132
SynchronizedRandomAccessList toArray(a)                            0  0.143
SynchronizedRandomAccessList toArray(empty)                        0  0.127
SynchronizedRandomAccessList stream().forEach                      0  0.220
SynchronizedRandomAccessList stream().mapToInt                     0  0.373
SynchronizedRandomAccessList stream().collect                      0  0.340
SynchronizedRandomAccessList stream()::iterator                    0  0.316
SynchronizedRandomAccessList parallelStream().forEach              0  4.578
SynchronizedRandomAccessList parallelStream().mapToInt             0  3.176
SynchronizedRandomAccessList parallelStream().collect              0  2.857
SynchronizedRandomAccessList parallelStream()::iterator            0  0.347
SynchronizedRandomAccessList removeIf                              0  0.320
SynchronizedRandomAccessList remove(Object)                        0  0.180
SynchronizedRandomAccessList listIterator forward loop             0  0.184
SynchronizedRandomAccessList listIterator backward loop            0  0.194
SynchronizedRandomAccessList indexOf                               0  0.231
SynchronizedRandomAccessList lastIndexOf                           0  0.274
SynchronizedRandomAccessList equals                                0  0.358
SynchronizedRandomAccessList hashCode                              0  0.249
SynchronizedRandomAccessList replaceAll                            0  0.492
LinkedList iterate for loop                                        0  0.139
LinkedList iterator().forEachRemaining()                           0  0.184
LinkedList spliterator().tryAdvance()                              0  3.175
LinkedList spliterator().forEachRemaining()                        0  0.104
LinkedList contains                                                0  0.216
LinkedList containsAll                                             0  0.108
LinkedList forEach                                                 0  0.120
LinkedList toArray()                                               0  0.063
LinkedList toArray(a)                                              0  0.064
LinkedList toArray(empty)                                          0  0.076
LinkedList stream().forEach                                        0  0.128
LinkedList stream().mapToInt                                       0  0.294
LinkedList stream().collect                                        0  0.239
LinkedList stream()::iterator                                      0  0.206
LinkedList parallelStream().forEach                                0  3.595
LinkedList parallelStream().mapToInt                               0  2.929
LinkedList parallelStream().collect                                0  2.386
LinkedList parallelStream()::iterator                              0  0.226
LinkedList removeIf                                                0  0.138
LinkedList remove(Object)                                          0  0.076
LinkedList descendingIterator() loop                               0  2.853
LinkedList descendingIterator().forEachRemaining()                 0  5.639
LinkedList listIterator forward loop                               0  0.102
LinkedList listIterator backward loop                              0  0.089
LinkedList indexOf                                                 0  0.058
LinkedList lastIndexOf                                             0  0.064
LinkedList equals                                                  0  0.234
LinkedList hashCode                                                0  0.143
LinkedList replaceAll                                              0  0.165
AbstractList$SubList iterate for loop                              0  0.177
AbstractList$SubList iterator().forEachRemaining()                 0  0.158
AbstractList$SubList spliterator().tryAdvance()                    0  0.304
AbstractList$SubList spliterator().forEachRemaining()              0  0.178
AbstractList$SubList contains                                      0  0.143
AbstractList$SubList containsAll                                   0  0.164
AbstractList$SubList forEach                                       0  0.188
AbstractList$SubList toArray()                                     0  0.197
AbstractList$SubList toArray(a)                                    0  0.181
AbstractList$SubList toArray(empty)                                0  0.139
AbstractList$SubList stream().forEach                              0  0.233
AbstractList$SubList stream().mapToInt                             0  0.385
AbstractList$SubList stream().collect                              0  0.348
AbstractList$SubList stream()::iterator                            0  0.289
AbstractList$SubList parallelStream().forEach                      0  3.902
AbstractList$SubList parallelStream().mapToInt                     0  2.926
AbstractList$SubList parallelStream().collect                      0  2.575
AbstractList$SubList parallelStream()::iterator                    0  0.317
AbstractList$SubList removeIf                                      0  0.157
AbstractList$SubList remove(Object)                                0  0.148
AbstractList$SubList listIterator forward loop                     0  0.107
AbstractList$SubList listIterator backward loop                    0  0.220
AbstractList$SubList indexOf                                       0  0.144
AbstractList$SubList lastIndexOf                                   0  0.197
AbstractList$SubList equals                                        0  0.425
AbstractList$SubList hashCode                                      0  0.301
AbstractList$SubList replaceAll                                    0  0.195
CopyOnWriteArrayList iterate for loop                              0  0.119
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.272
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.140
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.075
CopyOnWriteArrayList contains                                      0  0.707
CopyOnWriteArrayList containsAll                                   0  0.218
CopyOnWriteArrayList forEach                                       0  0.078
CopyOnWriteArrayList toArray()                                     0  0.038
CopyOnWriteArrayList toArray(a)                                    0  0.076
CopyOnWriteArrayList toArray(empty)                                0  0.072
CopyOnWriteArrayList stream().forEach                              0  0.108
CopyOnWriteArrayList stream().mapToInt                             0  0.233
CopyOnWriteArrayList stream().collect                              0  0.220
CopyOnWriteArrayList stream()::iterator                            0  0.180
CopyOnWriteArrayList parallelStream().forEach                      0  2.954
CopyOnWriteArrayList parallelStream().mapToInt                     0  2.926
CopyOnWriteArrayList parallelStream().collect                      0  2.317
CopyOnWriteArrayList parallelStream()::iterator                    0  0.302
CopyOnWriteArrayList removeIf                                      0  0.111
CopyOnWriteArrayList remove(Object)                                0  0.901
CopyOnWriteArrayList listIterator forward loop                     0  0.103
CopyOnWriteArrayList listIterator backward loop                    0  0.165
CopyOnWriteArrayList indexOf                                       0  0.203
CopyOnWriteArrayList lastIndexOf                                   0  0.093
CopyOnWriteArrayList equals                                        0  0.268
CopyOnWriteArrayList hashCode                                      0  0.116
CopyOnWriteArrayList replaceAll                                    0  0.209
COWSubList iterate for loop                                        0 10.119
COWSubList iterator().forEachRemaining()                           0  0.289
COWSubList spliterator().tryAdvance()                              0  0.238
COWSubList spliterator().forEachRemaining()                        0  0.083
COWSubList contains                                                0  0.150
COWSubList containsAll                                             0  0.204
COWSubList forEach                                                 0  0.143
COWSubList toArray()                                               0  0.188
COWSubList toArray(a)                                              0  0.133
COWSubList toArray(empty)                                          0  0.126
COWSubList stream().forEach                                        0  0.129
COWSubList stream().mapToInt                                       0  0.294
COWSubList stream().collect                                        0  0.246
COWSubList stream()::iterator                                      0  0.217
COWSubList parallelStream().forEach                                0  2.376
COWSubList parallelStream().mapToInt                               0  1.430
COWSubList parallelStream().collect                                0  1.732
COWSubList parallelStream()::iterator                              0  0.195
COWSubList removeIf                                                0  0.217
COWSubList remove(Object)                                          0  0.089
COWSubList listIterator forward loop                               0  0.160
COWSubList listIterator backward loop                              0  0.404
COWSubList indexOf                                                 0  0.072
COWSubList lastIndexOf                                             0  0.102
COWSubList equals                                                  0  0.287
COWSubList hashCode                                                0  0.140
COWSubList replaceAll                                              0  0.161
ArrayDeque iterate for loop                                        0  0.109
ArrayDeque iterator().forEachRemaining()                           0  0.107
ArrayDeque spliterator().tryAdvance()                              0  0.163
ArrayDeque spliterator().forEachRemaining()                        0  0.089
ArrayDeque contains                                                0  0.473
ArrayDeque containsAll                                             0  0.086
ArrayDeque forEach                                                 0  0.077
ArrayDeque toArray()                                               0  0.091
ArrayDeque toArray(a)                                              0  0.064
ArrayDeque toArray(empty)                                          0  0.079
ArrayDeque stream().forEach                                        0  0.137
ArrayDeque stream().mapToInt                                       0  0.314
ArrayDeque stream().collect                                        0  0.238
ArrayDeque stream()::iterator                                      0  0.204
ArrayDeque parallelStream().forEach                                0  2.446
ArrayDeque parallelStream().mapToInt                               0  1.187
ArrayDeque parallelStream().collect                                0  3.412
ArrayDeque parallelStream()::iterator                              0  0.235
ArrayDeque removeIf                                                0  0.082
ArrayDeque remove(Object)                                          0  0.062
ArrayDeque descendingIterator() loop                               0  0.115
ArrayDeque descendingIterator().forEachRemaining()                 0  0.102
PriorityQueue iterate for loop                                     0  0.124
PriorityQueue iterator().forEachRemaining()                        0  0.114
PriorityQueue spliterator().tryAdvance()                           0  2.998
PriorityQueue spliterator().forEachRemaining()                     0  0.088
PriorityQueue contains                                             0  0.121
PriorityQueue containsAll                                          0  0.094
PriorityQueue forEach                                              0  0.127
PriorityQueue toArray()                                            0  0.036
PriorityQueue toArray(a)                                           0  0.099
PriorityQueue toArray(empty)                                       0  0.081
PriorityQueue stream().forEach                                     0  0.114
PriorityQueue stream().mapToInt                                    0  0.307
PriorityQueue stream().collect                                     0  0.540
PriorityQueue stream()::iterator                                   0  0.195
PriorityQueue parallelStream().forEach                             0  2.369
PriorityQueue parallelStream().mapToInt                            0  2.387
PriorityQueue parallelStream().collect                             0  2.831
PriorityQueue parallelStream()::iterator                           0  0.205
PriorityQueue removeIf                                             0  0.264
PriorityQueue remove(Object)                                       0  0.071
ConcurrentLinkedQueue iterate for loop                             0  0.119
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.090
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  3.298
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.149
ConcurrentLinkedQueue contains                                     0  0.209
ConcurrentLinkedQueue containsAll                                  0  0.115
ConcurrentLinkedQueue forEach                                      0  0.082
ConcurrentLinkedQueue toArray()                                    0  0.112
ConcurrentLinkedQueue toArray(a)                                   0  0.119
ConcurrentLinkedQueue toArray(empty)                               0  0.078
ConcurrentLinkedQueue stream().forEach                             0  0.137
ConcurrentLinkedQueue stream().mapToInt                            0  0.307
ConcurrentLinkedQueue stream().collect                             0  0.247
ConcurrentLinkedQueue stream()::iterator                           0  0.234
ConcurrentLinkedQueue parallelStream().forEach                     0  1.758
ConcurrentLinkedQueue parallelStream().mapToInt                    0  3.032
ConcurrentLinkedQueue parallelStream().collect                     0  3.465
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.311
ConcurrentLinkedQueue removeIf                                     0  0.118
ConcurrentLinkedQueue remove(Object)                               0  0.073
ConcurrentLinkedDeque iterate for loop                             0  0.153
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.093
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  3.359
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.098
ConcurrentLinkedDeque contains                                     0  0.210
ConcurrentLinkedDeque containsAll                                  0  0.083
ConcurrentLinkedDeque forEach                                      0  0.342
ConcurrentLinkedDeque toArray()                                    0  0.116
ConcurrentLinkedDeque toArray(a)                                   0  0.120
ConcurrentLinkedDeque toArray(empty)                               0  0.073
ConcurrentLinkedDeque stream().forEach                             0  0.128
ConcurrentLinkedDeque stream().mapToInt                            0  0.344
ConcurrentLinkedDeque stream().collect                             0  0.242
ConcurrentLinkedDeque stream()::iterator                           0  0.228
ConcurrentLinkedDeque parallelStream().forEach                     0  1.841
ConcurrentLinkedDeque parallelStream().mapToInt                    0  2.821
ConcurrentLinkedDeque parallelStream().collect                     0  3.282
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.306
ConcurrentLinkedDeque removeIf                                     0  0.111
ConcurrentLinkedDeque remove(Object)                               0  0.078
ConcurrentLinkedDeque descendingIterator() loop                    0  2.337
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.144
ArrayBlockingQueue iterate for loop                                0  0.350
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.294
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.321
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.158
ArrayBlockingQueue contains                                        0  0.365
ArrayBlockingQueue containsAll                                     0  0.092
ArrayBlockingQueue forEach                                         0  0.076
ArrayBlockingQueue toArray()                                       0  0.108
ArrayBlockingQueue toArray(a)                                      0  0.064
ArrayBlockingQueue toArray(empty)                                  0  0.092
ArrayBlockingQueue stream().forEach                                0  0.205
ArrayBlockingQueue stream().mapToInt                               0  0.367
ArrayBlockingQueue stream().collect                                0  2.173
ArrayBlockingQueue stream()::iterator                              0  0.327
ArrayBlockingQueue parallelStream().forEach                        0  2.887
ArrayBlockingQueue parallelStream().mapToInt                       0  2.006
ArrayBlockingQueue parallelStream().collect                        0  2.839
ArrayBlockingQueue parallelStream()::iterator                      0  0.306
ArrayBlockingQueue removeIf                                        0  0.089
ArrayBlockingQueue remove(Object)                                  0  0.070
LinkedBlockingQueue iterate for loop                               0  0.367
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.407
LinkedBlockingQueue spliterator().tryAdvance()                     0  3.084
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.173
LinkedBlockingQueue contains                                       0  0.860
LinkedBlockingQueue containsAll                                    0  0.103
LinkedBlockingQueue forEach                                        0  0.134
LinkedBlockingQueue toArray()                                      0  0.053
LinkedBlockingQueue toArray(a)                                     0  0.061
LinkedBlockingQueue toArray(empty)                                 0  0.076
LinkedBlockingQueue stream().forEach                               0  0.177
LinkedBlockingQueue stream().mapToInt                              0  0.317
LinkedBlockingQueue stream().collect                               0  0.323
LinkedBlockingQueue stream()::iterator                             0  0.250
LinkedBlockingQueue parallelStream().forEach                       0  2.529
LinkedBlockingQueue parallelStream().mapToInt                      0  6.259
LinkedBlockingQueue parallelStream().collect                       0  4.113
LinkedBlockingQueue parallelStream()::iterator                     0  0.295
LinkedBlockingQueue removeIf                                       0  0.153
LinkedBlockingQueue remove(Object)                                 0  0.067
LinkedBlockingDeque iterate for loop                               0  1.152
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.383
LinkedBlockingDeque spliterator().tryAdvance()                     0  3.458
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.179
LinkedBlockingDeque contains                                       0  0.326
LinkedBlockingDeque containsAll                                    0  0.088
LinkedBlockingDeque forEach                                        0  0.114
LinkedBlockingDeque toArray()                                      0  0.061
LinkedBlockingDeque toArray(a)                                     0  0.058
LinkedBlockingDeque toArray(empty)                                 0  0.076
LinkedBlockingDeque stream().forEach                               0  0.166
LinkedBlockingDeque stream().mapToInt                              0  0.329
LinkedBlockingDeque stream().collect                               0  0.257
LinkedBlockingDeque stream()::iterator                             0  0.239
LinkedBlockingDeque parallelStream().forEach                       0  2.838
LinkedBlockingDeque parallelStream().mapToInt                      0  3.694
LinkedBlockingDeque parallelStream().collect                       0  4.634
LinkedBlockingDeque parallelStream()::iterator                     0  0.358
LinkedBlockingDeque removeIf                                       0  0.142
LinkedBlockingDeque remove(Object)                                 0  0.067
LinkedBlockingDeque descendingIterator() loop                      0  2.089
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.207
LinkedTransferQueue iterate for loop                               0  0.102
LinkedTransferQueue iterator().forEachRemaining()                  0  0.211
LinkedTransferQueue spliterator().tryAdvance()                     0  2.727
LinkedTransferQueue spliterator().forEachRemaining()               0  0.188
LinkedTransferQueue contains                                       0  0.171
LinkedTransferQueue containsAll                                    0  0.078
LinkedTransferQueue forEach                                        0  0.104
LinkedTransferQueue toArray()                                      0  0.102
LinkedTransferQueue toArray(a)                                     0  0.221
LinkedTransferQueue toArray(empty)                                 0  0.077
LinkedTransferQueue stream().forEach                               0  0.150
LinkedTransferQueue stream().mapToInt                              0  0.319
LinkedTransferQueue stream().collect                               0  0.249
LinkedTransferQueue stream()::iterator                             0  0.249
LinkedTransferQueue parallelStream().forEach                       0  1.794
LinkedTransferQueue parallelStream().mapToInt                      0  3.178
LinkedTransferQueue parallelStream().collect                       0  3.298
LinkedTransferQueue parallelStream()::iterator                     0  0.320
LinkedTransferQueue removeIf                                       0  0.160
LinkedTransferQueue remove(Object)                                 0  0.232
PriorityBlockingQueue iterate for loop                             0  2.423
PriorityBlockingQueue iterator().forEachRemaining()                0  0.176
PriorityBlockingQueue spliterator().tryAdvance()                   0  2.492
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.096
PriorityBlockingQueue contains                                     0  0.136
PriorityBlockingQueue containsAll                                  0  0.107
PriorityBlockingQueue forEach                                      0  0.110
PriorityBlockingQueue toArray()                                    0  0.030
PriorityBlockingQueue toArray(a)                                   0  0.137
PriorityBlockingQueue toArray(empty)                               0  0.101
PriorityBlockingQueue stream().forEach                             0  0.122
PriorityBlockingQueue stream().mapToInt                            0  0.293
PriorityBlockingQueue stream().collect                             0  0.218
PriorityBlockingQueue stream()::iterator                           0  0.198
PriorityBlockingQueue parallelStream().forEach                     0  2.462
PriorityBlockingQueue parallelStream().mapToInt                    0  1.423
PriorityBlockingQueue parallelStream().collect                     0  1.767
PriorityBlockingQueue parallelStream()::iterator                   0  0.206
PriorityBlockingQueue removeIf                                     0  0.233
PriorityBlockingQueue remove(Object)                               0  0.076
ListN iterate for loop                                             0  0.367
ListN iterator().forEachRemaining()                                0  0.127
ListN spliterator().tryAdvance()                                   0  0.228
ListN spliterator().forEachRemaining()                             0  0.090
ListN contains                                                     0  0.335
ListN containsAll                                                  0  0.098
ListN forEach                                                      0  0.096
ListN toArray()                                                    0  0.037
ListN toArray(a)                                                   0  0.065
ListN toArray(empty)                                               0  0.048
ListN stream().forEach                                             0  0.131
ListN stream().mapToInt                                            0  0.255
ListN stream().collect                                             0  0.211
ListN stream()::iterator                                           0  0.253
ListN parallelStream().forEach                                     0  2.300
ListN parallelStream().mapToInt                                    0  1.409
ListN parallelStream().collect                                     0  2.082
ListN parallelStream()::iterator                                   0  0.258
ListN listIterator forward loop                                    0  0.210
ListN listIterator backward loop                                   0  0.161
ListN indexOf                                                      0  0.068
ListN lastIndexOf                                                  0  0.065
ListN equals                                                       0  0.178
ListN hashCode                                                     0  0.088
ImmutableCollections$SubList iterate for loop                      0  0.565
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.153
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.217
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.116
ImmutableCollections$SubList contains                              0  0.213
ImmutableCollections$SubList containsAll                           0  0.131
ImmutableCollections$SubList forEach                               0  0.119
ImmutableCollections$SubList toArray()                             0  0.092
ImmutableCollections$SubList toArray(a)                            0  0.081
ImmutableCollections$SubList toArray(empty)                        0  0.226
ImmutableCollections$SubList stream().forEach                      0  0.157
ImmutableCollections$SubList stream().mapToInt                     0  0.282
ImmutableCollections$SubList stream().collect                      0  0.245
ImmutableCollections$SubList stream()::iterator                    0  0.255
ImmutableCollections$SubList parallelStream().forEach              0  2.345
ImmutableCollections$SubList parallelStream().mapToInt             0  1.439
ImmutableCollections$SubList parallelStream().collect              0  4.533
ImmutableCollections$SubList parallelStream()::iterator            0  0.358
ImmutableCollections$SubList listIterator forward loop             0  0.266
ImmutableCollections$SubList listIterator backward loop            0  0.108
ImmutableCollections$SubList indexOf                               0  0.108
ImmutableCollections$SubList lastIndexOf                           0  0.098
ImmutableCollections$SubList equals                                0  0.236
ImmutableCollections$SubList hashCode                              0  0.142
----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
