#Test Results (version 2)
#Tue Mar 05 01:41:17 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=1370 0\:00\:01.370
end=Tue Mar 05 01\:41\:17 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.23
javatestOS=Mac OS X 13.6.4 (x86_64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Tue Mar 05 01\:41\:15 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.4,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.4
totalTime=1370
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Tue Mar 05 01:41:15 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Tue Mar 05 01:41:15 UTC 2024
elapsed time (seconds): 0.028
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:41:15 UTC 2024
Mode: agentvm
Agent id: 2
finished: Tue Mar 05 01:41:15 UTC 2024
elapsed time (seconds): 0.027
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Tue Mar 05 01:41:15 UTC 2024
Test directory:
  compile: SubList
finished: Tue Mar 05 01:41:16 UTC 2024
elapsed time (seconds): 0.232
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:41:15 UTC 2024
Mode: agentvm
Agent id: 2
finished: Tue Mar 05 01:41:16 UTC 2024
elapsed time (seconds): 0.231
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Tue Mar 05 01:41:16 UTC 2024
Mode: agentvm
Agent id: 6
finished: Tue Mar 05 01:41:17 UTC 2024
elapsed time (seconds): 1.107
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91954)----------
Seed from RandomFactory = -7233540679869702315L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1735574329], 0, 1): success
test SubList.testAdd([42, -1620076742], 0, 1): success
test SubList.testAdd([42, -138729606], 0, 1): success
test SubList.testAdd([42, -1306266676], 0, 1): success
test SubList.testAdd([42, 67426847], 0, 1): success
test SubList.testAdd([42, 1295226742], 0, 1): success
test SubList.testAdd([42, 583710384], 0, 1): success
test SubList.testAdd([42, 109495992], 0, 1): success
test SubList.testAdd([42, 916890558], 0, 1): success
test SubList.testAdd(java.util.ArrayList@5381efe7, 2, 5): success
test SubList.testAdd(java.util.LinkedList@14d875a9, 2, 5): success
test SubList.testAdd(java.util.Vector@1e65fdbe, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@7f15e86d, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@3271afff, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@777a2e01, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@a90e4d5, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@6ce0288e, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@591cd9b5, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1e5c0ecf, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@4cb5a06a, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@6e4bb519, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-1720772535, 42], 0, 1): success
test SubList.testAddAtPos([42, 499248577], 0, 1): success
test SubList.testAddAtPos([42, 852090264], 0, 1): success
test SubList.testAddAtPos([-1529040939, 42], 0, 1): success
test SubList.testAddAtPos([42, -1838114375], 0, 1): success
test SubList.testAddAtPos([1799258296, 42], 0, 1): success
test SubList.testAddAtPos([42, -351739957], 0, 1): success
test SubList.testAddAtPos([1956733923, 42], 0, 1): success
test SubList.testAddAtPos([-198293432, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@68c6e2e4, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@1c40b36a, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@7a80c862, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@49f66b0, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@2b82716c, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@23915f8d, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@272084b9, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@729e57df, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@4243cbdc, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@498249a8, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@581b45c7, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5c8d7ac5, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@36e27e11, 2, 5): success
test SubList.testClear(java.util.LinkedList@4b434383, 2, 5): success
test SubList.testClear(java.util.Vector@433eaa1, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1ae704a9, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@2ce985ea, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@6e8e7791, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@fea0f21, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@29171474, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@79976b65, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@c3890bd, 2, 5): success
test SubList.testEquals(java.util.LinkedList@789650c6, 2, 5): success
test SubList.testEquals(java.util.Vector@1280ac5c, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@5ade1c3a, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@3cb91515, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@256f9e09, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1f7b5acd, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1afb7e66, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@43497f4f, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@28e920bb, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@297977f2, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@22e34007, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@4f61162, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@66cbf262, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@5e266a76, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@54059dac, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@7fcf6c50, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@1b0da2d7, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@1b0da2d7, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@62a679cc, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@4cc07dc5, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4c028155, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4cc5c6b8, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@6b16116d, 2, 5): success
test SubList.testGet(java.util.LinkedList@39def3b, 2, 5): success
test SubList.testGet(java.util.Vector@5dc4c4f7, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@599c60f5, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@3510c607, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1f1f5409, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@208a3915, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@10a739b6, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3d7dd92d, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@d7a00c2, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@62765670, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@543e1292, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@6a5d1fae, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@b04d93, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@325d9d7a, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@108c412, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@49761f11, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@1e61cd0b, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@1e61cd0b, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@831232c, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@4f6b12b7, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@13e0d252, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5909ce45, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@52a16b2c, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@581ca37, 2, 5): success
test SubList.testIndexOf(java.util.Vector@6b61f5b6, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@22bc446a, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@74e045c6, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2256c89d, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@201ee61, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@3edb72ba, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@d79e1d0, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2865c727, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@594fb67f, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@6373da2f, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@8eb1e6, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6f2780f4, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@41f5bc84, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@46cc407b, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@280bc0f6, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1d9cc296, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1d9cc296, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6d4ef1b1, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@751c16eb, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@47ecdebc, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2c26d8cd, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@31210c12, 2, 5): success
test SubList.testIterator(java.util.LinkedList@2855b693, 2, 5): success
test SubList.testIterator(java.util.Vector@7aa01783, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@5ea3b7bb, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@210b8d8a, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2ea2f24, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@480198ab, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@60bbfc4f, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@486e80ad, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1f2b35c7, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@5b40a083, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@52e1c864, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@148dd962, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@130282e1, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@49cc117d, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@5b240eeb, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@6b94ab31, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@1f8b327c, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@1f8b327c, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@42c58f96, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@17d0d192, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@2895160c, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@67f63d37, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@44e57da5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@57c7e2b4, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@2fbcb2de, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@5d117c18, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@80c2a01, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3438210e, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7d17ab34, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@1153698a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@5341fd3a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@d34497e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@3fb20791, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1cb63fc2, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@195d6466, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7126ce4f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3c5d73ea, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@437acc6f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@40c3fd48, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1070485f, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1070485f, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@6996680c, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@65b6e804, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@6c46003d, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@722640d7, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@4aaf7813, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@30889907, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@7a45c866, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@682248cc, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@1560c23c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@79248bc5, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6b8fa2c1, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@637d96ac, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@627ed21a, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@a3348ab, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@4d3bce54, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@198c8ec8, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@157904d3, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@3600025d, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@74273380, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@308f5caa, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@7b75739e, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@6a83776e, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@137fe123, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@5a032165, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@41b24f2f, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@5de2a022, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@69a7f187, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@194c093e, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@1716e411, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2a5b52d6, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1fff21bb, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1fff21bb, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@17922358, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@5f036f34, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@26a07062, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@220f7609, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@76b713cb, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@3b2462f, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@125d9cbb, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@1f3729a4, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@56656fc, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@d267337, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@d267337, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@cafd1dd, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@4d732c5a, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@3a8469fb, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@298d9314, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@4d3448d3, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@6b9c418c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7cfb45bb, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5098e640, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@5284246a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@160db143, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@32f4f38b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@4fd0f68c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1a8878a9, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@ad9d47, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@7b3dd0fb, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@54e68724, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@2e464990, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1df1fa37, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@759a32f3, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6e87924b, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@44487861, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4514ca14, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2c0eb710, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@404e0f02, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@20d1013b, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@596ba1b9, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1d469d, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@14450100, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@58d4d601, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1aee99be, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@7124e3ff, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@7124e3ff, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@6bd93fc3, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@6cc4a71, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2c9f5762, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@555fcdc8, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@2913db4a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@7e438f35, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@306c5a6a, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4d458a9f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@66436a0d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@57413858, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@2b364c26, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@490dbf2c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@44b0265d, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@519e354, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@743fa488, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@13024952, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@68f91119, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@20775b47, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@38f87df2, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2f958a1f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@2378c00, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@26e0333a, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([163695761], 0, 1): success
test SubList.testListIteratorSet([-1673818260], 0, 1): success
test SubList.testListIteratorSet([-1619926344], 0, 1): success
test SubList.testListIteratorSet([153509867], 0, 1): success
test SubList.testListIteratorSet([1337207469], 0, 1): success
test SubList.testListIteratorSet([1303683269], 0, 1): success
test SubList.testListIteratorSet([440229355], 0, 1): success
test SubList.testListIteratorSet([-622082453], 0, 1): success
test SubList.testListIteratorSet([912806957], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@15d2ba4f, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@20234ac, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@386a990f, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@558e2cef, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@53a4c8f6, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@67fd3458, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@790d8b6b, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@3027ad14, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@71a083e3, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@72919c73, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@7b12b077, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@64a054e6, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([777693386], 0, 1): success
test SubList.testListIteratorSetPrevious([-1556680787], 0, 1): success
test SubList.testListIteratorSetPrevious([983701655], 0, 1): success
test SubList.testListIteratorSetPrevious([-1485086772], 0, 1): success
test SubList.testListIteratorSetPrevious([289828611], 0, 1): success
test SubList.testListIteratorSetPrevious([948561012], 0, 1): success
test SubList.testListIteratorSetPrevious([623018579], 0, 1): success
test SubList.testListIteratorSetPrevious([-439944776], 0, 1): success
test SubList.testListIteratorSetPrevious([-689510855], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@290ce68e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@28ccdc33, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@5e87ad01, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@15215afc, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@6e4c43fa, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3bea2336, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@3abfdd20, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@6f450df2, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@1ddd0f68, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3c659abc, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@6ca12a6a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@462648e8, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@68bcf1da, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@557d8eb0, 2, 5): success
test SubList.testModAdd(java.util.Vector@7fda28e4, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@7990958c, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@1ea56b6e, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@2fd0f88c, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@1d4e27eb, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@6e65ffa9, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@4c7ff53, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@48118851, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@4c94e5d5, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@44b45272, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@4868f5e7, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@184ec33a, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@456df6fc, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@5a1157a7, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@150dfb17, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3185fb07, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@1d01aab4, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@2bb44b3a, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@2dc8a14e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2fcaf810, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@1df4deec, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@37a9f19f, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@544bf6c3, 2, 5): success
test SubList.testModClear(java.util.LinkedList@31b8aa48, 2, 5): success
test SubList.testModClear(java.util.Vector@4d892e68, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@6cbcfd4e, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@572ec84a, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@53a9f9b4, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@23d41090, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@46eaecdd, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@8cd609e, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@555dfaee, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@4898e489, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@357a7bba, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@1f92d3af, 2, 5): success
test SubList.testModGet(java.util.LinkedList@510d289d, 2, 5): success
test SubList.testModGet(java.util.Vector@1546c9cf, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@31988097, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@d9e7eb9, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@39984cfc, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@47286e2c, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@7f90535f, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@2f841764, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@76475af3, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@18661312, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@58d5413d, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@337dc93d, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1ecfebee, 2, 5): success
test SubList.testModHashCode(java.util.Vector@690d88d8, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@3977be84, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@2c97da92, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@458c0d7c, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@30823472, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@c90d43e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1637e355, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@233d1c4f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@681977b, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@54e9ee2e, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@51ab601b, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@2f7397e, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@7d632116, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@37507674, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@3519f422, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@313bd88d, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@2aaa96ca, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@275828c4, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4f44504e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@2288166a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@4ae389e6, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@6c4f15a4, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@73c2f8bd, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@2b554c49, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@6552046f, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@33c02ffb, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@4f63ae1b, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7fcd0de1, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@2acea924, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@7296c19c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@2bdd5938, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@11881212, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@ecea805, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3fa96b9e, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@6307bec0, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@4bce2675, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@722a799b, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@5a876dad, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@7edb2fca, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7fe2fc48, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@6458ce02, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@5a0e68e4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@6bab4ced, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@463b8bb1, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@33bbc969, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1a90e960, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@6f4572a, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@116d7358, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@317f49b3, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@6c1f809f, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@25c8997, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@12702bb4, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@165f56f3, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@5d0278e4, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@ade438b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6c797819, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@21e727c1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@33317c13, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@3c8d1d50, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@1f2726ec, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@58dca094, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@54ca21b3, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@1f683d40, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@b0d2ef1, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@181dd079, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@eb7855b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@356d72d7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@11dfa707, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@23f5b401, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6fb528e4, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@23f574b5, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@5777b093, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@7eb6199c, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@1db24547, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@51b3aa07, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@75a4391c, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1f7e25ff, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@2f0af700, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@184d9fd3, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@9b14df4, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@1b0b9bb5, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3135114a, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@2bb868cf, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@52a72110, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@479dec2a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@42afce48, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@1d3f9415, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@566c6994, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@5c039f43, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@6a206cd4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@7eee38d8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@64f49cbf, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@6f0ef4a3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7ae98f35, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@1bcab9d6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@628f5828, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@7bba1e99, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@6a6f72f6, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@746076a9, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5e5f14c4, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@59a0098b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@10fc234, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@61bf4315, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@39f059e3, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@4de7d5bf, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@39565d09, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@55e2e3da, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@35ff794d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@689f37d0, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@75e99000, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@41b6ddb2, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5643f99b, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@43858205, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7d488b72, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@6a70ebc0, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@168b94a1, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@28b7d30f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4118f40e, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@579029f9, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@2f8a4d54, 2, 5): success
test SubList.testModRemove(java.util.Vector@2205a6b1, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@3dcc8c98, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@4ff0ef31, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@c79051d, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@7b05afda, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@2d51e921, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@6a96f3aa, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@3e410fa, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@3d6e2b30, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@48ce4132, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@5184d6da, 2, 5): success
test SubList.testModSet(java.util.LinkedList@67eb2c8c, 2, 5): success
test SubList.testModSet(java.util.Vector@7df23820, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@3a7ea649, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@6449bc7b, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@5452135a, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@404951a9, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@12168767, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@25bbe91e, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@199aed0, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@7de99a69, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@729f0d9, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@41c0c3e7, 2, 5): success
test SubList.testRemove(java.util.LinkedList@15dac8f5, 2, 5): success
test SubList.testRemove(java.util.Vector@4fa8d604, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@2f45bf8, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@303fe7a6, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@16913623, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@54068956, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@29459d0f, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@8997e3f, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1633747463], 0, 1): success
test SubList.testSet([-271188556], 0, 1): success
test SubList.testSet([1034170879], 0, 1): success
test SubList.testSet([-1079958731], 0, 1): success
test SubList.testSet([788861220], 0, 1): success
test SubList.testSet([1396593235], 0, 1): success
test SubList.testSet([-1644118210], 0, 1): success
test SubList.testSet([937069228], 0, 1): success
test SubList.testSet([474549316], 0, 1): success
test SubList.testSet(java.util.ArrayList@34fc5891, 2, 5): success
test SubList.testSet(java.util.LinkedList@38e2e578, 2, 5): success
test SubList.testSet(java.util.Vector@5f0d906e, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@650ffea, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@275459d1, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@3f61d6a8, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@6764f46c, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@16070987, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@695d049c, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@721507ad, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@85e6756, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@d37a1ac, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@260376d7, 2, 5): success
test SubList.testSubList(java.util.LinkedList@3c20dac2, 2, 5): success
test SubList.testSubList(java.util.Vector@5423acc5, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@3b8aa99e, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@454d00dd, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1ebb97ea, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@311e95f3, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@1b121796, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@3e99f6d, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@771bf6e0, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@17aeeafc, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@349ddd8a, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@38191f66, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4f4f9650, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@2e36a018, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@3f3276ae, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@71003247, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@3496cb19, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@3496cb19, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@498cf3c, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@54e105d2, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@76a213c2, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@c56b646, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@7612d8df, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@76c2405, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@7dcf8cb3, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@17ed9499, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@37bf9e7e, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@34ebdb6b, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@34ebdb6b, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@2bbbe973, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@577bc27a, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@3538c993, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@770c0b42, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@4364438a, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@714ae133, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@489689b9, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@ff098bf, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@7face8d7, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@499cf6a4, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@499cf6a4, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@8f768ee, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@6706121e, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@68d0127d, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1d7720d9, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@4b5790a2, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@9dec874, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7834f0e0, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@560ed6ef, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@2be05231, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@16fe3a55, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@16fe3a55, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2f2686dc, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@470b0ce7, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@32d32d8d, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@c03b640, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@47ecf3, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@f463272, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@29ec442d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@80feb4e, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@38137bbe, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@408ba54a, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@408ba54a, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@3a72a5aa, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@10b45b6, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@42c8890, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@ffd93a3, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@4e5d6f2d, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@2bbe7449, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6f6a29f1, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@1bd80aa6, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@51984d8b, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@24a6f9d7, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@24a6f9d7, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@71962597, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@6016998e, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6fff970a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3187539a, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@27abf4a8, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@14d65e93, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@365a1c94, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@64f1b3f5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@69d2f2f9, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1cac3552, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1cac3552, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@50f7b4ae, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@74704bf2, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@46f673fe, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7d844d00, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@457176b8, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@5af8472d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3666de88, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@25759433, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2063d727, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@673132, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@673132, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@2e7416e0, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@a1498ad, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@457e7a17, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@66ca28fa, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@5e3e9296, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@4627547, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5aaccf77, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@30cafee7, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@359145ab, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@3d1704b, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@f8d93f5, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@323f9f75, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@57397542, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@299ecca3, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@2a7d5f12, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@468c8068, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4c6e022c, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@1eab9fff, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@6a7ab325, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@759cbca7, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@759cbca7, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@2c316a16, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@25b1b704, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@2912c2fb, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@790684d7, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
