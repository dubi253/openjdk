#Test Results (version 2)
#Fri Mar 15 23:53:54 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=1072 0\:00\:01.072
end=Fri Mar 15 23\:53\:54 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.4 (x86_64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 15 23\:53\:52 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.4,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.4
totalTime=1073
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ced5e427db9ce5a0c5a328b30c33edee96767763)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-ced5e427db9ce5a0c5a328b30c33edee96767763, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 15 23:53:52 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 15 23:53:53 UTC 2024
elapsed time (seconds): 0.082
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 15 23:53:52 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 15 23:53:53 UTC 2024
elapsed time (seconds): 0.082
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 15 23:53:53 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 15 23:53:53 UTC 2024
elapsed time (seconds): 0.078
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 15 23:53:53 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 15 23:53:53 UTC 2024
elapsed time (seconds): 0.078
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 15 23:53:53 UTC 2024
Mode: agentvm
Agent id: 6
finished: Fri Mar 15 23:53:54 UTC 2024
elapsed time (seconds): 0.911
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91973)----------
Seed from RandomFactory = 7451309549054986002L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 390449407], 0, 1): success
test SubList.testAdd([42, 1462408938], 0, 1): success
test SubList.testAdd([42, -2083673266], 0, 1): success
test SubList.testAdd([42, 1560956911], 0, 1): success
test SubList.testAdd([42, 194314346], 0, 1): success
test SubList.testAdd([42, 309639192], 0, 1): success
test SubList.testAdd([42, -324495593], 0, 1): success
test SubList.testAdd([42, 614149951], 0, 1): success
test SubList.testAdd([42, 2040856311], 0, 1): success
test SubList.testAdd(java.util.ArrayList@553179e8, 2, 5): success
test SubList.testAdd(java.util.LinkedList@16ece8f8, 2, 5): success
test SubList.testAdd(java.util.Vector@3b1387a1, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@367d5a19, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@6e5ecd78, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@4bf86acd, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@215b3500, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@749449ba, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@5326833, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@38b32260, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@1e522abb, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@329eb68b, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([919839709, 42], 0, 1): success
test SubList.testAddAtPos([981191282, 42], 0, 1): success
test SubList.testAddAtPos([42, -1633249616], 0, 1): success
test SubList.testAddAtPos([-1101320925, 42], 0, 1): success
test SubList.testAddAtPos([42, -244173936], 0, 1): success
test SubList.testAddAtPos([42, 393872490], 0, 1): success
test SubList.testAddAtPos([-2004979215, 42], 0, 1): success
test SubList.testAddAtPos([-1784486405, 42], 0, 1): success
test SubList.testAddAtPos([42, -1551677778], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@7862f694, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@2275f62c, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@4973a63b, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@4b7c6660, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@6846add2, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2f1b9073, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@4a360c74, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@5b0f5936, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@2e37ba6c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1585677, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@4e8dadf, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1c49130d, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@710b2b38, 2, 5): success
test SubList.testClear(java.util.LinkedList@5ef151e8, 2, 5): success
test SubList.testClear(java.util.Vector@6569c1e5, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@5577dfbd, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@4deccf90, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@6ea2540a, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@7c3508bc, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@1adb2ee1, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@6fbc1d52, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@2c179388, 2, 5): success
test SubList.testEquals(java.util.LinkedList@53afc3ae, 2, 5): success
test SubList.testEquals(java.util.Vector@b69352f, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@250ba6ef, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@6f838638, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3ac974ee, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6cdbac8e, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@3313d4de, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4f12affd, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@45121b0f, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@73a0679, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6e2c3a57, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@7a40d3d8, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@52e2a493, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@75a224c9, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@28002680, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@619550dc, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@b6c2404, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@b6c2404, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1b6413c2, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@54ee8763, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6c080a86, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@2f997380, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@15f9b0b0, 2, 5): success
test SubList.testGet(java.util.LinkedList@5905d077, 2, 5): success
test SubList.testGet(java.util.Vector@3f34897f, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@163e5497, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@6ce3bf02, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@14fb8e7a, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@2fa314b2, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@38890204, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1c3c8e9f, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@52733856, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@694384ce, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@546c9fe6, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@7722c6ac, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@219235a5, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@11b69cc, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@4ae6695, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3aa5be35, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@4ebd6c16, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@4ebd6c16, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@5cbdd4fc, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@19ab0a24, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@5c5244d7, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4a0e7842, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@6123f8ba, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@502ee839, 2, 5): success
test SubList.testIndexOf(java.util.Vector@2bc38e88, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@7d73f256, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@45725693, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@207d9898, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@14f18b44, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@6b57b706, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@34982740, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@57a7b891, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@573ffb17, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4adee1b0, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@67f15182, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7593ad8, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@41fc6e9d, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@6c85b47, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@63e2971, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@46f84d16, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@46f84d16, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@652b3884, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@2e698a8f, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6ccd8579, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@157831aa, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@40741a, 2, 5): success
test SubList.testIterator(java.util.LinkedList@39e6e064, 2, 5): success
test SubList.testIterator(java.util.Vector@2a0ccd7d, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@401104bc, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@596738cd, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@e38d736, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1882bd40, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@369451c3, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@59ce3e47, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5e4c9085, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@7df19007, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1bcf8996, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@1118a422, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4a264b3a, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5803ac11, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@53c1ae20, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5693ca7c, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@48ddb775, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@48ddb775, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@697addd1, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@301d9ec8, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@791e58d1, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@245d8174, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@5ac66e90, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@6f270d43, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@67635909, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@28297ba8, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@1bac41de, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1e8e2def, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@56265518, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@bed15a0, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@2aa37412, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3076bc12, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@4ba765b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@7d9e9325, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@d269e50, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1adfadbd, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@70c09635, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@7db3f269, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@399108fa, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@59366c10, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@59366c10, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@5de0542a, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@6ea96cde, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@5f3ec1b8, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2a734a31, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@de043af, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@6d2db8f, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@249b2eca, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@666d3048, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@2523eb18, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@49852f71, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7acdf8ad, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@71191d87, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@41295148, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@75a3fd41, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@401de91a, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@58914759, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@13a0298f, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@642363f8, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1878723f, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@30acdfe, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@64f71ca5, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@751dfa5, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4f09c1e6, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@187a4489, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@353ec494, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@313df6eb, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@fdf4082, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@717b21e0, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@77c8f4c3, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@553c87ee, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@5ae5eadd, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@5ae5eadd, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@16c51fc5, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@2a288b48, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1e81633f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@e869c01, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@4688a58c, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@65a3126, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@41365765, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@3b25a8ad, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@27ccdf91, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@716c0865, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@716c0865, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@330d4157, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@7023e120, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@426ed201, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@1563be6a, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@536c62b9, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@584cf95a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5b3302d3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@782bb8fd, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@6ef2b9b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@74189b52, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2b734f1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@6aa25ce4, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@778d0d84, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@51c9ae02, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@37aac985, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@26638c82, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@4fb97ffb, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@7baf7c7a, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2264efe2, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7416a2fa, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@67eb6b9b, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@b24713, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@729c72f4, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@30c3be01, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@54431915, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@2bfaa248, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@5f775859, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3ccdda75, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@1015d1a2, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@69db3079, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@30404a11, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@30404a11, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@6b37957f, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@25c3b423, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@183288ca, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@53d881f3, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@67e27655, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@2e874e0c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@45a0cbde, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@73c019e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@737ad45b, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@a952ffc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@4c6b0d4e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@1503c729, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@5efe1bc0, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@469fa48a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@7f5e3c8d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@532ef061, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4f29339d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@4c793fdd, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@6ff1465f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@72d73eba, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@6f620a55, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7880ba6a, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1848533189], 0, 1): success
test SubList.testListIteratorSet([-588419761], 0, 1): success
test SubList.testListIteratorSet([1949539940], 0, 1): success
test SubList.testListIteratorSet([1189371292], 0, 1): success
test SubList.testListIteratorSet([-1192698550], 0, 1): success
test SubList.testListIteratorSet([1849474459], 0, 1): success
test SubList.testListIteratorSet([-276212531], 0, 1): success
test SubList.testListIteratorSet([-144413258], 0, 1): success
test SubList.testListIteratorSet([886451480], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@27e420d1, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@29484ce9, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@4b3629a5, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@467dac0b, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@62a316d8, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@28df4255, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@59627666, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@45047cd2, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@41d41ecb, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6acaf771, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@7cf58e99, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3aca4ff7, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-311554519], 0, 1): success
test SubList.testListIteratorSetPrevious([1432009518], 0, 1): success
test SubList.testListIteratorSetPrevious([381713804], 0, 1): success
test SubList.testListIteratorSetPrevious([-930819455], 0, 1): success
test SubList.testListIteratorSetPrevious([-1758632356], 0, 1): success
test SubList.testListIteratorSetPrevious([-1545092594], 0, 1): success
test SubList.testListIteratorSetPrevious([656193455], 0, 1): success
test SubList.testListIteratorSetPrevious([-1569607505], 0, 1): success
test SubList.testListIteratorSetPrevious([177773205], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@51ee2e85, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@6619d8ee, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@6dc4880b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@303ab5e4, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@445dc408, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5f9a1a0c, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@7cdf704a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@19f3534c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@cab87da, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@2addf1fb, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@7e3307b6, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@2f721272, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@1a1ffdf3, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@1b1c4183, 2, 5): success
test SubList.testModAdd(java.util.Vector@25a9e865, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@4981b926, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@b14154, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@33952f81, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@58c13371, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@7a15fd96, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@7aa359d2, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@7ec1a7d3, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@70e198b5, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@40f0b071, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@5178cf46, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@6d9646d6, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@cfad128, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@3f811b6f, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@75aaa3b, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@225134fa, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@37a59c59, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@69cbd137, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@70247252, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@33681973, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@48bc2d99, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5609d8ab, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@673988d0, 2, 5): success
test SubList.testModClear(java.util.LinkedList@175e416e, 2, 5): success
test SubList.testModClear(java.util.Vector@66a72e81, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@651c2ee2, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@6d33dd3e, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@b47f783, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@336c8e60, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@4d5c559a, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@7131aed2, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@3d684c87, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@2e1aad42, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@7a2b625c, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@5092aff9, 2, 5): success
test SubList.testModGet(java.util.LinkedList@2be784c1, 2, 5): success
test SubList.testModGet(java.util.Vector@568bef01, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@5a1fc66d, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@5b71f0dd, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@7ea565e6, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@2773cdc9, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@4757b6d9, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@cb21f37, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@2729e828, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@3a67c50b, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1cfafb55, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@53c320a2, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@271036fa, 2, 5): success
test SubList.testModHashCode(java.util.Vector@58258b3a, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@2769d46c, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@a6e39c6, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@26caf08e, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@13327427, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@615ab127, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@47017c08, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@48d1f820, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@56e05275, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@58a0107a, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@76ea093e, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@5715f8df, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@3743a152, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@65946dd3, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@695a0b59, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4f542fb7, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@7e868d6e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@58ec9eb6, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@2ff9c8ce, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7caad545, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@e9e5d4c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1b52f44e, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@37509980, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@3a0e28ca, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@4f395046, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@a04d4de, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@4134e446, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@13a184bf, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@6071ce47, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@382fb9d9, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@582d0804, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@18973646, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@1960fd31, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@78fdf257, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@4a355451, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@472bc289, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@79867a2f, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@2afae01f, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@709210e2, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5c03c4db, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@7cad701e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@3e5998e5, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@76579ba4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@df9696a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@4f0c66f6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5c7e8478, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@5a8672b1, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@1fef5d6, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@540e3325, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@17b35c72, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@290084b1, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6fad67ef, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@5ec36686, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@3ff83043, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@5322842d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@63d0ad1c, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@33aaa64a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6ffc6203, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@66ebf64f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@bd4f1dd, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@7b32cdc7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@1a10ee89, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@25b3ef47, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3bf3343d, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5b23bffb, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@83e490e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2a7af1fd, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@c719c0e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@1f488d7e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7531c06, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@7190de1b, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@522372c2, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@6540ddba, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@267a7851, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@6a83843c, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@45827bff, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@53d66420, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@4c71db33, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1c621c49, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@140822ff, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@48a5056d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5d576bd7, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@710fd45a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@41127562, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@2d13f474, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@78d639ee, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@62060b11, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6e2bebb7, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4bfd7892, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@c48181, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@3409d499, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3c580b59, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@52b00c35, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@148ad5c1, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@6f2f09d8, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@7d9d8ea0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@30333b88, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@7b926ff3, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@59211b10, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@359cccf, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1ed5b6c6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@5eab76e7, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@4cca5afe, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1529f268, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@211810ef, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6e4bb65e, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@acd07e2, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@7c62df3b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@2fceb74c, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@4eb84ad5, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@2b2f3360, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4dfd3ab3, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@6291034c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7ecff266, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@1845664f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5883217c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@3db447f7, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@50a8ce9f, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@58eebe7e, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@49966060, 2, 5): success
test SubList.testModRemove(java.util.Vector@4c056892, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@65e9539b, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@4a0eed7a, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4fd3c6bc, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1d41cfce, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@6573fa15, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1a362120, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@75def2c2, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@20f5e89, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@37664c92, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@16f65fe1, 2, 5): success
test SubList.testModSet(java.util.LinkedList@7437097d, 2, 5): success
test SubList.testModSet(java.util.Vector@18da42e4, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@6a5e0d0a, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@24f4e02e, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@6cc6013d, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1ba4e815, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@625d5987, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@522e4d60, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@17f0169c, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@6e9d68c7, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@29db4875, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@12669813, 2, 5): success
test SubList.testRemove(java.util.LinkedList@6f256eb9, 2, 5): success
test SubList.testRemove(java.util.Vector@1d3c8151, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@52415748, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@312a40b5, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@5ea5afb9, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@423f4e48, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@5bf9bc6, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@6d004a, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1667303454], 0, 1): success
test SubList.testSet([-1333699131], 0, 1): success
test SubList.testSet([-1170571105], 0, 1): success
test SubList.testSet([1194131161], 0, 1): success
test SubList.testSet([645480014], 0, 1): success
test SubList.testSet([-1845704311], 0, 1): success
test SubList.testSet([-1845247434], 0, 1): success
test SubList.testSet([-311492619], 0, 1): success
test SubList.testSet([1703646365], 0, 1): success
test SubList.testSet(java.util.ArrayList@29dc9c53, 2, 5): success
test SubList.testSet(java.util.LinkedList@61762176, 2, 5): success
test SubList.testSet(java.util.Vector@1b7fc670, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@30dd196d, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@64fe684a, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5beb7660, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@76bf72c9, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@5de12566, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1643dcfe, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@57f79657, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@7a7ada04, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@58be9a98, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@638f6c13, 2, 5): success
test SubList.testSubList(java.util.LinkedList@73196852, 2, 5): success
test SubList.testSubList(java.util.Vector@79f3f38c, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@7bc8fa83, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@5b2194a7, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7e39f90c, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@57c409d8, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@6ceeef51, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@22338b9c, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@10d8b463, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@df509bd, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@698c10c9, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@3c628ece, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1e3e0a37, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@16c08b78, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@455a99c6, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@76eea2e1, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@72a978e1, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@72a978e1, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@e0ab0e4, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@5b8083f1, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@2d6991c2, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@28d321cc, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@1f825879, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@56856cd9, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@2423f7ae, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@69517006, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4414baa4, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@26443070, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@26443070, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@9720efb, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@5005351c, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@324c5661, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@56f71fc0, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@1198240d, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@71e112dd, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@47dd2cd, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@6a2d5cbf, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6e0e3444, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@4011ee74, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@4011ee74, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@957169c, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@143b917e, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@176820f6, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@48a11ed8, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@32dbc6ff, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@59026b9, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@c9c6df, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@5098d2bf, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@70f19ceb, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@71906b5d, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@71906b5d, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@62698683, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@30b99d84, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@59da4ba9, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@3b24ba19, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@2b27c28, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1f327f83, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@5a127b37, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@51007fd6, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@16679614, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@65a7588f, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@65a7588f, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@773c2f79, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@78a4283f, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@1fe1128a, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6d67d9d9, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@4b8c0f5, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@3c2ded75, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@4e343300, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@4f14063d, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@5f9368de, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@6ee71965, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@6ee71965, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@75d342b3, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@56ef1488, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@154e057a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@52619d7b, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@7a275257, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@6ed4389c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@655ee9c4, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@4f703169, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@78a12887, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@2f69c8cc, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@2f69c8cc, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@7a0789ea, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@68bad048, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@a8f3609, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@679da20c, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@5017635f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3238d9cf, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@71b4b140, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@1f7602e, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7e22c7cd, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@4535bcf4, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@4535bcf4, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@7c9cb9d2, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@7b9b85df, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@501a0394, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@504c1c57, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@53b4d22, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@13d1ecd4, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@52bef2f6, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@33f929c2, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3d8ceca1, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@78b22470, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@7d680743, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1d14980c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@50b1caab, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@7cb0e025, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@3262fe8c, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@459b1241, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1f0ccb4e, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@e055d68, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@5735897c, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1f11743f, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1f11743f, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@1de5e999, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@2b812458, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@15f6e4c3, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@3005b061, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
