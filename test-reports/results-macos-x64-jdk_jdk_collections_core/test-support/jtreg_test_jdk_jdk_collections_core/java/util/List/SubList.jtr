#Test Results (version 2)
#Fri Mar 01 18:58:37 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=5795 0\:00\:05.795
end=Fri Mar 01 18\:58\:37 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.23
javatestOS=Mac OS X 13.6.4 (x86_64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 18\:58\:31 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.4,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.4
totalTime=5796
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 18:58:36 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 18:58:36 UTC 2024
elapsed time (seconds): 0.028
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 18:58:36 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 18:58:36 UTC 2024
elapsed time (seconds): 0.027
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 18:58:36 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 18:58:37 UTC 2024
elapsed time (seconds): 0.086
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 18:58:36 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 18:58:37 UTC 2024
elapsed time (seconds): 0.086
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 18:58:37 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 01 18:58:37 UTC 2024
elapsed time (seconds): 0.677
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91974)----------
Seed from RandomFactory = -965391969560904096L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1742347915], 0, 1): success
test SubList.testAdd([42, -466348278], 0, 1): success
test SubList.testAdd([42, 2126785653], 0, 1): success
test SubList.testAdd([42, 1081836211], 0, 1): success
test SubList.testAdd([42, -1705811431], 0, 1): success
test SubList.testAdd([42, -1548389076], 0, 1): success
test SubList.testAdd([42, 2075930030], 0, 1): success
test SubList.testAdd([42, -1418972597], 0, 1): success
test SubList.testAdd([42, 16417368], 0, 1): success
test SubList.testAdd(java.util.ArrayList@226fff01, 2, 5): success
test SubList.testAdd(java.util.LinkedList@21fa95ab, 2, 5): success
test SubList.testAdd(java.util.Vector@76500b10, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@3195f114, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@3f7d455e, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@5e297dc6, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@5c008eda, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@58a56970, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@1a7b4d5e, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1b31338a, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@32b0d6be, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@2962f465, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-2036852247, 42], 0, 1): success
test SubList.testAddAtPos([42, -1593534236], 0, 1): success
test SubList.testAddAtPos([1646823457, 42], 0, 1): success
test SubList.testAddAtPos([42, 1375149684], 0, 1): success
test SubList.testAddAtPos([-1637886912, 42], 0, 1): success
test SubList.testAddAtPos([1093148410, 42], 0, 1): success
test SubList.testAddAtPos([-690458935, 42], 0, 1): success
test SubList.testAddAtPos([42, 100953094], 0, 1): success
test SubList.testAddAtPos([-1503700046, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@4f37facd, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@18b4c47f, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@686488f2, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@32e8fcc8, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@49008101, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3a0c0c76, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@f0c353a, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@2703e78c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@46e9eca8, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@324b1fec, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@69a6000, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3520989, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@217f91c0, 2, 5): success
test SubList.testClear(java.util.LinkedList@1c236817, 2, 5): success
test SubList.testClear(java.util.Vector@290a76e5, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@5bebbd57, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@41d4b52, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@280fe32a, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@ad5e26f, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@3460fddb, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@16eb6410, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@4081d749, 2, 5): success
test SubList.testEquals(java.util.LinkedList@5b020d44, 2, 5): success
test SubList.testEquals(java.util.Vector@1b72468b, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@6db7793a, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@ed2ec07, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5fad4b5f, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2c52b20b, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@3c5f65df, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7eb5d241, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@597e9fac, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@396502d9, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@495f7447, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@2efee569, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@9701295, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@384b010c, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@55e76310, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@65073e3, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@7a47f3c8, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@7a47f3c8, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@13e6fd1f, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@2e156aff, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@27c129a9, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@2056eed3, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@70fc34de, 2, 5): success
test SubList.testGet(java.util.LinkedList@3185cbdb, 2, 5): success
test SubList.testGet(java.util.Vector@6afc46af, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@111d23bd, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@5c108a09, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6525cff2, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@620b582a, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@5c0bd8f5, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@4023b52a, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@34b7127, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@2dfe79fe, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5aa24327, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@6790748b, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@5755911d, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@66e56350, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@26ff1e54, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@74cd0d44, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@2483d6b4, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@2483d6b4, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@67d7c3d6, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@24f8a39d, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1ffc074a, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7f5cf3b9, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@78c02986, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@71b7dad4, 2, 5): success
test SubList.testIndexOf(java.util.Vector@585bbaab, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@31486c25, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@64e5df5a, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5b575f81, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@58195b5, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@2cb16d92, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@4e4b09a7, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@789cc7d6, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@59d39e69, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2f0386c4, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@53d66fa2, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3d8d4374, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@65f77797, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@334c6843, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4f67766, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@93858d6, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@93858d6, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@5f3fd907, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@5c2354be, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@5aede377, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5ec3c1da, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@755b5707, 2, 5): success
test SubList.testIterator(java.util.LinkedList@3a3bb391, 2, 5): success
test SubList.testIterator(java.util.Vector@5c27789e, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@35406c38, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@7ed79f85, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1dc3a419, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@59c27970, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@539840b1, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5d057cca, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@41d2f33e, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@1457ddc7, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@67d3f159, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@759777c6, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1af7e2f5, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@dc41dc, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@48680a13, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@7a61c59c, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@1e55be16, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@1e55be16, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@197eb2c2, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@3a3072c6, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@7cfeef67, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2fb40bfe, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@24d1fd4b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@372c2aa0, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@a81d79b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@43faa400, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@6c930dcc, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4099ede5, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@d119863, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@788b6cd5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@4046817b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@61747cb, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@1d898d3c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4f784e27, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@540565b3, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@31ba68e2, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4af95d50, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@6c1a0c75, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4f1b1472, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@5d5a0180, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@5d5a0180, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@141f4235, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@73f2fe38, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@b40b8c2, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@56634064, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@3dbd0ad9, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@3081b73b, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@493af274, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@78bc1a8c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@dbce52c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@1c5776d4, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7780ba82, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@6ffbdc15, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7d8e04ba, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@9962904, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@105440ec, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@748b6d6a, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@63ac9852, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@6d30d0a6, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@54a7a8dd, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@5914d0d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@49d53563, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@50560d92, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7c5e2503, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@45af51cd, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@57a5aa15, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@ef83c31, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@79412adc, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@475d234a, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@300962e2, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@14be03e1, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6dda0068, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6dda0068, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@318a0a37, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@7289dd5, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@99d3f7, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3b239dcb, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@19402460, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@5216449f, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@7f3f0ced, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@44d76668, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@618b3ee9, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@4a1975f8, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@4a1975f8, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@4a5284cb, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@bea23a9, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@15dc2493, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@2805c98d, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@3c928d23, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@7e6347db, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3731045b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2acb41e5, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@19c1c406, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@330ea148, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6aa14542, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@3f6f3135, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@186c574a, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@49ab49a0, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@77764b40, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@32e18557, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@2e5655ea, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@10431dce, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1e773fe2, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@f0ed776, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@3c3dd1dc, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1a3c8d83, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@406cca66, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@5f4c4f9e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1f6c456, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@4936da51, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1d31fbfc, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3fadf2b8, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@6eeddc86, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@eed8ece, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@24539a67, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@24539a67, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@3caac520, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@72f60cbb, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@db8684a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5cebdc45, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@67e9b4a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@7cb7fe97, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@75457e06, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2999e1a6, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@b1ba5f0, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@482a055e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6714a9de, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@1397e3c1, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@550ce1f5, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@1ba9f034, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@454c318, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@5fe9faa9, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@88babd6, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@50af01b4, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@bf593e9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@317af94f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@62819297, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1a725230, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1701207547], 0, 1): success
test SubList.testListIteratorSet([437438262], 0, 1): success
test SubList.testListIteratorSet([1663951961], 0, 1): success
test SubList.testListIteratorSet([-1111707115], 0, 1): success
test SubList.testListIteratorSet([-2137295686], 0, 1): success
test SubList.testListIteratorSet([286239957], 0, 1): success
test SubList.testListIteratorSet([-1449973594], 0, 1): success
test SubList.testListIteratorSet([203622047], 0, 1): success
test SubList.testListIteratorSet([560350727], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@63021529, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@1f801c59, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@1c72754e, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@8d221c1, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@3c62d1cf, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4ecef63e, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@7f71d8df, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@497a5308, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@51da39ab, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5bafdbba, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@1e336994, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4a56b752, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([469065526], 0, 1): success
test SubList.testListIteratorSetPrevious([-1984376929], 0, 1): success
test SubList.testListIteratorSetPrevious([1821749633], 0, 1): success
test SubList.testListIteratorSetPrevious([-1662207691], 0, 1): success
test SubList.testListIteratorSetPrevious([-1597013053], 0, 1): success
test SubList.testListIteratorSetPrevious([333785223], 0, 1): success
test SubList.testListIteratorSetPrevious([865181232], 0, 1): success
test SubList.testListIteratorSetPrevious([649089481], 0, 1): success
test SubList.testListIteratorSetPrevious([674553453], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@4291b05d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@4a27077c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@4922f0ea, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@58759f56, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@755a18fd, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@70c7a0a7, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@763b2e91, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@5fee1eb4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@398b1bf6, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@e7014dc, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@266799a9, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@2c5095b7, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@5ee12b14, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@2c9c504d, 2, 5): success
test SubList.testModAdd(java.util.Vector@46c1d41a, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@1a526c3c, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@3c9f6a3a, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@7367d103, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@7011972f, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@2c705084, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@20e63e85, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@7ccfff91, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@2227acd6, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@58722272, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@397aa246, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@3829979d, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@556c921c, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@1bc462b9, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@5064b3b8, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2b463510, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@76443580, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@595d30b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@14dd987d, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2c53bc41, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@56b3a3e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1a61cce7, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@3d2db926, 2, 5): success
test SubList.testModClear(java.util.LinkedList@c27fb11, 2, 5): success
test SubList.testModClear(java.util.Vector@7a11d65, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@376aede3, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@4497f336, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@136b620f, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@37bbab67, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@78e2fbbb, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@29618a02, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@7a390913, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@43566fa6, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@2c98f384, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@7e2292f8, 2, 5): success
test SubList.testModGet(java.util.LinkedList@45f4cd64, 2, 5): success
test SubList.testModGet(java.util.Vector@50a623e0, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@6dc4e572, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@7889ebcd, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@786f9748, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@5ddd433a, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@3b7ce4c6, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@ee14d83, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@297e8a2, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@2f4d820b, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@470d356b, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@d514f74, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@585f53e2, 2, 5): success
test SubList.testModHashCode(java.util.Vector@449028cf, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@180699ae, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@712d63e8, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@475e492b, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1e14028f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@b1fa785, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@5167e820, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@74efb6df, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@39a4a326, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@6248cae8, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@2912eb6, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@41ccd0ef, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@16f32183, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@6b6b6e67, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@1b3873a9, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@5b429536, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@521a92ed, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@205a042e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@146d6ec8, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7dbf652c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@20c36d89, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@8976ac3, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@1afe8def, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@3a56020c, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@16760bed, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@62a54c5e, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@77175e81, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1cfb6caf, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@402ddc95, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@739a5775, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@4b2f54d4, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@401cfda5, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@53e265c4, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@74d0fa7b, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@695fbd47, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@671a2c3c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@55670b8c, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@6b9cb1b2, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@76e731a5, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2d93e8be, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@72066be2, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@5c97f91, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@61a8ca12, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@759a37c8, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@753651f7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@657591e0, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@4a95b99d, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@4ad61b41, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@2d3226d, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@3e6b4894, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@29615863, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@63631ae4, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@249c3297, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@1e51c221, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@326a2a3d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@35b10edb, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@1c32e93d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@884f865, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@70e1063f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@10096722, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@3abcd981, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@183cb328, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@21990d34, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@200a3725, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1968e8d2, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@2664173f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5c26669, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@615248b8, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@3d10728d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@62e56b98, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@2b3aa266, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@5d1fb44, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@2e05064c, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@6d4c0644, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@2e5787de, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2ab10876, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@26adff68, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@312d6244, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@7b5d489a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5be88231, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@6dbd7242, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1cc0b663, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@4be3ee2c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@5d573397, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@793fe7ea, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@1a62a1e7, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@7e0842d6, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@604776d1, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@53306b3f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@4b86e4ef, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6001861f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6bc9168a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@748a7066, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@61be708d, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@12352021, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@5bb97ac2, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@60d81a6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@40c7283f, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@356acfa, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6bbc4b10, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@54886d2a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@57515a37, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@5bd42977, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3bf93791, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@1a022bbc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2c99e8ce, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@b6ef0af, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@50073d73, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@326629f3, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@3f10a7ff, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@7817dd21, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3bc93c6f, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@6c8d82da, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7d8da702, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@7a4744e4, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4bd09174, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@1523f1a3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2d7055d1, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@39fee11f, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@4aebfbb, 2, 5): success
test SubList.testModRemove(java.util.Vector@479296b8, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@407fd06a, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@49bf64f9, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@296a40d6, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@597b63ec, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@74e45da4, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1764e366, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@50dad55f, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@61a784ab, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4c75c2fa, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@74f6d3fc, 2, 5): success
test SubList.testModSet(java.util.LinkedList@2f63a1fa, 2, 5): success
test SubList.testModSet(java.util.Vector@4dff15e7, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@30d8bbbc, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@2832af5b, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@6ac05ca5, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@7448a0d4, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@3a77ee4, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@17f6c1a4, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@15dcd2fc, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@5eb8125c, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@2670d855, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@2c0abae5, 2, 5): success
test SubList.testRemove(java.util.LinkedList@3f1b7d4c, 2, 5): success
test SubList.testRemove(java.util.Vector@4055f7f7, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1b0dd5b0, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@692fdfe7, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@50efc608, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@3c84195a, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@6601b9f7, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@487b99a8, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1713486516], 0, 1): success
test SubList.testSet([2053474381], 0, 1): success
test SubList.testSet([1894020894], 0, 1): success
test SubList.testSet([1622842301], 0, 1): success
test SubList.testSet([-710155298], 0, 1): success
test SubList.testSet([-1426309256], 0, 1): success
test SubList.testSet([1158753045], 0, 1): success
test SubList.testSet([-867316502], 0, 1): success
test SubList.testSet([73259016], 0, 1): success
test SubList.testSet(java.util.ArrayList@3bb81836, 2, 5): success
test SubList.testSet(java.util.LinkedList@669dd6c3, 2, 5): success
test SubList.testSet(java.util.Vector@175ed19b, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@47ff5014, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@2af057f2, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@3d23da9a, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@42f8f685, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@6bec057a, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@7f346e0b, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@7bc043b7, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@32a84da0, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@596a8aae, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@1a7d15d8, 2, 5): success
test SubList.testSubList(java.util.LinkedList@4ec9451c, 2, 5): success
test SubList.testSubList(java.util.Vector@5bd0ba46, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@77b60e68, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@d74b953, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@236945f1, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@191a44de, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@4a7623f2, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@563674c6, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@43760b7c, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@34283b60, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@593d75c1, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@58561995, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1e7bd39a, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@3e73d1e8, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@2a176cef, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@33a0b7b9, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@15d0d764, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@15d0d764, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@588dabb2, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@169d1cfe, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@146ca136, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@89e13f6, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@7e91d5b2, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6cfa624b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@3ea8b1c8, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@1536f9ac, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@42c0a22d, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@3f273518, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@3f273518, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@3b8d27ed, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1fe6c585, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@40fbc603, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@7650f721, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@64b905af, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@333dc1c9, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5453b4b7, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@cf85bd7, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@73071f16, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@65780f20, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@65780f20, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1fc503fc, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@17f645ef, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@18a72776, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@ff9839d, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@640615a2, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3235e56f, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4f7c33e4, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@3cb2df9d, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@266d224b, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@6fff2f6c, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@6fff2f6c, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@14377207, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@17f0b0bb, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@1fda84ef, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@22eacfcf, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@275d82e9, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@6e67c6d6, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@76113637, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@33755097, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@5b825071, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5d6d5cb5, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5d6d5cb5, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@5aab1e8c, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@13d42cbd, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@15acad22, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@69b9a0b8, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@613864c0, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@a647906, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@159caab5, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@1f7b7650, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7e59d6f, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@124f8690, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@124f8690, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@3ebd86f2, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@5d25157, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@741c468a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@74094c08, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@43c9d51b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3bf1cd9, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@2922682b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@21befd0, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@2d01487b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@2f94c708, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@2f94c708, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@679f336e, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@559e7a1f, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@3c69ed86, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@2425a859, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@15566d6b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7ea0889f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6e9ba798, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@76532879, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@41000c2c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@4a046ac7, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@4a046ac7, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@190d2cd, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@6ffa3938, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@45cbac66, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@4d485a9e, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@1793b58a, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@4317e862, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2eb050cd, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@1197ef60, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@65a449bd, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@317e1f5d, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4d3ff480, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@7a5799f0, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@7da4707, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@19d2b58f, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@267ccedd, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@70025168, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1ccf8c1f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@6382ff10, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@70ea9567, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@54fcaeb7, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@54fcaeb7, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@46a7f423, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@65a229a0, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@40bd63ea, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@382ff277, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
