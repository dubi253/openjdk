#Test Results (version 2)
#Fri Apr 12 13:31:44 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=289 0\:00\:00.289
end=Fri Apr 12 13\:31\:44 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.6 (x86_64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Apr 12 13\:31\:44 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.6,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.6
totalTime=289
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/274)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Apr 12 13:31:44 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Apr 12 13:31:44 UTC 2024
elapsed time (seconds): 0.02
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:31:44 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Apr 12 13:31:44 UTC 2024
elapsed time (seconds): 0.02
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Apr 12 13:31:44 UTC 2024
Test directory:
  compile: SubList
finished: Fri Apr 12 13:31:44 UTC 2024
elapsed time (seconds): 0.055
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:31:44 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Apr 12 13:31:44 UTC 2024
elapsed time (seconds): 0.055
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Apr 12 13:31:44 UTC 2024
Mode: agentvm
Agent id: 3
finished: Fri Apr 12 13:31:44 UTC 2024
elapsed time (seconds): 0.213
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91952)----------
Seed from RandomFactory = 6065665910062105021L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -232775733], 0, 1): success
test SubList.testAdd([42, 57771144], 0, 1): success
test SubList.testAdd([42, -1051635067], 0, 1): success
test SubList.testAdd([42, 235179382], 0, 1): success
test SubList.testAdd([42, 1107066312], 0, 1): success
test SubList.testAdd([42, -1623984443], 0, 1): success
test SubList.testAdd([42, 1799349885], 0, 1): success
test SubList.testAdd([42, -336169280], 0, 1): success
test SubList.testAdd([42, 539944705], 0, 1): success
test SubList.testAdd(java.util.ArrayList@4a6cf045, 2, 5): success
test SubList.testAdd(java.util.LinkedList@31779587, 2, 5): success
test SubList.testAdd(java.util.Vector@5e15d09c, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@15a66bcd, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@2116f7b0, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1f574ed2, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@62175514, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@337fe6f2, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@4ba88ff4, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@49c0198f, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@2b01bf2c, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@461910c5, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -636017], 0, 1): success
test SubList.testAddAtPos([-117209513, 42], 0, 1): success
test SubList.testAddAtPos([-232369226, 42], 0, 1): success
test SubList.testAddAtPos([42, -242764871], 0, 1): success
test SubList.testAddAtPos([1502228655, 42], 0, 1): success
test SubList.testAddAtPos([-338560592, 42], 0, 1): success
test SubList.testAddAtPos([42, -499298566], 0, 1): success
test SubList.testAddAtPos([1778406322, 42], 0, 1): success
test SubList.testAddAtPos([1067181322, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@775ba302, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@371bc050, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@529786a9, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@443e8cfc, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@21cf86aa, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4a310c65, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@475c3b26, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@3e1af1e5, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@5a2080b2, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1bbfa297, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@212b69de, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2acfe97d, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@203403b9, 2, 5): success
test SubList.testClear(java.util.LinkedList@55038927, 2, 5): success
test SubList.testClear(java.util.Vector@1667f3dd, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@21d4ae27, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@58f329b2, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@680bb073, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@132d582b, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@1e70118d, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@275c194e, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@77d5f4a9, 2, 5): success
test SubList.testEquals(java.util.LinkedList@3a05a6c5, 2, 5): success
test SubList.testEquals(java.util.Vector@e7720ba, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@7ad24fb8, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@64d272e8, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@56c3524f, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4ddc03aa, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1c756774, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@78a7100c, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5f96b54c, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@167102b4, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6dd6a840, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@45f70899, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@3467d3f8, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@4b381176, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@12684e27, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1d4c0a80, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@506f5997, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@506f5997, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@10e478ba, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@200e9ad4, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7f7ba32d, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@780f58d4, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@524ade85, 2, 5): success
test SubList.testGet(java.util.LinkedList@2686d2bb, 2, 5): success
test SubList.testGet(java.util.Vector@46074f5a, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@1eb9e01, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@57865088, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5fd17e5d, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@2c1e8ff2, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@45df9534, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@18389c8b, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7119192f, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@628400af, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@21d81270, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@425e6a71, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@21f41e85, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@45539096, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@73811297, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@7db9ab5a, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@5559fbe5, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@5559fbe5, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@16e642f2, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1da453d, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3c25c1df, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@330b9313, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@7e75901, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@f8855a6, 2, 5): success
test SubList.testIndexOf(java.util.Vector@10fe17bf, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@72a85943, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@5ccb8ee5, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@53954720, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@2e157689, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@f1d2b87, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6f3d489e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@399323b4, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@180136ef, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@44310cc7, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@68495999, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@69322311, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@19067398, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@5ff66cf4, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@17604f76, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@569e2882, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@569e2882, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@335e1fa2, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6c471199, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@4e86a82, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5b04e2ac, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@3c1142a2, 2, 5): success
test SubList.testIterator(java.util.LinkedList@2ea828, 2, 5): success
test SubList.testIterator(java.util.Vector@1f54bfde, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@7bb66381, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@5fbe7fad, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@7eb5f6bb, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4351e4e7, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@1dd4e9ea, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4ba76e5f, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@13160487, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@a631f9f, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@394a18e2, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@69d5076a, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@529888f0, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@77382957, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@342ae8f6, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@282f3e2d, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@73d4bad5, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@73d4bad5, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@380bc417, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@67fb20f4, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@74796cf2, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5aea8816, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@6facc5d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@5f8d5e13, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@359995d9, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@65ab87dc, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@70707c25, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@46ca26, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@adf3549, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@54017d95, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@31d4a5f3, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@8c0a59e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@4b064a75, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@56fb7e8, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@1d810224, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@606fadfd, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5b3e4769, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@5ce9412f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@509599b6, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4e7317de, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4e7317de, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@62f16253, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@e49cc8b, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@44d45923, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6294d329, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@6b67a91a, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@274df480, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@24126b81, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@503adf54, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@16502f66, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@3aa2fc11, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@255d043f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@166d84d3, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@60b63491, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@53e7e988, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@171308e4, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@4f219713, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@13051886, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@472481ca, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@13517abb, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@4a884a0, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@68db2122, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@44011508, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3da4e0a1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@158c0de4, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3bd546d9, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@1fd163d3, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@38a3595d, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@16ff0953, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@3118c264, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3007a24d, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6beb479a, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6beb479a, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@3be7fb1f, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@6282c98d, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@50afe13f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@23f0b05d, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@5b62818f, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1979de1, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6961d15c, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@7d6f1d3a, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@647e1913, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@686f4946, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@686f4946, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@239a11c5, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@689f3d2a, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@4988969f, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@3d56627, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@136e8797, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@70a48bc2, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@29862c9c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@137885a1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@5fa21dcf, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@78669195, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3160b010, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@704d00bc, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@262b2a9a, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@5cd6fd22, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@4e038dcd, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@53489512, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@282909fa, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@659eddcb, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4bb497b3, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6331863e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@36b057b5, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3a0529c1, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@65500307, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@714c5f5e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@a4d66ac, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@3fed3431, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@85034a9, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@2507b003, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@64ac0f79, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@74d8f744, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@6452fd10, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@6452fd10, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@33eb55c3, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@63b79212, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@5df7a7f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@e77cd3a, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@70d49d6d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@39c55b2, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@72742c75, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@5abab9e0, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@3f82fe0b, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7f0edb65, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@23a5ca2, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@5b0bd412, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@25a05dfe, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@4c45420d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@78ca8ad, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@4dcbd9d4, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@38642afd, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@313ae9d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2ac8824, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1f41f4df, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@51b7c315, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6166c42, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1113475763], 0, 1): success
test SubList.testListIteratorSet([2095019516], 0, 1): success
test SubList.testListIteratorSet([-1239041137], 0, 1): success
test SubList.testListIteratorSet([1875470165], 0, 1): success
test SubList.testListIteratorSet([595864627], 0, 1): success
test SubList.testListIteratorSet([432351819], 0, 1): success
test SubList.testListIteratorSet([-1055205723], 0, 1): success
test SubList.testListIteratorSet([-100430017], 0, 1): success
test SubList.testListIteratorSet([-546055018], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@65e83953, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@53bdc15b, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@5a2226b8, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@56ea3efe, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@469d6e11, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2ee6a300, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@2113890, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@53eaa5f2, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@7ef7e7d1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4f86e5c1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@37bc2be1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2e292aa7, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([998376776], 0, 1): success
test SubList.testListIteratorSetPrevious([210318752], 0, 1): success
test SubList.testListIteratorSetPrevious([1536604563], 0, 1): success
test SubList.testListIteratorSetPrevious([1563107832], 0, 1): success
test SubList.testListIteratorSetPrevious([378846143], 0, 1): success
test SubList.testListIteratorSetPrevious([-721265009], 0, 1): success
test SubList.testListIteratorSetPrevious([456502035], 0, 1): success
test SubList.testListIteratorSetPrevious([1439693545], 0, 1): success
test SubList.testListIteratorSetPrevious([-908156818], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@75355f68, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@3c7cd05e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@57f76c32, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@851ccc2, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@5992d106, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@256b9fbb, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@1acdfc22, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@130eef15, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@73b1f32c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@743ca923, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@4f5e209e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3a232f51, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@4ac42158, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@f4f27e3, 2, 5): success
test SubList.testModAdd(java.util.Vector@2a50e56f, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@6037ddc6, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@22ec463f, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@6646266d, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@7c321cfa, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@1bcb2ff9, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@30dd5e4c, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@762c2bb0, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@52a4ca07, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@220ef106, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@6ddebe27, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@1d63c40b, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@11ff5276, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@9bb00bc, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@2c6d1286, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@29de20cb, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@7e3dd817, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@55f3a2b5, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@7f03836e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@22d65085, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@5ec3faa2, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@615d2f58, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@790403ac, 2, 5): success
test SubList.testModClear(java.util.LinkedList@271550c4, 2, 5): success
test SubList.testModClear(java.util.Vector@19145ca3, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@1b7452d6, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@41f8c2f1, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@3b97f657, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@5566c677, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@34df7ac1, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@760a16e8, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@79cc9a33, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@2b65a642, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@57b46af7, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@70c4e5b5, 2, 5): success
test SubList.testModGet(java.util.LinkedList@67d685a3, 2, 5): success
test SubList.testModGet(java.util.Vector@77142616, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@58bd85ae, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@7aa6fa16, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6aa47b49, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@292d4762, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@3eea2a91, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@2ac34d60, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@591b3e2b, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@3047e460, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@57a6a431, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@477c5ecf, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@2e459f13, 2, 5): success
test SubList.testModHashCode(java.util.Vector@29dd3516, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@5d6050ba, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@5fc124d, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7a33ff65, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@15a82225, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@191220a5, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@24f5f525, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@29d4f18f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@10e93ea3, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@60da49d0, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@1ed8be9d, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@5d7451e4, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@19518a25, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@dd65be, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@605e0299, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@3baace8f, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@3e6e36f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@33b41d79, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@773beaf7, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1e16187, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@7ea378c3, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@9df3c49, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@75315b, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@78e74b20, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@4b245b85, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@36d5a1eb, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@2f4dc47c, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@a4bebd1, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@6f269c9f, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@7d7ce566, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@46143d66, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@101fa210, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@63aea88, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@701ee0c2, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@56903972, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@16102576, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@89e8d35, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@41e90f8c, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@719ce29b, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3631c30, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@21575f44, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@4f789b55, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@2ca7dce4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7fccfbc8, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@5271e0f0, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@15e0f2a6, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@46414431, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@48e1a22a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@cf32a47, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@71659b3, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@2e34d143, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@43b8d1b9, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@731d5f92, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@3613d8e9, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@dd92dc0, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@9bbc40d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@51fdbd36, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1bc98880, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@360ef4e0, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@7fa5d6a1, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@70fb0d76, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@656f910d, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@665d5e31, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3984c897, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@507540a6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@39b5b55c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3611991d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@548d0d11, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@7ee7fee4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@30b261a6, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@6915000f, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@6526be7c, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@5e2c3ef0, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@7241d62f, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@1083433d, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6c816209, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@707cf196, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@6e0acafa, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@65674956, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@379328c2, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@1da2baea, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@fe54e45, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@42a3a20c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@63971ef4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@6b5604ff, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@5c1d3857, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@60f74dd9, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@65bc2b5d, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6a4a8259, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@d696751, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4f3a0b68, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5ae89a63, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@54e15339, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3fe6168b, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@561e432c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@5dd90324, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@115f9ab1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@10cc687, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@3c07c808, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6e48b22, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@57c6983b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@4ed2b83e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@6292982f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@390f75be, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@7890d2f3, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@61f80f1b, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@7f6e8837, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@5ae1a33b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@63846a2f, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@719fe996, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@5a00da6e, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@71b8ea63, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@1f6076fa, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7d7615cd, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@5a53a930, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4574106, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@4317571b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@23064121, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@9d20b3b, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@315c43f2, 2, 5): success
test SubList.testModRemove(java.util.Vector@2b9f2c12, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@207094e5, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@65c0054, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@276f075c, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1f33b1f9, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@20a6bc7b, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1b15712, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@bdbf976, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@7f3e2ab6, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@6bec36a8, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@e7fe38, 2, 5): success
test SubList.testModSet(java.util.LinkedList@3b760b61, 2, 5): success
test SubList.testModSet(java.util.Vector@5c772941, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@444e8a77, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@3232de22, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@8921a23, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@2d5b0865, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@74ed47a2, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@68700f03, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@2a0c5ed6, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@36a2f9b2, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@5c0dd1f5, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@6d8dbaf0, 2, 5): success
test SubList.testRemove(java.util.LinkedList@76545e50, 2, 5): success
test SubList.testRemove(java.util.Vector@7f41f6f7, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@4c55f39b, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@5a72a550, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@10b11936, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@f7e64d0, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@3b86c9f4, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@4f4e4134, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1321283736], 0, 1): success
test SubList.testSet([-1571333628], 0, 1): success
test SubList.testSet([-894704770], 0, 1): success
test SubList.testSet([-1462691310], 0, 1): success
test SubList.testSet([-1757206698], 0, 1): success
test SubList.testSet([1846719332], 0, 1): success
test SubList.testSet([1084231181], 0, 1): success
test SubList.testSet([1133595126], 0, 1): success
test SubList.testSet([23059560], 0, 1): success
test SubList.testSet(java.util.ArrayList@716e4284, 2, 5): success
test SubList.testSet(java.util.LinkedList@7b162e03, 2, 5): success
test SubList.testSet(java.util.Vector@2f1534, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@3aec9b20, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@719a48a5, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@596fad6d, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@500d19d9, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@5397f203, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1520f518, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@37d8093b, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@57fe5e50, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@641287c0, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@924a550, 2, 5): success
test SubList.testSubList(java.util.LinkedList@4a0a7070, 2, 5): success
test SubList.testSubList(java.util.Vector@77096773, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@7edeac22, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@4341aea0, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@59602ad6, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1337dd5c, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@386610d6, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@220b48bb, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@f4ae88b, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@251c1f48, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6fbaa1c4, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@163a90cc, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@624cb49f, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@54ead4ac, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@49ff6372, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@7c903fd0, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@69377374, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@69377374, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@3058604d, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1ecec2fa, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@3642d1ef, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@c48e8a0, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@654019f9, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@70d9e182, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@48352bd8, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@5e1ebcec, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@3722ba41, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@563f2507, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@563f2507, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@528857e0, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@6c0f346e, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@3fff1a7d, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@5534ef0d, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@8bf390c, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@9cf058d, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@2fe0dd17, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@48b7bf1f, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@50b9788b, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@328c93ce, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@328c93ce, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@ace373e, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@770b67ae, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@49df2e8, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@223d75cb, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@62d3e180, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@18a0e221, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3c4e2543, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@5a203154, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@64027170, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@5cb94d10, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@5cb94d10, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@4abaa706, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@f1c2fb6, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@382008fb, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@67f7cbb7, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@71ebf636, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@48adb277, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@802986b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@71bbfbb1, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@46acb946, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@20de882f, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@20de882f, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@7df7e379, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@7182e453, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@3dd6c0c1, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1679f208, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@603140b9, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@12ceceef, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7fec071c, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@27aa53d7, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@438e338e, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@72d1cbe6, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@72d1cbe6, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@5becb0e1, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@4dafe978, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@16d7214e, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@753ada7f, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@5d40704, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@11ed5139, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@33d1f5b3, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@212abd92, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@d1febd5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@56814230, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@56814230, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1fb85991, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3361b269, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@c3da743, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@51a2ab86, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@563f43a, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@107411bc, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@4bafbbf1, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@1d99f143, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@4633bb15, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@67645568, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@67645568, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@19e6e4f1, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@690eabfa, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@3754309c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@16a5b1a7, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@6bddfb15, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@8a37b60, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5e34dab, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@14eb64c5, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1624035e, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@707c5dc, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@5c94e0aa, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@8a1abab, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@2ace2296, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@6d4ff0af, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@535c347e, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@7160cb20, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1706a3af, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@50cd429e, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@5e80118c, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@132b9112, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@132b9112, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@337c1b79, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@6805aec2, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@5f384087, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@639f7d4b, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
