#Test Results (version 2)
#Fri Mar 01 15:24:15 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=3500 0\:00\:03.500
end=Fri Mar 01 15\:24\:15 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.4 (x86_64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 15\:24\:12 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.4,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.4
totalTime=3501
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-e22bbb87eb47c075e30a3ae770ba2979e9628e8f)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-e22bbb87eb47c075e30a3ae770ba2979e9628e8f, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 15:24:12 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 15:24:12 UTC 2024
elapsed time (seconds): 0.304
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 15:24:12 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 15:24:12 UTC 2024
elapsed time (seconds): 0.287
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 15:24:12 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 15:24:13 UTC 2024
elapsed time (seconds): 0.772
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 15:24:12 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 15:24:13 UTC 2024
elapsed time (seconds): 0.771
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 15:24:13 UTC 2024
Mode: agentvm
Agent id: 5
finished: Fri Mar 01 15:24:15 UTC 2024
elapsed time (seconds): 2.411
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91980)----------
Seed from RandomFactory = -4026656435362493575L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 562592263], 0, 1): success
test SubList.testAdd([42, 836173702], 0, 1): success
test SubList.testAdd([42, 1270189287], 0, 1): success
test SubList.testAdd([42, 1094382693], 0, 1): success
test SubList.testAdd([42, 1008451245], 0, 1): success
test SubList.testAdd([42, -1860242290], 0, 1): success
test SubList.testAdd([42, 375910813], 0, 1): success
test SubList.testAdd([42, -2031607192], 0, 1): success
test SubList.testAdd([42, -1575974296], 0, 1): success
test SubList.testAdd(java.util.ArrayList@665e8aa8, 2, 5): success
test SubList.testAdd(java.util.LinkedList@5908dc89, 2, 5): success
test SubList.testAdd(java.util.Vector@5222b867, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@4712e31a, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@1b1cc3eb, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1f735987, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@6bf257b2, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@6aafdb22, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@638dec03, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@307c2506, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@7ddec917, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7c769391, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -1249604558], 0, 1): success
test SubList.testAddAtPos([42, -1821183246], 0, 1): success
test SubList.testAddAtPos([-926987329, 42], 0, 1): success
test SubList.testAddAtPos([42, -1835701781], 0, 1): success
test SubList.testAddAtPos([1896881632, 42], 0, 1): success
test SubList.testAddAtPos([411855364, 42], 0, 1): success
test SubList.testAddAtPos([1614234110, 42], 0, 1): success
test SubList.testAddAtPos([42, -865762699], 0, 1): success
test SubList.testAddAtPos([42, -915267655], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@4822fcf3, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@6dd2c586, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@7c14f672, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@28e3a133, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@22dc8be8, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@718273de, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@4c323fde, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@7fafa3a, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@6b18c3d8, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7def518f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@280564c2, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2053bf12, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@638fe083, 2, 5): success
test SubList.testClear(java.util.LinkedList@106411d9, 2, 5): success
test SubList.testClear(java.util.Vector@11321f36, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@6e912c4b, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@2b4351ec, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@724e98f0, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@f737912, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@4c087c0d, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@12fbc2c0, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@63a484c9, 2, 5): success
test SubList.testEquals(java.util.LinkedList@575baaa8, 2, 5): success
test SubList.testEquals(java.util.Vector@2a476661, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@96b907c, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@645e2c28, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@49569a0d, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@70af1b7b, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@497761ed, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@ee5429b, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@28aba26f, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@45011344, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@647fbc98, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@7f870bff, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@5921d95, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@3a57112, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@2c00589c, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@2f124358, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@1f8debb6, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@1f8debb6, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@31ac7854, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@37fee97c, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2fe7c120, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4994dc9c, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@13d401b4, 2, 5): success
test SubList.testGet(java.util.LinkedList@c28710b, 2, 5): success
test SubList.testGet(java.util.Vector@6d8a6d0f, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@2d5c8858, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@4d484ce3, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7ebfb2f6, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@277106fa, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@54d260ae, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@588bb7f3, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2faf7ac, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@6186faab, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@20af4778, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@1c7a55d0, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@43fad42a, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@2137fa48, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@6ebb89b6, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@7b410039, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@48c90d9e, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@48c90d9e, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@7971892d, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@581a6f69, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@6370240b, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@37e29014, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@3cac9ef2, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@9615284, 2, 5): success
test SubList.testIndexOf(java.util.Vector@5ec7a5ec, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@7cf1bb3d, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@3e99e0d0, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@918e6b5, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@331dbe2d, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@95d0e1b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@f8a436e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5a64657d, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@151f1327, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@133089d0, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@75db37c0, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5039c303, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@46f44ae9, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@662fa112, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7abfa313, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@39b6a716, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@39b6a716, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@187a3789, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@321cec38, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@49ee8bc7, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4d0341f9, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@1768b5f6, 2, 5): success
test SubList.testIterator(java.util.LinkedList@afa7d95, 2, 5): success
test SubList.testIterator(java.util.Vector@477d639e, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@22cd612c, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@5e26ccd6, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@792fa37a, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@3a4375ae, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@1d706efc, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@34c6fe9a, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@3251a076, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@6c0815e8, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@3ea432ef, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@63b3ffaf, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@6053d9df, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@401f0eef, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@976f6d8, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@253498da, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@37dd5c76, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@37dd5c76, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@37712fa, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@1a2f9ff1, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@414d3002, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5f975c57, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@73d9f4e1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@2dfc9b0f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@31fded76, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@3b5738a5, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@13a02a8b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@34a78f13, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@2c63a0a3, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@2a561e90, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@c1fba13, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3a9ce63c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@3509ba12, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6eaaaa2a, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@4e084415, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@29d373f3, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@23e3b299, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@a4c15ba, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@2cfbcf44, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2e1a439a, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2e1a439a, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@3c172f4f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@729054bf, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@630976b6, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3e626449, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@3eb3c23d, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@56fb8341, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@1c94877f, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@1e681957, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@7abb50fc, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@1ea254c5, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@78b19c6d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@46acca31, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2ce25bf, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@96167c3, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@3b6f8b4d, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@473120cc, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@2d9e6abf, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@4668d3af, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1794bc62, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@12dc67dd, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@663d42ac, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@4c800a4c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@50d38eca, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@3a7d3416, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@16fd059a, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@5f28353a, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@27a8629b, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@659add7e, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@5f2ad35c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6d4ba700, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@2dc5bf7b, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@2dc5bf7b, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@2111b93, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@128786d0, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@31dbc333, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6705e81a, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@4c9c9166, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@330392bb, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@12f55f9d, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@5dfb1db, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@47b8ee65, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@2224e641, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@2224e641, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@11453ebe, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@460d8e4a, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@4dec3eb1, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@456ce05a, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@8577790, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1a7cfc15, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2ba487cb, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@49930d70, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@3ac3ee5f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@49a75bef, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6c8a70f5, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@768ef53e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@76e9fb40, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@5f10951c, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@766b3968, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@46328cb3, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@295dfd81, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@6c0dacfe, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3d9dfe48, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4543236c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@39908a3b, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@61521602, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5d370b66, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@21abcee6, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@78f55193, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@26310daa, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@5b1cc6fb, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@168e8347, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@426e5c8, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@65de639e, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@54eb916f, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@54eb916f, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@7ca797ac, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1eb4278f, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4606ba39, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@757fdf2f, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@5f2ee5c3, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@353265d9, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@2aa19177, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@682944da, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@2340e57f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@578270bd, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@929dfa4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@476591d3, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@18eb409d, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@5b877c33, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@2d457b4a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@eb2b711, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@52d4aae4, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@436a4839, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@f95cef2, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7f508262, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@28c0dd4c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6c8d55c0, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([343745110], 0, 1): success
test SubList.testListIteratorSet([-1986315386], 0, 1): success
test SubList.testListIteratorSet([-40050024], 0, 1): success
test SubList.testListIteratorSet([-707376986], 0, 1): success
test SubList.testListIteratorSet([1885126524], 0, 1): success
test SubList.testListIteratorSet([1153836008], 0, 1): success
test SubList.testListIteratorSet([1471464570], 0, 1): success
test SubList.testListIteratorSet([-2022753576], 0, 1): success
test SubList.testListIteratorSet([1684621273], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@1004efb, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@1c816713, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@1685a211, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@2d3d4e55, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@9f34c11, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6cb5ca47, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@229e8dab, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@20f277ea, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@316c018a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5bec113b, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@2462f7f9, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6462b752, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([283571015], 0, 1): success
test SubList.testListIteratorSetPrevious([-238602396], 0, 1): success
test SubList.testListIteratorSetPrevious([679181005], 0, 1): success
test SubList.testListIteratorSetPrevious([-1225746321], 0, 1): success
test SubList.testListIteratorSetPrevious([-1847422952], 0, 1): success
test SubList.testListIteratorSetPrevious([1001953762], 0, 1): success
test SubList.testListIteratorSetPrevious([1647446251], 0, 1): success
test SubList.testListIteratorSetPrevious([1823628614], 0, 1): success
test SubList.testListIteratorSetPrevious([-1532938794], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@60755198, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@4df4da20, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@7092aa5e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@38ec28d3, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@69f4e09e, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@758a0f24, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@3c3a0db0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@7df76220, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@44063e49, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@57fbf5d2, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@658b2019, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@275a64ff, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@3a3528eb, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@343b22c8, 2, 5): success
test SubList.testModAdd(java.util.Vector@5a798606, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@6f95fe82, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@7432985e, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1be2fd0f, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@72cb27ce, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@3e860a77, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@5aa1a207, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@62d1b5d1, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@3c34835b, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@69e8c79c, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@34da881d, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@1ef7b7fb, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@8901223, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@5932b337, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@6e44024f, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@14936916, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@5465d9ac, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@25aa43f6, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@2a46c1d4, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@581b553, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@6f6182a1, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@a842ff4, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@e6eeaba, 2, 5): success
test SubList.testModClear(java.util.LinkedList@1064457d, 2, 5): success
test SubList.testModClear(java.util.Vector@27f96680, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@71d1890c, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@1828bb52, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@455dd5b7, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@24b64555, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@7a33677b, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@590d6a81, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@2e9ea386, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@6b93dd9a, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@47a7b523, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@4de1fce2, 2, 5): success
test SubList.testModGet(java.util.LinkedList@1633bbb3, 2, 5): success
test SubList.testModGet(java.util.Vector@14a81dfe, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@20aa06bd, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@450dbaa0, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@600a92e4, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@2991f4d1, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@226f0dff, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@9a5bfb0, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@741d239f, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@58524754, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@5583f97f, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@4d41b594, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@5447f864, 2, 5): success
test SubList.testModHashCode(java.util.Vector@5f172bdf, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@55a4e69c, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@7afdc21f, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@6bd809e1, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@71a1529e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@1708f9ec, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@4d77e3ef, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@20f6645, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@d4171cd, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@679d317c, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@16c17bed, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@64ba5c2d, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@34bed8c2, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@60b6e9f1, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@65767417, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@38e8d3f6, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@2f626a08, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@c443180, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@5abdbe94, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@6c5498d3, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@20311ae0, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@22da23f8, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@300d5604, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@147d8f0c, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@280b1bb1, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@3bd8b9c9, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@5ff2484a, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@488cf6b5, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@a6e478e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@33b06372, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@13e820fc, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@f418c09, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@24068f17, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4e0cfdc7, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@47770631, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@76c2302e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@7afec594, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@63e3705e, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@522bfe1b, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@15d7f1a2, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@6c91945b, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@5bdcb9df, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@6138b5d5, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4ecce90d, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@359de7f4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6901641d, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@219beb2f, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@5f1e7cc7, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@3c11c42f, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@60d3b396, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@7c3cd4a3, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@75c90b85, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@53c711f5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@3cf6c8b1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@3c1740ea, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@44f31ce2, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@30795720, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7554861e, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@1ba69f63, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@77636e7c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@e3d88be, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@56cd6406, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@6f70dd19, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6749c339, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@55ea8071, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@6d92e86a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@8d2a302, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6b55efb3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@2df90e02, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@c2ce54b, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@5acee6d6, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@642d98eb, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@6f2bde55, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@53e5bb4a, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@530690ea, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4af70d2e, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@3e70afef, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@4e5085fb, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1b332433, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@eec31de, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@13a4fb81, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@70234c6f, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@201089f7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@3c2a44df, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@3d226698, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@560392f1, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@296819b3, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@524a89ac, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@391f373b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@7905496, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@f259eca, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@65eabf2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@74cb6652, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7ff1f07c, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@7254f4bc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@766c0be4, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@4810979c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@26e44137, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@5482547f, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6a6f26ce, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@208260d8, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@6cefa34b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@16fa3c89, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@55f01f58, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@5f4b8f8d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6e2f503e, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@477f8c5f, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@5b47f654, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@75d66e06, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@730ff016, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@7b260062, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@12d12b14, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@538fca4d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@417a1041, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@7b1d099b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@704acf07, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@5e3df4e6, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@e9f597, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@417a5566, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@131536ea, 2, 5): success
test SubList.testModRemove(java.util.Vector@722d7325, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@745a2bb9, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@6e9a6e8f, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2e27a553, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@58f03c9a, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@6ac906b1, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@4899e763, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2a9f84b3, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@1cb617c4, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4da01bd7, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@7c8a6782, 2, 5): success
test SubList.testModSet(java.util.LinkedList@16fbb430, 2, 5): success
test SubList.testModSet(java.util.Vector@30c4c3b5, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@331fbe9e, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@52f79b56, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@122ecac5, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@7958b5d8, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@1a6c445a, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@6cfd4e6b, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@6cce3f5f, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@42174f9, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4a9b4a8a, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@585f024b, 2, 5): success
test SubList.testRemove(java.util.LinkedList@6a007bef, 2, 5): success
test SubList.testRemove(java.util.Vector@4a906d3, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@77bd811c, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@22e26cf4, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@64d515f3, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@ef5e06e, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@636a4d92, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@703b47cc, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([951818714], 0, 1): success
test SubList.testSet([211291524], 0, 1): success
test SubList.testSet([-1926044285], 0, 1): success
test SubList.testSet([-1808737045], 0, 1): success
test SubList.testSet([-1887286285], 0, 1): success
test SubList.testSet([-2098027925], 0, 1): success
test SubList.testSet([74075976], 0, 1): success
test SubList.testSet([1408398796], 0, 1): success
test SubList.testSet([-1655679056], 0, 1): success
test SubList.testSet(java.util.ArrayList@3986c26d, 2, 5): success
test SubList.testSet(java.util.LinkedList@4c3ec2fa, 2, 5): success
test SubList.testSet(java.util.Vector@173ec3e9, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@3a68a831, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@64ca772a, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@47a5a3c9, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@23570d5e, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@6cbe4900, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@795b86e9, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@19edf775, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@34810b21, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@6fcfecd2, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@7fe15b02, 2, 5): success
test SubList.testSubList(java.util.LinkedList@2940d3e0, 2, 5): success
test SubList.testSubList(java.util.Vector@1327db37, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@154ab3a7, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@364d202, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@2c604f3f, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1dc6c23b, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@67260352, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4bd56dd0, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@584c8893, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@1574997a, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1f64039d, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@4866a3a5, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@3aa0a3ea, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@50c6e5fd, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@794a3ce5, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@6b3380ef, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@43aca43f, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@43aca43f, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@65afba97, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@418f9f6c, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4b8fa145, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1618f7e3, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@5543d0f3, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@75db4eb1, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4dadc48, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@1351af21, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5992fd15, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@500bc085, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@500bc085, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@6ed462e3, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1e5bffad, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@1d0fc231, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@103345ec, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@54d341d2, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3f24fcc8, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@67229c92, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@7a5bb3e1, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@47aef117, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@6da85158, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@6da85158, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@6a2bbc3e, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1f257dd8, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@71b9b32e, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3080fac3, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@3f263526, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@110508a3, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@344e2943, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@72331779, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@c48a44c, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4b51d58e, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4b51d58e, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1552d2e0, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@5bc0e56c, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@5479b0f, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@5ddd4c92, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@70101911, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1d5357fc, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1fbfb04d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@61ff8d7, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@5160238d, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@6cb443cd, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@6cb443cd, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@2ad67dc, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@52acc21, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@2f0201c, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@52114b67, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@74f5845f, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@42d94e26, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6f23e2e0, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@2f4889f3, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@721dfb00, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@21c14147, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@21c14147, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@588007b3, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@3a3d649a, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@30c00709, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@17ea7620, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@4c3d2230, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1729267e, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@351e93f1, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@7522b1a4, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3a52f4d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@27fb86de, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@27fb86de, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@51326607, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@2b4ddd1b, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2e7ef8f8, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@67aa7e66, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@68903cd4, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6d78ef80, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@364cfca7, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@34346e26, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@59d41091, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@117641c7, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@117641c7, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@621a515, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@7b153b90, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@6e651de2, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@4c57e47f, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@3c7be72b, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3e3ef6f, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@485df8e2, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@5c1e24a6, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@b852405, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@7797b63b, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4a957044, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@55f79d8b, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@eb13a52, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2ef93741, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@6b117a04, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@2747fd49, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@25d2c998, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@4310f76b, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4b8851f, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@575d1608, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@575d1608, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@30c8de1c, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@3bc2b127, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@a9817be, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@7821e56b, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
