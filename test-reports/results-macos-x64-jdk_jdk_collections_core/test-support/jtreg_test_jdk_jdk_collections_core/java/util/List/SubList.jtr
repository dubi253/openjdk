#Test Results (version 2)
#Sun Mar 17 17:59:25 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=706 0\:00\:00.706
end=Sun Mar 17 17\:59\:25 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.23
javatestOS=Mac OS X 13.6.4 (x86_64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Sun Mar 17 17\:59\:24 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.4,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.4
totalTime=706
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Sun Mar 17 17:59:24 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Sun Mar 17 17:59:24 UTC 2024
elapsed time (seconds): 0.031
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Sun Mar 17 17:59:24 UTC 2024
Mode: agentvm
Agent id: 2
finished: Sun Mar 17 17:59:24 UTC 2024
elapsed time (seconds): 0.031
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Sun Mar 17 17:59:24 UTC 2024
Test directory:
  compile: SubList
finished: Sun Mar 17 17:59:24 UTC 2024
elapsed time (seconds): 0.195
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Sun Mar 17 17:59:24 UTC 2024
Mode: agentvm
Agent id: 2
finished: Sun Mar 17 17:59:24 UTC 2024
elapsed time (seconds): 0.195
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Sun Mar 17 17:59:24 UTC 2024
Mode: agentvm
Agent id: 6
finished: Sun Mar 17 17:59:25 UTC 2024
elapsed time (seconds): 0.478
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91937)----------
Seed from RandomFactory = -6062314419781186316L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1863142236], 0, 1): success
test SubList.testAdd([42, -557438100], 0, 1): success
test SubList.testAdd([42, 841797126], 0, 1): success
test SubList.testAdd([42, 100575016], 0, 1): success
test SubList.testAdd([42, -810577332], 0, 1): success
test SubList.testAdd([42, 1702131096], 0, 1): success
test SubList.testAdd([42, -1107335661], 0, 1): success
test SubList.testAdd([42, -866045620], 0, 1): success
test SubList.testAdd([42, 905339321], 0, 1): success
test SubList.testAdd(java.util.ArrayList@25fe9a1d, 2, 5): success
test SubList.testAdd(java.util.LinkedList@5f08bc43, 2, 5): success
test SubList.testAdd(java.util.Vector@14136590, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@58b11ddb, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@73c38445, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@6b9e76ce, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@6288787b, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@4e4077e5, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@53b1983b, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@4ab806be, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@3c0830f8, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@64e07206, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 397750553], 0, 1): success
test SubList.testAddAtPos([42, 375431277], 0, 1): success
test SubList.testAddAtPos([42, 1366323598], 0, 1): success
test SubList.testAddAtPos([1233094059, 42], 0, 1): success
test SubList.testAddAtPos([42, -148449540], 0, 1): success
test SubList.testAddAtPos([42, 919161640], 0, 1): success
test SubList.testAddAtPos([42, -1242471284], 0, 1): success
test SubList.testAddAtPos([42, 1763137413], 0, 1): success
test SubList.testAddAtPos([1409351269, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@27a5f72, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@5f4b4fbe, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@4eca7bb8, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@4773d85c, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@1d934762, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@433bffb, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@4c11e0a6, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@5172f405, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@299798c7, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1d623571, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@60819fe2, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@65e86bb, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@28d58176, 2, 5): success
test SubList.testClear(java.util.LinkedList@6c50f49e, 2, 5): success
test SubList.testClear(java.util.Vector@132f46ae, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@189e483b, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@1f125eca, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@35e33825, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@d5614bc, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@4d8152aa, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@ffc006d, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@31611d0e, 2, 5): success
test SubList.testEquals(java.util.LinkedList@ee15629, 2, 5): success
test SubList.testEquals(java.util.Vector@1d116f9c, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@545fc41b, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@6ad6ae3a, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4c052ef8, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5dbe6f7, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@4f156ba, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1d806400, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@444fb88a, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@2b448031, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@730db6d9, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@49d9f2c, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@54e2506, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1ccce491, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@6f131b17, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6cc9efd1, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@786a57e5, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@786a57e5, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5426b86f, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@389eb016, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2caef435, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@57516607, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@59979ae0, 2, 5): success
test SubList.testGet(java.util.LinkedList@431eef27, 2, 5): success
test SubList.testGet(java.util.Vector@46e5afed, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@56b7852f, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@1d299a6e, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@3436f873, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@55b95bdd, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@1c445e3e, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@15e6c753, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2290a9b7, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@7b985a69, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1d3509c0, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@4488a8be, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@62b5ff3f, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@739df96a, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@58291058, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6c06b906, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@2b94f8c3, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@2b94f8c3, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@73babdf7, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@e3773c8, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@4acf6f5d, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@20e51efa, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@40036ad2, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@26946867, 2, 5): success
test SubList.testIndexOf(java.util.Vector@7fb41658, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@733a1f79, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@5d4701a1, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4ccbc3cf, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@5d85bab6, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@6e8ec587, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@711beee0, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@58faa9bf, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@2afc443e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@60b70a65, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@defeb58, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2d668432, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@89b3c4d, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@30c6c121, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@36e74f53, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3be8706, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3be8706, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@507cf219, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@4434cad7, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@175ea02e, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@3cd708fc, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@5c79b40f, 2, 5): success
test SubList.testIterator(java.util.LinkedList@48b1bc24, 2, 5): success
test SubList.testIterator(java.util.Vector@1ca50913, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@114ff221, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@4075f117, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2bba9b55, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@548c9a0c, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@3b30370e, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4141feab, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@4484fa75, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@11fbe3e6, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@3d6174a4, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@64fdce1d, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@382ab11f, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@66b5ba75, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@c692c2f, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1d5a822f, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@8ff93f, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@8ff93f, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@4887e9, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@3d89fc30, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@6f72d4e3, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@6cee1961, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@51009e84, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@1acc6ae2, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@23a07cc6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@340feef6, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@6bd6f3ef, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@51b94b5, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@157217b5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@476899f0, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@35d553cd, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@50dd7301, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@671ae99, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@20d7b9b0, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@296825b1, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@795c17e5, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@71ec586e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@191be561, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@14ce7648, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@58188abf, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@58188abf, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@4ab895eb, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@774f2e94, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@a9b6f7f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1f478052, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@dbcf641, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@3ff7992d, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@1f848b9f, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@c2b296a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@2c746249, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5e08136f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1c73713b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@61782387, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@24a4ec9d, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@438b7a13, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@5e95be91, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@5c94954, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@88250a5, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@d96f204, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6ca3c9c4, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@4054d2a9, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@3130767d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@6d0c92a6, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@67fb24aa, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@3bd231b1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1637da6, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@2481ed59, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@71f3b7b5, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@57c7bc73, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@7c873256, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5704e900, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@726d4932, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@726d4932, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@5ff796ce, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@3cfa0a3e, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7fe34407, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@f75f33a, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@5fc82ffc, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@10525e22, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@46e81ef7, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@4f25ac93, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1eb0a8d4, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@213c4e0c, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@213c4e0c, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@2b16b44c, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@5398aa9d, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@1a89f3bf, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@2af4db0b, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@2a9b577b, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@47a6628e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2e20a7f0, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4bcfd218, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@3e4bcc00, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7ff770a8, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@751af0fe, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@12352058, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2d6a8647, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@5b68f3a6, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@569847a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@5865a609, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@2e79a2f3, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@7bb2a684, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2af6bf06, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5a774f7c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@531cd2b8, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7dee9964, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6e2c047b, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@6bc652b8, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3a2d234d, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@3bad2ddd, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@6b336879, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@7d7bddb4, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@428bed97, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@4bae6240, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@79e706c9, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@79e706c9, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@2de765a3, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@55fea329, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@e75cce5, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7dea7efb, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@490729c4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@cdfae88, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@63bb4d95, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7a45177f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@3c122ec2, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4993ed6e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@2a3dbaa3, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@18b4b76a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7fca70b8, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@345b3276, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@fc76d19, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@4ae28ddb, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@11dfa75e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@d1d3c7b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@c566b2, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@256fc261, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@43b098f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@30800147, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1961382810], 0, 1): success
test SubList.testListIteratorSet([-32492827], 0, 1): success
test SubList.testListIteratorSet([983608741], 0, 1): success
test SubList.testListIteratorSet([117830576], 0, 1): success
test SubList.testListIteratorSet([-984660880], 0, 1): success
test SubList.testListIteratorSet([1002104573], 0, 1): success
test SubList.testListIteratorSet([1850244720], 0, 1): success
test SubList.testListIteratorSet([581458579], 0, 1): success
test SubList.testListIteratorSet([1843868782], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@4bd7bafa, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@7b4b4394, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@5626953, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@50a6eaab, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@153255d8, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1023db3, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@61120050, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@24ad75a6, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@7bc5228e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@11348109, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@6c2458ce, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@59afd84c, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([454734488], 0, 1): success
test SubList.testListIteratorSetPrevious([-760859739], 0, 1): success
test SubList.testListIteratorSetPrevious([1968168130], 0, 1): success
test SubList.testListIteratorSetPrevious([-61922757], 0, 1): success
test SubList.testListIteratorSetPrevious([198538068], 0, 1): success
test SubList.testListIteratorSetPrevious([-801138222], 0, 1): success
test SubList.testListIteratorSetPrevious([-1146425449], 0, 1): success
test SubList.testListIteratorSetPrevious([14779616], 0, 1): success
test SubList.testListIteratorSetPrevious([383352329], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@22c97df, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@158305e6, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@303d2add, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@63987463, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@229607a2, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@23962631, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@6f5bd27a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@158158be, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@4aff0f0c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@703ba407, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@f157939, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@4f0191c6, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@5ef718ad, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@280a9230, 2, 5): success
test SubList.testModAdd(java.util.Vector@1a910dcb, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@49c55dfe, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@d3f0c8c, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4d64acd7, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@323d1264, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@1d4f75a3, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@191d174a, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@210c155f, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@5fa78d47, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1dd8cf74, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@4cf84094, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@3f006b0a, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@6ef53334, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@a17f7b5, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@1478bdc9, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@b2c7e62, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@13b17f89, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@597577e9, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@33038e34, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@66d893eb, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@55c0f468, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6077d37f, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@3132cdcb, 2, 5): success
test SubList.testModClear(java.util.LinkedList@5bea985c, 2, 5): success
test SubList.testModClear(java.util.Vector@3939cf47, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@5bc44eea, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@22121aca, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1755fb79, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@45c3adef, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@69a46c5a, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@6f57b2cc, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@62d75032, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@19a6d0df, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@30fcaa9f, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@5ab4a88c, 2, 5): success
test SubList.testModGet(java.util.LinkedList@272dc2ff, 2, 5): success
test SubList.testModGet(java.util.Vector@17cee2e, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@456ee7b4, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@435b2f52, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@12f37b5c, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@289a1b77, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@1246f3e1, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@547e5ad8, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@585f9b21, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@6feb9dcd, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@2bbe5d30, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@24c2f9c9, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@6c9c3a0, 2, 5): success
test SubList.testModHashCode(java.util.Vector@494648b8, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@5dd9b324, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@133981aa, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@3ba3f9a5, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@4d57a48, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@12a51458, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@123e14bc, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@6348eb8d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@d583eea, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@59f49013, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@59d5fcf7, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@58ee847b, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@645b95fe, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@7dc6886c, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@287082d7, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@8e9b57d, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@54e5089a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@7e2e8126, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@85c703, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7d3d3c04, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@6a41fece, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@c49be43, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@2a74023f, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@4d4b5489, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@7ca7ded7, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@1550fb93, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@63c16bee, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3377f608, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@68a3840c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@d86ca6f, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@51837bf3, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@693f8b2, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@49b15601, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@114512e, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@5a560c0a, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@7bd59612, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@2c8d193f, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@476fcdab, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@4eae9e1d, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@ad0a233, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@4bb575a4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@2e61c0bd, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@352c27b4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4d630416, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@6f83c706, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6dcc4995, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@2172ddb7, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@15e9312b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@1d434e6d, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@3b3bb57a, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@4b9fe800, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7732e7ec, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@48c440ae, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@19da46f8, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@741fbe28, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@78548c75, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@4d581082, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@35eea764, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@73cd3fcb, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@2b998c99, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@5a9041b5, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@61a27595, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@31beac21, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@35e8fc1, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@70a3f62f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@64205014, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7bcc50e9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3178de2a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@327767f0, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6635a7c6, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@6df17080, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@925d550, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@e9db938, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@3399866, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@7d93cfa4, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1c2e6084, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@463722b5, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@232273f2, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@288b2a65, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6c90581c, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@7e4985bd, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@24b2f7e2, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@410e8d05, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@6484487a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@21d4322d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@33d0ef23, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@1821f134, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@54e67476, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@7ce891bf, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@223d07d0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4a4a0e56, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3953727c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@69ca809d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6fd4a68c, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@2ff7075, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@1a165eaa, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@6af8f8b6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@4c46c904, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@1821d3de, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6f94599a, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@41b077e0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@1cb3c64e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@46702ab7, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@25df89c6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@c7be166, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@177b4917, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@15467a03, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@73e1558b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@4689dea6, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@77c56108, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@5617cf12, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@d72e0b5, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@21e6698a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@72948fe2, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@23897ad6, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5000b620, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@6c28856, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3be729c0, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@5054ef39, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@5ea21472, 2, 5): success
test SubList.testModRemove(java.util.Vector@39680bd5, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@1e1b0787, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@58a6d6e8, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5563c1c3, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@50234026, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@1eda2d1f, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@c326412, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@721fb78b, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@7a2b2bd3, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5e71009b, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@1d2dd7f9, 2, 5): success
test SubList.testModSet(java.util.LinkedList@6bbe7028, 2, 5): success
test SubList.testModSet(java.util.Vector@35d49d91, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@3a108de9, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@45275d9f, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@657ac8e9, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@3d33d21c, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@e4b6020, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@5210de97, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@148eb614, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@33512f8a, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1ff18875, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@72cbd0c8, 2, 5): success
test SubList.testRemove(java.util.LinkedList@6fdc8c8, 2, 5): success
test SubList.testRemove(java.util.Vector@28a57cf3, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@193f4270, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@5bf71d6e, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@7815916e, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@19a67ff3, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@59b6201, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@1d0ec73b, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1546097234], 0, 1): success
test SubList.testSet([859480523], 0, 1): success
test SubList.testSet([1629248130], 0, 1): success
test SubList.testSet([-1994239815], 0, 1): success
test SubList.testSet([1479093154], 0, 1): success
test SubList.testSet([-1101322465], 0, 1): success
test SubList.testSet([-1436904218], 0, 1): success
test SubList.testSet([83579343], 0, 1): success
test SubList.testSet([407705392], 0, 1): success
test SubList.testSet(java.util.ArrayList@12388975, 2, 5): success
test SubList.testSet(java.util.LinkedList@6431be71, 2, 5): success
test SubList.testSet(java.util.Vector@2fd29038, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@465de706, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@3aef3c0a, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@cff3071, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@777606f2, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@3bc560bc, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1b867248, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@20dc5b64, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@51cc4dc9, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@433f885c, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@6dc557ac, 2, 5): success
test SubList.testSubList(java.util.LinkedList@39cb0361, 2, 5): success
test SubList.testSubList(java.util.Vector@4fceef8c, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@55ffbbdb, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@68098617, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7b81556, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6ee381c2, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@c32111b, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@40105684, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@2a5bbf90, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@239d938c, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@cbc9b12, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@f91ae2d, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@61a69a61, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@48aa2c2, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@6998e932, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@7ed25e7c, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@47e69110, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@47e69110, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@30843b2, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@70683e90, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1eaad601, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@76ad2074, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@740316df, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@517997be, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@118d61e8, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@4a667a31, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@bb01deb, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@6f114447, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@6f114447, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@7e6b67cc, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@5b6e35b0, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@1c0fa4e8, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@4410af7e, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@5ec6a57f, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@15bea52e, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6ac00c62, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@4fa84953, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1b5aab9e, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@12e08a0c, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@12e08a0c, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@40611cd5, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@61cc2ff1, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@23fee0f4, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4f1769b0, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@9c1b3da, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@78916565, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4d16c29a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@1413806a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@41b84fd0, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4100fd, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4100fd, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2494a237, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@5de1223c, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@27aec1f1, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@f697bab, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@67c787f4, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@6cbd1fde, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@3bf2b2e5, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@1b52e716, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@74aa6fd8, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1414760, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1414760, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@6bdae113, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@69076ee2, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@1f41e395, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@737cf22c, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@2a29e038, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@69f8612e, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@53fecdd2, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@15df4f4b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@17d8af17, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@534768de, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@534768de, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1a0095fb, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1f60b2b0, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1a589d5d, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3a9b3c80, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@3aa0c9f0, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1d9a2db5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@19b75239, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@297ff89c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@679ba55c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@4585a806, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@4585a806, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@7a9f0f31, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@2f69939, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@5c8a06da, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6ade98e8, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@5a7b3b5c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@4c1b1e8f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@54b840, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@73ab2671, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@524978ad, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1d528fb1, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1d528fb1, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@5ab22f13, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@3b1e627c, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1bfdcf56, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@203839af, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@ec8b6d9, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@70b096ed, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@42d63ecd, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@5920c6b7, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3da31de2, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@53efd9aa, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4f9e2d7e, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4e411ad7, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@6523a030, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4d700bd4, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@42bad364, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4a6fa79b, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@64a811ca, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@3019ba2d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@19ae8025, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@6d4d862b, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@6d4d862b, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@37995d3c, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@482e6508, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@79f325f8, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@537210f1, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
