#Test Results (version 2)
#Mon Apr 29 00:40:10 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=792 0\:00\:00.792
end=Mon Apr 29 00\:40\:10 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.23
javatestOS=Mac OS X 13.6.6 (x86_64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Mon Apr 29 00\:40\:10 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.6,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.6
totalTime=792
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Mon Apr 29 00:40:10 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Mon Apr 29 00:40:10 UTC 2024
elapsed time (seconds): 0.023
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:40:10 UTC 2024
Mode: agentvm
Agent id: 2
finished: Mon Apr 29 00:40:10 UTC 2024
elapsed time (seconds): 0.023
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Mon Apr 29 00:40:10 UTC 2024
Test directory:
  compile: SubList
finished: Mon Apr 29 00:40:10 UTC 2024
elapsed time (seconds): 0.083
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:40:10 UTC 2024
Mode: agentvm
Agent id: 2
finished: Mon Apr 29 00:40:10 UTC 2024
elapsed time (seconds): 0.083
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Mon Apr 29 00:40:10 UTC 2024
Mode: agentvm
Agent id: 6
finished: Mon Apr 29 00:40:10 UTC 2024
elapsed time (seconds): 0.685
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91967)----------
Seed from RandomFactory = -5524263143574803335L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1961536590], 0, 1): success
test SubList.testAdd([42, 1462833118], 0, 1): success
test SubList.testAdd([42, 140498548], 0, 1): success
test SubList.testAdd([42, -831884711], 0, 1): success
test SubList.testAdd([42, 490427102], 0, 1): success
test SubList.testAdd([42, 1275037267], 0, 1): success
test SubList.testAdd([42, 2038466097], 0, 1): success
test SubList.testAdd([42, 1000799725], 0, 1): success
test SubList.testAdd([42, -1476844720], 0, 1): success
test SubList.testAdd(java.util.ArrayList@76425649, 2, 5): success
test SubList.testAdd(java.util.LinkedList@380e5b11, 2, 5): success
test SubList.testAdd(java.util.Vector@1d335fc0, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@2a5a1941, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@690677d9, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@43fef6c8, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@101de801, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@3eea3424, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@74b3f7e4, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@27657a49, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@4dc98857, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@9103c5, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([1241691935, 42], 0, 1): success
test SubList.testAddAtPos([-634474156, 42], 0, 1): success
test SubList.testAddAtPos([-1354096831, 42], 0, 1): success
test SubList.testAddAtPos([42, -651813513], 0, 1): success
test SubList.testAddAtPos([42, -1824187276], 0, 1): success
test SubList.testAddAtPos([42, 713390591], 0, 1): success
test SubList.testAddAtPos([1031043313, 42], 0, 1): success
test SubList.testAddAtPos([42, -1262525069], 0, 1): success
test SubList.testAddAtPos([-769522648, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@10796aad, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@548a89e3, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@5354ede1, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@3c349a44, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@5edce55c, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@74ac9ac2, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@7e337205, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@14ace95e, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@52f82451, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@15d33ee6, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@473aa2d5, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1b6faace, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@28997341, 2, 5): success
test SubList.testClear(java.util.LinkedList@44a6de6e, 2, 5): success
test SubList.testClear(java.util.Vector@74cef59b, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@f0f342d, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@57681c96, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@59af37a, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@765a43e7, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@4753c331, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@9e689c5, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@2668e09e, 2, 5): success
test SubList.testEquals(java.util.LinkedList@38794f10, 2, 5): success
test SubList.testEquals(java.util.Vector@18a5c4d5, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@10649dd, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@b9c75c8, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@670650cd, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7e6aa36f, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@12e2abcc, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2a291758, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5204f591, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@2cf492f1, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@707e2c16, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@df93349, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@4f34d43d, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@58286e48, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@74990534, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@7a71c293, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@3af17fbe, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@3af17fbe, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@6728747a, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@2e6bba76, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4062cb64, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4a98251b, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@1f9d2c77, 2, 5): success
test SubList.testGet(java.util.LinkedList@19e841bb, 2, 5): success
test SubList.testGet(java.util.Vector@3e848a00, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@1af2e562, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@2f50041e, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@766b215, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@6f01354b, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@439739e5, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@10fc13b4, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@53c11b7, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@dbe4c9d, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@65443141, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@5ef23e08, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1875151d, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@681ccfd1, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@760f666b, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6c9c6855, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@5fba20a7, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@5fba20a7, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@27bdad04, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@40cd3dd6, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3ab21054, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5a0fb71b, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@7f127b3, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@75a67a59, 2, 5): success
test SubList.testIndexOf(java.util.Vector@1c8aea67, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@3c07eb8a, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@2152f04e, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@717db4ac, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@2a03728c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@6eec14aa, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6a94ad00, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@56fd1412, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@53299278, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@656f3d5b, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@69f02a1a, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7c614746, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4ee35e02, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@15003a2d, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1da39695, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@5469f083, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@5469f083, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@287f5f55, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@3d047d3a, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@76263891, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@11dc50d1, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@1bf78127, 2, 5): success
test SubList.testIterator(java.util.LinkedList@74d8e029, 2, 5): success
test SubList.testIterator(java.util.Vector@65ccc0f5, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@6bbb8fe2, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@6f19ac1, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@66af9c8d, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@20b8a7d3, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@deca904, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@6a26ac68, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@7d8c43c7, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@5d77c23, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@c6bcc47, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@61b6f233, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@625bdbb7, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2dd096a3, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@23a026db, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@6a739ce2, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@4edc9329, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@4edc9329, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@53b7fe8a, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@fb0b580, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5b96745c, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@6bb2c83b, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@12c2fdb6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@33f755a1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@60c2dc7c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@37e15267, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@616fd0e4, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@70acc70f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@3e48d0ad, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@7bcf81e5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@5c7e88a2, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5b4b544b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@8a17339, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@344c2f4e, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@1020fbdf, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1b36de17, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@585f3f6f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@6cafe383, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@38050cfb, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@57febbd4, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@57febbd4, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@75dadea, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@7c2e706e, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@3216a27b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@64848b1b, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@4429d11d, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@672ac5f2, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@ea83134, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@6b03aaf1, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@45364a73, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@7194936b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@82cadfa, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@6dda7604, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@fe83f29, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@3c69546, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@6ce7895a, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@61d32292, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@26b1ebc4, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@4f1af897, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@700efb3d, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@732c8ad6, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@6b0b2981, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@477cb60b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@46605c32, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@3ba7c793, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@228a10f4, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@3a5df720, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@19cd8038, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3bec8776, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@4181c13b, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@365b7e86, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@640a78b5, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@640a78b5, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@779990cd, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@16f78d9, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@16f04f1a, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2004fdf5, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@512d9401, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@37c8f634, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@3f499650, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@7dc09aa1, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@43f7ed61, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@531c88b1, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@531c88b1, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@7dce2c97, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@58a17d96, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@17781f22, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@ddb7053, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@6c2f6951, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@68f4139d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@a5b2849, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@559ca338, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@5655cc82, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1abf6dd0, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1a39dd7a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@58bcc03, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@327d708c, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@5228322a, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@3051adfa, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@6a4c6d36, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@3497000b, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@71db7407, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@56ea9dbd, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3897c902, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@6a7ec42e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@49a414a0, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6076be02, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@2e18a5f9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2d78d827, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@1aed5240, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3d0d68e7, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@262732f3, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@6915dc18, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@29f5af1e, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@28eb4de3, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@28eb4de3, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@3e5e4fa6, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@259d9bf9, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@3861dfd6, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7904e8eb, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@6e05a200, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@2e2ff977, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@42045984, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@5acbf1f7, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@69ca9dbd, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4c823c72, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@164b2600, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@1b237db8, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@746b8952, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@d51cfdc, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@2b46cb45, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@24689ece, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1625bb7c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@1815394c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@711ab579, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@59340102, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@4f84fde6, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@af72705, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([822964859], 0, 1): success
test SubList.testListIteratorSet([-1619222277], 0, 1): success
test SubList.testListIteratorSet([318248013], 0, 1): success
test SubList.testListIteratorSet([-1186540851], 0, 1): success
test SubList.testListIteratorSet([-770110011], 0, 1): success
test SubList.testListIteratorSet([-1139102852], 0, 1): success
test SubList.testListIteratorSet([-4810497], 0, 1): success
test SubList.testListIteratorSet([-544997488], 0, 1): success
test SubList.testListIteratorSet([-180846414], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@30fb7bb0, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@1549bedd, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@20059278, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@79af9bad, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@7cc632f5, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1babc9e9, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@41bad2eb, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@78e084db, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@53805aa9, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1df90953, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@5f7e41ca, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@77592fa3, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1846719220], 0, 1): success
test SubList.testListIteratorSetPrevious([2041581605], 0, 1): success
test SubList.testListIteratorSetPrevious([366655663], 0, 1): success
test SubList.testListIteratorSetPrevious([-575116144], 0, 1): success
test SubList.testListIteratorSetPrevious([1911137956], 0, 1): success
test SubList.testListIteratorSetPrevious([-943307569], 0, 1): success
test SubList.testListIteratorSetPrevious([2132453050], 0, 1): success
test SubList.testListIteratorSetPrevious([677386469], 0, 1): success
test SubList.testListIteratorSetPrevious([-2103582865], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@44a3f26d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@254b5940, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@1b5dfc7, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@327d1ff9, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@349d2d34, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3d67cdf0, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@37f31e8f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@2f7d8ab7, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@39657717, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@6036b6ab, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@ceb6b2a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@176c80f0, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@572ed32b, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@3ab625ac, 2, 5): success
test SubList.testModAdd(java.util.Vector@6ca43d79, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@32c9bc92, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@22e71cb4, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@2fb415ff, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@77d513f7, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@18b58bd0, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@476fb5d3, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@6ff441e9, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@1f83a511, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@544abceb, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@4b31ecb4, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@117428bc, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@7b578889, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@387ccef8, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@7c50b988, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@432dc766, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@2239addd, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@54a81fbf, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@6ef23b4, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@74d307ae, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@5bb9d79f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4293149e, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@97f930d, 2, 5): success
test SubList.testModClear(java.util.LinkedList@642b1c2b, 2, 5): success
test SubList.testModClear(java.util.Vector@4dc457a0, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@13e0afe9, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@76480839, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@7eead212, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@20ccfa80, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@7db0b042, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@351e3468, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@c62abe0, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@34646621, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1861edc6, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@78edc82e, 2, 5): success
test SubList.testModGet(java.util.LinkedList@beb5504, 2, 5): success
test SubList.testModGet(java.util.Vector@70467156, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@25f1c8fd, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@63cf7052, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@23daf88e, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@1822ce15, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@5f46540e, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@6acb3605, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4a1a45c6, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@256ef510, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1660db3a, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@13fe018, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@13771851, 2, 5): success
test SubList.testModHashCode(java.util.Vector@3c361ed5, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@4862d5cd, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@3e6e1754, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@64670da0, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@b458c68, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@462b3b67, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@5bf6c7cf, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@37eb3cc7, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@1feb39ec, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7f573285, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@524eeb50, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@576991cf, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@2dbbda0b, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@26454127, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@8ab248d, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@73608b6c, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@47fba625, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@4a63d6af, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@6d12eee7, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7cf6d42e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@646c086f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@23417653, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@64942c95, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@209a1bd2, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@1a6dbe54, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@5c998df9, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@323dfb15, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@64893b29, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@571d8805, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@7237b30b, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@6a2f10c1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2ed399b1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@228557f7, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6f6e9621, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@1476d413, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@3c1219fd, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@3d9faf9b, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@4f54fdef, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@49ebc507, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6c3c5eaf, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@306de7a7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@4138cab4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@778a81dc, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@46cfb5a9, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@6530a300, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@32f264a6, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@8786718, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@24ee9d43, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@5d30987c, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@42d3b139, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@56672dd7, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@22db5395, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2fab4048, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@593f4782, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2a0cadd, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7587b90, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@17a997a8, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@36aa29da, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@49de397a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@44e37744, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@318f9b93, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@e76bdb5, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@59613b16, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@36a96a5a, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@9985314, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@367f04de, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2fc21b82, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@60cff99e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@74eb83c7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7c86e91, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@5999432f, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@e4eb9e0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@66df0d5, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@71c4a18, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@9cce938, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2322bb0a, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@5fa0d8dc, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@74d0d6ee, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@47590bea, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@110e1759, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@32fb59e3, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6e5ba7f3, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@54677ab6, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@677ab2de, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@1a078d60, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@1dfa1397, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@1995a25a, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5e57cd84, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2f5cf9e3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@3c1ee114, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@17b4b261, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@293e5dff, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@3a39cca3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1b9d557c, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@7625d16e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@7db1185a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@1e824c02, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@21402c48, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@49e671cf, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@928922d, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@7088056a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@42e0135b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@2b1fd62b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4415ccd2, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@6b837f44, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6c36592d, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@2fb13632, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@1cf13ea1, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@4ca0eccd, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@424d5e55, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@5126a686, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4de83a29, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@6c4c16ae, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7ee11f54, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@2eefe761, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@854adb7, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@285dd9ce, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3372307e, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@263f9f4d, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@733da977, 2, 5): success
test SubList.testModRemove(java.util.Vector@2b01fbeb, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@8dbc53f, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@3c9af67b, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@13e1714e, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@649ea443, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@1477a76d, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@6ffb3b61, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@6c5500f4, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@15f86a01, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1040640b, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@44826373, 2, 5): success
test SubList.testModSet(java.util.LinkedList@5a87c33, 2, 5): success
test SubList.testModSet(java.util.Vector@2e93edb5, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@766f7184, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@526835fb, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@69829193, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@253dfe6d, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@5d599c69, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@6f595556, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@a534f36, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@625d6c81, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@28524fe8, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@6f085a94, 2, 5): success
test SubList.testRemove(java.util.LinkedList@312bd04, 2, 5): success
test SubList.testRemove(java.util.Vector@225f05ab, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1589f831, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@634f85ec, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@d32e7f0, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@2188f557, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@6a44e243, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@9cea197, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([321945592], 0, 1): success
test SubList.testSet([1190437067], 0, 1): success
test SubList.testSet([-619227738], 0, 1): success
test SubList.testSet([-2056426315], 0, 1): success
test SubList.testSet([1439007399], 0, 1): success
test SubList.testSet([-989208996], 0, 1): success
test SubList.testSet([-1484675332], 0, 1): success
test SubList.testSet([875221698], 0, 1): success
test SubList.testSet([161366151], 0, 1): success
test SubList.testSet(java.util.ArrayList@3c0c4cc9, 2, 5): success
test SubList.testSet(java.util.LinkedList@5864a295, 2, 5): success
test SubList.testSet(java.util.Vector@44d9fd9e, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@418ac1b7, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@3caffa19, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@2a5c1abf, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@506bf6c9, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@40a0e72e, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@6147f3ee, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@308580de, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@2c3ef97a, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1bd520d6, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@c1a580b, 2, 5): success
test SubList.testSubList(java.util.LinkedList@1e787316, 2, 5): success
test SubList.testSubList(java.util.Vector@742a6538, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@137152a0, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@6bf78825, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5f2eaa57, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@5df0fbf0, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@29889263, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@7688f2b5, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6fb6d59c, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@1fbbc15d, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@46992369, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@c8278b9, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@72087853, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@501eae05, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@139be390, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@5fe19777, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@5e8e4301, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@5e8e4301, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@65fda017, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@75165124, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6513afa2, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@50f1f633, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@7485aee5, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6eee7b45, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@378def72, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@7a330fe5, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@3d509d20, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@56b7fe3e, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@56b7fe3e, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@19a3f8bc, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@d5c3992, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@44d78c24, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@3d2fc564, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@4ca713c8, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5e22f256, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@43797505, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@5bb75497, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5cf6ec9, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@315d71f2, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@315d71f2, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@685f2136, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@309c5f8c, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@26c64200, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7e50cdb6, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@6a10213d, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@48d13a51, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@464ad6a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@56767d11, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4bdaada2, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@7732b6ef, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@7732b6ef, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@3852ed5b, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@33e0dd31, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@6903fea5, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@2bf62379, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@5dc258b, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@236d9db5, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4224f4e3, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@1a89444d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@703806f2, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@183f8330, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@183f8330, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@dc0cc35, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@6817eea, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@442420e1, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@37663854, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@2b934ebf, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@5c16be62, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@52d8ddab, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@38afd6dc, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@4e02a9f7, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@63f5a226, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@63f5a226, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@c19f2d7, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@11474f1e, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@e442d99, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7b123f95, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@673d2940, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@555c8e61, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@be26068, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@535c3579, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3ea0c8e0, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@36174c56, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@36174c56, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@807cb17, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@46fa67fc, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2334376c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@40f133d3, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@120c7c51, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@70f99f0b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@5ac97595, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@6763bdf2, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@43992bb9, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@6a17cd7d, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@6a17cd7d, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@63ade015, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@60aa6691, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4632c9d2, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6fa9e3a6, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@45f1bb7e, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@a0ab0d7, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6922f256, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@5d1930f3, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@273ef701, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@348c9cef, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@74a44217, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@fc81ae6, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@1d16d090, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@81f6e1c, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@7d984cc9, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@3aab648c, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@3acb8909, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@4817c382, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@7f818059, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@3e922c50, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@3e922c50, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@7f7b0d89, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@470937c2, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@7d275e29, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@13c9e8c, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
