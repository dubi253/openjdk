#Test Results (version 2)
#Fri Mar 01 17:00:45 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=427 0\:00\:00.427
end=Fri Mar 01 17\:00\:45 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.23
javatestOS=Mac OS X 13.6.4 (x86_64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 17\:00\:45 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.4,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.4
totalTime=429
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 17:00:45 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 17:00:45 UTC 2024
elapsed time (seconds): 0.018
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 17:00:45 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 17:00:45 UTC 2024
elapsed time (seconds): 0.018
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 17:00:45 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 17:00:45 UTC 2024
elapsed time (seconds): 0.061
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 17:00:45 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 17:00:45 UTC 2024
elapsed time (seconds): 0.06
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 17:00:45 UTC 2024
Mode: agentvm
Agent id: 6
finished: Fri Mar 01 17:00:45 UTC 2024
elapsed time (seconds): 0.347
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91969)----------
Seed from RandomFactory = 8268754097137213157L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -591578846], 0, 1): success
test SubList.testAdd([42, 942953265], 0, 1): success
test SubList.testAdd([42, 650842387], 0, 1): success
test SubList.testAdd([42, 1000358096], 0, 1): success
test SubList.testAdd([42, 1363127518], 0, 1): success
test SubList.testAdd([42, -1748023781], 0, 1): success
test SubList.testAdd([42, -1049864486], 0, 1): success
test SubList.testAdd([42, -459685381], 0, 1): success
test SubList.testAdd([42, 1513744139], 0, 1): success
test SubList.testAdd(java.util.ArrayList@abac8f8, 2, 5): success
test SubList.testAdd(java.util.LinkedList@5897187d, 2, 5): success
test SubList.testAdd(java.util.Vector@270ba59d, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@66971b68, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@35b1b990, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7062c04d, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@61370ad9, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@2f7c60d7, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@3dd7b7c5, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@6d0fbd13, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@7157e51c, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@8a919f3, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -1620473753], 0, 1): success
test SubList.testAddAtPos([-977923314, 42], 0, 1): success
test SubList.testAddAtPos([-1440720341, 42], 0, 1): success
test SubList.testAddAtPos([234906784, 42], 0, 1): success
test SubList.testAddAtPos([1222164175, 42], 0, 1): success
test SubList.testAddAtPos([42, -295351401], 0, 1): success
test SubList.testAddAtPos([42, 1626651382], 0, 1): success
test SubList.testAddAtPos([741903609, 42], 0, 1): success
test SubList.testAddAtPos([-862991377, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@18f68092, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@71326184, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@4a33aa7e, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@2923a60e, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@72d49dcf, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@73bc44ea, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1d11fe84, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@17553653, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@273b82ab, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@628dc9d4, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@49be7e0e, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3d80519d, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@1206fdcb, 2, 5): success
test SubList.testClear(java.util.LinkedList@1e9d3440, 2, 5): success
test SubList.testClear(java.util.Vector@3836604b, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1b2d47b0, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@4dddd4c, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@55918b04, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@4cecf059, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@33ed0169, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@35478ec5, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@9e1872d, 2, 5): success
test SubList.testEquals(java.util.LinkedList@7fccd976, 2, 5): success
test SubList.testEquals(java.util.Vector@146f5471, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@34bde01c, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@58a3972a, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@328a611b, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4ce509ce, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@22ec57ba, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@10677804, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6862296e, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@72d64da7, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3c1018ad, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@6bfc5fac, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@158c7332, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1fa70718, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@341c1249, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@2d66ee91, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@23611600, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@23611600, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@2436435b, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@6c2c61e0, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@62db9715, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@656caf3, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@3cc1947c, 2, 5): success
test SubList.testGet(java.util.LinkedList@708903b2, 2, 5): success
test SubList.testGet(java.util.Vector@1984428f, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@781aa785, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@5871fccc, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7c00fc, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@66875d53, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@16192d7b, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@41e54ab7, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7dec866a, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@2c5532c1, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1f5537fc, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@6188ef3a, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3922c408, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@47890038, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@2ab46686, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@121861e7, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@230f3fa6, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@230f3fa6, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@3ca3f38c, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@4e06cf6a, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@7a55f715, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@3c28550f, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@4e570ce7, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@5402fb44, 2, 5): success
test SubList.testIndexOf(java.util.Vector@1e6607c2, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@3f8ba8e2, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@79c51c03, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@62259cd3, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@7e66078b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@6f7b2c9e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1f58e4b1, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@3f6a6f80, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@51efe5de, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@292dcf31, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@22584b58, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2ff55e50, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2728e412, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@2f406ec7, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3edda2d8, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@713c46c1, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@713c46c1, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@789ac426, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@162d88b9, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@4cf5bb4c, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@41ee2cb1, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@7459c749, 2, 5): success
test SubList.testIterator(java.util.LinkedList@47621837, 2, 5): success
test SubList.testIterator(java.util.Vector@4e5004b4, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@1ef10bb7, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@6bcf1dda, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1c198262, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@c9f219f, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@4a91750b, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4e58c923, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@4adb1576, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@d1346e8, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@c4013c9, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@2ba7c816, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5eb7f675, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@19d3b0b6, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@21d9b15, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@66fc1872, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@a1bb4b2, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@a1bb4b2, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@26205c44, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@435c0064, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@7f9c01ef, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@63865223, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@2a8eb09e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@6d5ad98, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@29ccd9c8, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@3a8adaa7, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@4f8a14cf, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@7293ccda, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@51278f50, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@2091fd42, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@25ec59eb, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6549bf9, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@69d19fda, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6292b993, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@6a549145, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7b3a0597, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@14d72d9b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@2b9eaef2, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@602c2349, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@59a84c25, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@59a84c25, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@395858f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@21fe57ea, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@435dfb8a, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@316c6327, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@60429868, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@377310af, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@2adaa2f5, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@a5d9bd3, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@7d675b58, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@2ebd017c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@467100ff, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@c90ebe7, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1a4b1baf, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@7be550f3, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@25330efb, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@4e018292, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@646e74d9, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@28df5999, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@599f1524, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@23649370, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@4f3a3df1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1144fa81, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@8bc358d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@4871683a, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@deb900e, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@70e6937f, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@50cae83d, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@10c857dd, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@15e8eeb2, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4c9590ff, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@76351067, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@76351067, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@517c1878, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1efbc72e, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@723d37fe, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@19e0ef58, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@7708f9bd, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@2ff62aa, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6298ddea, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@10c360e3, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@534f4048, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@7938a61b, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@7938a61b, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@5828aa86, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@718d2374, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@47f1f3a8, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@5ddea20a, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@7caeb905, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@7fea79cd, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@307bd9c1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@243e859f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@52a23cf1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3f61616f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@a93a3b5, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@4982ad88, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3db3b45a, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@7acc0b7a, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@21094237, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@6dca0083, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@4678bcbf, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@3697205f, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@422be140, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@61c4c746, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@142173a9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@49e4580a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@32af2544, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@3dda1b61, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3e6bba47, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@5bb445d9, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@19596d6b, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1e8de457, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@152447fe, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@57bb1950, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@51bcc13e, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@51bcc13e, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@64b547e8, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@11735c3b, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@77e51734, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@11dd8709, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@139a4527, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@11c245c1, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@4ec9bdf5, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@e77a4bc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@32aafa0b, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@77873015, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@55901a3a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@6e39b8dc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@75c8c5b6, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@7a74a168, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@582fe7e8, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@1b1afc3c, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@42af2e50, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@311dde43, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@3e07a51f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@77c66a24, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@7f32f4fe, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@21b8c74a, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1520501801], 0, 1): success
test SubList.testListIteratorSet([1863176106], 0, 1): success
test SubList.testListIteratorSet([-475749808], 0, 1): success
test SubList.testListIteratorSet([-806787297], 0, 1): success
test SubList.testListIteratorSet([-592019642], 0, 1): success
test SubList.testListIteratorSet([-1233693942], 0, 1): success
test SubList.testListIteratorSet([69043764], 0, 1): success
test SubList.testListIteratorSet([-1543488234], 0, 1): success
test SubList.testListIteratorSet([-395287411], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@621a4cbf, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@1f4bb770, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@33f33897, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@4798a32c, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@9c280e3, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5d1b500d, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@1a5a1e61, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@2896f2d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@5de2dc82, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3f00d2e5, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@68d85b65, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6e282b62, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1276292392], 0, 1): success
test SubList.testListIteratorSetPrevious([-302714592], 0, 1): success
test SubList.testListIteratorSetPrevious([-357324041], 0, 1): success
test SubList.testListIteratorSetPrevious([1467300897], 0, 1): success
test SubList.testListIteratorSetPrevious([79133969], 0, 1): success
test SubList.testListIteratorSetPrevious([1124716122], 0, 1): success
test SubList.testListIteratorSetPrevious([-161623721], 0, 1): success
test SubList.testListIteratorSetPrevious([1688470222], 0, 1): success
test SubList.testListIteratorSetPrevious([1326163080], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@598f51f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@19e24b7f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@4a1cbf1a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@606be6ea, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@332abfb0, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@283e9b36, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@5bc1d536, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@7bc7bc56, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@12e68493, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1098383a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@2d357e3e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@72151be5, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@1d6b56dd, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@73732dd8, 2, 5): success
test SubList.testModAdd(java.util.Vector@7935e811, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@28f07f9f, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@3cdb1cac, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@693af7d1, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@2716e849, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@30bc1b7b, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@685121f, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@6f05f6dd, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@5847fe3d, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@35879516, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@7e904494, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@59567f8, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@1329d42b, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@5ce53e3c, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@627fabe4, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6c6d2382, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@19d7f283, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@62038345, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@83d2c0, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@27227991, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@2ca1f690, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6f4bd8b9, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@7e11a75f, 2, 5): success
test SubList.testModClear(java.util.LinkedList@1d11dab6, 2, 5): success
test SubList.testModClear(java.util.Vector@408cfb3a, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@36473016, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@63c4baf, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@28160127, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1c819227, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@519ff0d2, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1f382f37, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@3ee787b0, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@2ba92ecb, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@3ed6edac, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@5def7e08, 2, 5): success
test SubList.testModGet(java.util.LinkedList@1fbccee3, 2, 5): success
test SubList.testModGet(java.util.Vector@1756b162, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@50f921a2, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@3f9756e4, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@560cd29e, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@fd1d270, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@7828e041, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@579c59f4, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@225c36d1, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@3bd16577, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@2add3372, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@61ba0f73, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@2355eac5, 2, 5): success
test SubList.testModHashCode(java.util.Vector@269fef4a, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@7f691dff, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@4c8a5c31, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@3e0c37eb, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@5c99dce, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@3955ab87, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@a770970, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@33203a52, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@c639569, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@74f1e0d6, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@4adf1c65, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@6c83d92f, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@2643adc7, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@efbfe65, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@4c61e3c6, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@79cca38a, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@77e14fc2, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@68fa08ca, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4eb421eb, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@336a4f7a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@58d4f4ee, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4760cdc4, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@350f7c37, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@1465502f, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@2792dd7a, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@604aee9d, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@2f9be004, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@479770de, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@35108ab1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@4bd3518a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@6189b90f, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@71c92e40, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@62430dbd, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@413a9693, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@688c5460, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@62bbd98f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@4fc0eaba, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@666676a7, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@47fef134, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@253cd232, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@37f061, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@614f9ebe, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@6802b4e5, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5c81cdae, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@395c70c0, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1a3f42f3, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@6e9b858a, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@2d4d1a72, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@3aeb9965, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@5eda28f, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@1ceb41c6, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@14a8f72, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@532a297d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@32a903d1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@68e0bd74, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1ce44e3b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@3770144, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@10ad053d, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@48e7d74c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@36b53d6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@34acc845, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@243811c0, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@d2f9aa4, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3476c023, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6d273ac, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@779f449b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5c4849c9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@731823d2, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@34a9f3c7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@8e5baf2, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@7037c773, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@25292589, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@a88c2b7, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@1f0a86cd, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@43496819, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@64331e36, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@2790716a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@522cb61e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@57cab50a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5831ef73, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@5f276ae, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6c8df8d6, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@7646acb2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@5bbe533d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@2eae7cc2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@f39a1b3, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@4c0b796a, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@119a3ede, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@654f4d7d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@17743d67, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@3f33a3ff, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1afd2a08, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@592b7eb7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@2307e6ae, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@8bb3546, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@2ab88368, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@17af4f95, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@7bfe4c48, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@2a0b03b3, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2f5345bd, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@33951ef1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@16015992, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@401b390d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2b80d882, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@7f55771d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6b052e01, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@e611919, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@1386c82d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@146ccd30, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@a577339, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@7751f33d, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4116289b, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@9ef9f5b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@4386b89e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@3d20445e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@58c798e7, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@2f885206, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7912471e, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@11f14120, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@4c5b828d, 2, 5): success
test SubList.testModRemove(java.util.Vector@5458a854, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@523abe45, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@56872a7d, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2d8e9649, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@6499be43, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@1977aa4a, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@2e45e300, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@58820a9f, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@6797c236, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4dbd1e90, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@53f5df8a, 2, 5): success
test SubList.testModSet(java.util.LinkedList@166c3ab, 2, 5): success
test SubList.testModSet(java.util.Vector@2a1a6d5a, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@615d2665, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@38177d59, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@685c07c4, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@5fcc5378, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@64f24ce2, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@15662304, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4f15d73e, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@241b2a2f, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4ce462d7, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@608b425d, 2, 5): success
test SubList.testRemove(java.util.LinkedList@69bfea0c, 2, 5): success
test SubList.testRemove(java.util.Vector@2c167a36, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@4dee4101, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@7d51c614, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@373c1314, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@530b91e3, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@2152309c, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@42382f7a, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1104641310], 0, 1): success
test SubList.testSet([1837704550], 0, 1): success
test SubList.testSet([1524301565], 0, 1): success
test SubList.testSet([1083663526], 0, 1): success
test SubList.testSet([524133352], 0, 1): success
test SubList.testSet([111806648], 0, 1): success
test SubList.testSet([-1781343295], 0, 1): success
test SubList.testSet([-2110737863], 0, 1): success
test SubList.testSet([868959912], 0, 1): success
test SubList.testSet(java.util.ArrayList@403ab8e7, 2, 5): success
test SubList.testSet(java.util.LinkedList@1e4c8d6d, 2, 5): success
test SubList.testSet(java.util.Vector@2fed9681, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@2300ea8b, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@756f9340, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@616bc43c, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@746a0a3b, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@574da395, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3d106cdd, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@29690f9b, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@72fbe0d2, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@12b76423, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@57b9d9d9, 2, 5): success
test SubList.testSubList(java.util.LinkedList@7df407a2, 2, 5): success
test SubList.testSubList(java.util.Vector@62332271, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@761cd4d0, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@1c559430, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6764a86c, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@40a99671, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@74737b5, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@10e5274c, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7dd597d5, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@41402105, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5cf3bbe1, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@6fa15341, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@6f7036c6, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@7a502553, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@6a73b528, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@697dd12e, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@2a5d6738, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@2a5d6738, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@40175387, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@d87d816, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@27962946, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1052ed6, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@3590ee6f, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5c1779c4, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@50c586ae, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@51112846, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@7338319a, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@7ee1d795, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@7ee1d795, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@a50b1ff, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@7f6def93, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@1f3cf7b2, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@194406ac, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@5940c5b2, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6cb126ca, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@12b7d02c, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@30048896, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@37ab4e1c, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@ad91e54, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@ad91e54, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@557aa411, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@32b24ab, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@3288546c, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@669b75ac, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@7e331537, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1bd2c01c, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1f655a7d, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@603a0981, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@5fba11e6, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@3ede2a2, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@3ede2a2, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@5154511f, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@6b69d5cc, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@4bc1408c, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@51d79707, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@be09be5, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2268eb19, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@589dd969, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@14a9b006, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4ce7595a, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@6d3afc9a, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@6d3afc9a, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@5b563e74, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@5ece57d5, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@2fee40f7, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@74ca590d, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@1eccd03d, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6677267a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@30dfda9, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@283119ec, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@488e3510, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@10268f39, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@10268f39, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@11708b1f, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@61ebf1e0, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@400c4cdd, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@17be2c57, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@22c8535a, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@97878fe, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@62c507ab, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@545f0d34, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@225b5fb6, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6601b3bf, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6601b3bf, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@740506c5, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@31846281, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4f909e96, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@54942dab, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@4342469c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2d747874, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@42a84180, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@3d4b35f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@62adcbf8, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@66494971, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@66494971, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@496d6622, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@73e6a8b, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4405553d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@4845e064, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@130ba52f, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6dbcf3d3, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@47ced8b0, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@481359c9, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5a56f379, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@712d1368, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@6a6fef6b, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@594de1e4, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@23f6bb1a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@660931ac, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@66445a7d, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@80020ac, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@569680ee, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@325c8e20, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@40b99d5, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1dc807b5, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1dc807b5, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@7e0c6d4b, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@567d519b, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@38cd9ad3, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@6623aa5, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
