#Test Results (version 2)
#Sat Apr 13 18:19:49 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=1098 0\:00\:01.098
end=Sat Apr 13 18\:19\:49 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.23
javatestOS=Mac OS X 13.6.6 (x86_64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Sat Apr 13 18\:19\:48 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.6,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.6
totalTime=1098
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Sat Apr 13 18:19:48 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Sat Apr 13 18:19:48 UTC 2024
elapsed time (seconds): 0.086
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:19:48 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Apr 13 18:19:48 UTC 2024
elapsed time (seconds): 0.085
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Sat Apr 13 18:19:48 UTC 2024
Test directory:
  compile: SubList
finished: Sat Apr 13 18:19:49 UTC 2024
elapsed time (seconds): 0.184
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:19:48 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Apr 13 18:19:49 UTC 2024
elapsed time (seconds): 0.183
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Sat Apr 13 18:19:49 UTC 2024
Mode: agentvm
Agent id: 6
finished: Sat Apr 13 18:19:49 UTC 2024
elapsed time (seconds): 0.827
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91947)----------
Seed from RandomFactory = 3796457912492261179L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1360103323], 0, 1): success
test SubList.testAdd([42, -170008259], 0, 1): success
test SubList.testAdd([42, -50710568], 0, 1): success
test SubList.testAdd([42, -1694376786], 0, 1): success
test SubList.testAdd([42, 218644823], 0, 1): success
test SubList.testAdd([42, 486430984], 0, 1): success
test SubList.testAdd([42, -1679129872], 0, 1): success
test SubList.testAdd([42, 1522885667], 0, 1): success
test SubList.testAdd([42, -558019260], 0, 1): success
test SubList.testAdd(java.util.ArrayList@703913a0, 2, 5): success
test SubList.testAdd(java.util.LinkedList@2ddf4722, 2, 5): success
test SubList.testAdd(java.util.Vector@26777a93, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@4493f73a, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@19f1849b, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@43029691, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@2cdc29bb, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@7f8e2e28, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@6ea8aced, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@34ff1646, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@1a2c3f80, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@18efd961, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 493199445], 0, 1): success
test SubList.testAddAtPos([42, -1624510872], 0, 1): success
test SubList.testAddAtPos([42, 925778148], 0, 1): success
test SubList.testAddAtPos([-636020801, 42], 0, 1): success
test SubList.testAddAtPos([351538607, 42], 0, 1): success
test SubList.testAddAtPos([42, 732534218], 0, 1): success
test SubList.testAddAtPos([-99601844, 42], 0, 1): success
test SubList.testAddAtPos([42, -340810774], 0, 1): success
test SubList.testAddAtPos([-312843444, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@1bd813a5, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@3fb9d08d, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@9a23fb, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@3503a550, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@1d9a9e02, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@82e55e5, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@7a3485a4, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@5ad6c41f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@cb473f7, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@292e55ca, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@4ab8f759, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@708c0f9b, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@3fa39503, 2, 5): success
test SubList.testClear(java.util.LinkedList@4b526cd6, 2, 5): success
test SubList.testClear(java.util.Vector@381030e2, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@53f2b53b, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@7a1a481b, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@36c51407, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@5271c399, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@7d015a25, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@436317a9, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@49635881, 2, 5): success
test SubList.testEquals(java.util.LinkedList@5a881af0, 2, 5): success
test SubList.testEquals(java.util.Vector@35a70652, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@142e4ce0, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@60f65cf0, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@54224a74, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@198464b7, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@7aa3432, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4b07bfc4, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@31d77b03, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@5037db85, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6b4a80c6, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@585b53af, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@11fffd9, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@5b3a95df, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@61fc3cd6, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@35f4f49a, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@31b6fea5, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@31b6fea5, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@7ed68cfc, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5ee04a53, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1acf33d2, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@266040a0, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@78416a11, 2, 5): success
test SubList.testGet(java.util.LinkedList@1cb37c04, 2, 5): success
test SubList.testGet(java.util.Vector@3c1d2563, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@54184395, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@304e7da5, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@17140b20, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@5a8509ca, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@5b6c7849, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1fe6a5c6, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7a249a46, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@44da97a2, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@48f1c4b3, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@656cde53, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@52e5af0c, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6196712e, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@27aa65f3, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@67673e8c, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@4fa5558a, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@4fa5558a, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@79d08a29, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@f746501, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@4d45d656, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@19bd71de, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@792f9c0f, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@10475cd5, 2, 5): success
test SubList.testIndexOf(java.util.Vector@61100531, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@335f36e3, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@67fa769b, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@17315453, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@336e595b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@6f7b3d32, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@c648de2, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@638b4f43, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@be53ddc, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1cffd0d9, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@10830a7c, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@70217f19, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@17245d8d, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@5470a613, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@531a6b71, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3b767c32, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3b767c32, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@19674132, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@66e36617, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@f422b4c, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@228ab370, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@5602953, 2, 5): success
test SubList.testIterator(java.util.LinkedList@3c7a3700, 2, 5): success
test SubList.testIterator(java.util.Vector@1280a34e, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@53f25c56, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@23659623, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@314fa6b2, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4cc71237, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@2cdfc73, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@57d50738, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@29b7141a, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@4a31028b, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@3d1143dc, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@19aa6870, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@3ca19222, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@6c7907, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@2c6da69, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@3c064ad, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@52a7c8f9, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@52a7c8f9, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@5d3a9561, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@5fba8940, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@7f2bb55b, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@76958d73, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@7449580e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@371e163b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@480eab7a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@7aec6b4f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@79a7935d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@7d7984e8, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@15939bd, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@65dc5bcf, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@62d681d9, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2f713267, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@58648fd, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2b8a4fa2, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@79384019, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7923e241, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@596bd8fe, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@5a6ed209, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1dcaecd7, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2148bfa0, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2148bfa0, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@5a468645, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@167be0cf, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@3d9b4ac1, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@768207d6, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@3b940c44, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@7185536d, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@79d96b56, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@9214683, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@b46a845, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@55e28dd0, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@38ac4285, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@9839bc3, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6373abea, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@48b6c42f, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@727daad0, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@714bac4f, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@376be50, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@347b9544, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@b63a101, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@8119322, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@2b6e44cb, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@833f60d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@701ea2b5, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@14275b5c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@47eaae03, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@53d81efc, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@c167d51, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@473f8408, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@a10559b, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7bbae6e2, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@68405bab, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@68405bab, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@686fa7b1, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@7d7b940c, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@3a398074, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@58380b63, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@3f6901ea, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1aed72ad, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6465174b, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@4208d8e0, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@15a1959, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@3750dcfa, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@3750dcfa, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@587719c, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@4741a085, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@70d29649, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@b011c9, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@38dc7ce6, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@2b20f349, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7652653f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@121e52f1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@4ab6a7c9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@568d11fe, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@441b434e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@6e776a4e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2a462c78, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@736b80ac, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@14b42342, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@40cc1331, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@2d5c8525, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@e23b292, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@67a2082a, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6902fe21, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@467b36e2, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@713ff685, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2313c420, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@35a9771a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3510446d, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@623f5cc6, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@4bcbd1c3, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@72af8b9c, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@3e8efe40, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3011f956, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@2650a4e9, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@2650a4e9, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@41c68887, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@4ed4ea41, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@187ab132, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3a85fa7, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@4e2bc5dc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@3750c386, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@28c1fce6, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@791e9122, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@70692317, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@57173769, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7e70e800, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@23d81602, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@5dfde7ae, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@3fc50a18, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@79352fcd, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@23b07fae, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@6f80723f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@4910e3d5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@21bc31fb, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@d931f78, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@dfe001c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@411dd9b6, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1891793440], 0, 1): success
test SubList.testListIteratorSet([-1022343325], 0, 1): success
test SubList.testListIteratorSet([-1728251181], 0, 1): success
test SubList.testListIteratorSet([1590405033], 0, 1): success
test SubList.testListIteratorSet([-1521398310], 0, 1): success
test SubList.testListIteratorSet([-1336676547], 0, 1): success
test SubList.testListIteratorSet([-1203224732], 0, 1): success
test SubList.testListIteratorSet([35026959], 0, 1): success
test SubList.testListIteratorSet([377916170], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@48d589db, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@6538e722, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@b67ceab, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@2c50ba90, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@368ee499, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@ba8c2ac, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@2a40a3c, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@469a9b85, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@5b9aefcd, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@16d461db, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@c9e5b88, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3952e77f, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1618829728], 0, 1): success
test SubList.testListIteratorSetPrevious([1274900881], 0, 1): success
test SubList.testListIteratorSetPrevious([75379678], 0, 1): success
test SubList.testListIteratorSetPrevious([-145493934], 0, 1): success
test SubList.testListIteratorSetPrevious([1623590450], 0, 1): success
test SubList.testListIteratorSetPrevious([1338084976], 0, 1): success
test SubList.testListIteratorSetPrevious([871170624], 0, 1): success
test SubList.testListIteratorSetPrevious([-1086747597], 0, 1): success
test SubList.testListIteratorSetPrevious([-1704128345], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@7fac1220, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@2da58298, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@5a3153e7, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@21d3ee03, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@2fc34cf9, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@294b027a, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@fc0af60, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@5b31b17b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@67a51017, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5ace8ccb, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@58b61ef5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@687e87c8, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@42bb9044, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@226414c5, 2, 5): success
test SubList.testModAdd(java.util.Vector@6dfd0c7b, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@706a3b84, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@52d34b80, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@57131a36, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@8d57170, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@1444ad17, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@6213126f, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@462549e4, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@8abc891, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@50d163e4, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@37e5b606, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@7c8eb9a2, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@62afb156, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@13a0d622, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@776f4e7c, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@29b19e88, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@670f37e1, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@54bbe219, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@5456abf7, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@753c08ae, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@1fcc0dc2, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1014476a, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@15c7a31d, 2, 5): success
test SubList.testModClear(java.util.LinkedList@1908e1bc, 2, 5): success
test SubList.testModClear(java.util.Vector@71be8479, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@19808e83, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@d18e7ab, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@ba7f13b, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@48fd9150, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@1ec472c8, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@28cff7ff, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@4ca32edc, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@73f12977, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@35ae4439, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@4e3f172e, 2, 5): success
test SubList.testModGet(java.util.LinkedList@62bae2c5, 2, 5): success
test SubList.testModGet(java.util.Vector@51f9a97b, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@1a2ba9a0, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@2bc71c55, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@55bf262c, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@3fd4d51d, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@76d69ffe, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@5164f1b5, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6b6536ef, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@58f2d2a6, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@409c6c0a, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@7408b206, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@11707b71, 2, 5): success
test SubList.testModHashCode(java.util.Vector@603c1c62, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@1bb5f769, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@62e064de, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@3accdcae, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@44147eff, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@25cfa3b2, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@7e841271, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@e5001ed, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@4aa21acd, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@457de10d, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@3cfde149, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@24d62e02, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@5571040f, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@77609fa, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@7652c7db, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7fbb1ac9, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@434b2536, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@34c3f3b, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@7e1a29, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@761ae947, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@2b18dfe3, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@73157d61, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@2e000a76, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@6f9e40f1, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@3d1248ab, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@13fe07fb, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@521fc97a, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6d2331ef, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@f6f1ad, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@73d81398, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@1d897f81, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2e48d894, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@7eefa8af, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@71b090c0, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@6def18ac, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@432a4771, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@3143ff34, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@52d018dd, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@3db203b6, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2a135b28, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@23b6ecac, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@564ea86a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@6b9f541e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@d6cac35, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@2383729e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@77fb79e7, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@1f6b1733, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@620a331a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@6cadf6a9, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@149ba3aa, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@79256da5, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4114ff11, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1f1b166a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@2dc48556, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2f7eb1a8, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1d5646b4, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@25183f55, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1207754b, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@35723ccc, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@19464c0c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@6f544707, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@6f8874f, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@246514e5, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@67d70ab2, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@22414e57, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@614afc2e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1a275bf3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2d322677, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@5bc0cba7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4a4e097, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@70fec03b, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@3c253185, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@187acbce, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@67df855b, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@2e48a7bb, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5e725ebf, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@44193a7b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@2a1c4d0f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@316087c3, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@24508c04, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@105bf462, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3a28d8fd, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@17317fce, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@2cdaeb84, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@28e6e5f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@4a65924b, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@482cd4aa, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@591bc789, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4363266a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@2cced3a1, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@3afb4980, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@38b27c06, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@33e3015e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@25ddd2a7, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@35ce44b6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@41902b58, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@30ae9e7e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@13b7192f, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@34b1356f, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@25747df2, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@28881f69, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@2b2a701a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@2ca61b12, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@414b3227, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@70843ddf, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@18d2d801, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@779b2414, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@8c59805, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@1ec74626, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@4fa31ccc, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@487db8de, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@613340c0, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@51bfdb12, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@1790aa45, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@45b43e87, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4db283f6, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@231c43a0, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@33855025, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@106c6d13, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@40464c3d, 2, 5): success
test SubList.testModRemove(java.util.Vector@3bddb2a4, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@77a98d89, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@149f2b2d, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@27539637, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@7fe7003, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@4cd5551f, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@7d8e8f29, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@835c137, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@2ca1bb0e, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1469ad56, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@aa51714, 2, 5): success
test SubList.testModSet(java.util.LinkedList@37130adc, 2, 5): success
test SubList.testModSet(java.util.Vector@48790048, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@6dfcaccb, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@3223583b, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4888100f, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@11c0bad9, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@a780d94, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@7165d3d8, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@7a6feaea, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@7daa73b1, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@42b2840d, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@304fb06d, 2, 5): success
test SubList.testRemove(java.util.LinkedList@e0abd81, 2, 5): success
test SubList.testRemove(java.util.Vector@7f279dd1, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@17fed2a0, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@5f670ff3, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@d442654, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@70ff804f, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@44e6c2d0, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@5f6efe96, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([35594395], 0, 1): success
test SubList.testSet([150664430], 0, 1): success
test SubList.testSet([-1612754477], 0, 1): success
test SubList.testSet([-121558068], 0, 1): success
test SubList.testSet([-111435192], 0, 1): success
test SubList.testSet([1480039078], 0, 1): success
test SubList.testSet([-266752529], 0, 1): success
test SubList.testSet([-1876825028], 0, 1): success
test SubList.testSet([-730831009], 0, 1): success
test SubList.testSet(java.util.ArrayList@1e0ac33a, 2, 5): success
test SubList.testSet(java.util.LinkedList@2652b14b, 2, 5): success
test SubList.testSet(java.util.Vector@23adeb41, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@61ff4ccc, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@71de533d, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1b00c25d, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@fb780de, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@1949afe, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@259c99ba, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@41284aef, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@6414e43c, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@70cee518, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@3a313d43, 2, 5): success
test SubList.testSubList(java.util.LinkedList@774fdb43, 2, 5): success
test SubList.testSubList(java.util.Vector@1a5ef76d, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@663c701, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@72259d03, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@19698bb2, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@3707846b, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@336726ec, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@771d64d7, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@2b3b7f1a, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@5f590bcc, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@54de22c, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@6d6414a4, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@9cf3b93, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@3b997265, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@1ae30ca, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@2b34ce8c, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@56d1d7c5, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@56d1d7c5, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@278297a1, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@271c0c6f, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1739b79c, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7f8c358, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@7d15e3af, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@67d70021, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@42a1cc8f, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@7d88ed70, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@682a1276, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@85edd2b, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@85edd2b, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@7c5c973d, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@5d9951ad, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@40f5cbac, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@789cdcb7, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@16435a7f, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3faaebed, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1c12b6c8, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@7dfe162f, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@7116e29a, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@da2836d, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@da2836d, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@78d5ddd, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@56a71f96, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@4c0cbd81, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@541f5899, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@1dacb10a, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@115b49fd, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@69bdec3b, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@1b9b8bce, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@48e2692e, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@796886d4, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@796886d4, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@117c2d87, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@15c4a6cc, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@5a53b105, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@3c62ad0c, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@13cc9bb2, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@7fef0ce4, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@268c6550, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@264cb4a1, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@232bb2bd, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@179768bd, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@179768bd, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@43f93729, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@3e87eedf, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@513595f6, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@47da1f6, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@f71b533, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@e43e64, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7dc0bfea, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@2e59aad6, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@228feacc, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@7626e426, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@7626e426, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@43535614, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@6a6a520, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2a95682c, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@377ec312, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@5b825b19, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@4d09833a, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3b6d551, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@aade27, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@63d7dc2b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@2cb965d8, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@2cb965d8, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@4328617d, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@51fcd44d, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@106857b5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@4164599e, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@1963084c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@4f506fbc, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3ac9d527, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@82b8add, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@33fb3a22, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@3e8dc394, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@3e8dc394, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@4d5668e5, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@18f4d55e, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4f99ba5c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@50520ce9, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@6c04caf7, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5570aa0b, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@df46d8e, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@6d524c9b, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1057a2df, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@391d15b1, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1a75216a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2360f530, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@9b85364, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@46525106, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@201e9f5a, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@327e001f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@7a3e23bd, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@5c25bdec, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@44baf63c, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@7598e32, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@7598e32, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@de45be1, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@93f8736, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@45fe4b7c, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@4d14755b, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
