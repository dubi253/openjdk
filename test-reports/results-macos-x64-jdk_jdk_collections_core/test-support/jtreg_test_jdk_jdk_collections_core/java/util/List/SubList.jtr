#Test Results (version 2)
#Thu Feb 29 16:11:32 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=1085 0\:00\:01.085
end=Thu Feb 29 16\:11\:32 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.4 (x86_64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 16\:11\:31 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.4,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.4
totalTime=1086
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 16:11:31 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 16:11:31 UTC 2024
elapsed time (seconds): 0.025
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 16:11:31 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 16:11:31 UTC 2024
elapsed time (seconds): 0.024
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/202)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 16:11:31 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 16:11:31 UTC 2024
elapsed time (seconds): 0.1
result: Passed. Build successful

#section:compile
----------messages:(7/270)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 16:11:31 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 16:11:31 UTC 2024
elapsed time (seconds): 0.1
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 16:11:31 UTC 2024
Mode: agentvm
Agent id: 3
finished: Thu Feb 29 16:11:32 UTC 2024
elapsed time (seconds): 0.958
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91963)----------
Seed from RandomFactory = -5457755145742905059L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1964023834], 0, 1): success
test SubList.testAdd([42, -1772985054], 0, 1): success
test SubList.testAdd([42, -1242749283], 0, 1): success
test SubList.testAdd([42, 1881055629], 0, 1): success
test SubList.testAdd([42, -2090407172], 0, 1): success
test SubList.testAdd([42, -1397299846], 0, 1): success
test SubList.testAdd([42, 1489278532], 0, 1): success
test SubList.testAdd([42, 287841316], 0, 1): success
test SubList.testAdd([42, -332660688], 0, 1): success
test SubList.testAdd(java.util.ArrayList@58366ae6, 2, 5): success
test SubList.testAdd(java.util.LinkedList@77d214f0, 2, 5): success
test SubList.testAdd(java.util.Vector@3320cf, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@3242eac9, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@8c4ac19, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@78f8e1ed, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@2d3858c, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@2aa47514, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@49e23a53, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@3530ae14, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@23c31a16, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@41319d3, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-1605473227, 42], 0, 1): success
test SubList.testAddAtPos([42, 251118518], 0, 1): success
test SubList.testAddAtPos([1765733370, 42], 0, 1): success
test SubList.testAddAtPos([337000591, 42], 0, 1): success
test SubList.testAddAtPos([-1412135459, 42], 0, 1): success
test SubList.testAddAtPos([-2107992510, 42], 0, 1): success
test SubList.testAddAtPos([42, -1906019464], 0, 1): success
test SubList.testAddAtPos([42, 1918161901], 0, 1): success
test SubList.testAddAtPos([-727724041, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@5502c63a, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@2941062a, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@6b98f4e1, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@761205f, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@45527412, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6dbed60a, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@5f6edec7, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@3c5fccf1, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@4a33b22a, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7d72eedc, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@5ff33949, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4ec24d3d, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@18e47c19, 2, 5): success
test SubList.testClear(java.util.LinkedList@2ab31609, 2, 5): success
test SubList.testClear(java.util.Vector@34b0da91, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@56d640cf, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@c76dd7d, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@50542da1, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@2f8ccfb9, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@6c88b8bd, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@6b7f83db, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@580a7e10, 2, 5): success
test SubList.testEquals(java.util.LinkedList@1a8ed8c2, 2, 5): success
test SubList.testEquals(java.util.Vector@712d751f, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@4df66540, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@4ed979e0, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6946e19, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6479bfbe, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@f819b64, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1191d074, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3e40d46d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@79cd7967, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@35eb8b02, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@7d6a10f2, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@3fedd6f7, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@16fb2357, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@2e6c98d1, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1e735fef, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@659b79e7, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@659b79e7, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@6f3828bd, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@380924fe, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@24ab70cf, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@15e107cb, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@501b11b0, 2, 5): success
test SubList.testGet(java.util.LinkedList@ee52513, 2, 5): success
test SubList.testGet(java.util.Vector@7ae0428, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@4a2c916c, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@32fc96f0, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@468a52f4, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@775d9b72, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@13ecf3cb, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@2f038dd2, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@742ec1f2, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@39b405e, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4194f4cf, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@4516c2f4, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@7830637c, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3ab4b2c8, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@1381274c, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@179ab681, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@df97fa0, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@df97fa0, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@21f16cbf, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@212fa60a, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@6082f9ec, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@43975557, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@331e70c6, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@427e8708, 2, 5): success
test SubList.testIndexOf(java.util.Vector@509ea225, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@3e5f1d5c, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@38553f1c, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@a919790, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@7ffe178c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@23584f49, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@51ee23ca, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@eeb18cd, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@6831eae5, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@10cf99fe, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@6067aa2f, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5418ecae, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@305c8dc8, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@21424fc8, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@64d045a1, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@29c4d5fc, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@29c4d5fc, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@30966954, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@4d6b337d, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@692b490d, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@539fc0a7, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@5a1d3f40, 2, 5): success
test SubList.testIterator(java.util.LinkedList@58ea884, 2, 5): success
test SubList.testIterator(java.util.Vector@312682f6, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@6631ad19, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@73b17a7e, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@512fe72e, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@74d61dbb, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@ec72fc2, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@2139f24e, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@4b46c9e3, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@7094e845, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@331283d6, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@4f6e3557, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@53089ccd, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@184fd239, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@45078d17, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@58cd2043, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@6c1de51f, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@6c1de51f, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@1a1eb720, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@19f2899a, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1c9eaaf6, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@4c3b9962, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@42dca3, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@ced1c20, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@4c1e9411, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@5274aa0d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@4f9926fa, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6be28d9e, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@660ea154, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@e1f67dc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@4a53f1bb, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3abce34f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@11f3ee1c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@418ad985, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@868bd56, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@77ce2c57, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@6b875c9c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@5c499f4e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3aa23d65, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2015b8c7, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2015b8c7, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@77beee22, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@62c7500, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7ea1e390, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@64c3d2b4, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@735a08fc, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@458fbaea, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@2bf44ff, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@3cc1ee25, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@e0f3283, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@49d87158, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@aab142a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@22cd77ec, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@30c3d5d1, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@4961851b, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@3e5e0ce1, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@17a9f92d, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@2b19956a, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@ec0e84a, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@79ca66f8, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@6636f4b6, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@2a0c0a13, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7aefb6bd, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6a72d35a, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@2de3673e, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@51dd0794, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@761b0e12, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6aa34d29, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@c373404, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@249aa3c7, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6000ca3c, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@3e1e9f27, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@3e1e9f27, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1442835f, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4ba7819b, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@4388ceee, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1491341a, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@72e4a17c, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6d49c78d, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@13bfd968, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@7776724, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@5b8e615c, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@403d933b, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@403d933b, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@7eb32fdd, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@252732dc, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@54dbfce1, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@443a590a, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@6c770e4a, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@6e8c3c12, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7c458304, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5751aa95, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@92ef4a3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1801d8ee, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@279f9cad, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@59cc404, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@505fafd6, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@45fb84b2, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@12747cfb, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@bd33e3f, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@47da6db5, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@60fd930b, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4033d2bf, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5543dec6, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@5aa8487e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1baf8249, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1ad7e7c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@386353dd, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3a158200, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@7af7300f, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@400efbdb, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@6399297e, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@1ddc288, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@7e2e2937, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@41c9c8fa, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@41c9c8fa, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@641c07e4, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@3b1b1102, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@48987301, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@2c9e25dc, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@7b1513ec, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@668e2623, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@60e261d8, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@5b046ab, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@40b187c4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1770e08, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7cda2802, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@6f1027e4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@3af5a630, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@185018a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@24d9c38c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@3c436638, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@128191b0, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@50c46e41, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@bbe9c1e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1429cf14, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@1a4d9407, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@4733bbbf, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([2128247647], 0, 1): success
test SubList.testListIteratorSet([507468652], 0, 1): success
test SubList.testListIteratorSet([-219984705], 0, 1): success
test SubList.testListIteratorSet([-412464577], 0, 1): success
test SubList.testListIteratorSet([-799564886], 0, 1): success
test SubList.testListIteratorSet([887141252], 0, 1): success
test SubList.testListIteratorSet([-381449163], 0, 1): success
test SubList.testListIteratorSet([2087401070], 0, 1): success
test SubList.testListIteratorSet([-2003258054], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@46b2220b, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@f778a2a, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@2338fad5, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@49f4a357, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@304f741f, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2c5b6122, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@1d501a26, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@66432622, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@e4557cd, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5035a444, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@281a79bc, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3d0dbf89, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([167324992], 0, 1): success
test SubList.testListIteratorSetPrevious([-495057206], 0, 1): success
test SubList.testListIteratorSetPrevious([-547721786], 0, 1): success
test SubList.testListIteratorSetPrevious([-806420901], 0, 1): success
test SubList.testListIteratorSetPrevious([749707907], 0, 1): success
test SubList.testListIteratorSetPrevious([2050354579], 0, 1): success
test SubList.testListIteratorSetPrevious([1908692506], 0, 1): success
test SubList.testListIteratorSetPrevious([431291327], 0, 1): success
test SubList.testListIteratorSetPrevious([-1574910785], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@1cafe208, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@36d166d6, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@651192ff, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@78a98459, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@7b9dbb64, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@17e67e1b, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@1e9416d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@4b87cbeb, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@5bbfe78e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@6ad6c2b8, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@6fb04caf, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@70c6cda5, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@31a1fd94, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@5b9a6ded, 2, 5): success
test SubList.testModAdd(java.util.Vector@331293cb, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@c291cdd, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@2af75dbf, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4deed75f, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@308dca57, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@2d4b0795, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@685cbd06, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@28bec057, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@7b335ea4, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@184eecb1, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@c46fb79, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@26b9cda5, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@696e5b1f, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@1ea22ba7, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@102a93ac, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@19e3e4cf, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@6a9b9d06, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@629051f7, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@3cb17228, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@20c09dfd, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@38624599, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@27f2ebd5, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@76c9323e, 2, 5): success
test SubList.testModClear(java.util.LinkedList@3199e48, 2, 5): success
test SubList.testModClear(java.util.Vector@5c3713e2, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@7c62a2a6, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@7f32cbf5, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@11e733a1, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@10ee7e76, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@e3f95bf, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@47ff401a, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@7d3dcc24, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@686f9919, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1d8ba243, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@d3e1c78, 2, 5): success
test SubList.testModGet(java.util.LinkedList@3059171d, 2, 5): success
test SubList.testModGet(java.util.Vector@109babdc, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@2194d50f, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@5c29178e, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6c2eab37, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@654a51bc, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@3e4c082d, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@25301690, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4f32183a, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@7b54141b, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@3eb958c5, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@73d4abad, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@3a7119ff, 2, 5): success
test SubList.testModHashCode(java.util.Vector@4707642e, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@70365e52, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@5c87b97a, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@c610270, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@21a74ef2, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@53c95f72, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@5b04a5ad, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@689144ad, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@2ba8979b, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@6dd91736, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@4b1c5b17, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@4d2ab518, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@2cdcc5b, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@19157713, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@592ca93e, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@16c3914b, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@679e9934, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@2ffad3f9, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@5aeef1f3, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4c1a2207, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@7cd77ba8, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@6693cd78, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@59a370d, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@33016b10, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@f211cc4, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@4a9d75d0, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@2dbd1842, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@180c127e, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@1839793e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@2f140b30, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@395ff2db, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7ac050d5, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@328c71c1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2b97effe, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@26d96417, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@3c41aff9, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@5d37225f, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@23550601, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@6f93d205, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@248968bd, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@4fd44b11, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@3735267c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@51500291, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@243f3aff, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@437b6789, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1b8477f9, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@6f993f84, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@5aa36974, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@46fa6888, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@3ee2795c, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@3a80dca, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@b7b5caa, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@423ac106, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@429793d5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2da04f9c, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@44644b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@22e6195a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@65bfe60c, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@220ee95, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@57248029, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@6944fba1, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@7ecc60dc, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@73ea4464, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@379a977e, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@42d7f0da, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@65dfb031, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@158d9ea, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@705da60e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@6e1c3c06, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@45a98f7f, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@2b45a6f6, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@2e0b8b47, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@50ee5bf1, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@55908764, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@70b0e447, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1dce16b3, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@20a3975c, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@2172f7ac, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@7ce9e1b4, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2640eb6b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@31430db5, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4d97049e, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@24456cfb, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@3e35d358, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@10f3570e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@dc83d27, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@6eab1512, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@38656c8, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2c3d4d2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@2765804c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@3d4aedc7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5d3fe9f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@50521873, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3fe287f7, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@2e5467e8, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@39e72e7a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@4c3db028, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@55cc16f1, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@6a32a02d, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4984bfc5, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@27fa443, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@4024e2a6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@58d2fc63, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3d973f4, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@6b3b00fb, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3b426dc7, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@7f81c199, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@6f31a88e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@31dc126e, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@16c58390, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@3c83f3a, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5c9e6903, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@7c1ac69c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@586fb097, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@4889c5a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@66df9800, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@6cbaab77, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3ef9a011, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@654fa8bd, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@39cda4f6, 2, 5): success
test SubList.testModRemove(java.util.Vector@3956740e, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@c3b13bc, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@6d5911d, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@25e76b62, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@48ea0899, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@e0509ce, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1d203e1b, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@15a21c66, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@3ec8fdcf, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@71ccfb0d, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@5d9a1d3, 2, 5): success
test SubList.testModSet(java.util.LinkedList@60648d9e, 2, 5): success
test SubList.testModSet(java.util.Vector@3ba58f4f, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@63a69115, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@548a960c, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@73e95d90, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@25713934, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@3a8aaa31, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@6c248d65, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3306664c, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@3e52562c, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@76bab568, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@9627cc, 2, 5): success
test SubList.testRemove(java.util.LinkedList@bfc67cf, 2, 5): success
test SubList.testRemove(java.util.Vector@631894d0, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@4e82ab16, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@12ac982f, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@56d714da, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@293b48f9, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@7cea234f, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@56ea5c0b, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1383660997], 0, 1): success
test SubList.testSet([-926101294], 0, 1): success
test SubList.testSet([-1769335270], 0, 1): success
test SubList.testSet([-1976056127], 0, 1): success
test SubList.testSet([-1294959500], 0, 1): success
test SubList.testSet([-1774508669], 0, 1): success
test SubList.testSet([216398329], 0, 1): success
test SubList.testSet([-233505100], 0, 1): success
test SubList.testSet([1505825725], 0, 1): success
test SubList.testSet(java.util.ArrayList@2df8f683, 2, 5): success
test SubList.testSet(java.util.LinkedList@14ccbe09, 2, 5): success
test SubList.testSet(java.util.Vector@7de49fbc, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@355fa639, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@6a228c63, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@7563e2c8, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@2f7cbbfb, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@579ddf24, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@57dc3099, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@43512ce9, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@47257937, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@12894703, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@1474cb21, 2, 5): success
test SubList.testSubList(java.util.LinkedList@569822b, 2, 5): success
test SubList.testSubList(java.util.Vector@37651e77, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@65ec3a8d, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@28cc4b13, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6c02ae10, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@3aecebd1, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@5d89dde3, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6521a8f4, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@464cc871, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@65b595aa, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5bb29ecf, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@21fab2c7, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@18c0e8fc, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4a9bb15, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@3054bb65, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@55f52c1c, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@417b82d0, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@417b82d0, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@7c0f945f, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@31402f66, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@57b5f9b9, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@797f1590, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@4809d88a, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5006d062, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@47086979, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@34098112, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@ac2cd74, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@7d8122d1, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@7d8122d1, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@6ee27c3f, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@565701ac, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@586605a8, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@2627457f, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@13f254cc, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3ce30b69, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@18ac34fe, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@6344651, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@719ecab9, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@6f141eb7, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@6f141eb7, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@43ea58e7, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@4948e29b, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@201674dd, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@290b032, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@4e49d987, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3e1eaa7a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@65ecf8f3, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@688c896d, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@a103a16, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@6d947ccd, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@6d947ccd, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@47245316, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@616cb6ed, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@7772e0f8, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@3b94f882, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@63803e95, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@23105edd, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4af79b7d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@2f999915, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2df44379, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@626e164a, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@626e164a, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@6b69b6f8, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@3bafd8bb, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@3680410b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@33c471cd, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@7f629969, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@3f26551c, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@62134435, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@3c82a3dc, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@318b7fd7, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@c69e7e5, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@c69e7e5, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@6e68e55b, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@3946a37f, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@b5ec00d, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4139bfc2, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@5ed9dd12, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@4457ebd8, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3d04f2b3, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@30d1fa59, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@4a34e467, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@3bc6c723, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@3bc6c723, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@695e29d3, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@2c4bf80b, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@25cee6b8, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@523ef5a2, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@1a340c75, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7e196b5, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@78f91f96, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@101e8414, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7ed520cf, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@27d7777b, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@27d7777b, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@31ffe178, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@762087d4, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2ec15ba1, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@852efe2, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@1ba57337, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5e2ca1f6, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@18bb9805, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@3409eb02, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1c9456c9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@7ce45665, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@315a2db7, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@51ffc153, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@1435c32d, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4cdf1c7c, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@21d5a92a, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1a305353, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@636fe097, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@12df1f9d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1931a562, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1371e5a2, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1371e5a2, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@91f1bee, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@39d89a01, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@21c2ee0d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@341cd972, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
