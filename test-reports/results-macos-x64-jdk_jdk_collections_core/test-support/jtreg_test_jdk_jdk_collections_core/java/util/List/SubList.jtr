#Test Results (version 2)
#Thu Feb 29 23:43:07 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=2086 0\:00\:02.086
end=Thu Feb 29 23\:43\:07 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.4 (x86_64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 23\:43\:05 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.4,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.4
totalTime=2087
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/274)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 23:43:05 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 23:43:05 UTC 2024
elapsed time (seconds): 0.05
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:43:05 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 23:43:05 UTC 2024
elapsed time (seconds): 0.049
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 23:43:05 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 23:43:06 UTC 2024
elapsed time (seconds): 0.411
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:43:05 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 23:43:06 UTC 2024
elapsed time (seconds): 0.411
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 23:43:06 UTC 2024
Mode: agentvm
Agent id: 8
finished: Thu Feb 29 23:43:07 UTC 2024
elapsed time (seconds): 1.622
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91966)----------
Seed from RandomFactory = -7878247260992387521L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -737669517], 0, 1): success
test SubList.testAdd([42, -960819054], 0, 1): success
test SubList.testAdd([42, 334899077], 0, 1): success
test SubList.testAdd([42, -600587177], 0, 1): success
test SubList.testAdd([42, -182736767], 0, 1): success
test SubList.testAdd([42, 1128630089], 0, 1): success
test SubList.testAdd([42, 1314823987], 0, 1): success
test SubList.testAdd([42, -337320486], 0, 1): success
test SubList.testAdd([42, -1585183375], 0, 1): success
test SubList.testAdd(java.util.ArrayList@540444e6, 2, 5): success
test SubList.testAdd(java.util.LinkedList@c4d126b, 2, 5): success
test SubList.testAdd(java.util.Vector@31265fe6, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@6bef5d5f, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@371dd779, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7399a59, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@5135791e, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@65842909, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@411c5e65, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@f945d2e, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@4e4d8acb, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@4fe4cb33, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 1675511527], 0, 1): success
test SubList.testAddAtPos([42, -1896936922], 0, 1): success
test SubList.testAddAtPos([42, -642907877], 0, 1): success
test SubList.testAddAtPos([175542366, 42], 0, 1): success
test SubList.testAddAtPos([1584615789, 42], 0, 1): success
test SubList.testAddAtPos([42, -798349412], 0, 1): success
test SubList.testAddAtPos([-339870066, 42], 0, 1): success
test SubList.testAddAtPos([42, -999112921], 0, 1): success
test SubList.testAddAtPos([42, -1264953818], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@705da027, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@578a77fe, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@18d1d242, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@74842e82, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@67f6f317, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6eadfea3, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@543ff47d, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@2f2fb148, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@e9e6581, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@42d7103e, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@55d12817, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3dfb5644, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@12a441d1, 2, 5): success
test SubList.testClear(java.util.LinkedList@1bca25da, 2, 5): success
test SubList.testClear(java.util.Vector@5139d99, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1137ff8, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@6ed4542a, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@77f8d2da, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@78583c0b, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@5071d03d, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@577234b8, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@617964d1, 2, 5): success
test SubList.testEquals(java.util.LinkedList@d9cd65d, 2, 5): success
test SubList.testEquals(java.util.Vector@6478b646, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@790b91ee, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@7e2e6d01, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3d39773f, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@46902c5c, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@68afa0cf, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@3c60fb7d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7ab320bf, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@14e7e18e, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@62caf49b, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@27ccfb36, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@27580cdf, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6af07222, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@297bda78, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@4dc1e9d9, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@47e477b9, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@47e477b9, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@18785133, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@55a91479, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@152631e8, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5984fd25, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@64968eea, 2, 5): success
test SubList.testGet(java.util.LinkedList@6fbcfe1e, 2, 5): success
test SubList.testGet(java.util.Vector@5910f3e5, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@5505401d, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@c1dbf4a, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@263e3550, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@72c8776f, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@58acf898, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@92d4e26, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@472063e5, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@659be1ab, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6034fc10, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@7d3a6b08, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1a9b411f, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1646a7a0, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@1b50da9d, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3408e806, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@58ca30a7, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@58ca30a7, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@60da8b74, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@136adc3e, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@4b0e15fc, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@155791c, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@65a7111d, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@66cf89c, 2, 5): success
test SubList.testIndexOf(java.util.Vector@2ca70e79, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@1f3abcd3, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@54c5bb42, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@78dafbb6, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6cdb0147, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@11c5e621, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@5d5d6b26, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@30c1dba7, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@2b952c7f, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4569df01, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@5a31381d, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@14eb552b, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4392d8df, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@4f0f475e, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@16f8e6fa, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@5532144e, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@5532144e, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6802e554, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@409c6f49, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@47aed586, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@71ca4ece, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@24da7463, 2, 5): success
test SubList.testIterator(java.util.LinkedList@68e9e327, 2, 5): success
test SubList.testIterator(java.util.Vector@6c721927, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@68f7af2c, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@6fcd9b35, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@711437bf, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@31d01b02, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@3eaf750d, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4883871, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1fb73c3f, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@665ac261, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@33c775a3, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@18fda740, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@46f5edd4, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@414f2a74, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@5b0d3c8a, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@6c4eae88, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@61a586ab, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@61a586ab, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@f0162db, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@5ec18e03, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1a2f97c6, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@6bd95f32, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@5fd93494, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@67c0255c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@46541436, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@2e720d8e, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@67c83027, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@60778914, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1c1595f5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@21c9c84b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7d494ffc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@39223c5c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@5d3f4141, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@121c2832, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@3bec4fb7, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5d03b4ce, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@455245c8, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@71fbcbb0, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7c8882b1, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@7bc3585a, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@7bc3585a, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@12e782f8, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@321b8001, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1442106f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@31b0ff59, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@2488848b, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@3a474fd8, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@200aaa3a, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5b241225, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@30a35ba0, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@6315b54, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2786d9df, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@28c2021b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@23bfcb32, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@4e910d95, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@55f60a34, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@2419250a, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@4f9b21d0, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@539fc37b, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@266efb70, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@29204560, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@26bf8c11, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@47084425, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@301cf2a7, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@190889c3, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6d4b4c00, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@575e8e34, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2d597e0d, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3ce502c3, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@6a64a875, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5ba6df2e, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6519937b, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6519937b, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@63267412, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@8387a7b, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@5aea8cfa, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@36ea4700, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@7b67f270, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@14f38faa, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@27dfe7ff, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@2af7c9bc, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@3a1d1ecb, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@7f746dcd, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@7f746dcd, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@588daf7c, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@35ad3961, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@7d7b7487, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@788e2dd8, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@63054dbd, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@67b3ff97, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@58fd14f9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3d64db31, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@7afbcaab, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3a0f35eb, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5efa8b34, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@72a2a046, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7c625d3, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@5a252782, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@1c075436, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@42a5ca82, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@63e718c, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@24321e1a, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@a0dc0b, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@52a9fb3, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@4d4c9d63, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@496954ca, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7970c32b, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1e0c4f0f, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@461df266, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@45fe2dd9, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@5df0e33c, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@82bd67d, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@4e8d1acb, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@55b7f1e5, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@7d11a4c2, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@7d11a4c2, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@fc9afa1, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@76c8b786, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@450d6db7, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7823b518, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@518a3f2a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@2f2c05a6, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@2afa0ab6, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@769779cd, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@245f5e5e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@68db1eb8, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@58fa014d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@37e299bc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@714e715c, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@6a64086e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@11af32e7, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@8870c5d, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@106fdc7, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@79c31f5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@12467a60, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2379435b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@64acec27, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2e056164, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1599462400], 0, 1): success
test SubList.testListIteratorSet([-883254595], 0, 1): success
test SubList.testListIteratorSet([-626092751], 0, 1): success
test SubList.testListIteratorSet([-1337451356], 0, 1): success
test SubList.testListIteratorSet([-1443499249], 0, 1): success
test SubList.testListIteratorSet([-1512222997], 0, 1): success
test SubList.testListIteratorSet([-275314794], 0, 1): success
test SubList.testListIteratorSet([1707214875], 0, 1): success
test SubList.testListIteratorSet([-235047124], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@1a33000, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@63668596, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@1e043732, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@57fdf5d5, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@1799e5f5, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2bc5825b, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@414cd15, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@6478297b, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@4bb81fb7, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@48e0e1bb, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@1a4ee22f, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@9b2f9ff, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-475387349], 0, 1): success
test SubList.testListIteratorSetPrevious([1266966671], 0, 1): success
test SubList.testListIteratorSetPrevious([-777075925], 0, 1): success
test SubList.testListIteratorSetPrevious([-20511346], 0, 1): success
test SubList.testListIteratorSetPrevious([-16427518], 0, 1): success
test SubList.testListIteratorSetPrevious([1007853108], 0, 1): success
test SubList.testListIteratorSetPrevious([-866668974], 0, 1): success
test SubList.testListIteratorSetPrevious([-172387350], 0, 1): success
test SubList.testListIteratorSetPrevious([-1161818040], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@52e3a961, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@573e3ae0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@73c996c1, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@6f6088e1, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@1802b206, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@40420e2a, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@7897b869, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@7645cd1d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@3de938f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@48bb5634, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@800e29, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@70d4a4d3, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@34f6ff05, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@3520173a, 2, 5): success
test SubList.testModAdd(java.util.Vector@22a5283c, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@7350e35c, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@1e5f6802, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4995a788, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3bfa9606, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@3db54d32, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@b1c6585, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5755424, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@4511bd4c, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@a0834bb, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@17ba0c74, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@7e697f24, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@39825a16, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@516f183d, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@651567e4, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7e348881, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@18a2c487, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@b977783, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@66a59b30, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6bd3bdf1, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@262d89f1, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4c208a1b, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@585a7824, 2, 5): success
test SubList.testModClear(java.util.LinkedList@d7b4cee, 2, 5): success
test SubList.testModClear(java.util.Vector@d971e60, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@2e3f653e, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@233fccbb, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@2d052cf7, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@132f5451, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@5a40ef47, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@3d9b45fd, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@ea386d4, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@45546489, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@27ee15c1, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@65044c29, 2, 5): success
test SubList.testModGet(java.util.LinkedList@3c2382c, 2, 5): success
test SubList.testModGet(java.util.Vector@71c4386b, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@1b7dac7b, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@4f345ee6, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@576f02fb, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@3cf42e96, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@9d82260, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@11d39e5e, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@321d356, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@76352a57, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@21e0f37d, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@53ec675d, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@386455d3, 2, 5): success
test SubList.testModHashCode(java.util.Vector@102dc283, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@66aa0433, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@64208664, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7eae07f3, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@3fa80c00, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@61bea84a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1cc14cdc, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@6a340044, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@2b01368e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7fe6d567, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@3fe3e4c5, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@34e7a4d2, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@899fedb, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@4a38bc7f, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@42359cb1, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@c5f9db3, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@9b8db2f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@223d31d2, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@3a59278e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@5f11ead4, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@66e7e0e6, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@6d937414, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@1c49093e, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@125d4db4, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@739bca4b, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@4b1cecb, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@777ff5ad, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@491f5f8c, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@46f0af70, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@2694d0d0, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@7c235074, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4936f0d9, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@4fe59a4a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5d38b317, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@1c66931f, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@320cc959, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@58e880ef, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@426ffa25, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@5efee4d9, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@180638dc, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1c0b1b0a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@3a6c0bec, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1ca9d6ce, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7df251e6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@507ead4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@151d032d, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@e113386, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@1ab78400, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@5fffe9e9, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@7439e79d, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@27cc82b7, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@99dce6e, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2920c620, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@62b3a749, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@764be255, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5b6c1a00, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@2edc04a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4ec6f340, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@1e0a802e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@2c0742eb, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@84d5fc5, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@3430fab8, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@71a82845, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@57fdffe4, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3bf62d0d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@3e3d8fcf, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5959ea2a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@37e2bd51, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@1bd37e6c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@44d93cc6, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@1f16adcd, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@1a44b7f0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@31fa1217, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@65c3384d, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@5a5d44a4, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@433ccfff, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@7cb614bf, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@6aea26c3, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1a783ef8, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@ce1015b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@3fa1b203, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3be2f987, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@2845dfea, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@3e5504ac, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@626ee15a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@70a8902a, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@173c3c48, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@31bc081a, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2efb9850, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@7577d7c3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4625f717, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7eb2aed4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@55ecdccb, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@e301daf, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@7110dede, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@20ae0e1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@64ea60e6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@16d7c571, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@6f6bab10, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7dcab29b, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1fc7f10c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@1242ae6e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@289545bf, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3167b65b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@6f2a7198, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5f67a2c9, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@4b69932e, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@7079361c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@6f47c34f, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@51b0ba6f, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@6e0e60a4, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@57518959, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@61e34978, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@833dfd2, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@27a96435, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7eb3de4b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@1cd195bf, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@563cb869, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@3aed101f, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@36812ae6, 2, 5): success
test SubList.testModRemove(java.util.Vector@79c73b9, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@2994e9d8, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@6106a4bb, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@7acfd240, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@33b62b85, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@1a206c23, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@74a0a4aa, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@3cd361b6, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@79442a6a, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@21cb73f3, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@66e27e86, 2, 5): success
test SubList.testModSet(java.util.LinkedList@7f93783, 2, 5): success
test SubList.testModSet(java.util.Vector@72e300c2, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@4da97442, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@22e4ce5a, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@372cbb50, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@2250d436, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@4f78ef3c, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@5f9ef3da, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@2b387041, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@23b432bc, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@63afde42, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@40950fb7, 2, 5): success
test SubList.testRemove(java.util.LinkedList@453d386c, 2, 5): success
test SubList.testRemove(java.util.Vector@7eddfdcd, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@3201e32e, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@7f5accb3, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@3264fc20, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@22b3518b, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@33d50462, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@298d3058, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-770717865], 0, 1): success
test SubList.testSet([-265861213], 0, 1): success
test SubList.testSet([1677499668], 0, 1): success
test SubList.testSet([19019773], 0, 1): success
test SubList.testSet([526108428], 0, 1): success
test SubList.testSet([-871566859], 0, 1): success
test SubList.testSet([1789979870], 0, 1): success
test SubList.testSet([-1189038567], 0, 1): success
test SubList.testSet([-1897171291], 0, 1): success
test SubList.testSet(java.util.ArrayList@4b2bfa7c, 2, 5): success
test SubList.testSet(java.util.LinkedList@169dc660, 2, 5): success
test SubList.testSet(java.util.Vector@1a8a39f5, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@7097f915, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@315bc1d, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@48453e32, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@759d2cc0, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@3a37225f, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@494e07bf, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@dd4588, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@2272deb8, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@161fb3a3, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@33842f7, 2, 5): success
test SubList.testSubList(java.util.LinkedList@2cb66dc7, 2, 5): success
test SubList.testSubList(java.util.Vector@48138abf, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@76f6b4d6, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@410ea3dd, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@626fdd57, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@270b2457, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@7e4610a8, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@683bb79f, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3b12fae6, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@78be1c34, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5a7b2f6f, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@5cd2c8d5, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1c47ee55, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4e13139, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@5b6d6071, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4844e959, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@3d6ba1f1, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@3d6ba1f1, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@7032a925, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@62b87d6b, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@54c49a83, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@52703bfc, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@26daab3e, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@3842c6df, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@11766fde, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@79ca7525, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@440f2b, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@69296d0f, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@69296d0f, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@51a44cee, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@2e6b44aa, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@4ac9c49b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@75e95484, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@3a07b149, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@4ad51c0d, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3c9a8cf4, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@31581f1, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5d665f5b, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@446c8035, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@446c8035, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@198eb2ec, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1d8c258e, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@1150197e, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4bcf6949, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@6637f01f, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@15399bc7, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@6d3b9059, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@78342dad, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3c2d38e7, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@38b1f46c, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@38b1f46c, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@3105e0fa, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@6813684b, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@580567ac, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@2e03d731, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@d3024eb, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@98b87c1, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@d127470, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@10e6c932, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@c30a25b, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@55cb8206, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@55cb8206, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@3931fa22, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@41aee60e, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@4f4300af, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@55015f1e, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@333be516, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@56495ef8, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1b5ea12d, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@22e01db4, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@4676b5e5, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@36b91abf, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@36b91abf, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@592238e8, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@23229ae3, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@24b46de2, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@31887768, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@7e263967, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@78099ee7, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@6c461438, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@2be47441, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1b7470d5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1701df7, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1701df7, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@6b406c56, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@661833c3, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7bc67efa, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@44fa7e46, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@3aeea040, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2a2f29f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6e7264f1, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@69070211, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@549f35d7, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@51f81bb, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@51f81bb, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@12b5ce57, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@6c96b70d, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@393fcb11, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7fb6d740, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@8cba2f, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@241e4c6c, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3d88f2ca, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@3262b55c, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3fefce0c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@3ec2ba72, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1c2d4828, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2576524, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@5ac91bd, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@30f77362, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@7f2f65bb, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1d5bd60d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1d958e92, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@7d4d82fe, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@3e6711f7, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@41a1760a, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@41a1760a, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@551490f8, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@42f8676e, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@76311823, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@1535f979, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
