#Test Results (version 2)
#Tue Mar 05 01:41:38 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
author=Mike Duigou
keywords=bug8010122 bug8004518 bug8024331 bug8024688 testng
run=USER_SPECIFIED testng Defaults\n
source=Defaults.java
title=Test Map default methods

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
elapsed=6068 0\:00\:06.068
end=Tue Mar 05 01\:41\:38 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.23
javatestOS=Mac OS X 13.6.4 (x86_64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Tue Mar 05 01\:41\:32 UTC 2024
test=java/util/Map/Defaults.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.4,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.4
totalTime=6069
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Map

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733, mixed mode, sharing)

#section:build
----------messages:(7/205)----------
command: build Defaults
reason: Named class compiled on demand
started: Tue Mar 05 01:41:37 UTC 2024
Test directory:
  compile: Defaults
finished: Tue Mar 05 01:41:37 UTC 2024
elapsed time (seconds): 0.29
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:41:37 UTC 2024
Mode: agentvm
Agent id: 2
finished: Tue Mar 05 01:41:37 UTC 2024
elapsed time (seconds): 0.289
----------configuration:(13/951)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3399)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Map/Defaults.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
----------direct:(12/1026)----------
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:624: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(0L), map.compute(new Long(3L), fun));
                                                   ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:625: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(3L), map.compute(new Long(3L), fun));
                                                   ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:626: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(6L), map.compute(new Long(3L), fun));
                                                   ^
Note: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 warnings
result: Passed. Compilation successful

#section:testng
----------messages:(7/210)----------
command: testng Defaults
reason: User specified action: run testng Defaults 
started: Tue Mar 05 01:41:37 UTC 2024
Mode: agentvm
Agent id: 6
finished: Tue Mar 05 01:41:38 UTC 2024
elapsed time (seconds): 0.773
----------configuration:(13/943)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map

----------rerun:(26/2973)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Map/Defaults.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/Map/Defaults.java false Defaults
----------System.out:(518/56899)----------
test Defaults.testCompute("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1abd539d): success
test Defaults.testCompute("Hashtable", java.util.Hashtable@23e04104): success
test Defaults.testCompute("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@968dd42): success
test Defaults.testCompute("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2508ca3c): success
test Defaults.testCompute("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1d50b3bc): success
test Defaults.testCompute("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@6c8cab1): success
test Defaults.testCompute("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@2bd0e720): success
test Defaults.testCompute("HashMap", java.util.HashMap@2abae377): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@1faf888): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@4d0a8244): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5b78a72a): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4855d779): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@1d3a2181): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6435c007): success
test Defaults.testCompute("HashMap", java.util.HashMap@5c6db987): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@3704ebaa): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@6aeded1b): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@6b87e94c): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@40c7f2b3): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@c37887f): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@799117bf): success
test Defaults.testCompute("EnumMap", java.util.EnumMap@79d73df3): success
test Defaults.testCompute("TreeMap", java.util.TreeMap@23379b82): success
test Defaults.testCompute("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@551be6ef): success
test Defaults.testCompute("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@6dfb6741): success
test Defaults.testComputeIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@22caf7c7): success
test Defaults.testComputeIfAbsent("Hashtable", java.util.Hashtable@35d6a843): success
test Defaults.testComputeIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4dde0617): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@151dfaff): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6d9e1e81): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@12f73a93): success
test Defaults.testComputeIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@19cdc206): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@45554779): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@4e17d91a): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@15de26a7): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6437b456): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@5a2764cc): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@ce30c2c): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5420f0c4): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@7c81ac49): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@53ca30a8): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@58f0c83d): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@f2ad321): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@4684d42): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3e6f99d0): success
test Defaults.testComputeIfAbsent("EnumMap", java.util.EnumMap@54e32c9c): success
test Defaults.testComputeIfAbsent("TreeMap", java.util.TreeMap@6f052c6e): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@615af335): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@65fdfc58): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@35a6ce7e): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@264355c2): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@256065ee): success
test Defaults.testComputeIfAbsentNullFunction("Hashtable", java.util.Hashtable@328a5c31): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2428a251): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@398abeff): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@555bfb32): success
test Defaults.testComputeIfAbsentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4e6d1074): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@dcb6fe7): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@4d296ca7): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@16fa331a): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@7051cc16): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6515a86a): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@6eb9a827): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@543aafca): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@44cbb1b5): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@f61f14a): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5e692d8b): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@26bee36c): success
test Defaults.testComputeIfAbsentNullFunction("TreeMap", java.util.TreeMap@77214a64): success
test Defaults.testComputeIfAbsentNullFunction("EnumMap", java.util.EnumMap@1466f109): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@f501a4f): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@316cc62d): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@78b7b4c4): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@53a5725): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@75bd8648): success
test Defaults.testComputeIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@58860b75): success
test Defaults.testComputeIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@5e365052): success
test Defaults.testComputeIfAbsentNulls("HashMap", java.util.HashMap@5a8e33e3): success
test Defaults.testComputeIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@483c2941): success
test Defaults.testComputeIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@c8eebb): success
test Defaults.testComputeIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7656aac0): success
test Defaults.testComputeIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1ce86dba): success
test Defaults.testComputeIfPresent("Hashtable", java.util.Hashtable@2f845f8d): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@24f280d): success
test Defaults.testComputeIfPresent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@384791d3): success
test Defaults.testComputeIfPresent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@70e071ad): success
test Defaults.testComputeIfPresent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@61060793): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@537df1e4): success
test Defaults.testComputeIfPresent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@28d8b08a): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@692bcdb5): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@274661c0): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@1e611342): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@717b409e): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@30464aa5): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@9358903): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@415a0623): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@203b0da8): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@1240fbdf): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@23984e77): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@2816c78e): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@667b6bfb): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@57d789ee): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@65494b4): success
test Defaults.testComputeIfPresent("EnumMap", java.util.EnumMap@1bcdbbe): success
test Defaults.testComputeIfPresent("TreeMap", java.util.TreeMap@58686e9c): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@11d1e993): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@365b709f): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6b7ed217): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@f4ad4c0): success
test Defaults.testComputeIfPresentNullFunction("Hashtable", java.util.Hashtable@5c6defac): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@37323e80): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@25671d46): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7e842dcb): success
test Defaults.testComputeIfPresentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1a4862f2): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@1419b55e): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@61df3cd0): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@20e236eb): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7a659835): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1108132a): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@3b64ae6f): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@40cdc9a4): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@5a97228b): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@7a59a454): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@26b6ba3): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@645a177d): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1821239c): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3fb927f0): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@4be978af): success
test Defaults.testComputeIfPresentNullFunction("TreeMap", java.util.TreeMap@eccde70): success
test Defaults.testComputeIfPresentNullFunction("EnumMap", java.util.EnumMap@55745625): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@54da0e9b): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@22fd9133): success
test Defaults.testComputeIfPresentNulls("IdentityHashMap", java.util.IdentityHashMap@1b0031d8): success
test Defaults.testComputeIfPresentNulls("WeakHashMap", java.util.WeakHashMap@5278b5bf): success
test Defaults.testComputeIfPresentNulls("HashMap", java.util.HashMap@5b2f83b4): success
test Defaults.testComputeIfPresentNulls("LinkedHashMap", java.util.LinkedHashMap@13ea8dde): success
test Defaults.testComputeIfPresentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@69f2e692): success
test Defaults.testComputeIfPresentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@45718b26): success
test Defaults.testComputeIfPresentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7f7dd32d): success
test Defaults.testComputeNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@7b5af45e): success
test Defaults.testComputeNullFunction("Hashtable", java.util.Hashtable@27cd6bf3): success
test Defaults.testComputeNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@78b60047): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@48aa2c74): success
test Defaults.testComputeNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@76391141): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@2f2a8e6f): success
test Defaults.testComputeNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@10439efb): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@7eb2b21b): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@4dbeb029): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@5b66c65b): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@25004484): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@237801cd): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@398b0a7c): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@643d4ebf): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@997264f): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5593e8c9): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@38d4cfee): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@677bc4ac): success
test Defaults.testComputeNullFunction("TreeMap", java.util.TreeMap@412b1f0): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@69b8d900): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@33cedb95): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@87857e3): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@37041b7a): success
test Defaults.testComputeNullFunction("EnumMap", java.util.EnumMap@6e178454): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@517e94c0): success
test Defaults.testComputeNulls("IdentityHashMap", java.util.IdentityHashMap@5a9b4d89): success
test Defaults.testComputeNulls("WeakHashMap", java.util.WeakHashMap@13dc112b): success
test Defaults.testComputeNulls("LinkedHashMap", java.util.LinkedHashMap@404d189f): success
test Defaults.testComputeNulls("HashMap", java.util.HashMap@195aaf96): success
test Defaults.testComputeNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@38987332): success
test Defaults.testComputeNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@b9d99d2): success
test Defaults.testComputeNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4100acbe): success
test Defaults.testConcurrentMap_computeIfAbsent_racy(): success
test Defaults.testConcurrentMap_computeIfPresent_racy(): success
test Defaults.testConcurrentMap_compute_racy(): success
test Defaults.testConcurrentMap_compute_simple(): success
test Defaults.testConcurrentMap_merge_racy(): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@61e66aa3): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@4d15ed9f): success
test Defaults.testForEach("Hashtable", java.util.Hashtable@e48e01a): success
test Defaults.testForEach("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@66fb6a32): success
test Defaults.testForEach("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2ac12772): success
test Defaults.testForEach("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@adc2e6e): success
test Defaults.testForEach("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7c15b93b): success
test Defaults.testForEach("HashMap", java.util.HashMap@28460fb6): success
test Defaults.testForEach("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@50609899): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@115d92a2): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@23664f4a): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@4ba1566f): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@27c66009): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6bfc2d49): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@697b058d): success
test Defaults.testForEach("HashMap", java.util.HashMap@3d28b300): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@58d8e8f7): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3f6f652d): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4be12455): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@5a5d459c): success
test Defaults.testForEach("EnumMap", java.util.EnumMap@476b1c82): success
test Defaults.testForEach("TreeMap", java.util.TreeMap@7ae0e998): success
test Defaults.testForEach("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@c9440d): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@c5fc995): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@954fac2): success
test Defaults.testForEach("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@bd3d206): success
test Defaults.testForEach("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@7fdb19cf): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@433b1563): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@487bd88a): success
test Defaults.testGetOrDefault("Hashtable", java.util.Hashtable@8eddc7): success
test Defaults.testGetOrDefault("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3b43a84a): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@b4a1a6f): success
test Defaults.testGetOrDefault("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7c5be44): success
test Defaults.testGetOrDefault("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@279c8000): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@2106753e): success
test Defaults.testGetOrDefault("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@461cf405): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@525d797a): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@721fe3e): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@2061f58): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@13607341): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@41b3d7fc): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@22b9e741): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@334e7c40): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@734f8c0e): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6229e017): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7a7ea271): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@334567a7): success
test Defaults.testGetOrDefault("EnumMap", java.util.EnumMap@4a771054): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@4bce59ab): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@946d2b1): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@36ec3ff0): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@70b85281): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@770193f8): success
test Defaults.testGetOrDefault("TreeMap", java.util.TreeMap@25268035): success
test Defaults.testGetOrDefaultNulls("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@6378ddbe): success
test Defaults.testGetOrDefaultNulls("HashMap", java.util.HashMap@14f58a81): success
test Defaults.testGetOrDefaultNulls("IdentityHashMap", java.util.IdentityHashMap@4636590f): success
test Defaults.testGetOrDefaultNulls("LinkedHashMap", java.util.LinkedHashMap@2e59d229): success
test Defaults.testGetOrDefaultNulls("WeakHashMap", java.util.WeakHashMap@5886e2fe): success
test Defaults.testGetOrDefaultNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@8805d1f): success
test Defaults.testGetOrDefaultNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@44fb418c): success
test Defaults.testGetOrDefaultNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7ecdcef): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@23ade86a, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@4488891c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@169e750b, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@630df0ed, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@417e491b, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2af7735c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@72673fd1, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@e595b5b, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@71915a4a, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@30ac5071, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@63b4c60d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4caa70a, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5a761088, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5224f115, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@8107e6f, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3220fa2, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@2eadf516, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@67386eda, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@de64cc6, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@3bca7446, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@39260b0e, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2bb17edb, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@335a35ea, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@620b9082, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@76cf021, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@222226bb, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@223239a, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@3d6bdbe3, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@14eb8268, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@11f2beb7, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4cc78ef4, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4f645160, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@580d66b7, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@1c77eb70, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@7e611d5d, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@6b06b77, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1968d223, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@183cff0e, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2f4f41a0, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5060ba80, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1562392, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@4c6f430b, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@52734d2c, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@2289cc36, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@5375caa5, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7d97a32a, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@13e1087e, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@9c75d28, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1e218919, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@3c1d54b8, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@573b7571, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@42a63379, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@6ad3c77c, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@259be454, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@e28e360, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2f4bae2f, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2d1cf49c, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@60b79045, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@46e88d7e, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@3e378af7, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@2ea56b42, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@17c19e38, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1572ff9b, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6759b049, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@5083af3e, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@7bb6efaa, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@69328834, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@b901db6, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@73ec22d6, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@ddbcb03, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@79253e15, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@53cc330b, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@756c6f04, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4d69b2fe, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@120b2117, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMergeNullMerger("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1624bed7): success
test Defaults.testMergeNullMerger("Hashtable", java.util.Hashtable@71a5a32d): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@219dc0af): success
test Defaults.testMergeNullMerger("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@3eb2a136): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@424ff529): success
test Defaults.testMergeNullMerger("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1daf4e00): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@c29546e): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@2e25d5c8): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@6f18dff3): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@367eb0b6): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@212d1a94): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@593930b3): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7f8fab0d): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@4eba342f): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@5c92443b): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@4d145e55): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@292da459): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5e3dd720): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@60a0ca94): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@f3720bc): success
test Defaults.testMergeNullMerger("TreeMap", java.util.TreeMap@1d38858d): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@518a6df3): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7743ba8d): success
test Defaults.testMergeNullMerger("EnumMap", java.util.EnumMap@51dee8fe): success
test Defaults.testMergeNullMerger("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@20cac9c1): success
test Defaults.testPutIfAbsent("Hashtable", java.util.Hashtable@a59208d): success
test Defaults.testPutIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5880c347): success
test Defaults.testPutIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@3c5d132): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5a94637f): success
test Defaults.testPutIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@51658a6e): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@6b6ecdf8): success
test Defaults.testPutIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@583bb5bf): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@1d065e8b): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@61d0ef9c): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@20ede5a7): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4b642ab6): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@19bdc97c): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@42f8db09): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@7ae5e2e0): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@73f01e3b): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@28ee1212): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@79590132): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1ba96944): success
test Defaults.testPutIfAbsent("EnumMap", java.util.EnumMap@79923633): success
test Defaults.testPutIfAbsent("TreeMap", java.util.TreeMap@10588055): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@38640b09): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2b4bd5f9): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1107c7b2): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@22d72446): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2af8b48e): success
test Defaults.testPutIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@406175d0): success
test Defaults.testPutIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@169081c3): success
test Defaults.testPutIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@70a1e963): success
test Defaults.testPutIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1f9d6c75): success
test Defaults.testPutIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1bc95b3a): success
test Defaults.testPutIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3c90ef69): success
test Defaults.testPutIfAbsentNulls("HashMap", java.util.HashMap@454de01e): success
test Defaults.testRemove("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@668206de): success
test Defaults.testRemove("Hashtable", java.util.Hashtable@1d960d6e): success
test Defaults.testRemove("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5e2b5506): success
test Defaults.testRemove("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@f975d4b): success
test Defaults.testRemove("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6f56f768): success
test Defaults.testRemove("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3dc4f29e): success
test Defaults.testRemove("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4e625fc6): success
test Defaults.testRemove("HashMap", java.util.HashMap@19754fce): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@321d740f): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@73207e34): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@18d38fe0): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5cab0755): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1f165f3d): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2ec3a176): success
test Defaults.testRemove("HashMap", java.util.HashMap@4eaa5770): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@7cf9f8a5): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@f5f55fd): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@2e6bfd53): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3e1a7aef): success
test Defaults.testRemove("EnumMap", java.util.EnumMap@27bf0ce5): success
test Defaults.testRemove("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1f8f57d9): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@7f39a072): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@584845f5): success
test Defaults.testRemove("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@6f70aab2): success
test Defaults.testRemove("TreeMap", java.util.TreeMap@4299ca75): success
test Defaults.testRemoveNulls("HashMap", java.util.HashMap@635f5e76): success
test Defaults.testRemoveNulls("LinkedHashMap", java.util.LinkedHashMap@4425ed3f): success
test Defaults.testRemoveNulls("IdentityHashMap", java.util.IdentityHashMap@1957b30f): success
test Defaults.testRemoveNulls("WeakHashMap", java.util.WeakHashMap@46ec24fa): success
test Defaults.testRemoveNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@56182e40): success
test Defaults.testRemoveNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3322d7e3): success
test Defaults.testRemoveNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@141586e2): success
test Defaults.testReplaceAll("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@58cc53f9): success
test Defaults.testReplaceAll("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@4d300087): success
test Defaults.testReplaceAll("Hashtable", java.util.Hashtable@7872c9c7): success
test Defaults.testReplaceAll("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@437a11bf): success
test Defaults.testReplaceAll("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@42e755df): success
test Defaults.testReplaceAll("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@66d77895): success
test Defaults.testReplaceAll("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@24762d87): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@69f21246): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@48cac6de): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@58ce2b08): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@c21c267): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@49c03472): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@3b6a2764): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@7489d171): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@185d3688): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5cf6c1b6): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@4fd69086): success
test Defaults.testReplaceAll("EnumMap", java.util.EnumMap@64ed05cb): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6aadad94): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@64a67dcd): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@24509ef2): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@63f9c570): success
test Defaults.testReplaceAll("TreeMap", java.util.TreeMap@3209b3cd): success
test Defaults.testReplaceAll("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1c134a74): success
test Defaults.testReplaceAll("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@6f8d1c75): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@e881003): success
test Defaults.testReplaceAllNoNullReplacement("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@13e753cf): success
test Defaults.testReplaceAllNoNullReplacement("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@4853934b): success
test Defaults.testReplaceAllNoNullReplacement("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1487c13c): success
test Defaults.testReplaceAllNoNullReplacement("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@71be62ce): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@38b74f3b): success
test Defaults.testReplaceAllNoNullReplacement("Hashtable", java.util.Hashtable@2d8829f2): success
test Defaults.testReplaceKV("Hashtable", java.util.Hashtable@61ff9db3): success
test Defaults.testReplaceKV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@682564f9): success
test Defaults.testReplaceKV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@660465fb): success
test Defaults.testReplaceKV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6049b734): success
test Defaults.testReplaceKV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@761a6db0): success
test Defaults.testReplaceKV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@20e7e661): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@2ef1831b): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@50cfc0f1): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@20c29788): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@29186ec2): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@2b0af141): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@112892c8): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@27396fc0): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@11f2caca): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@16540e8b): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2174bd0f): success
test Defaults.testReplaceKV("EnumMap", java.util.EnumMap@3727678b): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@20a95ee1): success
test Defaults.testReplaceKV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@101f9fd3): success
test Defaults.testReplaceKV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@65a10cc): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@18fba0b8): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@6a37fb7a): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@40ed68c7): success
test Defaults.testReplaceKV("TreeMap", java.util.TreeMap@4716908f): success
test Defaults.testReplaceKV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1a4df9fc): success
test Defaults.testReplaceKVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@97c1619): success
test Defaults.testReplaceKVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@19359990): success
test Defaults.testReplaceKVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7181b13): success
test Defaults.testReplaceKVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@3e2d307e): success
test Defaults.testReplaceKVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@237f608a): success
test Defaults.testReplaceKVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1ffb9754): success
test Defaults.testReplaceKVNoNulls("Hashtable", java.util.Hashtable@3e0c96a2): success
test Defaults.testReplaceKVNulls("HashMap", java.util.HashMap@75fb5028): success
test Defaults.testReplaceKVNulls("IdentityHashMap", java.util.IdentityHashMap@2509cac3): success
test Defaults.testReplaceKVNulls("LinkedHashMap", java.util.LinkedHashMap@4fdc9465): success
test Defaults.testReplaceKVNulls("WeakHashMap", java.util.WeakHashMap@35d8ce4b): success
test Defaults.testReplaceKVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3ff2d5eb): success
test Defaults.testReplaceKVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@64ba3bee): success
test Defaults.testReplaceKVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@78e171ae): success
test Defaults.testReplaceKVV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@b06ed1a): success
test Defaults.testReplaceKVV("Hashtable", java.util.Hashtable@3a61c26e): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@67f3e870): success
test Defaults.testReplaceKVV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1f6af765): success
test Defaults.testReplaceKVV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@72fc5a9e): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@49809355): success
test Defaults.testReplaceKVV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4b8a5de2): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@1cc75fb1): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@6300283a): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@4f751e7e): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@4a3be721): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7bbb69fd): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7b5cc855): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2a14186e): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@26cee24b): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@5e57fd5e): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@4aed10c7): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@17a2656a): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@4b69e61): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@33c150a5): success
test Defaults.testReplaceKVV("EnumMap", java.util.EnumMap@1b73371a): success
test Defaults.testReplaceKVV("TreeMap", java.util.TreeMap@46e11d04): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2e5a46c3): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6f4383ee): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2b8c533): success
test Defaults.testReplaceKVVNoNulls("Hashtable", java.util.Hashtable@bab249): success
test Defaults.testReplaceKVVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@53bf2e62): success
test Defaults.testReplaceKVVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@10a2903d): success
test Defaults.testReplaceKVVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@6276bf92): success
test Defaults.testReplaceKVVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6350aeee): success
test Defaults.testReplaceKVVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@4281e854): success
test Defaults.testReplaceKVVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@3747dc21): success
test Defaults.testReplaceKVVNulls("IdentityHashMap", java.util.IdentityHashMap@c03c2b9): success
test Defaults.testReplaceKVVNulls("HashMap", java.util.HashMap@2a84752e): success
test Defaults.testReplaceKVVNulls("LinkedHashMap", java.util.LinkedHashMap@548b5cc6): success
test Defaults.testReplaceKVVNulls("WeakHashMap", java.util.WeakHashMap@799a499c): success
test Defaults.testReplaceKVVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7a2f9bb8): success
test Defaults.testReplaceKVVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6ad23a0b): success
test Defaults.testReplaceKVVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@148408e0): success

===============================================
java/util/Map/Defaults.java
Total tests run: 512, Passes: 512, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
