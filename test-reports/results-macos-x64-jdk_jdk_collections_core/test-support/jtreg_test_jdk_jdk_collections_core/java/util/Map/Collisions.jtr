#Test Results (version 2)
#Thu Feb 29 23:43:27 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Collisions.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug7126277 othervm testng
run=USER_SPECIFIED testng/othervm -Dtest.map.collisions.shortrun\=true Collisions\n
source=Collisions.java
title=Ensure Maps behave well with lots of hashCode() collisions.

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Collisions.java
elapsed=15014 0\:00\:15.014
end=Thu Feb 29 23\:43\:27 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.4 (x86_64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Thu Feb 29 23\:43\:12 UTC 2024
test=java/util/Map/Collisions.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.4,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.4
totalTime=15015
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Map

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be, mixed mode, sharing)

#section:build
----------messages:(7/210)----------
command: build Collisions
reason: Named class compiled on demand
started: Thu Feb 29 23:43:12 UTC 2024
Test directory:
  compile: Collisions
finished: Thu Feb 29 23:43:13 UTC 2024
elapsed time (seconds): 0.135
result: Passed. Build successful

#section:compile
----------messages:(7/274)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Collisions.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:43:12 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 23:43:13 UTC 2024
elapsed time (seconds): 0.135
----------configuration:(13/953)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Collisions.d
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3415)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Map/Collisions.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Collisions.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Collisions.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Collisions.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Collisions.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Collisions.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Collisions.d:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Collisions.java
result: Passed. Compilation successful

#section:testng
----------messages:(6/304)----------
command: testng -Dtest.map.collisions.shortrun=true Collisions
reason: User specified action: run testng/othervm -Dtest.map.collisions.shortrun=true Collisions 
started: Thu Feb 29 23:43:13 UTC 2024
Mode: othervm [/othervm specified]
finished: Thu Feb 29 23:43:27 UTC 2024
elapsed time (seconds): 14.878
----------configuration:(0/0)----------
----------System.out:(186/28833)----------
test Collisions.testEntriesIteratorRemove("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@324723e3, 2500): success
test Collisions.testEntriesIteratorRemove("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5016fe79, 2500): success
test Collisions.testEntriesIteratorRemove("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@398c1cf0, 2500): success
test Collisions.testEntriesIteratorRemove("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@251d9548, 2500): success
test Collisions.testEntriesIteratorRemove("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@569d341e, 2500): success
test Collisions.testEntriesIteratorRemove("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@39af2131, 2500): success
test Collisions.testEntriesIteratorRemove("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@15c30bd5, 2500): success
test Collisions.testEntriesIteratorRemove("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5dcc9e2e, 2500): success
test Collisions.testEntriesIteratorRemove("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@605685c7, 2500): success
test Collisions.testEntriesIteratorRemove("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@57ad88bf, 2500): success
test Collisions.testEntriesIteratorRemove("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3cf78f29, 2500): success
test Collisions.testEntriesIteratorRemove("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@20fddd8d, 2500): success
test Collisions.testEntriesIteratorRemove("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@350f1dcc, 2500): success
test Collisions.testEntriesIteratorRemove("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@74edd1fc, 2500): success
test Collisions.testEntriesIteratorRemove("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@2678f53d, 2500): success
test Collisions.testEntriesIteratorRemove("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3edf0c91, 2500): success
test Collisions.testEntriesIteratorRemove("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6f0007e8, 2500): success
test Collisions.testEntriesIteratorRemove("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@1a00ff9c, 2500): success
test Collisions.testEntriesIteratorRemove("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@76d59d4d, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3537fdb0, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@da21092, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@653620d4, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6de32380, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@1be84222, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3bb1aa6e, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6ad2343a, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@501bf8ab, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@20f52db, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4493ba13, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4f69ea6c, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@56950ecb, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@26161e1f, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@23e23efe, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5b0c9b51, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4abed9f1, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@78ca5dee, "Extra Value"): success
test Collisions.testIntegerIteration("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@324723e3, 2500): success
test Collisions.testIntegerIteration("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5016fe79, 2500): success
test Collisions.testIntegerIteration("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@398c1cf0, 2500): success
test Collisions.testIntegerIteration("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@251d9548, 2500): success
test Collisions.testIntegerIteration("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@569d341e, 2500): success
test Collisions.testIntegerIteration("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@39af2131, 2500): success
test Collisions.testIntegerIteration("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@15c30bd5, 2500): success
test Collisions.testIntegerIteration("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5dcc9e2e, 2500): success
test Collisions.testIntegerIteration("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@605685c7, 2500): success
test Collisions.testIntegerIteration("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@57ad88bf, 2500): success
test Collisions.testIntegerIteration("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3cf78f29, 2500): success
test Collisions.testIntegerIteration("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@20fddd8d, 2500): success
test Collisions.testIntegerIteration("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@350f1dcc, 2500): success
test Collisions.testIntegerIteration("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@74edd1fc, 2500): success
test Collisions.testIntegerIteration("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@2678f53d, 2500): success
test Collisions.testIntegerIteration("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3edf0c91, 2500): success
test Collisions.testIntegerIteration("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6f0007e8, 2500): success
test Collisions.testIntegerIteration("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@1a00ff9c, 2500): success
test Collisions.testKeysIteratorRemove("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@324723e3, 2500): success
test Collisions.testKeysIteratorRemove("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5016fe79, 2500): success
test Collisions.testKeysIteratorRemove("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@398c1cf0, 2500): success
test Collisions.testKeysIteratorRemove("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@251d9548, 2500): success
test Collisions.testKeysIteratorRemove("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@569d341e, 2500): success
test Collisions.testKeysIteratorRemove("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@39af2131, 2500): success
test Collisions.testKeysIteratorRemove("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@15c30bd5, 2500): success
test Collisions.testKeysIteratorRemove("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5dcc9e2e, 2500): success
test Collisions.testKeysIteratorRemove("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@605685c7, 2500): success
test Collisions.testKeysIteratorRemove("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@57ad88bf, 2500): success
test Collisions.testKeysIteratorRemove("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3cf78f29, 2500): success
test Collisions.testKeysIteratorRemove("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@20fddd8d, 2500): success
test Collisions.testKeysIteratorRemove("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@350f1dcc, 2500): success
test Collisions.testKeysIteratorRemove("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@74edd1fc, 2500): success
test Collisions.testKeysIteratorRemove("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@2678f53d, 2500): success
test Collisions.testKeysIteratorRemove("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3edf0c91, 2500): success
test Collisions.testKeysIteratorRemove("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6f0007e8, 2500): success
test Collisions.testKeysIteratorRemove("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@1a00ff9c, 2500): success
test Collisions.testKeysIteratorRemove("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@76d59d4d, "Extra Value"): success
test Collisions.testKeysIteratorRemove("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3537fdb0, "Extra Value"): success
test Collisions.testKeysIteratorRemove("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@da21092, "Extra Value"): success
test Collisions.testKeysIteratorRemove("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@653620d4, "Extra Value"): success
test Collisions.testKeysIteratorRemove("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6de32380, "Extra Value"): success
test Collisions.testKeysIteratorRemove("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@1be84222, "Extra Value"): success
test Collisions.testKeysIteratorRemove("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3bb1aa6e, "Extra Value"): success
test Collisions.testKeysIteratorRemove("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6ad2343a, "Extra Value"): success
test Collisions.testKeysIteratorRemove("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@501bf8ab, "Extra Value"): success
test Collisions.testKeysIteratorRemove("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@20f52db, "Extra Value"): success
test Collisions.testKeysIteratorRemove("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4493ba13, "Extra Value"): success
test Collisions.testKeysIteratorRemove("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4f69ea6c, "Extra Value"): success
test Collisions.testKeysIteratorRemove("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@56950ecb, "Extra Value"): success
test Collisions.testKeysIteratorRemove("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@26161e1f, "Extra Value"): success
test Collisions.testKeysIteratorRemove("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@23e23efe, "Extra Value"): success
test Collisions.testKeysIteratorRemove("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5b0c9b51, "Extra Value"): success
test Collisions.testKeysIteratorRemove("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4abed9f1, "Extra Value"): success
test Collisions.testKeysIteratorRemove("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@78ca5dee, "Extra Value"): success
test Collisions.testRemove("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@324723e3, 2500): success
test Collisions.testRemove("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5016fe79, 2500): success
test Collisions.testRemove("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@398c1cf0, 2500): success
test Collisions.testRemove("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@251d9548, 2500): success
test Collisions.testRemove("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@569d341e, 2500): success
test Collisions.testRemove("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@39af2131, 2500): success
test Collisions.testRemove("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@15c30bd5, 2500): success
test Collisions.testRemove("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5dcc9e2e, 2500): success
test Collisions.testRemove("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@605685c7, 2500): success
test Collisions.testRemove("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@57ad88bf, 2500): success
test Collisions.testRemove("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3cf78f29, 2500): success
test Collisions.testRemove("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@20fddd8d, 2500): success
test Collisions.testRemove("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@350f1dcc, 2500): success
test Collisions.testRemove("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@74edd1fc, 2500): success
test Collisions.testRemove("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@2678f53d, 2500): success
test Collisions.testRemove("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3edf0c91, 2500): success
test Collisions.testRemove("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6f0007e8, 2500): success
test Collisions.testRemove("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@1a00ff9c, 2500): success
test Collisions.testRemove("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@76d59d4d, "Extra Value"): success
test Collisions.testRemove("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3537fdb0, "Extra Value"): success
test Collisions.testRemove("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@da21092, "Extra Value"): success
test Collisions.testRemove("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@653620d4, "Extra Value"): success
test Collisions.testRemove("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6de32380, "Extra Value"): success
test Collisions.testRemove("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@1be84222, "Extra Value"): success
test Collisions.testRemove("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3bb1aa6e, "Extra Value"): success
test Collisions.testRemove("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6ad2343a, "Extra Value"): success
test Collisions.testRemove("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@501bf8ab, "Extra Value"): success
test Collisions.testRemove("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@20f52db, "Extra Value"): success
test Collisions.testRemove("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4493ba13, "Extra Value"): success
test Collisions.testRemove("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4f69ea6c, "Extra Value"): success
test Collisions.testRemove("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@56950ecb, "Extra Value"): success
test Collisions.testRemove("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@26161e1f, "Extra Value"): success
test Collisions.testRemove("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@23e23efe, "Extra Value"): success
test Collisions.testRemove("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5b0c9b51, "Extra Value"): success
test Collisions.testRemove("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4abed9f1, "Extra Value"): success
test Collisions.testRemove("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@78ca5dee, "Extra Value"): success
test Collisions.testStringIteration("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@76d59d4d, "Extra Value"): success
test Collisions.testStringIteration("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3537fdb0, "Extra Value"): success
test Collisions.testStringIteration("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@da21092, "Extra Value"): success
test Collisions.testStringIteration("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@653620d4, "Extra Value"): success
test Collisions.testStringIteration("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6de32380, "Extra Value"): success
test Collisions.testStringIteration("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@1be84222, "Extra Value"): success
test Collisions.testStringIteration("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3bb1aa6e, "Extra Value"): success
test Collisions.testStringIteration("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6ad2343a, "Extra Value"): success
test Collisions.testStringIteration("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@501bf8ab, "Extra Value"): success
test Collisions.testStringIteration("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@20f52db, "Extra Value"): success
test Collisions.testStringIteration("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4493ba13, "Extra Value"): success
test Collisions.testStringIteration("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4f69ea6c, "Extra Value"): success
test Collisions.testStringIteration("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@56950ecb, "Extra Value"): success
test Collisions.testStringIteration("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@26161e1f, "Extra Value"): success
test Collisions.testStringIteration("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@23e23efe, "Extra Value"): success
test Collisions.testStringIteration("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5b0c9b51, "Extra Value"): success
test Collisions.testStringIteration("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4abed9f1, "Extra Value"): success
test Collisions.testStringIteration("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@78ca5dee, "Extra Value"): success
test Collisions.testValuesIteratorRemove("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@324723e3, 2500): success
test Collisions.testValuesIteratorRemove("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5016fe79, 2500): success
test Collisions.testValuesIteratorRemove("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@398c1cf0, 2500): success
test Collisions.testValuesIteratorRemove("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@251d9548, 2500): success
test Collisions.testValuesIteratorRemove("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@569d341e, 2500): success
test Collisions.testValuesIteratorRemove("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@39af2131, 2500): success
test Collisions.testValuesIteratorRemove("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@15c30bd5, 2500): success
test Collisions.testValuesIteratorRemove("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5dcc9e2e, 2500): success
test Collisions.testValuesIteratorRemove("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@605685c7, 2500): success
test Collisions.testValuesIteratorRemove("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@57ad88bf, 2500): success
test Collisions.testValuesIteratorRemove("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3cf78f29, 2500): success
test Collisions.testValuesIteratorRemove("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@20fddd8d, 2500): success
test Collisions.testValuesIteratorRemove("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@350f1dcc, 2500): success
test Collisions.testValuesIteratorRemove("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@74edd1fc, 2500): success
test Collisions.testValuesIteratorRemove("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@2678f53d, 2500): success
test Collisions.testValuesIteratorRemove("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3edf0c91, 2500): success
test Collisions.testValuesIteratorRemove("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6f0007e8, 2500): success
test Collisions.testValuesIteratorRemove("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x0000000125023848@1a00ff9c, 2500): success
test Collisions.testValuesIteratorRemove("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@76d59d4d, "Extra Value"): success
test Collisions.testValuesIteratorRemove("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3537fdb0, "Extra Value"): success
test Collisions.testValuesIteratorRemove("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@da21092, "Extra Value"): success
test Collisions.testValuesIteratorRemove("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@653620d4, "Extra Value"): success
test Collisions.testValuesIteratorRemove("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6de32380, "Extra Value"): success
test Collisions.testValuesIteratorRemove("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@1be84222, "Extra Value"): success
test Collisions.testValuesIteratorRemove("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@3bb1aa6e, "Extra Value"): success
test Collisions.testValuesIteratorRemove("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@6ad2343a, "Extra Value"): success
test Collisions.testValuesIteratorRemove("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@501bf8ab, "Extra Value"): success
test Collisions.testValuesIteratorRemove("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@20f52db, "Extra Value"): success
test Collisions.testValuesIteratorRemove("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4493ba13, "Extra Value"): success
test Collisions.testValuesIteratorRemove("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4f69ea6c, "Extra Value"): success
test Collisions.testValuesIteratorRemove("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@56950ecb, "Extra Value"): success
test Collisions.testValuesIteratorRemove("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@26161e1f, "Extra Value"): success
test Collisions.testValuesIteratorRemove("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@23e23efe, "Extra Value"): success
test Collisions.testValuesIteratorRemove("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@5b0c9b51, "Extra Value"): success
test Collisions.testValuesIteratorRemove("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@4abed9f1, "Extra Value"): success
test Collisions.testValuesIteratorRemove("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x0000000125023848@78ca5dee, "Extra Value"): success

===============================================
java/util/Map/Collisions.java
Total tests run: 180, Passes: 180, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(35/3611)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
CLASSPATH=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Collisions.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Map/Collisions.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Collisions.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Collisions.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Collisions.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Collisions.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.map.collisions.shortrun=true \\
        com.sun.javatest.regtest.agent.MainWrapper /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Map/Collisions.d/testng.0.jta java/util/Map/Collisions.java false Collisions
result: Passed. Execution successful


test result: Passed. Execution successful
