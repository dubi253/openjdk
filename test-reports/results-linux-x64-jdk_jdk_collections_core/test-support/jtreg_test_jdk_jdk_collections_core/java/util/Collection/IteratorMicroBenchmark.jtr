#Test Results (version 2)
#Thu Feb 29 23:24:45 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=924 0\:00\:00.924
end=Thu Feb 29 23\:24\:45 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az840-954.wndg40qfsgie5kikvjficeueua.ex.internal.cloudapp.net
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Thu Feb 29 23\:24\:44 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1015-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=926
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Collection

#section:script_messages
----------messages:(4/322)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be, mixed mode, sharing)

#section:build
----------messages:(7/234)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Thu Feb 29 23:24:44 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Thu Feb 29 23:24:44 UTC 2024
elapsed time (seconds): 0.321
result: Passed. Build successful

#section:compile
----------messages:(7/292)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:24:44 UTC 2024
Mode: agentvm
Agent id: 2
finished: Thu Feb 29 23:24:44 UTC 2024
elapsed time (seconds): 0.321
----------configuration:(10/717)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d

----------rerun:(35/3426)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
----------direct:(7/585)----------
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/292)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Thu Feb 29 23:24:44 UTC 2024
Mode: agentvm
Agent id: 4
finished: Thu Feb 29 23:24:45 UTC 2024
elapsed time (seconds): 0.601
----------configuration:(13/962)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection

----------rerun:(28/2919)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/35334)----------
Method                                                        Millis    Ratio
ArrayList iterate for loop                                         0    1.000
ArrayList iterator().forEachRemaining()                            0   11.863
ArrayList spliterator().tryAdvance()                               0    7.142
ArrayList spliterator().forEachRemaining()                         0    5.030
ArrayList contains                                                 0    7.186
ArrayList containsAll                                              0    0.942
ArrayList forEach                                                  0    5.856
ArrayList toArray()                                                0    0.314
ArrayList toArray(a)                                               0    0.320
ArrayList toArray(empty)                                           0    0.254
ArrayList stream().forEach                                         0    5.619
ArrayList stream().mapToInt                                        0   23.619
ArrayList stream().collect                                         0   25.170
ArrayList stream()::iterator                                       0    7.527
ArrayList parallelStream().forEach                                33 1162.676
ArrayList parallelStream().mapToInt                                0   27.574
ArrayList parallelStream().collect                                 0   13.003
ArrayList parallelStream()::iterator                               0    6.708
ArrayList removeIf                                                 0    6.337
ArrayList remove(Object)                                           0    0.660
ArrayList listIterator forward loop                                0    1.249
ArrayList listIterator backward loop                               0    0.505
ArrayList indexOf                                                  0    0.656
ArrayList lastIndexOf                                              0    0.325
ArrayList equals                                                   0    0.527
ArrayList hashCode                                                 0    0.923
ArrayList replaceAll                                               0    6.544
ArrayList$SubList iterate for loop                                 0    0.343
ArrayList$SubList iterator().forEachRemaining()                    0    0.454
ArrayList$SubList spliterator().tryAdvance()                       0    4.603
ArrayList$SubList spliterator().forEachRemaining()                 0    0.183
ArrayList$SubList contains                                         0    0.245
ArrayList$SubList containsAll                                      0    0.235
ArrayList$SubList forEach                                          0    0.507
ArrayList$SubList toArray()                                        0    0.331
ArrayList$SubList toArray(a)                                       0    0.163
ArrayList$SubList toArray(empty)                                   0    0.284
ArrayList$SubList stream().forEach                                 0    0.270
ArrayList$SubList stream().mapToInt                                0    0.680
ArrayList$SubList stream().collect                                 0    0.507
ArrayList$SubList stream()::iterator                               0    0.306
ArrayList$SubList parallelStream().forEach                         0   14.297
ArrayList$SubList parallelStream().mapToInt                        0    3.265
ArrayList$SubList parallelStream().collect                         0    2.244
ArrayList$SubList parallelStream()::iterator                       0    0.316
ArrayList$SubList removeIf                                         0    0.155
ArrayList$SubList remove(Object)                                   0    0.463
ArrayList$SubList listIterator forward loop                        0    0.141
ArrayList$SubList listIterator backward loop                       0    0.140
ArrayList$SubList indexOf                                          0    0.100
ArrayList$SubList lastIndexOf                                      0    0.216
ArrayList$SubList equals                                           0    0.494
ArrayList$SubList hashCode                                         0    0.167
ArrayList$SubList replaceAll                                       0    0.205
Vector iterate for loop                                            0    0.172
Vector iterator().forEachRemaining()                               0    0.165
Vector spliterator().tryAdvance()                                  0    0.330
Vector spliterator().forEachRemaining()                            0    0.140
Vector contains                                                    0    0.390
Vector containsAll                                                 0    0.285
Vector forEach                                                     0    0.138
Vector toArray()                                                   0    0.090
Vector toArray(a)                                                  0    0.146
Vector toArray(empty)                                              0    0.105
Vector stream().forEach                                            0    0.216
Vector stream().mapToInt                                           0    0.346
Vector stream().collect                                            0    0.411
Vector stream()::iterator                                          0    0.287
Vector parallelStream().forEach                                    0    7.101
Vector parallelStream().mapToInt                                   0    2.245
Vector parallelStream().collect                                    0    1.944
Vector parallelStream()::iterator                                  0    0.276
Vector removeIf                                                    0    0.142
Vector remove(Object)                                              0    0.126
Vector listIterator forward loop                                   0    0.167
Vector listIterator backward loop                                  0    0.160
Vector indexOf                                                     0    0.066
Vector lastIndexOf                                                 0    0.273
Vector equals                                                      0    0.610
Vector hashCode                                                    0    0.219
Vector replaceAll                                                  0    0.230
SynchronizedRandomAccessList iterate for loop                      0    0.748
SynchronizedRandomAccessList iterator().forEachRemaining()         0    0.202
SynchronizedRandomAccessList spliterator().tryAdvance()            0    6.103
SynchronizedRandomAccessList spliterator().forEachRemaining()      0    0.277
SynchronizedRandomAccessList contains                              0    1.682
SynchronizedRandomAccessList containsAll                           0    0.337
SynchronizedRandomAccessList forEach                               0    0.283
SynchronizedRandomAccessList toArray()                             0    0.185
SynchronizedRandomAccessList toArray(a)                            0    0.216
SynchronizedRandomAccessList toArray(empty)                        0    0.174
SynchronizedRandomAccessList stream().forEach                      0    0.304
SynchronizedRandomAccessList stream().mapToInt                     0    0.467
SynchronizedRandomAccessList stream().collect                      0    0.413
SynchronizedRandomAccessList stream()::iterator                    0    0.375
SynchronizedRandomAccessList parallelStream().forEach              0    3.333
SynchronizedRandomAccessList parallelStream().mapToInt             0    2.298
SynchronizedRandomAccessList parallelStream().collect              0    2.917
SynchronizedRandomAccessList parallelStream()::iterator            0    0.414
SynchronizedRandomAccessList removeIf                              0    0.446
SynchronizedRandomAccessList remove(Object)                        0    0.299
SynchronizedRandomAccessList listIterator forward loop             0    0.254
SynchronizedRandomAccessList listIterator backward loop            0    0.291
SynchronizedRandomAccessList indexOf                               0    0.477
SynchronizedRandomAccessList lastIndexOf                           0    0.429
SynchronizedRandomAccessList equals                                0    0.659
SynchronizedRandomAccessList hashCode                              0    0.461
SynchronizedRandomAccessList replaceAll                            0    0.914
LinkedList iterate for loop                                        0    0.214
LinkedList iterator().forEachRemaining()                           0    0.305
LinkedList spliterator().tryAdvance()                              0    4.604
LinkedList spliterator().forEachRemaining()                        0    0.169
LinkedList contains                                                0    0.401
LinkedList containsAll                                             0    0.130
LinkedList forEach                                                 0    0.196
LinkedList toArray()                                               0    0.137
LinkedList toArray(a)                                              0    0.114
LinkedList toArray(empty)                                          0    0.128
LinkedList stream().forEach                                        0    0.197
LinkedList stream().mapToInt                                       0    1.616
LinkedList stream().collect                                        0    0.903
LinkedList stream()::iterator                                      0    0.306
LinkedList parallelStream().forEach                                0    5.449
LinkedList parallelStream().mapToInt                               0    5.359
LinkedList parallelStream().collect                                0    6.102
LinkedList parallelStream()::iterator                              0    0.281
LinkedList removeIf                                                0    0.250
LinkedList remove(Object)                                          0    0.132
LinkedList descendingIterator() loop                               0    3.859
LinkedList descendingIterator().forEachRemaining()                 0    6.594
LinkedList listIterator forward loop                               0    0.178
LinkedList listIterator backward loop                              0    0.124
LinkedList indexOf                                                 0    0.086
LinkedList lastIndexOf                                             0    0.094
LinkedList equals                                                  0    0.361
LinkedList hashCode                                                0    0.226
LinkedList replaceAll                                              0    0.242
AbstractList$SubList iterate for loop                              0    0.286
AbstractList$SubList iterator().forEachRemaining()                 0    0.216
AbstractList$SubList spliterator().tryAdvance()                    0    0.455
AbstractList$SubList spliterator().forEachRemaining()              0    0.248
AbstractList$SubList contains                                      0    0.216
AbstractList$SubList containsAll                                   0    0.352
AbstractList$SubList forEach                                       0    0.188
AbstractList$SubList toArray()                                     0    0.238
AbstractList$SubList toArray(a)                                    0    0.186
AbstractList$SubList toArray(empty)                                0    0.190
AbstractList$SubList stream().forEach                              0    0.505
AbstractList$SubList stream().mapToInt                             0    0.529
AbstractList$SubList stream().collect                              0    0.400
AbstractList$SubList stream()::iterator                            0    0.371
AbstractList$SubList parallelStream().forEach                      0    5.197
AbstractList$SubList parallelStream().mapToInt                     0    4.044
AbstractList$SubList parallelStream().collect                      0    5.591
AbstractList$SubList parallelStream()::iterator                    0    0.427
AbstractList$SubList removeIf                                      0    0.203
AbstractList$SubList remove(Object)                                0    0.190
AbstractList$SubList listIterator forward loop                     0    0.139
AbstractList$SubList listIterator backward loop                    0    0.272
AbstractList$SubList indexOf                                       0    0.175
AbstractList$SubList lastIndexOf                                   0    0.232
AbstractList$SubList equals                                        0    0.544
AbstractList$SubList hashCode                                      0    0.352
AbstractList$SubList replaceAll                                    0    0.255
CopyOnWriteArrayList iterate for loop                              0    0.187
CopyOnWriteArrayList iterator().forEachRemaining()                 0    0.395
CopyOnWriteArrayList spliterator().tryAdvance()                    0    0.231
CopyOnWriteArrayList spliterator().forEachRemaining()              0    0.110
CopyOnWriteArrayList contains                                      0    1.001
CopyOnWriteArrayList containsAll                                   0    0.376
CopyOnWriteArrayList forEach                                       0    0.121
CopyOnWriteArrayList toArray()                                     0    0.101
CopyOnWriteArrayList toArray(a)                                    0    0.116
CopyOnWriteArrayList toArray(empty)                                0    0.083
CopyOnWriteArrayList stream().forEach                              0    0.180
CopyOnWriteArrayList stream().mapToInt                             0    0.317
CopyOnWriteArrayList stream().collect                              0    0.286
CopyOnWriteArrayList stream()::iterator                            0    0.226
CopyOnWriteArrayList parallelStream().forEach                      0    4.054
CopyOnWriteArrayList parallelStream().mapToInt                     0    3.336
CopyOnWriteArrayList parallelStream().collect                      0    4.521
CopyOnWriteArrayList parallelStream()::iterator                    0    0.252
CopyOnWriteArrayList removeIf                                      0    0.159
CopyOnWriteArrayList remove(Object)                                0    0.105
CopyOnWriteArrayList listIterator forward loop                     0    0.150
CopyOnWriteArrayList listIterator backward loop                    0    0.245
CopyOnWriteArrayList indexOf                                       0    0.295
CopyOnWriteArrayList lastIndexOf                                   0    0.129
CopyOnWriteArrayList equals                                        0    0.379
CopyOnWriteArrayList hashCode                                      0    0.198
CopyOnWriteArrayList replaceAll                                    0    0.289
COWSubList iterate for loop                                        0    5.024
COWSubList iterator().forEachRemaining()                           0    0.385
COWSubList spliterator().tryAdvance()                              0    0.353
COWSubList spliterator().forEachRemaining()                        0    0.125
COWSubList contains                                                0    0.262
COWSubList containsAll                                             0    0.254
COWSubList forEach                                                 0    0.212
COWSubList toArray()                                               0    0.149
COWSubList toArray(a)                                              0    0.246
COWSubList toArray(empty)                                          0    0.134
COWSubList stream().forEach                                        0    0.169
COWSubList stream().mapToInt                                       0    0.317
COWSubList stream().collect                                        0    0.263
COWSubList stream()::iterator                                      0    0.268
COWSubList parallelStream().forEach                                0    4.999
COWSubList parallelStream().mapToInt                               0    4.220
COWSubList parallelStream().collect                                0    5.081
COWSubList parallelStream()::iterator                              0    0.258
COWSubList removeIf                                                0    0.325
COWSubList remove(Object)                                          0    0.143
COWSubList listIterator forward loop                               0    0.237
COWSubList listIterator backward loop                              0    0.362
COWSubList indexOf                                                 0    0.087
COWSubList lastIndexOf                                             0    0.134
COWSubList equals                                                  0    0.356
COWSubList hashCode                                                0    0.172
COWSubList replaceAll                                              0    0.389
ArrayDeque iterate for loop                                        0    0.179
ArrayDeque iterator().forEachRemaining()                           0    0.176
ArrayDeque spliterator().tryAdvance()                              0    0.287
ArrayDeque spliterator().forEachRemaining()                        0    0.136
ArrayDeque contains                                                0    0.496
ArrayDeque containsAll                                             0    0.113
ArrayDeque forEach                                                 0    0.116
ArrayDeque toArray()                                               0    0.120
ArrayDeque toArray(a)                                              0    0.130
ArrayDeque toArray(empty)                                          0    0.097
ArrayDeque stream().forEach                                        0    0.197
ArrayDeque stream().mapToInt                                       0    0.373
ArrayDeque stream().collect                                        0    0.309
ArrayDeque stream()::iterator                                      0    0.240
ArrayDeque parallelStream().forEach                                0    4.209
ArrayDeque parallelStream().mapToInt                               0    5.474
ArrayDeque parallelStream().collect                                0    4.367
ArrayDeque parallelStream()::iterator                              0    0.273
ArrayDeque removeIf                                                0    0.120
ArrayDeque remove(Object)                                          0    0.108
ArrayDeque descendingIterator() loop                               0    0.187
ArrayDeque descendingIterator().forEachRemaining()                 0    0.159
PriorityQueue iterate for loop                                     0    0.180
PriorityQueue iterator().forEachRemaining()                        0    0.133
PriorityQueue spliterator().tryAdvance()                           0    3.789
PriorityQueue spliterator().forEachRemaining()                     0    0.142
PriorityQueue contains                                             0    0.237
PriorityQueue containsAll                                          0    0.118
PriorityQueue forEach                                              0    0.200
PriorityQueue toArray()                                            0    0.149
PriorityQueue toArray(a)                                           0    0.183
PriorityQueue toArray(empty)                                       0    0.145
PriorityQueue stream().forEach                                     0    0.188
PriorityQueue stream().mapToInt                                    0    0.382
PriorityQueue stream().collect                                     0    0.278
PriorityQueue stream()::iterator                                   0    0.228
PriorityQueue parallelStream().forEach                             0    5.096
PriorityQueue parallelStream().mapToInt                            0    5.011
PriorityQueue parallelStream().collect                             0    5.703
PriorityQueue parallelStream()::iterator                           0    0.291
PriorityQueue removeIf                                             0    0.414
PriorityQueue remove(Object)                                       0    0.124
ConcurrentLinkedQueue iterate for loop                             0    0.203
ConcurrentLinkedQueue iterator().forEachRemaining()                0    0.137
ConcurrentLinkedQueue spliterator().tryAdvance()                   0    4.543
ConcurrentLinkedQueue spliterator().forEachRemaining()             0    0.256
ConcurrentLinkedQueue contains                                     0    0.603
ConcurrentLinkedQueue containsAll                                  0    0.180
ConcurrentLinkedQueue forEach                                      0    0.125
ConcurrentLinkedQueue toArray()                                    0    0.190
ConcurrentLinkedQueue toArray(a)                                   0    0.164
ConcurrentLinkedQueue toArray(empty)                               0    0.101
ConcurrentLinkedQueue stream().forEach                             0    0.201
ConcurrentLinkedQueue stream().mapToInt                            0    0.778
ConcurrentLinkedQueue stream().collect                             0    0.310
ConcurrentLinkedQueue stream()::iterator                           0    0.291
ConcurrentLinkedQueue parallelStream().forEach                     0    5.876
ConcurrentLinkedQueue parallelStream().mapToInt                    0    4.290
ConcurrentLinkedQueue parallelStream().collect                     0    3.922
ConcurrentLinkedQueue parallelStream()::iterator                   0    0.310
ConcurrentLinkedQueue removeIf                                     0    0.129
ConcurrentLinkedQueue remove(Object)                               0    0.090
ConcurrentLinkedDeque iterate for loop                             0    0.238
ConcurrentLinkedDeque iterator().forEachRemaining()                0    0.158
ConcurrentLinkedDeque spliterator().tryAdvance()                   0    4.189
ConcurrentLinkedDeque spliterator().forEachRemaining()             0    0.148
ConcurrentLinkedDeque contains                                     0    0.808
ConcurrentLinkedDeque containsAll                                  0    0.126
ConcurrentLinkedDeque forEach                                      0    0.254
ConcurrentLinkedDeque toArray()                                    0    0.171
ConcurrentLinkedDeque toArray(a)                                   0    0.164
ConcurrentLinkedDeque toArray(empty)                               0    0.090
ConcurrentLinkedDeque stream().forEach                             0    0.177
ConcurrentLinkedDeque stream().mapToInt                            0    0.417
ConcurrentLinkedDeque stream().collect                             0    0.331
ConcurrentLinkedDeque stream()::iterator                           0    0.267
ConcurrentLinkedDeque parallelStream().forEach                     0    4.250
ConcurrentLinkedDeque parallelStream().mapToInt                    0    3.766
ConcurrentLinkedDeque parallelStream().collect                     0    3.763
ConcurrentLinkedDeque parallelStream()::iterator                   0    0.284
ConcurrentLinkedDeque removeIf                                     0    0.145
ConcurrentLinkedDeque remove(Object)                               0    0.112
ConcurrentLinkedDeque descendingIterator() loop                    0    3.319
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0    0.206
ArrayBlockingQueue iterate for loop                                0    0.561
ArrayBlockingQueue iterator().forEachRemaining()                   0    0.448
ArrayBlockingQueue spliterator().tryAdvance()                      0    0.484
ArrayBlockingQueue spliterator().forEachRemaining()                0    0.195
ArrayBlockingQueue contains                                        0    0.718
ArrayBlockingQueue containsAll                                     0    0.115
ArrayBlockingQueue forEach                                         0    0.116
ArrayBlockingQueue toArray()                                       0    0.205
ArrayBlockingQueue toArray(a)                                      0    0.140
ArrayBlockingQueue toArray(empty)                                  0    0.097
ArrayBlockingQueue stream().forEach                                0    0.286
ArrayBlockingQueue stream().mapToInt                               0    0.408
ArrayBlockingQueue stream().collect                                0    0.349
ArrayBlockingQueue stream()::iterator                              0    0.379
ArrayBlockingQueue parallelStream().forEach                        0    3.930
ArrayBlockingQueue parallelStream().mapToInt                       0    4.431
ArrayBlockingQueue parallelStream().collect                        0    4.371
ArrayBlockingQueue parallelStream()::iterator                      0    0.462
ArrayBlockingQueue removeIf                                        0    0.133
ArrayBlockingQueue remove(Object)                                  0    0.098
LinkedBlockingQueue iterate for loop                               0    0.233
LinkedBlockingQueue iterator().forEachRemaining()                  0    0.520
LinkedBlockingQueue spliterator().tryAdvance()                     0    4.177
LinkedBlockingQueue spliterator().forEachRemaining()               0    0.307
LinkedBlockingQueue contains                                       0    1.382
LinkedBlockingQueue containsAll                                    0    0.394
LinkedBlockingQueue forEach                                        0    0.172
LinkedBlockingQueue toArray()                                      0    0.115
LinkedBlockingQueue toArray(a)                                     0    0.102
LinkedBlockingQueue toArray(empty)                                 0    0.110
LinkedBlockingQueue stream().forEach                               0    0.244
LinkedBlockingQueue stream().mapToInt                              0    0.712
LinkedBlockingQueue stream().collect                               0    0.340
LinkedBlockingQueue stream()::iterator                             0    0.315
LinkedBlockingQueue parallelStream().forEach                       0    6.229
LinkedBlockingQueue parallelStream().mapToInt                      0    6.310
LinkedBlockingQueue parallelStream().collect                       0    6.108
LinkedBlockingQueue parallelStream()::iterator                     0    0.357
LinkedBlockingQueue removeIf                                       0    0.224
LinkedBlockingQueue remove(Object)                                 0    0.094
LinkedBlockingDeque iterate for loop                               0    0.713
LinkedBlockingDeque iterator().forEachRemaining()                  0    0.558
LinkedBlockingDeque spliterator().tryAdvance()                     0    4.563
LinkedBlockingDeque spliterator().forEachRemaining()               0    0.337
LinkedBlockingDeque contains                                       0    0.880
LinkedBlockingDeque containsAll                                    0    0.308
LinkedBlockingDeque forEach                                        0    0.194
LinkedBlockingDeque toArray()                                      0    0.116
LinkedBlockingDeque toArray(a)                                     0    0.103
LinkedBlockingDeque toArray(empty)                                 0    0.119
LinkedBlockingDeque stream().forEach                               0    0.243
LinkedBlockingDeque stream().mapToInt                              0    0.346
LinkedBlockingDeque stream().collect                               0    0.329
LinkedBlockingDeque stream()::iterator                             0    0.276
LinkedBlockingDeque parallelStream().forEach                       0    6.247
LinkedBlockingDeque parallelStream().mapToInt                      0    5.499
LinkedBlockingDeque parallelStream().collect                       0    5.429
LinkedBlockingDeque parallelStream()::iterator                     0    0.316
LinkedBlockingDeque removeIf                                       0    0.207
LinkedBlockingDeque remove(Object)                                 0    0.103
LinkedBlockingDeque descendingIterator() loop                      0    3.298
LinkedBlockingDeque descendingIterator().forEachRemaining()        0    0.326
LinkedTransferQueue iterate for loop                               0    0.181
LinkedTransferQueue iterator().forEachRemaining()                  0    0.340
LinkedTransferQueue spliterator().tryAdvance()                     0    4.758
LinkedTransferQueue spliterator().forEachRemaining()               0    0.273
LinkedTransferQueue contains                                       0    0.570
LinkedTransferQueue containsAll                                    0    0.121
LinkedTransferQueue forEach                                        0    0.162
LinkedTransferQueue toArray()                                      0    0.181
LinkedTransferQueue toArray(a)                                     0    0.369
LinkedTransferQueue toArray(empty)                                 0    0.098
LinkedTransferQueue stream().forEach                               0    0.246
LinkedTransferQueue stream().mapToInt                              0    0.316
LinkedTransferQueue stream().collect                               0    0.325
LinkedTransferQueue stream()::iterator                             0    0.322
LinkedTransferQueue parallelStream().forEach                       0    7.694
LinkedTransferQueue parallelStream().mapToInt                      0    4.735
LinkedTransferQueue parallelStream().collect                       0    6.441
LinkedTransferQueue parallelStream()::iterator                     0    0.351
LinkedTransferQueue removeIf                                       0    0.207
LinkedTransferQueue remove(Object)                                 0    0.331
PriorityBlockingQueue iterate for loop                             0    3.745
PriorityBlockingQueue iterator().forEachRemaining()                0    0.320
PriorityBlockingQueue spliterator().tryAdvance()                   0    3.711
PriorityBlockingQueue spliterator().forEachRemaining()             0    0.161
PriorityBlockingQueue contains                                     0    0.227
PriorityBlockingQueue containsAll                                  0    0.329
PriorityBlockingQueue forEach                                      0    0.237
PriorityBlockingQueue toArray()                                    0    0.065
PriorityBlockingQueue toArray(a)                                   0    0.215
PriorityBlockingQueue toArray(empty)                               0    0.162
PriorityBlockingQueue stream().forEach                             0    0.191
PriorityBlockingQueue stream().mapToInt                            0    0.305
PriorityBlockingQueue stream().collect                             0    0.420
PriorityBlockingQueue stream()::iterator                           0    0.262
PriorityBlockingQueue parallelStream().forEach                     0    7.108
PriorityBlockingQueue parallelStream().mapToInt                    0    8.190
PriorityBlockingQueue parallelStream().collect                     0    9.613
PriorityBlockingQueue parallelStream()::iterator                   0    0.329
PriorityBlockingQueue removeIf                                     0    0.348
PriorityBlockingQueue remove(Object)                               0    0.107
ListN iterate for loop                                             0    0.224
ListN iterator().forEachRemaining()                                0    0.215
ListN spliterator().tryAdvance()                                   0    0.311
ListN spliterator().forEachRemaining()                             0    0.147
ListN contains                                                     0    0.266
ListN containsAll                                                  0    0.276
ListN forEach                                                      0    0.162
ListN toArray()                                                    0    0.065
ListN toArray(a)                                                   0    0.123
ListN toArray(empty)                                               0    0.094
ListN stream().forEach                                             0    0.195
ListN stream().mapToInt                                            0    0.288
ListN stream().collect                                             0    0.556
ListN stream()::iterator                                           0    0.340
ListN parallelStream().forEach                                     0    6.193
ListN parallelStream().mapToInt                                    0    6.127
ListN parallelStream().collect                                     0    7.129
ListN parallelStream()::iterator                                   0    0.331
ListN listIterator forward loop                                    0    0.345
ListN listIterator backward loop                                   0    0.142
ListN indexOf                                                      0    0.074
ListN lastIndexOf                                                  0    0.061
ListN equals                                                       0    0.299
ListN hashCode                                                     0    0.331
ImmutableCollections$SubList iterate for loop                      0    0.459
ImmutableCollections$SubList iterator().forEachRemaining()         0    0.179
ImmutableCollections$SubList spliterator().tryAdvance()            0    0.286
ImmutableCollections$SubList spliterator().forEachRemaining()      0    0.142
ImmutableCollections$SubList contains                              0    0.517
ImmutableCollections$SubList containsAll                           0    0.151
ImmutableCollections$SubList forEach                               0    0.171
ImmutableCollections$SubList toArray()                             0    0.169
ImmutableCollections$SubList toArray(a)                            0    0.143
ImmutableCollections$SubList toArray(empty)                        0    0.348
ImmutableCollections$SubList stream().forEach                      0    0.236
ImmutableCollections$SubList stream().mapToInt                     0    0.304
ImmutableCollections$SubList stream().collect                      0    0.321
ImmutableCollections$SubList stream()::iterator                    0    0.298
ImmutableCollections$SubList parallelStream().forEach              0    6.179
ImmutableCollections$SubList parallelStream().mapToInt             0    8.632
ImmutableCollections$SubList parallelStream().collect              0    7.455
ImmutableCollections$SubList parallelStream()::iterator            0    0.377
ImmutableCollections$SubList listIterator forward loop             0    0.325
ImmutableCollections$SubList listIterator backward loop            0    0.128
ImmutableCollections$SubList indexOf                               0    0.105
ImmutableCollections$SubList lastIndexOf                           0    0.111
ImmutableCollections$SubList equals                                0    0.312
ImmutableCollections$SubList hashCode                              0    0.187
----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
