#Test Results (version 2)
#Fri Mar 15 23:51:13 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=518 0\:00\:00.518
end=Fri Mar 15 23\:51\:13 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1249-408.s2f5543ugbre5olue0o55jqcqe.bx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1016-azure (amd64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 15 23\:51\:13 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1016-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757346304,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1016-azure
totalTime=519
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/566)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ced5e427db9ce5a0c5a328b30c33edee96767763)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-ced5e427db9ce5a0c5a328b30c33edee96767763, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 15 23:51:13 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 15 23:51:13 UTC 2024
elapsed time (seconds): 0.021
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 15 23:51:13 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 15 23:51:13 UTC 2024
elapsed time (seconds): 0.021
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 15 23:51:13 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 15 23:51:13 UTC 2024
elapsed time (seconds): 0.105
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 15 23:51:13 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 15 23:51:13 UTC 2024
elapsed time (seconds): 0.104
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 15 23:51:13 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 15 23:51:13 UTC 2024
elapsed time (seconds): 0.391
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91954)----------
Seed from RandomFactory = -5450484993405491687L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1746984746], 0, 1): success
test SubList.testAdd([42, 746472646], 0, 1): success
test SubList.testAdd([42, 1401515659], 0, 1): success
test SubList.testAdd([42, 26710236], 0, 1): success
test SubList.testAdd([42, -856402270], 0, 1): success
test SubList.testAdd([42, 712350566], 0, 1): success
test SubList.testAdd([42, -50784468], 0, 1): success
test SubList.testAdd([42, 1855649315], 0, 1): success
test SubList.testAdd([42, -2112393908], 0, 1): success
test SubList.testAdd(java.util.ArrayList@51cfe12f, 2, 5): success
test SubList.testAdd(java.util.LinkedList@600940d5, 2, 5): success
test SubList.testAdd(java.util.Vector@35516043, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@4665973d, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@2a07d779, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@2f72e876, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@7885d932, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@2733c754, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@76bdae73, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@591cacb, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@306a1e5, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@39c18ba2, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 644662713], 0, 1): success
test SubList.testAddAtPos([-723873063, 42], 0, 1): success
test SubList.testAddAtPos([379540658, 42], 0, 1): success
test SubList.testAddAtPos([42, 855875027], 0, 1): success
test SubList.testAddAtPos([42, 294459512], 0, 1): success
test SubList.testAddAtPos([-1873386398, 42], 0, 1): success
test SubList.testAddAtPos([706707592, 42], 0, 1): success
test SubList.testAddAtPos([-1981412667, 42], 0, 1): success
test SubList.testAddAtPos([-839888904, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@99ca5a5, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@2d9dad15, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@340aa10d, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@4e93493, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@108eb96, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6e96aefe, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@11b47b9e, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@5b544ee5, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@db9b497, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@370aa1f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@6668ff62, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4dcf8c7e, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@737716b5, 2, 5): success
test SubList.testClear(java.util.LinkedList@5e4e9fe7, 2, 5): success
test SubList.testClear(java.util.Vector@6584113a, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@74bdac9c, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@4c650e07, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@173fdc77, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@3193664f, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@2ceef425, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@413e8092, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@388e9055, 2, 5): success
test SubList.testEquals(java.util.LinkedList@626be201, 2, 5): success
test SubList.testEquals(java.util.Vector@12523b8e, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@4e57c458, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@3a7276f, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@a145597, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@67da39ff, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@3c745c18, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@309a997e, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1a1fd7ee, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@32b3d618, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7c37b1ee, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@5315badf, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1a7a4a76, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@2827b63f, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@38cd45f5, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@7716fc93, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@680d90db, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@680d90db, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@7ab11c6f, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@58af3e42, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@221b6260, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@b54bb30, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@26ac0335, 2, 5): success
test SubList.testGet(java.util.LinkedList@13abf03d, 2, 5): success
test SubList.testGet(java.util.Vector@3cc0da90, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@7eeb1347, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@2048a3df, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5df0f9c2, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@15fac39e, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@999a143, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@74cbe2fb, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@8b986d6, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@65eb6291, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@18da3252, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@2775c1a8, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@72fcbac7, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3051de2b, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@704464bd, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@5fab754a, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@2ea586ef, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@2ea586ef, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@463723e2, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@3ba7f2d5, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@45ad3ebd, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@3f783b24, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@4c9873d0, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@48fddf5, 2, 5): success
test SubList.testIndexOf(java.util.Vector@791f83c4, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@296a4032, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@69fc7d02, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@43336d38, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@63e8ece7, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@1d61134c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@64a4c84c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2b100f09, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@555cf9e5, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@342c7edc, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@1e5bbc73, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@445df781, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@10f4b25d, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@193d0a65, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@18669725, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@44c0b0a1, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@44c0b0a1, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@3c7f89e0, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1ea7b32e, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3341ffec, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@361a256c, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@117dacca, 2, 5): success
test SubList.testIterator(java.util.LinkedList@9293a10, 2, 5): success
test SubList.testIterator(java.util.Vector@28f712ea, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@4c61363a, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@f28eba4, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@50a90a9, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@146148f9, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@78ee7ada, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5dd96a4a, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@7e36d9ec, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@25259e4e, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@32e7dc7c, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@6942ea65, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@337642, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@15033948, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@1be105aa, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@c4cf8b8, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@eea440c, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@eea440c, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@64ca8d69, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@43df8c3, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4580b21c, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@7569af37, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@5ae46130, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@7c337f6d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@18b7565e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@6cb68eb2, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@357c3a02, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2c3a6ba6, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@330a6465, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@358e7a6d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@2530709f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1bbb17ef, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@30b57e17, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2c94d43c, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@93eabb2, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@27231291, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5876525a, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@6a1bdc46, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@39e758e2, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2910041, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2910041, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@11bd896a, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@40f8b39a, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@30ffea0c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@e817e32, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@31ed05f8, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@3be59fb7, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@2f8d2f57, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@459ac73e, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@240c908d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@857cffc, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2b0eb23, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@15ac5bd9, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@16a6ea87, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@539dca85, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@7f7da674, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@34461e91, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@55f3a7a8, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@49c9b04a, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@39e117b0, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@c8fb751, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@75cbbc08, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@ca89d84, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@53073819, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@23ccc71, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@344df806, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@744eb844, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5e77b496, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6b22a16, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@2fd41f3c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@328d5bfa, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@72f5f0a3, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@72f5f0a3, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@435f4b27, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@18dd347b, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@13d147f2, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6afc8d85, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@7578da8d, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@7a9fcf76, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@59051a0c, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@6b59a5af, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@55c2fd3a, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@32e34e58, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@32e34e58, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@3ec8fb6, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@3e625abc, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@788d4169, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@53c461e0, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@9147cea, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@439b7697, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4a8ec906, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@13403e88, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@77e3d1fc, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@50f22925, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3d51a1fb, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@19c62c58, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5a3ae212, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@4e5daf05, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@f24e4bc, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@4541e25a, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@7210dfcd, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@64f2de66, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@44ce47b, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5719a7b, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@2376746d, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4e632123, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4f347e52, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@198f7b4a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@27600a27, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@97e3d83, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@25362c89, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@32f61a99, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@2500922f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1eb91209, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1c319e1d, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1c319e1d, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@45b5207f, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@299116d, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@502c61d9, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6b9c82dd, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@117f9644, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@63ac1884, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@75fd2970, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@f8adf42, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@63b7c10c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@14f91290, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@2a4a7552, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@3e467afc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@736bcc62, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@6359c4ea, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@4059f3ad, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@6d240271, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@6a8a7536, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@51cf5daa, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4ff3f8a2, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1a2b9006, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@741ed4ea, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@16b924d1, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1149631257], 0, 1): success
test SubList.testListIteratorSet([1810451732], 0, 1): success
test SubList.testListIteratorSet([-273356739], 0, 1): success
test SubList.testListIteratorSet([-487703977], 0, 1): success
test SubList.testListIteratorSet([2103748183], 0, 1): success
test SubList.testListIteratorSet([-104758098], 0, 1): success
test SubList.testListIteratorSet([-957693553], 0, 1): success
test SubList.testListIteratorSet([1765021650], 0, 1): success
test SubList.testListIteratorSet([638864020], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@5be5de5, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@3fa14cff, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@6078c438, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@758a5943, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@33592e43, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1dd64460, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@41895c36, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@5ec3b9c6, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@2cb04d80, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@56e87fa2, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@411d0a32, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@76d3a9ce, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-1726483940], 0, 1): success
test SubList.testListIteratorSetPrevious([-894678165], 0, 1): success
test SubList.testListIteratorSetPrevious([-167586622], 0, 1): success
test SubList.testListIteratorSetPrevious([-1854913491], 0, 1): success
test SubList.testListIteratorSetPrevious([-2108545311], 0, 1): success
test SubList.testListIteratorSetPrevious([360368899], 0, 1): success
test SubList.testListIteratorSetPrevious([33129152], 0, 1): success
test SubList.testListIteratorSetPrevious([1651851060], 0, 1): success
test SubList.testListIteratorSetPrevious([-830807131], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@617e1eed, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@7e927024, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@69570f46, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@15471cfb, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@430d60ef, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5c8fbf89, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@6dc3f9bb, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@2b58ba4f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@13900190, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@26de8c37, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@352cf614, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@79881cd6, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@76012686, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@217bb380, 2, 5): success
test SubList.testModAdd(java.util.Vector@126b802e, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@729e5627, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@5c8bef1b, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@7a191262, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@1013bf96, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@6a36cfac, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@6ff1caae, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@19a4670c, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@33ac898, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@60abe54f, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@1a709708, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@263cfaf0, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@4450b82d, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@7c951b55, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@524908c7, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4747f5a6, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@4c89128, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@facf64d, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@3ceb40d5, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@559ccf70, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@19aa0f7c, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@45bb380d, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@5104a906, 2, 5): success
test SubList.testModClear(java.util.LinkedList@22887826, 2, 5): success
test SubList.testModClear(java.util.Vector@727fe5d4, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@76ad4d07, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@440d3552, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@65987516, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@84499e2, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@59365b2b, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@24731f2f, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@35259510, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@210d3769, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6dfa81be, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@69dae5b9, 2, 5): success
test SubList.testModGet(java.util.LinkedList@65f56adb, 2, 5): success
test SubList.testModGet(java.util.Vector@51831fe, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@1dd7c839, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@6d01d56a, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4b921b3b, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@15073c6e, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@1a64a93e, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@300e78cd, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6f47c2a0, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@63ba93f, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@2af6c1fd, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@9b1f584, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1f0f60b0, 2, 5): success
test SubList.testModHashCode(java.util.Vector@ce4ec6d, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@701d87cc, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@2896731f, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@3bad52a9, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@70568b59, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@120d2cee, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@25e8189f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@3d4f7964, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@3b18171a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@4988951f, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@3492d7fa, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@2b51cff7, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@2b62146d, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@5f009de7, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@48aeb92, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7bc88c93, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@150bf406, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@6c340c38, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@12e6c363, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@3040e0fd, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@7146df70, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@716c0d8a, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@1e45339d, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@8dd7c5b, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@1ef0c990, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@298deccd, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@6e1f0df1, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@69d1e642, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@561284e3, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@7b47bf75, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@5a6b8359, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@14904123, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@6bcbb030, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@78ab9aeb, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@1b210503, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@3f4a58cf, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@1d0a98b1, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@2e34190b, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@6d4349fc, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@d661daf, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@7246500e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@6946a29d, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@43385e85, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@492694d7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@3e659061, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1294cd38, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@8b41a8e, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@265e1d32, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@13528760, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@7a4d75cf, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@1281f919, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4dc6870a, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@3d3a3a59, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@3b6438a3, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@56fd393, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4524fae5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@95063ab, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4f7e9546, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@2ee00962, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@35c42c83, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@1e92f7a6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@62c68b66, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@616340a3, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5134e95b, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6f87c1aa, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@60721211, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@721e8873, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@46cf102b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@4f673781, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2ce43201, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@117babd1, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@2ab07706, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@5ec99057, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@5cc8c618, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@5880bc48, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7b0db4b8, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@22dce64b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@2f22fcea, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@e3694f4, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6e374db7, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@714f5772, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@22fdad91, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@5d311bd2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@35474e6c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@5ab99ae2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@40ba8db2, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@46abb53b, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@11da98ec, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@408074a8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@4a99d4f6, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1af1327e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@180cc9de, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@6bcc0c1c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3de81272, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@2d158259, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@7af622ca, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@46596442, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@2cc3ab62, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@1fd91042, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@817fbed, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@35b7fede, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@4dc1bd05, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@7840e186, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3553b20c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@65c4b9a0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@68b1df3e, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@38288696, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@33359a23, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@6772646e, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@7014e88d, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@dc76e58, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4922c6e3, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@178b46da, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7e7b425f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@50a814cb, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@59932479, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@15681812, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5f8d8ab2, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@660b055f, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@6eb53d98, 2, 5): success
test SubList.testModRemove(java.util.Vector@5aae60d1, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@1afa1d27, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@5aaf0d59, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@b22b017, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@28726dd3, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@2bd9008a, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@31aa0c8f, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4a88e20b, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@4ee8da15, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5906d84e, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@49e3b33e, 2, 5): success
test SubList.testModSet(java.util.LinkedList@82ef47c, 2, 5): success
test SubList.testModSet(java.util.Vector@58583dd6, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@7e67f9e6, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@5baba729, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@30f843ed, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@502f1355, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@5ab49a4e, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@7fbdd812, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@23badeda, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@6347bd26, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@59dd93d5, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@424c8b5b, 2, 5): success
test SubList.testRemove(java.util.LinkedList@7ffdfccb, 2, 5): success
test SubList.testRemove(java.util.Vector@17c4a3ef, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@343c9ff3, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@bfa92b, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@477cb889, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@2b93d335, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@657e732c, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@4038c7ef, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1716637219], 0, 1): success
test SubList.testSet([-669515486], 0, 1): success
test SubList.testSet([945763215], 0, 1): success
test SubList.testSet([1842848372], 0, 1): success
test SubList.testSet([484075260], 0, 1): success
test SubList.testSet([-807281875], 0, 1): success
test SubList.testSet([-1661075695], 0, 1): success
test SubList.testSet([-214481863], 0, 1): success
test SubList.testSet([1404514813], 0, 1): success
test SubList.testSet(java.util.ArrayList@def4fc5, 2, 5): success
test SubList.testSet(java.util.LinkedList@68c5bfa1, 2, 5): success
test SubList.testSet(java.util.Vector@5e5d3a66, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@370afd2d, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@77b04293, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5eeeedb1, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@254f5266, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@5e3c8911, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@20b14a4e, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5ea4e1ab, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@1c6ad178, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@55a14467, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@16d096de, 2, 5): success
test SubList.testSubList(java.util.LinkedList@7da1b26f, 2, 5): success
test SubList.testSubList(java.util.Vector@18747751, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@b18e401, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@39d15f0f, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5e4a312b, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4ca22e0e, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@2689751e, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@45fe0fe7, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@2f234700, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@e775f2d, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6556ec6, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@6475f62c, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@56ddd93c, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4232921d, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@6c187d95, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@33bd85fc, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@6c34d5ce, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@6c34d5ce, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@6cd2801, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@eb8136d, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@3f5eaa0a, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@55b749b0, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@34dcb979, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@3d8ac4ee, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6c79e274, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@1b69938, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@2b10db79, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@7e9f3898, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@7e9f3898, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@57053b8d, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@588313b3, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@737948cd, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@2f72ed98, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@22622b5d, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3d4a7ed, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3eb3046a, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@33aa6657, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5f69103a, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@223fb2df, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@223fb2df, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@6930ff7a, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@4d10349, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@53af81a2, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@592600e9, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@701d46d3, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@2e1c3a8d, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@b993a26, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@41e86061, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@59479488, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@746c392f, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@746c392f, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@3540437e, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@31574c6a, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@7959ee47, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@57be4e43, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@73af8958, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@7d92c250, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@6df1a67e, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@41312efb, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@10d5b2e1, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@6ce8af05, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@6ce8af05, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@15403f62, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@7016b490, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@124bfdbd, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2262a490, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@30b8bf06, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@22c257b0, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1183b8bf, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@7e15d896, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1920d3e3, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@550c1270, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@550c1270, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1249ae18, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@3dea4a47, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1b6feb60, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4e6ce195, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@673b7ab7, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@71875eb5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@10c52fba, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@7af7d8ff, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@2522dd6c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@756b59da, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@756b59da, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@ce59a4f, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@580b15b7, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4480cd13, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1a2b39ef, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@75eab31, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@286aa010, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6847ffd, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@484b7da8, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@4b247bf2, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@61d86b4e, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@61d86b4e, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@45d1a965, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@2685c592, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1707fc58, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@717d40a6, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@50c8c16, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6fb6a484, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@52c42361, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@3130db07, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@133c6d08, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@28c8a41d, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2f56399c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@dd19425, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@31217363, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@6e9c06b4, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@eb03d5e, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@461c41fd, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@7f36326f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@5c50a49e, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@15804157, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@2d92e3cb, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@2d92e3cb, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@50de6337, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@6c6b4207, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@3fc38f98, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@213caf11, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
