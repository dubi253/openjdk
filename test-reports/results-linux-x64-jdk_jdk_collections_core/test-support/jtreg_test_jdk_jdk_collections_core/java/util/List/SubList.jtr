#Test Results (version 2)
#Sat Apr 13 18:16:15 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=582 0\:00\:00.582
end=Sat Apr 13 18\:16\:15 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az695-953.gmayhch2cacunn5b1cp1zlasod.dx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1017-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Sat Apr 13 18\:16\:15 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1017-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757350400,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1017-azure
totalTime=582
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/566)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Sat Apr 13 18:16:15 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Sat Apr 13 18:16:15 UTC 2024
elapsed time (seconds): 0.023
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:16:15 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Apr 13 18:16:15 UTC 2024
elapsed time (seconds): 0.023
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Sat Apr 13 18:16:15 UTC 2024
Test directory:
  compile: SubList
finished: Sat Apr 13 18:16:15 UTC 2024
elapsed time (seconds): 0.106
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:16:15 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Apr 13 18:16:15 UTC 2024
elapsed time (seconds): 0.106
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Sat Apr 13 18:16:15 UTC 2024
Mode: agentvm
Agent id: 3
finished: Sat Apr 13 18:16:15 UTC 2024
elapsed time (seconds): 0.451
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91947)----------
Seed from RandomFactory = -7468807678103864516L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1000155036], 0, 1): success
test SubList.testAdd([42, -1278087812], 0, 1): success
test SubList.testAdd([42, -1081715297], 0, 1): success
test SubList.testAdd([42, 1976168859], 0, 1): success
test SubList.testAdd([42, -1097504043], 0, 1): success
test SubList.testAdd([42, -93095451], 0, 1): success
test SubList.testAdd([42, -1166109853], 0, 1): success
test SubList.testAdd([42, 202970057], 0, 1): success
test SubList.testAdd([42, -1552081854], 0, 1): success
test SubList.testAdd(java.util.ArrayList@f11ab31, 2, 5): success
test SubList.testAdd(java.util.LinkedList@6b30be26, 2, 5): success
test SubList.testAdd(java.util.Vector@e2a453, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@38832519, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@6942ee8f, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7d52c17c, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@47a2888d, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@34304f53, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@f7ab46f, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@772d899c, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@c0cfa61, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@5e8f5795, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -1728440405], 0, 1): success
test SubList.testAddAtPos([42, 506972827], 0, 1): success
test SubList.testAddAtPos([42, 42498165], 0, 1): success
test SubList.testAddAtPos([42, 643536590], 0, 1): success
test SubList.testAddAtPos([-1638335576, 42], 0, 1): success
test SubList.testAddAtPos([-1728867517, 42], 0, 1): success
test SubList.testAddAtPos([1002213552, 42], 0, 1): success
test SubList.testAddAtPos([1213444426, 42], 0, 1): success
test SubList.testAddAtPos([42, 593615024], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@21b75cf0, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@7824d690, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@19da992c, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@64c828a7, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@23a76d73, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@b4d5f2c, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@31919ad0, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@509b31e0, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@69134c8c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2462a5f6, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@4bcd89db, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2b335d45, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@6cce7499, 2, 5): success
test SubList.testClear(java.util.LinkedList@19a55d5f, 2, 5): success
test SubList.testClear(java.util.Vector@55e12ead, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@5cde7a01, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@cbd1d9c, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@4f4d3fac, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@cc3fba3, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@28c5590f, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@61b2a5e6, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@23a5ac7e, 2, 5): success
test SubList.testEquals(java.util.LinkedList@2746f1bb, 2, 5): success
test SubList.testEquals(java.util.Vector@61441952, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@38bf1f53, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@72836771, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3dab968d, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4d04f3b, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@6ad0e570, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@9b3c34d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1fdbe2f4, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@60f1edfe, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@39bc0afa, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@473e5ba1, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@2d110b23, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@7d9c4810, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@57c7c408, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6d154637, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@3f4fa4e7, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@3f4fa4e7, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@7747f412, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@53aeec4c, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@75991a16, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@c355ee9, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@e2ac2f0, 2, 5): success
test SubList.testGet(java.util.LinkedList@455ec41c, 2, 5): success
test SubList.testGet(java.util.Vector@3aff7ff9, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@586d54d7, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@2b644394, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@724a8e85, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3e97fd50, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@45ec2196, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@40f479c4, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@22aca736, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@43717382, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@44bc906a, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@4e0acfbc, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6814661, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6c11ece4, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@6f1cdeb3, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@62787879, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@5b37f7d1, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@5b37f7d1, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@558a7b63, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@50011053, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@592bf15c, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@ca14026, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@a61dbf2, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@40a540ad, 2, 5): success
test SubList.testIndexOf(java.util.Vector@25a5378e, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@765f16dd, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@25ba1a18, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1b962db5, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3d7ad61c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@b07f3e9, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@35ee701, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@22fede80, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@46b2bdf7, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@13c76cbb, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@58a7aaca, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@757e9691, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2f62a1df, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@13a06b93, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6d40476e, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@49016769, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@49016769, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1e54a8e7, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6987397, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@59234050, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@250431ad, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@1ad39d17, 2, 5): success
test SubList.testIterator(java.util.LinkedList@620efb6c, 2, 5): success
test SubList.testIterator(java.util.Vector@3aa4e43c, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@2624d600, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@483a29c0, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5fa9bfbb, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@63418d2, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@24cb9235, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@57255bce, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@74e8e363, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@711adfdd, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1adfab1a, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@33354c3c, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4af31cd5, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@6abe39b4, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@69fcd165, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@56e64cf8, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@2ea793bf, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@2ea793bf, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@5337db6b, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@47416cd, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@2f434bb0, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@3601b126, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@29d5e0e6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@526845ff, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@328e881, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@778d83c7, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@51eb154d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@7e265fc2, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7ef8c66f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@248c8616, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@6c1a444e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4b2fba0, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@2718ee56, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3d54b53, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@2faacdd1, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@6e558c14, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@78086428, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@6f3a84a0, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3952951, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4db54ac2, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4db54ac2, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@fe5e62e, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@5ab04e57, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@4341113a, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@792ab481, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@4a31f46f, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@2dc2113e, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@6094190, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@14a3c67c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@1ec5c7a7, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@4a35dc61, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3ffa91c7, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@604d38be, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@10c02014, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@1687d1ac, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@4a66d06c, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@2cc273f0, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@2c4cdd4f, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@118f9029, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@275e8787, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@dc868fc, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@277c07ee, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@54bb4ed0, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@9caba64, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@4f6c9f1f, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2964cbab, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@1d5c13b5, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1c7c0a61, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5740fbe5, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@354fe85f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@73d14bd, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@3a8d35d9, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@3a8d35d9, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1740deeb, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@2fbec20, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@24302fbc, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3d12caf1, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@350abfc3, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@124b82e0, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@e94fb08, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@7a9d4af4, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@5f3556a8, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@409c34e6, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@409c34e6, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@1039c7a3, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@53ebe476, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@184d877e, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@3ad6351b, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@5a81d800, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@fb4dbf9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@403f056d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@42da4347, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@3aedf77a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@39b10e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5b84efb8, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@4e084cb6, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4155fa, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@2e96c0e5, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@7c09a744, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@7cc0487d, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@55a07726, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@65682d6, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2232ccc4, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@353e3fdf, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@195a4481, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3819b0be, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@9246625, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@6d80e4c7, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@f835e8d, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@32bf4dda, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@90f981f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@132c2b95, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@26f46e73, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@233ca3f8, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@70bedb7d, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@70bedb7d, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@3e8ce6dc, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@732d647c, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2ce4ab5d, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7162d3eb, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@5521ce22, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@3fe21f19, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@2208777c, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@396dc711, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@59ce43f4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@302149ea, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@623fb22, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@4153057a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@3bee096a, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@52e8110d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@7d3bb9b6, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@354b4d43, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@33a7b39e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@4d4fce25, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@3fbe6792, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@44d13cbf, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@61366df8, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@3cd7d555, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1682940847], 0, 1): success
test SubList.testListIteratorSet([-981374292], 0, 1): success
test SubList.testListIteratorSet([-1241229500], 0, 1): success
test SubList.testListIteratorSet([859426457], 0, 1): success
test SubList.testListIteratorSet([-1412895054], 0, 1): success
test SubList.testListIteratorSet([554753882], 0, 1): success
test SubList.testListIteratorSet([579504040], 0, 1): success
test SubList.testListIteratorSet([-758704442], 0, 1): success
test SubList.testListIteratorSet([216194084], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@3243283d, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@60d3a810, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@368456fc, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@92c8fda, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@6c6a23bf, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@64a15994, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@4cfcbc67, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@59334514, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@310337c4, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@43e67ca2, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@5e0aab58, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5a21d47b, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([517267719], 0, 1): success
test SubList.testListIteratorSetPrevious([-1245701474], 0, 1): success
test SubList.testListIteratorSetPrevious([1217351596], 0, 1): success
test SubList.testListIteratorSetPrevious([1434816174], 0, 1): success
test SubList.testListIteratorSetPrevious([1033199195], 0, 1): success
test SubList.testListIteratorSetPrevious([2091609362], 0, 1): success
test SubList.testListIteratorSetPrevious([1536098117], 0, 1): success
test SubList.testListIteratorSetPrevious([1584048515], 0, 1): success
test SubList.testListIteratorSetPrevious([1145710400], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@565345a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@712fe2d3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@48d7f0f5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@3c660652, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@49816344, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7dadb1f4, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@32be2bf3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@784b13cd, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@742e7da0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@756ac292, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@243c132d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@29e4dff4, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@5a9e880, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@693b14a5, 2, 5): success
test SubList.testModAdd(java.util.Vector@4ef99503, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@65abfa15, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@175171ee, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5b72705b, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@474c7c54, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@741524f4, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@7ef9e382, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@7430c56f, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@38350bc, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@2356d44b, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@735c1315, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@14bc4279, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@4435bfb9, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@138eb602, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@3b5b268b, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4f7cf8d, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@609eef7d, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@42438f8d, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@48c935bc, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7b5283b4, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@7b6c2c83, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2b3b808d, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@20d2c8a7, 2, 5): success
test SubList.testModClear(java.util.LinkedList@9ad0042, 2, 5): success
test SubList.testModClear(java.util.Vector@2cacb23c, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@3e0beff8, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@3b7b4a3, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@17c835c0, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@7de72cb0, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@361137b1, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@6d552d31, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@39ceb866, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@4c246ab1, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6b8e4132, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@4c250ed6, 2, 5): success
test SubList.testModGet(java.util.LinkedList@201b9055, 2, 5): success
test SubList.testModGet(java.util.Vector@be745e4, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@2a1d5614, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@717588a4, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@209c199d, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@5c356d80, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@76cd9516, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@475081d7, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@238289d, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@487abf9, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@640152be, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@4bf15b3d, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@6ce117c5, 2, 5): success
test SubList.testModHashCode(java.util.Vector@2aea89cd, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@30062540, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@3d551329, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@282ee09, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@2e1e7cc9, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@47129fcd, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1e128683, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@31addf34, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@425fdd08, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@69f01033, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@5511c178, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@3d05e3eb, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@389207e3, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@53864a26, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@ac23cf, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@5738474b, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@52070ed0, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@6392fab, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@786b0ed3, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@55a8fbbc, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@606ee7ee, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@76779819, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@39357282, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@70f7b067, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@26a4dc04, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@7c17df7d, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@70830350, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@726ecea8, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@57b882da, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@63c88d48, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@3b0d657, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7b996587, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@72c951e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@b857359, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@34d95aa5, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@e972152, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@647d3dba, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@4d7bc975, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@20089623, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@46d9d4df, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@2065cea6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@299223ae, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@243bf88d, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@16401f24, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@6f7fd2f4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@69877f9c, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@180a0a31, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@3f95388a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@5e69ea17, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@115ff7fb, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@47411cda, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@68e1ba5f, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@3a97bcc5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@2279426c, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2eb03b9f, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@787f9c17, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@48ba4236, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3210cfe3, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@4258a2e6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@4784d786, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@61d0daa5, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@c6331c4, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@4d6789d6, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6207b3a1, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@12850b47, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@403ed160, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7133c0b5, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@797004e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@12cfc705, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3ff538ae, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@5740745b, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@65be0e7, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@56a20b6c, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@5ef25909, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@3857e859, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4d015020, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@77ea4b98, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@a38e8f7, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1ce7bcf3, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@65970285, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@59e90141, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5d2546c, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@4a6913e7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@5d8ca6c8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@61b4e40d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@2119fca3, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@5c47827, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@2f94ad05, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@7917eefa, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@77859b6, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@3b93d738, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@21d1fe6, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@7644e96f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@31567d2a, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@17de10aa, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@1e482d0d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@33e3e0da, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@18fa7bb5, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@1f4ac0b2, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3bfc72cc, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@594ba123, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@7558da99, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@cc8790d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@475aca8e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@747b75aa, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3b0be948, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@2df3fee1, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@7aa78773, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@206dcba3, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@7d5c07c6, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@78ed3a73, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6a0525e9, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@536f16b6, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@342f0e86, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@59c9d101, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@50e2d2e3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@70216d0c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7708b50, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@49dbf0fe, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@78ea39de, 2, 5): success
test SubList.testModRemove(java.util.Vector@22ffbc49, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@66eea7c0, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@6caba92c, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@662bda3f, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@2edf8634, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@26da24df, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@ee1b013, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@20531c51, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@1447a12d, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@3ab58560, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@54e0b3, 2, 5): success
test SubList.testModSet(java.util.LinkedList@24b8697b, 2, 5): success
test SubList.testModSet(java.util.Vector@2ba2a31d, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@152798c3, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@3851936, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@46b05819, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@5f9a2be0, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@35dd1f1e, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@21f6d8b9, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4254d008, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@1397d1e3, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@8bc077d, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@38c3868d, 2, 5): success
test SubList.testRemove(java.util.LinkedList@28ba90c7, 2, 5): success
test SubList.testRemove(java.util.Vector@7a329352, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1bad9652, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@296c217f, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1f8b25b1, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@6b784088, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@5c85d0b7, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@69c960b2, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([504262777], 0, 1): success
test SubList.testSet([-2070465583], 0, 1): success
test SubList.testSet([1875734844], 0, 1): success
test SubList.testSet([-200786529], 0, 1): success
test SubList.testSet([-703413726], 0, 1): success
test SubList.testSet([1774914303], 0, 1): success
test SubList.testSet([-873523916], 0, 1): success
test SubList.testSet([1730963110], 0, 1): success
test SubList.testSet([-1799386973], 0, 1): success
test SubList.testSet(java.util.ArrayList@5e09bd5d, 2, 5): success
test SubList.testSet(java.util.LinkedList@3e982702, 2, 5): success
test SubList.testSet(java.util.Vector@3aad4fd1, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@524bf5f7, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@44b42fb0, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@477cdf59, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@f83ebe5, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@4f2df9dc, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@49ddb6fa, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@54031622, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@241f5488, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1bc1a7ad, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@93db5a, 2, 5): success
test SubList.testSubList(java.util.LinkedList@75271c92, 2, 5): success
test SubList.testSubList(java.util.Vector@94f1175, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@275a477f, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@3acdfb5, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3c8fb8c5, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@667c8db9, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@35047b4b, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@71418c44, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@76f04fc8, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@6e2ffe04, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3fbda05f, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@595a83e1, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1844319f, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@9814b18, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@169a50b9, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@67d9e380, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@1faf9e9e, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@1faf9e9e, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@33192f41, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@24b8f4ae, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@7b0576fb, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@40e43f9c, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@25c14f8e, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@12d6cb5b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5ee6e00b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@1660fde2, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@606962da, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@71f4ac58, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@71f4ac58, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@16686040, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@20e771c4, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@7e3218f6, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@73391d45, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@215e3cf6, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@27095e8e, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@438b32a4, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@388017f4, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@56e8da0d, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@30830cf, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@30830cf, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@5adbd5e6, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@6d8cff62, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@8c9aa91, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@22c2b8f0, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@62b3f53f, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@5b6b43aa, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@158a25c4, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@196631f8, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@19b19cad, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4291f3c2, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4291f3c2, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@491a4888, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@51b898e0, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@7e186497, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@2a0752a6, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@41dd374, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2add624, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2365f921, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@e9a5be1, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@638143e3, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@12ed9bab, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@12ed9bab, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@3067f328, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@1d1e6df6, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@2db04a61, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@45328bb3, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@16a8727, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@4509f819, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@452a2e3c, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@22913fa1, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@5ed8557f, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@32c79c51, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@32c79c51, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@125c758a, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@130f148d, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2bf79e81, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@66d2e84e, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@126c53b3, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@4551cd59, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@5e7a2e9a, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@52888934, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@6f97e42f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@c2950e0, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@c2950e0, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@6ec554ca, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@7711ad67, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@29950679, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@16404634, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@686ee06b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2496f90c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@79f23212, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@1209ee4e, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@60bfdbb4, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@49a9cb30, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@49a9cb30, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@685023d7, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@661e19ef, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@7a00746b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@3f9e618d, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@175fbb26, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@b9900c4, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1635dd7, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@7f8bf24, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@553207eb, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@7c632f6d, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@7c14ff35, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@6230590e, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@6234882b, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@56ed814e, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@87218b1, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1c529134, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4f261a5d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@71fcb01d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@67cfb757, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@258d44e, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@258d44e, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@609df840, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@3ba85889, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@19c9449a, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@59933be1, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
