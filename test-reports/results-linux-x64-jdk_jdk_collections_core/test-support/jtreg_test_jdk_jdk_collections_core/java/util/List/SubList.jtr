#Test Results (version 2)
#Fri Mar 01 16:34:50 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=511 0\:00\:00.511
end=Fri Mar 01 16\:34\:50 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az659-319
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 16\:34\:50 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1015-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=511
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/566)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 16:34:50 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 16:34:50 UTC 2024
elapsed time (seconds): 0.058
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 16:34:50 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 16:34:50 UTC 2024
elapsed time (seconds): 0.058
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 16:34:50 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 16:34:50 UTC 2024
elapsed time (seconds): 0.108
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 16:34:50 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 16:34:50 UTC 2024
elapsed time (seconds): 0.107
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 16:34:50 UTC 2024
Mode: agentvm
Agent id: 3
finished: Fri Mar 01 16:34:50 UTC 2024
elapsed time (seconds): 0.344
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91962)----------
Seed from RandomFactory = 6972239037440923296L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1315166279], 0, 1): success
test SubList.testAdd([42, 493524516], 0, 1): success
test SubList.testAdd([42, -7378768], 0, 1): success
test SubList.testAdd([42, 1440598551], 0, 1): success
test SubList.testAdd([42, -397972875], 0, 1): success
test SubList.testAdd([42, 929566622], 0, 1): success
test SubList.testAdd([42, 484997835], 0, 1): success
test SubList.testAdd([42, -978213089], 0, 1): success
test SubList.testAdd([42, 1782566858], 0, 1): success
test SubList.testAdd(java.util.ArrayList@73ea8856, 2, 5): success
test SubList.testAdd(java.util.LinkedList@764ef3a9, 2, 5): success
test SubList.testAdd(java.util.Vector@e28a1e7, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@2b5c3d26, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@70a2dfab, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@62089987, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@4c82b517, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@7ba3240f, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@53596d40, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@667a6fa8, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@26fbfbac, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@4a88208b, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([1781470702, 42], 0, 1): success
test SubList.testAddAtPos([42, 948859046], 0, 1): success
test SubList.testAddAtPos([-9364027, 42], 0, 1): success
test SubList.testAddAtPos([42, -967463857], 0, 1): success
test SubList.testAddAtPos([42, -191587549], 0, 1): success
test SubList.testAddAtPos([1855445854, 42], 0, 1): success
test SubList.testAddAtPos([-1610407976, 42], 0, 1): success
test SubList.testAddAtPos([1803775885, 42], 0, 1): success
test SubList.testAddAtPos([42, -290055705], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@70f71c9c, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@2b0d81cf, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@2d3cd52c, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@659f1339, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@724ddee7, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@129ae035, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@2843e8ae, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@6bfbdf2c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@45279c3e, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@76ffe954, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@4d76f3d6, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@45668e7c, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@1b20fa43, 2, 5): success
test SubList.testClear(java.util.LinkedList@2ec686a0, 2, 5): success
test SubList.testClear(java.util.Vector@3129e313, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@3e7a2244, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@2148172, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@6cec1795, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@12642df2, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@46e642e0, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@28766f75, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@6c07d3f9, 2, 5): success
test SubList.testEquals(java.util.LinkedList@5f0fb468, 2, 5): success
test SubList.testEquals(java.util.Vector@70a72276, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@4130cdcd, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@47c1ccfc, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@17387b77, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@375c9dda, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@3fc61532, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@ab4fbc3, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6700433e, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@3b180524, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@33cdea15, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@7da2453d, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1e4527d, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@10593afc, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@4bed628e, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@7f71712c, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@7625563f, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@7625563f, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@6c47fe2f, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@58208231, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1d3db8b2, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@f583517, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@3216418f, 2, 5): success
test SubList.testGet(java.util.LinkedList@6f7481e5, 2, 5): success
test SubList.testGet(java.util.Vector@51e1e30, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@1f571d, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@514c4211, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1c683ec4, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3afdca9a, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@281119bf, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@670e85e5, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@26ffa73a, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@1f14a5da, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5e45fb40, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@1d61b6c, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6dba1f1, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@428e6bd5, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@4fe03cb3, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@77564f8d, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@794cd882, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@794cd882, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@7bbd17be, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@4ca583bb, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@79ba14bd, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2fbacf45, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@cb51a58, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@56b99532, 2, 5): success
test SubList.testIndexOf(java.util.Vector@33d51ce3, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@643ea41a, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@5d3fb700, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@17286390, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@45a2b3f6, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@2f92d42c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@36cc1e19, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@64be935b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@5d7b5835, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@30fd50c1, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@55ab0aba, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1455f213, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5fcb0de3, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@699594b0, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4198bd56, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@79875cdd, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@79875cdd, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@23d4485b, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1421ff, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@20048cf0, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5556b1da, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@185166f1, 2, 5): success
test SubList.testIterator(java.util.LinkedList@3677def, 2, 5): success
test SubList.testIterator(java.util.Vector@526e5b79, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@5feac54, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@3a35ab63, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@6eb52a4, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@f5abc86, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@1bd673d5, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@42000289, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@ecfd960, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@75d8335f, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@59aa294b, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@35781d0, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@8f145f4, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@146fce92, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@2f0427e2, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4a8cc12e, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@6f8b1748, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@6f8b1748, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@d988102, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@5a2f1dcd, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@2b537dc6, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@44567dea, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@55a5bcae, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@22c4ce09, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@751ac44f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@23f2571e, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@1f983f1b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1a9eb46d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@65e1ab2d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@bb2d698, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@21a2cc7f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@59e1feec, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@324cd1d5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@77d208af, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@2f7393a0, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@18015df1, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@556fcbde, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@178c5464, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@761e2631, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@59736581, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@59736581, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@4c1b4748, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@3af13595, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@5ce22e9d, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5256ca5d, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@31aa0aac, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@162b52c6, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@77b10a19, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5ba54d78, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@5d9805cf, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@6cab0df1, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4563e348, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@4ed5310f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@db88495, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@60f01cbd, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@306b8efd, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@46b36fd6, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@5e81940b, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@119722b7, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7e6e7717, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@237fe66a, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@6e0387f2, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@161b5295, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@43b83d46, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@18efa8a2, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1bcc6d32, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@3c988b90, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@52a9e8b3, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4486244c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@570d857b, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@21215eb4, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1a0d427f, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1a0d427f, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@164e4773, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@3bd21a21, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@b89f56f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@416b4a13, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@1918ff7c, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@653600bd, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@37a72814, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@7c2d56a0, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@16281de9, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@506cdf05, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@506cdf05, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@68584c0f, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@15863be2, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@13a923e7, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@3836bfb6, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@37dca288, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@72288370, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3c385073, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@45dda4e6, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@46f9dba3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5993c632, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@c26a9b9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@37cd46c2, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@58313019, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@306ff235, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@1923bee2, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@71ecd5e8, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@22d830e5, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@60b60565, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6795bb6d, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@56b4f711, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@57b27e0e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6a462600, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@45c9985, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1ebbc40d, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@68ebecde, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@166a4cca, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@73c03ae0, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@4045e75f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@406b65, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@198cfbe4, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@6f7f8c7d, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@6f7f8c7d, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@4ace6f2, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@2eda5bfe, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@3a9fe96f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4d3d6851, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@3f42dd25, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@758a558c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@4637fd65, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@12d833b5, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@7fc5aa74, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@6c7923a9, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@24fbcee4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@41465fe9, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@37614500, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@240af655, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@18af6d90, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@5db1242a, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@26e88cbe, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@31e824cd, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@63b404a6, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@32bf5d9f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@2fc29f0a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2baefcd7, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([986835432], 0, 1): success
test SubList.testListIteratorSet([-288435472], 0, 1): success
test SubList.testListIteratorSet([-1276639661], 0, 1): success
test SubList.testListIteratorSet([-1844908395], 0, 1): success
test SubList.testListIteratorSet([1774593944], 0, 1): success
test SubList.testListIteratorSet([1358422587], 0, 1): success
test SubList.testListIteratorSet([-2139260401], 0, 1): success
test SubList.testListIteratorSet([-1285057586], 0, 1): success
test SubList.testListIteratorSet([-233353979], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@42f7ac9d, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@5a183077, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@4ad745e0, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@238382d3, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@3a7d59b2, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@21c116a3, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@14db499b, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@7ffaa77c, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@2cc64a3d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6eda2172, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@68d7fb69, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1e3f1a82, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-80260633], 0, 1): success
test SubList.testListIteratorSetPrevious([1558083446], 0, 1): success
test SubList.testListIteratorSetPrevious([-377950561], 0, 1): success
test SubList.testListIteratorSetPrevious([-1213129306], 0, 1): success
test SubList.testListIteratorSetPrevious([618382912], 0, 1): success
test SubList.testListIteratorSetPrevious([-1822216953], 0, 1): success
test SubList.testListIteratorSetPrevious([327290487], 0, 1): success
test SubList.testListIteratorSetPrevious([-1939090770], 0, 1): success
test SubList.testListIteratorSetPrevious([1173566955], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@7e1ec6d2, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@435857cd, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@190b4fde, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@53f39234, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@583d2a7e, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@67781d80, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@12f3a243, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@375302a8, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@7bc66b3e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@409205ab, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@3d2a73cf, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5aec650e, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@7caa5cab, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@6fde126b, 2, 5): success
test SubList.testModAdd(java.util.Vector@3b1c732f, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@215fa29d, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@552dd5e, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@a080247, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3ecd5a82, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@5ae62b72, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@1504ed30, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5e8cc02a, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@60a08016, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@3bae5913, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@2502debc, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@3054a3d5, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@1cb88a78, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@60df02c7, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@756d18be, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1aa60d9c, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@5ff46d65, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@48afdd0a, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@7fed9948, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@54ff48b7, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@36aca508, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@ed31665, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@63a7ff3c, 2, 5): success
test SubList.testModClear(java.util.LinkedList@15fc06c0, 2, 5): success
test SubList.testModClear(java.util.Vector@7346d7ba, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@7297f6fe, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@3c7d4f43, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@37a8cdf3, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@5b8b8b5, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@213c3b1a, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@7de2286d, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@38d4fb58, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@131214bd, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@73d15050, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@3ba087f1, 2, 5): success
test SubList.testModGet(java.util.LinkedList@68136ac1, 2, 5): success
test SubList.testModGet(java.util.Vector@122f067b, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@65d89b62, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@5e69f678, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1cb6323c, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@403d8846, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@75509456, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@3b66961c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@41e1acdf, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@73a84570, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1cc7615a, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@2ef99069, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@55c0c0, 2, 5): success
test SubList.testModHashCode(java.util.Vector@669f2940, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@59216bac, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@7e8fcfbb, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@3cdf8a1a, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@745fb3ad, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@5583e0d4, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@42bf6b80, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7cf18a66, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@2deb0ca6, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@190a9a38, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@5cd79da1, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@7cbdfa8b, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@4b7e2d1c, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@25d71135, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@106a32ad, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@553a816e, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@93eccd6, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@b8b9dc3, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@3fe6d9c9, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@385f7c91, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@7e5b8bfb, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@3ec46199, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@7ca0d41c, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@707e0f38, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@525925a6, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@64436ce1, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@4f9b481a, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7101d8e1, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@11d773fc, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@34a388da, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@53928caa, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@64665310, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@581a50f4, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1db2b30f, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@2e7a4a30, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@16b17d72, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@605ee979, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@447ccfa5, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@77b3b74, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@27797564, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@214fd0b4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@1ce6f041, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@33174ca8, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2b78f42f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@59a5c308, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@ed89a3a, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@6a217f13, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@2e58990d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@52752c0f, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@3bbb2d76, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@1b670a4d, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@227a6eb7, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2bf77223, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@5b1aba26, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@4a2cd363, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4d34f9d1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@6ddab14a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4975fa16, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@3d97a55b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@67b1d7ca, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@151b610a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@ea53d28, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@60e2c27b, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3dfca22c, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1ab91dbf, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@64bc78f4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2d450d2b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5cc2255b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@3bd67480, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@590a2fc4, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@4645d1ed, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@6c24f7ba, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@5bbd79e7, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@5d346739, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@2644b8b5, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@78aa3843, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@59c274f9, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@3a40c6a6, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@2d026a14, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@eb0aa3a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@3a06fc14, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4a97ff99, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@1d0c5fca, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@3e31327f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@2cf4dce3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@66dec348, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@76fe4792, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6a63c595, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2efb9135, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@1cd9b94b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@28abe797, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5c22369, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@753029da, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@33750819, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@aeb44b4, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@14c4ba54, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@9a014e0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@70affc51, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@511b6528, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@58961d72, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@21a6e25d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@3f64eb03, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@75853917, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@32879590, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@31b787ed, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@ff81aae, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@4185b9cc, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@37bcb6fb, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@5c8fc7fc, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@5e68cd15, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@ebfd049, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@175f4519, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@2169af7a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7a0eb119, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@67a10a51, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5d420d42, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@424012b3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2a08e07, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@38ec8f95, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@5692b625, 2, 5): success
test SubList.testModRemove(java.util.Vector@712f1404, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@483116a5, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@b5604a4, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4ae2335, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@384f0551, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@5d7e515b, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@24f0f6d9, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@409b9167, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@2ff35b64, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5bdd2c6a, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@48ff94ed, 2, 5): success
test SubList.testModSet(java.util.LinkedList@37f9023e, 2, 5): success
test SubList.testModSet(java.util.Vector@3c56cab4, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@fbd84aa, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@5e284eca, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@195ea7de, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@588c8c85, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@61d77706, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@6f59d1a0, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@62e9d054, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@7c91f723, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@faddc69, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@383ef289, 2, 5): success
test SubList.testRemove(java.util.LinkedList@72a8639e, 2, 5): success
test SubList.testRemove(java.util.Vector@681a8c68, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1ce9aa38, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@4f125405, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@66571e92, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@32710977, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@2d22a18b, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@e7252a8, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-731108199], 0, 1): success
test SubList.testSet([768937818], 0, 1): success
test SubList.testSet([-2080629596], 0, 1): success
test SubList.testSet([1754705628], 0, 1): success
test SubList.testSet([929171465], 0, 1): success
test SubList.testSet([130986767], 0, 1): success
test SubList.testSet([-940639910], 0, 1): success
test SubList.testSet([541377682], 0, 1): success
test SubList.testSet([1537912046], 0, 1): success
test SubList.testSet(java.util.ArrayList@39047cc, 2, 5): success
test SubList.testSet(java.util.LinkedList@25604f5f, 2, 5): success
test SubList.testSet(java.util.Vector@2a366764, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@186fff0b, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@6559e44b, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@2f7ea649, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@147c08cc, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@722763b9, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@5653e9cc, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@39977994, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@3f68f7f8, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@6ab61979, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@8090e9f, 2, 5): success
test SubList.testSubList(java.util.LinkedList@254a7615, 2, 5): success
test SubList.testSubList(java.util.Vector@cb12fee, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@2b654c57, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@7e32154, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@10034b61, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@491e3659, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@7fa252ae, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@5ae1950e, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@40858080, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@5a7cec63, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@671a85cd, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@20ed2e36, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@14ce1aca, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@6b5ce602, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@5907b117, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@50ae3573, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@66cfdfb5, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@66cfdfb5, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@63c6bd9, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@70e11d01, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@46247f5b, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@119ad8a4, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@11b3382a, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6d4424b2, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4504d3df, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@7678006, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@70ae74df, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@21dcc757, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@21dcc757, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@3640c076, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@451215a4, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@231f63a5, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@d139431, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@278dca6d, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@2e676bcc, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@521bc890, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@7eb9c991, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@15eb5e1c, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@6801069e, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@6801069e, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@2140a3f2, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@a0d9e64, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@680a02e2, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@64489b25, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@17f16b3a, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@68e49662, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@ca0b62e, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@30ec0fd7, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@499331ac, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@5562d890, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@5562d890, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2015a636, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@427571b9, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@145b39e2, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@1cbccf9c, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@75102b77, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4fed56a3, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@17bca7d4, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@1dd0a1d1, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@40601907, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@54061bde, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@54061bde, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@1f9db136, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@4b4e5220, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@2d49e5e5, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@63f6d98d, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@6a6fc8bb, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@662dd7fa, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@47577ad2, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@b8a422f, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1a057a6c, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@1d23c1ff, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@1d23c1ff, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@62b1492d, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@54ad64fb, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6e41c52c, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@42fcc20f, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@4965d917, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@37af8ff, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@37ef1ea1, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@752cad7a, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@5f0bbe81, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@80a7a41, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@80a7a41, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@50f2ede4, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1cecf2c4, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@17d3a95c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6dcc1ba5, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@65f3fa3f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@75d9d816, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1218dc8c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@3c49a6ff, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6854a52f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@5ee20e81, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@5ee20e81, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@5d391613, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@71d62, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@30a2293a, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1761c681, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@3d367bd0, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@61732b3d, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@222ed37c, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@6ed7ca4b, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@7cc41406, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@8d3ab4c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4fb3002c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@70a0eb8b, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@5c19f0f1, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@b47fd3d, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@305029a3, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@76b46a15, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@692b986a, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@568784a8, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@6685ae30, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@4f08c1ba, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@4f08c1ba, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@64c52953, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@49ff7dfc, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@2a0ac24, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@1464d688, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
