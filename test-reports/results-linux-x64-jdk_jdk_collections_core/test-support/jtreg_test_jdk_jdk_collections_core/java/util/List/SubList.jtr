#Test Results (version 2)
#Sun Mar 17 17:52:35 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=584 0\:00\:00.584
end=Sun Mar 17 17\:52\:35 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1427-761.ftqghr0h53yelcozmorifnlbzb.ex.internal.cloudapp.net
javatestOS=Linux 6.5.0-1016-azure (amd64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Sun Mar 17 17\:52\:34 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1016-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757350400,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1016-azure
totalTime=585
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/566)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Sun Mar 17 17:52:34 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Sun Mar 17 17:52:34 UTC 2024
elapsed time (seconds): 0.064
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Sun Mar 17 17:52:34 UTC 2024
Mode: agentvm
Agent id: 2
finished: Sun Mar 17 17:52:34 UTC 2024
elapsed time (seconds): 0.064
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Sun Mar 17 17:52:34 UTC 2024
Test directory:
  compile: SubList
finished: Sun Mar 17 17:52:34 UTC 2024
elapsed time (seconds): 0.107
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Sun Mar 17 17:52:34 UTC 2024
Mode: agentvm
Agent id: 2
finished: Sun Mar 17 17:52:34 UTC 2024
elapsed time (seconds): 0.107
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Sun Mar 17 17:52:34 UTC 2024
Mode: agentvm
Agent id: 4
finished: Sun Mar 17 17:52:35 UTC 2024
elapsed time (seconds): 0.411
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91954)----------
Seed from RandomFactory = 3465285996065114314L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1963273089], 0, 1): success
test SubList.testAdd([42, -1399229496], 0, 1): success
test SubList.testAdd([42, 44130679], 0, 1): success
test SubList.testAdd([42, -512745579], 0, 1): success
test SubList.testAdd([42, -2026575439], 0, 1): success
test SubList.testAdd([42, -998657604], 0, 1): success
test SubList.testAdd([42, -1643382779], 0, 1): success
test SubList.testAdd([42, -2096578910], 0, 1): success
test SubList.testAdd([42, 1773148303], 0, 1): success
test SubList.testAdd(java.util.ArrayList@72758d50, 2, 5): success
test SubList.testAdd(java.util.LinkedList@553e3ff5, 2, 5): success
test SubList.testAdd(java.util.Vector@7ecf830d, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@67310be2, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@31140446, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@3f0f9373, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@14a55fe6, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@703f1a48, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@59273b77, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@26c79b33, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@39770a86, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1c217c38, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -1778989316], 0, 1): success
test SubList.testAddAtPos([42, -189466827], 0, 1): success
test SubList.testAddAtPos([1285175309, 42], 0, 1): success
test SubList.testAddAtPos([42, -1591706507], 0, 1): success
test SubList.testAddAtPos([42, -130220273], 0, 1): success
test SubList.testAddAtPos([42, 1676533870], 0, 1): success
test SubList.testAddAtPos([1579834513, 42], 0, 1): success
test SubList.testAddAtPos([118209972, 42], 0, 1): success
test SubList.testAddAtPos([-2071923281, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@343469bc, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@288cb7c0, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@603ecab5, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@6fec7ca4, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@f947cad, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3e53b419, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@40074ef8, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@66b905b4, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@2162f6c4, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6ab5ef5, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@2b24d2ae, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5441f07d, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@3102b62f, 2, 5): success
test SubList.testClear(java.util.LinkedList@df48bf5, 2, 5): success
test SubList.testClear(java.util.Vector@1a0e78c3, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@8f7d37f, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@3a8d3267, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@63c020f8, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@7b73794e, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@1f22a982, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@245fb54d, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@522a326b, 2, 5): success
test SubList.testEquals(java.util.LinkedList@e07a74c, 2, 5): success
test SubList.testEquals(java.util.Vector@6c55a0cd, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@62b8b43c, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@3720c57f, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@73ef4a34, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2606e760, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@7352aad9, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@13adb75a, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@20f51da4, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@577884ad, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@221cacdc, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@610dfca5, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6decc525, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@3e50e870, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@581c9036, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@55af7cf8, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@7411dd9a, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@7411dd9a, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@297e04c2, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@239b776c, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2a7be29e, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4e4d1533, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@664fde58, 2, 5): success
test SubList.testGet(java.util.LinkedList@67e45b68, 2, 5): success
test SubList.testGet(java.util.Vector@6ab35281, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@6e60dd22, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@5b18051e, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4ffec9af, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@42739fb, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@66a4e326, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@23fa61ab, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4ad6f09b, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@5f400d04, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7d62690a, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@ad569bd, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3d670623, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@7575b10e, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@31e45623, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@5367c41, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@485722b8, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@485722b8, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@7bbddaf3, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@cd47f58, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@226b7d7f, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7433c6f8, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@31349af3, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@7b7c762b, 2, 5): success
test SubList.testIndexOf(java.util.Vector@6215d5cf, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@4d919b14, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@6fbd9f55, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@581208bd, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@2c01ab86, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@2e03a3c8, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@ecb6ed1, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@3b3d76df, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@7c191c76, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@388a6ef1, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@3509bf9f, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7c399efd, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@21c73f39, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@65da4a27, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@58f08dc9, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@63d09a3b, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@63d09a3b, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@2b9b79a5, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6e97caee, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@693c83ec, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1c89aae4, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@703e95d8, 2, 5): success
test SubList.testIterator(java.util.LinkedList@7ca42627, 2, 5): success
test SubList.testIterator(java.util.Vector@74c5dd23, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@e773663, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@2c1d1294, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@35c634fe, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@58e441c7, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@706fc563, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5dca6786, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@74db28a5, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@a8fa3da, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@50a83622, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@306de4c6, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5d2015c3, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@153a90e8, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@3c8517cd, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5be0e87a, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@564a25ee, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@564a25ee, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@250f800d, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@2234a388, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@50a3138d, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@188e901d, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@afbcd4d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@681020a3, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@5a59edb5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@17325785, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@6a23cbc5, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@62c51698, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7c8ab43e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@263330d8, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1e7b6d68, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@901577b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@3375c7db, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5e0d5471, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@248e844b, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7817b9a5, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@6dc3406b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@55539a54, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@54485094, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2e8242d6, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2e8242d6, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@5aba832a, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@4a2a0094, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@68d27a29, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@377ac50, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@46362c9f, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@210bc839, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@74492a66, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@2515f290, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@242b52c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@ab844d4, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6019b698, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@3558628d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@43d20d61, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@25fc039c, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@160317ae, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@e205ad4, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@5d5aaa51, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@30c22100, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@38e7ff53, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@649c040b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@6d76b26e, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@137f413c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@470a5e73, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@4646c18, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@354a13ae, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@3809d472, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@39bcd5bf, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7efb193f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@1eda3e7f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@76053d0a, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@206e0b19, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@206e0b19, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1433041c, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@23236efc, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@5df68a08, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@e3e71ad, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@55783089, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@7e61a322, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6e462a09, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@7b7bbb26, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@7d842ff, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@394e038b, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@394e038b, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@192aa7a4, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@74ff1302, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@b8e6f79, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@5a63eeac, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@1a0e3331, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@240300a0, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@77ad3b2a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6d41091b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@674fb0b8, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@bfd8b78, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@45dad0bb, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@461d1d26, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@595b3ce7, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@313a8401, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@40707788, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@38851b3c, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@5ddbc4ec, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@44d44efb, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7824c5af, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@df77c84, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@74c86115, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3b821b43, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@58bc6522, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@44769b17, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4baf6710, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@13bd4c58, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@2bee1fca, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@4a9d0fde, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@7b4e3828, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@499cf429, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@47338666, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@47338666, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@6d585f9b, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@e2019f1, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@407d453a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6791ee6f, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@143764eb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@c654a42, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@3b70ce28, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@63e567cf, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@347e14c4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@609a9c5b, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@56359973, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@7e41bb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@233465f1, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@7ff76014, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@3b2f85dc, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@2e4d7693, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2e128c2f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@6f23636, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@6849dc35, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2de7721f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@5bb408ca, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6a46adac, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([3955928], 0, 1): success
test SubList.testListIteratorSet([400042407], 0, 1): success
test SubList.testListIteratorSet([-1340630735], 0, 1): success
test SubList.testListIteratorSet([1450571875], 0, 1): success
test SubList.testListIteratorSet([239482294], 0, 1): success
test SubList.testListIteratorSet([964734693], 0, 1): success
test SubList.testListIteratorSet([2118425474], 0, 1): success
test SubList.testListIteratorSet([-960861459], 0, 1): success
test SubList.testListIteratorSet([-275175107], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@7548396c, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@7022c570, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@438952d2, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@5aeaf0ed, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@5071b50a, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4cdf66f5, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@73c7fbbc, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@79c70b38, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@5f64192, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4b189fe3, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@37f61414, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@cb7e436, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([824272593], 0, 1): success
test SubList.testListIteratorSetPrevious([-359982909], 0, 1): success
test SubList.testListIteratorSetPrevious([-733576517], 0, 1): success
test SubList.testListIteratorSetPrevious([-295029555], 0, 1): success
test SubList.testListIteratorSetPrevious([-1273229059], 0, 1): success
test SubList.testListIteratorSetPrevious([1881535317], 0, 1): success
test SubList.testListIteratorSetPrevious([-1498541950], 0, 1): success
test SubList.testListIteratorSetPrevious([229116841], 0, 1): success
test SubList.testListIteratorSetPrevious([830827454], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@28f0dbde, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@1cd5ac53, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@516f8d31, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@6ae83ecb, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@4496a473, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@41d53f6f, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@347be2e7, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@34618870, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@617f951a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3af748c6, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@6c9d4af7, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@53f0e62, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@6faa18de, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@5d05b91, 2, 5): success
test SubList.testModAdd(java.util.Vector@548c556e, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@4130f9ce, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@620a93c7, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@3b644857, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@50dc64e, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@f732b2, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@27baa0d9, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@404e9da7, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@f56e5c0, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@689382c7, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@6d1bdf84, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@168575c, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@41ba6dc, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@4128f678, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@529bd1bc, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1aeff158, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@60368ea5, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@b36da0b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@56a1fb49, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@318b8c89, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@5add6a5f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3cc8f553, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@180e7a6b, 2, 5): success
test SubList.testModClear(java.util.LinkedList@32b83f6e, 2, 5): success
test SubList.testModClear(java.util.Vector@2989f44f, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@490b572, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@58c2ab38, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@2b97a91a, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@20515cfa, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@7162bd1c, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@b21eb91, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@50e76b78, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@1b422a74, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@9b014c1, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@3639b244, 2, 5): success
test SubList.testModGet(java.util.LinkedList@1ebbd738, 2, 5): success
test SubList.testModGet(java.util.Vector@d4bd3de, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@1faca691, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@65be4439, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@355a7ba5, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@51b9c2c2, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@3e4eb4c7, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@694a7d31, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@13ca0ef, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@1d8e916e, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4d9561c3, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@19d73bd6, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@16424603, 2, 5): success
test SubList.testModHashCode(java.util.Vector@7a823a10, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@2b83272f, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@470e0f98, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7280156a, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@5674dabd, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@2362dcc0, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@3936b6c8, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@f6fa6a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@7c0ef2c5, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@4375c992, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@1da59047, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@62cdab65, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@60e36525, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@396b8493, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@3cd6ae0e, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7b91e928, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@c2b0451, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@3bb424ef, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@492ab4af, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@5ed2229b, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@6684c66e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@32e0e2bc, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@5a1a5e02, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@2d7d82a2, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@1131533, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@55fd000, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@180bbc49, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@16399cd7, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@1626e405, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@4d4ad9d1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@687dbc68, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1dc5d58f, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@2e22d79, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@67328f6e, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@30ca5887, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@2c045490, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@62232dc3, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@1dfe4493, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@1c64ceb6, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@61864544, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@2958d992, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@6e968d52, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@fb187e2, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@22172c30, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@13d31efa, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7eea725f, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@571390af, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@7bdef8a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@351ef128, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@2f529880, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@fa34cc2, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2c1fe6bc, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@4758c24e, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@1441e440, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@51ec3f6, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1fdf44d0, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@410991ca, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1e97d02d, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@377d22a5, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@495d1775, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@56376ee9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@7b552ee0, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@16931e59, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@ddbc664, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@bbd1ee4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@592688b4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2a83539f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@21cd0d01, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@9a34d63, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1622bbc8, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@36870d25, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@3e8b17a9, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@159f73f5, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@de31f6b, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@54810fc, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@60d91e8b, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@781d4fee, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@763b5e6, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@13382245, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@104f33b6, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@40390d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@28fffe55, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@96fb47e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@21dd26ce, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@1119089c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@7449205b, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@44654514, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@11c32919, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6d0def6a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@65422658, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@16564768, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5fc95ba, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@2176f820, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@71663e05, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@370cca87, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@79c246b0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@66ecbd3f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@3ede3b40, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@22afb1c3, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@28e7b066, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@197225c8, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@fb3b173, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@24e396f0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3e35cc56, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@17a90f37, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@556745f3, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@36c77451, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@70edcb67, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@6e3b8bec, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@290dab08, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@60025f19, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3cedac25, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@3a17230b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7340ffb7, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@425d49f4, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7b5e7623, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@1bd02dd3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@207a4143, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@701dbeef, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@14633b48, 2, 5): success
test SubList.testModRemove(java.util.Vector@46f6921f, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@62d0170a, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@50ec5a40, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@6bbab31c, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@39bd226f, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@af7bcd8, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@5b010e00, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@6fec67e, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@218da99b, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2573de0f, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@18cfdffe, 2, 5): success
test SubList.testModSet(java.util.LinkedList@18f11053, 2, 5): success
test SubList.testModSet(java.util.Vector@33a90ee3, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@774195a8, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@21ea9802, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@2ebfc3aa, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@7bd2dcb3, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@3999a45f, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@31d416cd, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@70079e76, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@4e204aa2, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@45d886e7, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@2b9a48bd, 2, 5): success
test SubList.testRemove(java.util.LinkedList@70ec0ec5, 2, 5): success
test SubList.testRemove(java.util.Vector@aa300f7, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@2b108e0f, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@7ab19acd, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@66aa4f6c, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@74c51ba, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@54ae5ba8, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@2e1d3ae5, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([511083316], 0, 1): success
test SubList.testSet([-543183948], 0, 1): success
test SubList.testSet([1862146266], 0, 1): success
test SubList.testSet([-568580927], 0, 1): success
test SubList.testSet([73519272], 0, 1): success
test SubList.testSet([-266343308], 0, 1): success
test SubList.testSet([-1762036487], 0, 1): success
test SubList.testSet([1112900618], 0, 1): success
test SubList.testSet([-2136944598], 0, 1): success
test SubList.testSet(java.util.ArrayList@2493f749, 2, 5): success
test SubList.testSet(java.util.LinkedList@73e8d8f8, 2, 5): success
test SubList.testSet(java.util.Vector@38c3d865, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@f2b7eb9, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@20a2bf76, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@4459b6de, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@556c4ec8, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@5231c758, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@559663b, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@399439e8, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@6672c01a, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@246275b, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@2858710b, 2, 5): success
test SubList.testSubList(java.util.LinkedList@1e1a4990, 2, 5): success
test SubList.testSubList(java.util.Vector@754daf02, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@1da061bc, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@297802c4, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@31d1c60c, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@456c2808, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@4296f36c, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@110920e4, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5c5ae9a2, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@3aa23275, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@bb5d03c, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@7929b22b, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@22f29236, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@50d879a1, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@4d3271f6, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@3e8f4e14, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@47237a8b, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@47237a8b, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@6113dc65, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@324186be, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@79e397bc, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3ac3f842, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@4a01b155, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5e431ed9, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@621b9d0c, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@403e8107, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1b23d96e, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@30f76634, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@30f76634, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@6f5344dc, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@39a868e3, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@6598b350, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@94b97b6, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@2bc50c17, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@c6f5fa6, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@4565cc4c, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@70486a4b, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5ed47392, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@7bad7590, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@7bad7590, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@242f6926, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@4b745be5, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@44736854, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6d0171bb, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@608c5921, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@13f74ef9, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4f0273b9, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@7a7fdce4, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@35d87d8d, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@76b49dc1, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@76b49dc1, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@3124c53e, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2dd3fb06, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@7af19be3, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@4b85f975, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@42f4a397, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@18aefbe4, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@511decdf, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@164c4870, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@5f8420c4, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@7aba99c3, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@7aba99c3, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@22411700, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@6cfbb070, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@16bf620, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@63da39a3, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@54119592, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6be7d4f6, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@9d3dba0, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@4421de74, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@73129c8e, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@5973f3ec, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@5973f3ec, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1779a9c3, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@11e0e97b, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7fbf611, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5e78d8b3, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@105efeb2, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@58576b51, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@317fc9e4, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@43bec3fd, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@6e14acb0, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@5a00fd5a, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@5a00fd5a, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3a417b54, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3b700c65, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@3028cb91, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@597fb807, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@30691d3e, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1fc2cd40, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6a3dd888, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@2c42f2, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@36c2ff30, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7607d811, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7607d811, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@3c6513c, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@573b223b, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@51c5d543, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@5a9d92c6, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@cffcb07, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6f0e22c3, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@f10a610, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@669e5fd6, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2a779f35, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@69c448db, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1fb3f3b9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@440f983f, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@5255aa19, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@69ca2cfd, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@6f8e51ea, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@3f5de9c2, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4faa0bce, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@402d9b85, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@72dcc8bf, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@38328e82, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@38328e82, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@53f9662b, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@3944a258, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@66363198, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@182fdc44, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
