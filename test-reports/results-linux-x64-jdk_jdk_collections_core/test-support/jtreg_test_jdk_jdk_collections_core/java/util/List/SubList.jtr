#Test Results (version 2)
#Fri Mar 01 18:40:18 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=556 0\:00\:00.556
end=Fri Mar 01 18\:40\:18 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1019-196
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 18\:40\:18 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1015-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=557
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/566)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 18:40:18 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 18:40:18 UTC 2024
elapsed time (seconds): 0.059
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 18:40:18 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 18:40:18 UTC 2024
elapsed time (seconds): 0.059
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 18:40:18 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 18:40:18 UTC 2024
elapsed time (seconds): 0.091
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 18:40:18 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 18:40:18 UTC 2024
elapsed time (seconds): 0.091
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 18:40:18 UTC 2024
Mode: agentvm
Agent id: 3
finished: Fri Mar 01 18:40:18 UTC 2024
elapsed time (seconds): 0.403
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91950)----------
Seed from RandomFactory = 6526938738248158015L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1033545181], 0, 1): success
test SubList.testAdd([42, -1708680498], 0, 1): success
test SubList.testAdd([42, 523192108], 0, 1): success
test SubList.testAdd([42, 911487634], 0, 1): success
test SubList.testAdd([42, 1455428432], 0, 1): success
test SubList.testAdd([42, 394618450], 0, 1): success
test SubList.testAdd([42, -214473899], 0, 1): success
test SubList.testAdd([42, 2147031452], 0, 1): success
test SubList.testAdd([42, 1003332386], 0, 1): success
test SubList.testAdd(java.util.ArrayList@4c1bb873, 2, 5): success
test SubList.testAdd(java.util.LinkedList@98246fd, 2, 5): success
test SubList.testAdd(java.util.Vector@30ef875b, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@1c256682, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@42d18a7c, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@29c9f952, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@290e54ad, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@2d8df3f4, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@44f82c8, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@49fd2fa1, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@16318496, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@56278e92, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 27667652], 0, 1): success
test SubList.testAddAtPos([42, 668455352], 0, 1): success
test SubList.testAddAtPos([-696291112, 42], 0, 1): success
test SubList.testAddAtPos([265921244, 42], 0, 1): success
test SubList.testAddAtPos([-516376778, 42], 0, 1): success
test SubList.testAddAtPos([-1786272388, 42], 0, 1): success
test SubList.testAddAtPos([183057505, 42], 0, 1): success
test SubList.testAddAtPos([-1816904915, 42], 0, 1): success
test SubList.testAddAtPos([42, -1558949680], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@32961bc8, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@4a2683c1, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@7c18f036, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@5b85d07c, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@9ff315a, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@424de8d7, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@6fbb1ff3, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@3a19997, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@5fc24cde, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4089fcea, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@69203e5e, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7475694e, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@60ca2bf1, 2, 5): success
test SubList.testClear(java.util.LinkedList@1583d314, 2, 5): success
test SubList.testClear(java.util.Vector@2ee34856, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@29dd9316, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@6c246498, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@58cdf093, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@35dbd2e5, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@733175de, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@419721cb, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@7f278e8f, 2, 5): success
test SubList.testEquals(java.util.LinkedList@1a4b0414, 2, 5): success
test SubList.testEquals(java.util.Vector@b4734bc, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@3db09f84, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@7b05c6cf, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@77a2a37e, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@44bbbacc, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@528ff4c2, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@3372a856, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@e75d425, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@32afb338, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@39ea611f, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@268836f5, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@53cbd9c4, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@2f50b138, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@54f40cda, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@512d6662, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@6a156cc6, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@6a156cc6, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@b44eeaf, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@afcad5e, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@231fc1d4, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@30ee5923, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@11562639, 2, 5): success
test SubList.testGet(java.util.LinkedList@3b55a714, 2, 5): success
test SubList.testGet(java.util.Vector@5154f69e, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@709729d7, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@6cf36343, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@21f3b819, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@608a43c4, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@2bfbe264, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@2860acd9, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6e25407c, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@6b21488a, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7ee7a0ee, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@4535d4ab, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@56a68f33, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3f1a4572, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@409f122, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@381715e4, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@2e8d713f, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@2e8d713f, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@25451dfa, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@2f7acfbe, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@4442e667, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@79dbc12a, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@38784a0e, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@3c405c2f, 2, 5): success
test SubList.testIndexOf(java.util.Vector@7e6e55af, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@7bbc74b7, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@1111a542, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5321a94e, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@20f4373c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@36837b8f, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@164f6223, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@657507dc, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@9c4a0c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@3f7d2ff9, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@75aa459, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@776e2408, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@25981425, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@4191867c, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@20fb1f9d, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@518265bf, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@518265bf, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@49d3505e, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@7e046992, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@632ed72f, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4627d64a, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@38481af3, 2, 5): success
test SubList.testIterator(java.util.LinkedList@2d9332f5, 2, 5): success
test SubList.testIterator(java.util.Vector@585d20b7, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@5d94b0b0, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@1d782b5f, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2d62c351, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@52593ea9, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@63d8ac73, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@480f6697, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@6aae8579, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@4fb9b582, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5d88ad2, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@490fe1af, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@138c165e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@a54a58e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@4753cca4, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@9a56a85, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@215acd14, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@215acd14, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@432ccdf6, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@54d82c2, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5d956102, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@4ce1c37a, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@380ef12c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@55d6d36c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@7ad124ab, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@4787ae9a, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@48c019ec, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5c284240, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@139dcff6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@25eb8345, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@563037fe, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6bd247af, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@6a8bedeb, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@517d4862, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@7ccaf03, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4724b1a2, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@37a95773, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@55f77c04, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@188d3862, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@5240eee, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@5240eee, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@5d48129c, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@2946bfb4, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@224fc830, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@37faea10, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@35c3f23e, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@56ce79bf, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@4f8fd041, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@293137ba, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@30a34380, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@671fe8ba, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7cdfba82, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@3f2d2bf4, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3a8da85d, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@5a6506, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@609183f5, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@23c7476f, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@1cb22d0b, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@46831fef, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3f46b6a2, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@8d13380, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@38ff73bf, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7699e33d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@36ba73fa, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@54169e79, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@18474993, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@77a21795, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@227cc4e, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@44c1a585, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@42b3cf47, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1d36f7c6, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@71b02aa3, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@71b02aa3, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4b02e58d, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@62540156, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1294e550, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@52c68d49, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@50399821, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1bb78198, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1f618d16, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@5ba2250f, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@50a1016a, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1e01f443, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1e01f443, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@47379861, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@53b9607f, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@2fa8694, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@62dc58d4, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@5f2cdc90, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@7de08906, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@297ebb5f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2be7799c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1e154d8e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6f6a0c8c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@74f3ecc0, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@396a633f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@679cb146, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@53883096, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@4babf018, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@6eeb5cba, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@482e370b, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@2e4a6c0b, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@429c0cce, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@224d6fc7, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@64940ab3, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@21a81792, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@47656ee6, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@5dc97eae, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@33b8da09, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@379ffd59, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@255efc8f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@23061e19, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@2e72066, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@61d34713, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@cd2b753, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@cd2b753, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@926aa80, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@c2833e1, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@28f9e21e, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4a1de6d3, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@15d90e88, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@3cacc936, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@2567c4a3, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@28e2ce0d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@436930ef, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4307be9e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6a487516, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@3563ce77, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1a7dc5a5, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@11a3946, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@2381782b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@2132fb0d, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@376e83, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@6ea17c38, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@71eced8c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@15bf6ab0, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@6fd8ee0d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@252301cf, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1786614114], 0, 1): success
test SubList.testListIteratorSet([-1939932236], 0, 1): success
test SubList.testListIteratorSet([1421590853], 0, 1): success
test SubList.testListIteratorSet([-2067862306], 0, 1): success
test SubList.testListIteratorSet([-766790484], 0, 1): success
test SubList.testListIteratorSet([-571776703], 0, 1): success
test SubList.testListIteratorSet([573337166], 0, 1): success
test SubList.testListIteratorSet([1859537343], 0, 1): success
test SubList.testListIteratorSet([-302274844], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@57c86c99, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@59766af3, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@71fbd214, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@5365a981, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@7ad16d9, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@337301d8, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@3cdb6e7c, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@7e4299f0, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@37044c1c, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@29f95f4a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@374f82ad, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@611a5bdd, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1277152244], 0, 1): success
test SubList.testListIteratorSetPrevious([-971340376], 0, 1): success
test SubList.testListIteratorSetPrevious([968023473], 0, 1): success
test SubList.testListIteratorSetPrevious([888704696], 0, 1): success
test SubList.testListIteratorSetPrevious([-862235193], 0, 1): success
test SubList.testListIteratorSetPrevious([225959415], 0, 1): success
test SubList.testListIteratorSetPrevious([-1969479464], 0, 1): success
test SubList.testListIteratorSetPrevious([-887245144], 0, 1): success
test SubList.testListIteratorSetPrevious([-265805596], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@52db8180, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@254b0669, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@4ba732ae, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@4b326c7e, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@f5af83b, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5b8c53e9, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@2ac77b00, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@3c34c634, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@79984816, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@10193e24, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@72bec154, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@13d0bb3f, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@54c23493, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@53027737, 2, 5): success
test SubList.testModAdd(java.util.Vector@2fe0a220, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@4a3b2d9b, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@1178c430, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@a356674, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@7ab9fa86, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@4c41870c, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@6bae5500, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@747eac5e, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@43231da, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@8444a84, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@11e404bb, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@248b56a4, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@72d3dcac, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@27544e20, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@163d9018, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6a9e938b, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@52d60e73, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@54c4a7d5, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@11048e57, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@69e09b79, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@3210e8e7, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1c039316, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@49a0f715, 2, 5): success
test SubList.testModClear(java.util.LinkedList@89182e, 2, 5): success
test SubList.testModClear(java.util.Vector@6a93cdb7, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@59ac4295, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@2518d803, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6c427f11, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@4c676383, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@6d81cf20, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@56685959, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@3055816, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@1438d617, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@2e46dbc2, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@42310dc9, 2, 5): success
test SubList.testModGet(java.util.LinkedList@3889a6f6, 2, 5): success
test SubList.testModGet(java.util.Vector@6a88078e, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@3a38c4e0, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@583bda8a, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@7050d254, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@2c7f8f14, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@4eabe1e0, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@30de96c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@50d3631b, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@397f9459, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@298e3cd, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@20237d6f, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@19b6d538, 2, 5): success
test SubList.testModHashCode(java.util.Vector@12386f78, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@f7f7b3f, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@2a6b94ac, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@585f051, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@43cc4a54, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@26a746b1, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@114f8701, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@50566ab5, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@aa6249a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@6469e12e, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@3e831f9a, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@3e16dfb2, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@71ae9edc, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@5910c1c7, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@3277b249, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@27f78874, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4bc44340, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@1b94f22f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@44980069, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@23329214, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@7615c23d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@63ebd32, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@75783d22, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@10e3c48a, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@44855ac8, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@5907a706, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@40abf615, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4691500, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@3097a7, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@39766a95, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@4fae226, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2600a58c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@6bd43d45, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@269f43aa, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@2da94338, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@57872dab, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@5aac8fe1, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@6ec3f7ac, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@30ea88b4, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7a5a5a3a, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@2ecef9f2, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@208dc08f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@18081f86, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@289e1e51, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@3259b3c5, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4586d309, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@13887ccf, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@78ec48dc, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@3deaf986, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@799bbc75, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@5abdcf46, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@40670e91, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@4d6c7e8e, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@a70e256, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@27125a41, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@387c501, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@1916fc7e, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6d036dee, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@53d41dce, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@7f9d2424, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@72a13753, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@499a298, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@3d55f874, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7eef9ac7, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@90ea9e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@6e727a0b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5aa1372b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@473c940, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@1d003fba, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1ca674a9, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@2d25874f, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@208db3bf, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@7a87b61c, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@2c6cb12, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@74504a1a, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@533aff0f, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@17372769, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@75b2cd1b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@373355e1, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@19eaf0e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@3c80de6f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@110e6585, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@14a48770, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@48eb1505, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@aecce8c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@3bf960c, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@4f252359, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@441fc8d1, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@934c995, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@71480397, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@59f33104, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7bb5e724, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@6ccc14eb, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@72048d19, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@24dbb635, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@5eedcce1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@537616e3, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@64b4fa68, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@6ce2bed, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@64b3d416, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@117eafd0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@74f68845, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@35223fa8, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4cf8344, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@41c05830, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@21b7d0c5, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@49461d41, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@6cb3145e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@fabe4ed, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@428aa4e4, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@1637b29c, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4d120e23, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@7dbbfc03, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@3bd6dec6, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@576aacbd, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@79b5e082, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@16a997fc, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7562316a, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@3147256e, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@7d87202, 2, 5): success
test SubList.testModRemove(java.util.Vector@22656542, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@b66ee2a, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@aeb02af, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1ade27fd, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@22f21445, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@435239a7, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@759ea986, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4f7704d8, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@6e9082bc, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@500b2b1f, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@63828e58, 2, 5): success
test SubList.testModSet(java.util.LinkedList@5bbcd497, 2, 5): success
test SubList.testModSet(java.util.Vector@487ebbd4, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@aa945b4, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@402b62df, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@5688ff3b, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@666a4c7, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@655d51b7, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@4b729fbd, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@58c5a8bb, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@7501c439, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@335cd27, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@59bcdfcd, 2, 5): success
test SubList.testRemove(java.util.LinkedList@594a5082, 2, 5): success
test SubList.testRemove(java.util.Vector@de646fd, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@2f067650, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@1147e2f4, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@ff30a4, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@40f0d338, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@1e8fc7ca, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@4054e684, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-919030324], 0, 1): success
test SubList.testSet([1865648627], 0, 1): success
test SubList.testSet([-1806836827], 0, 1): success
test SubList.testSet([-413275183], 0, 1): success
test SubList.testSet([-413010222], 0, 1): success
test SubList.testSet([1557945998], 0, 1): success
test SubList.testSet([987569588], 0, 1): success
test SubList.testSet([1753585489], 0, 1): success
test SubList.testSet([192133624], 0, 1): success
test SubList.testSet(java.util.ArrayList@48ddbc43, 2, 5): success
test SubList.testSet(java.util.LinkedList@4b83bbe8, 2, 5): success
test SubList.testSet(java.util.Vector@1e81216c, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@4b54cb8, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@753a1252, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@7659ea38, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@f0648c4, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@531dd486, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1fa00c98, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@2f5bd167, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@7b15c6f6, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@64773190, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@441377e3, 2, 5): success
test SubList.testSubList(java.util.LinkedList@776e7371, 2, 5): success
test SubList.testSubList(java.util.Vector@46ac6a15, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@1ac53bb1, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@5b72a963, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@57e5c835, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@3b58bcdf, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@55a156df, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@2797ad18, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@30d37652, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@49e75ef0, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@53918061, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@545c27df, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@59487dc7, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@50437918, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@2ac6e533, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@73d4ae9d, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@4de4ae4a, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@4de4ae4a, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@3700e617, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@373446d9, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@126465f7, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@2c64d011, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@347521d6, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4d6ca01f, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@759f206c, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@2959fc3d, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@275ece5d, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@3704f534, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@3704f534, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@7b6e99d8, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@53894964, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@65359452, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@cbbca5f, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@4ce65503, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@35e24164, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@4d72356f, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@5a14a188, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5f3e2ced, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@3c56b2e2, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@3c56b2e2, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@2ff035bf, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@7d29afa1, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@3970fb0d, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6dd07fd9, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@5d6b7d80, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@451eacce, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@499d787e, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@bbe046a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@101060f8, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@6c77d2a7, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@6c77d2a7, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1ba46b69, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@7190f07, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@855f706, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@2d07cac9, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@18534353, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2dcd230, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@6843c9eb, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@4dea5a86, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@13a0812, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1a889071, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1a889071, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@1881277d, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@6f42ba73, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@54ab539e, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@494b872d, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@5de201b2, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@33ec00, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@273f9394, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@7acb2c8d, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@60720e9d, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@4128e6f6, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@4128e6f6, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@61d16698, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@626ada27, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@730f983d, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@61f62617, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@2ebab792, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@67076f56, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3be28733, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@5ef0f353, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3f209ee2, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@26c60e9c, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@26c60e9c, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@51c81e11, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@2a16b9b5, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@6157c45f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@5b183c88, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@6b2d26b2, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1e651b4e, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@5b1133f6, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@208cf2cd, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@137abe8d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@72a026ca, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@72a026ca, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@74b528b6, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@42fb43f9, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@6586bdc8, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7c9f803c, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@2bf52235, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@619f84bc, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3f3a19fc, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@67b99f72, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@244738bd, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@6e7d1d15, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@61e7278a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@55ee4873, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@7de3eb9e, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1d02997d, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@7fecd386, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4bdd4417, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@51007d9d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@36113b7, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@25efa6b6, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@74ee65ec, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@74ee65ec, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@58227608, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@2f472267, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@b9c0037, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@670f6b74, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
