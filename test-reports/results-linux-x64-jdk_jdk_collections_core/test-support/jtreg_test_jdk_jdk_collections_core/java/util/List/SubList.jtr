#Test Results (version 2)
#Thu Feb 29 23:25:14 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=546 0\:00\:00.546
end=Thu Feb 29 23\:25\:14 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az840-954.wndg40qfsgie5kikvjficeueua.ex.internal.cloudapp.net
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 23\:25\:14 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1015-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=546
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/566)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 23:25:14 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 23:25:14 UTC 2024
elapsed time (seconds): 0.022
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:25:14 UTC 2024
Mode: agentvm
Agent id: 2
finished: Thu Feb 29 23:25:14 UTC 2024
elapsed time (seconds): 0.021
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 23:25:14 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 23:25:14 UTC 2024
elapsed time (seconds): 0.101
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:25:14 UTC 2024
Mode: agentvm
Agent id: 2
finished: Thu Feb 29 23:25:14 UTC 2024
elapsed time (seconds): 0.101
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 23:25:14 UTC 2024
Mode: agentvm
Agent id: 4
finished: Thu Feb 29 23:25:14 UTC 2024
elapsed time (seconds): 0.421
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91965)----------
Seed from RandomFactory = -7422458456964034217L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1815108033], 0, 1): success
test SubList.testAdd([42, -837802198], 0, 1): success
test SubList.testAdd([42, 1910605768], 0, 1): success
test SubList.testAdd([42, 1253481231], 0, 1): success
test SubList.testAdd([42, 740215317], 0, 1): success
test SubList.testAdd([42, -1427483885], 0, 1): success
test SubList.testAdd([42, 462601365], 0, 1): success
test SubList.testAdd([42, 2002495532], 0, 1): success
test SubList.testAdd([42, -1379873468], 0, 1): success
test SubList.testAdd(java.util.ArrayList@4a62bc7d, 2, 5): success
test SubList.testAdd(java.util.LinkedList@fe37293, 2, 5): success
test SubList.testAdd(java.util.Vector@786282c6, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@77088f52, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@5ef1e691, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@5692bb50, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@7ca1a515, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@4457ad54, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@30453d56, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@284a459c, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@1d663d54, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@4529d49c, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -68579605], 0, 1): success
test SubList.testAddAtPos([42, -201133585], 0, 1): success
test SubList.testAddAtPos([1207793002, 42], 0, 1): success
test SubList.testAddAtPos([2060975763, 42], 0, 1): success
test SubList.testAddAtPos([-363260836, 42], 0, 1): success
test SubList.testAddAtPos([42, 158829706], 0, 1): success
test SubList.testAddAtPos([42, -1710745366], 0, 1): success
test SubList.testAddAtPos([-791891277, 42], 0, 1): success
test SubList.testAddAtPos([42, 1270159386], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@4faabfe5, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@1e409f56, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@d610bcd, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@4b2601cc, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@2f89be11, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@31cd3fad, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@66ef45eb, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@7da360e, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@3f844320, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@24975e95, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@5e7d63d4, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@696600bf, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@84b4456, 2, 5): success
test SubList.testClear(java.util.LinkedList@6fa32433, 2, 5): success
test SubList.testClear(java.util.Vector@49bb0d69, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@6a115530, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@67017818, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@8a68cd2, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@54323c9d, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@774ec0b7, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@7091e63b, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@7f1792df, 2, 5): success
test SubList.testEquals(java.util.LinkedList@27415280, 2, 5): success
test SubList.testEquals(java.util.Vector@648fd366, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@1884d6c, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@55e47373, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3c676e09, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@51f7ae3c, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@141f0253, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2e2fba57, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@28a3fe97, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@12728802, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@72098e27, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@4673e2a8, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@57aa9049, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@499f90b3, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@7f68eade, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6e8362a5, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@7683a959, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@7683a959, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@50fa79c6, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5e8f5a64, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@76715883, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@2ff3a500, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@5b56a445, 2, 5): success
test SubList.testGet(java.util.LinkedList@4cea689d, 2, 5): success
test SubList.testGet(java.util.Vector@9fa1d02, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@696d53ac, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@50ef38cc, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@46ce8da0, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@47f5745a, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@5ac2c09d, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@708a96a5, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4b399b7e, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@78b201d4, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@63511c71, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@5232e6b6, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@7be408de, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@40e32daf, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@301348e2, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@65dcd08f, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@49425eda, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@49425eda, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@53feb3e6, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@b6027e0, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1a932aff, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@14cdb69f, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@254f3463, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@29265a83, 2, 5): success
test SubList.testIndexOf(java.util.Vector@522e2bc0, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@1684bf8, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@5b0ec963, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@dad0573, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@34e0b743, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@525f0bf5, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3b62dbf3, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@46949fd4, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@2834c503, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5797acc1, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@3add281, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@b1d1a0a, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2dd2a0a1, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@487b6d1d, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@59b5f77a, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1ad6b333, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1ad6b333, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@7b9bd8a7, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@27249088, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6c43aaa7, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@660c6dcd, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@7a74dd12, 2, 5): success
test SubList.testIterator(java.util.LinkedList@2daccf3b, 2, 5): success
test SubList.testIterator(java.util.Vector@3f0a0e4a, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@92b6a58, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@53d8282f, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@6e2862b4, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@38e53868, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@34e170fc, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@7847cd20, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@529f1164, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@791a8144, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@9edd602, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@87817f3, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2ed5c99e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5d054c3e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@689bad53, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2dc1ccf4, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@1abdc794, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@1abdc794, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@3e165955, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@3bdb0347, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@7d350c86, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@49e0d4e8, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@1e8126ae, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@1e417da6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@3ee8e332, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@6c6a4ebb, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@647f32b6, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3eea0717, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@3d06d98, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@310aa709, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@178460c4, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1a8765a6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@7a45de79, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@28d0b594, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@7bb19ca9, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@22bf218f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@40f1c413, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@7e43cd4, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@79fa9bb3, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@55639ebe, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@55639ebe, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@7d21e793, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@764ec6f0, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7d5e2428, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@399a42d6, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@56feac25, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@1167d7e, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@77e010b6, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@4db477ce, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@58a59a3c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@6a66c3f3, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6f6785f4, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@2127ccb4, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@55ba7cb3, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@146c7d9c, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@4a40283c, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@5f02854f, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@1e01d54a, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@51799236, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4c34e8fe, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@19b57bcf, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@506dbb0c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@637f3083, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4b2bf29c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@321c12bc, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4ceaef0c, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@4ea217, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6a02b0fc, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@229b8d26, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@4625c55c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@681d1511, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@cec2305, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@cec2305, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@733bf7bf, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@38fc9197, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7bc04e69, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@29f6a464, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@5bd6fd0b, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@7e05e5dd, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@31529dd5, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@356bca72, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@390175f6, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@206ae98d, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@206ae98d, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@34c1428b, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@50f439b0, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@7a4b273d, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@4f4f3ca9, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@1d2d5ff5, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@7cf905c8, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1dec1fb4, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6bbe44e8, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@3507d729, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1d074046, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5cb0138, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@183d9063, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3a29d103, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@e292785, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@2beb2ddf, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@e492737, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@515af52d, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@64273da, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4e5e0244, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@362d43a2, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1b48c6ba, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@45870438, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@680e5c8e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@57dbbe03, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@9cddbb3, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@2a744b3e, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@7f6cf0c4, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@7eced524, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@729d8abd, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@46ca824e, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@10b27932, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@10b27932, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@6c0727f6, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@15bd8381, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2bc2ff73, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@40b23d41, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@7ab695ea, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@2fbec379, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@6e9955fc, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@44eb97fc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@37e873f2, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@c7d2737, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7622ac41, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@f1fb216, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@67d62e82, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@2be9e29c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@425b224a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@10136388, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4e7f2b7e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@1f96dafc, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1bd52a4b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@676cdefa, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@4f060d9e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2594babb, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([509955919], 0, 1): success
test SubList.testListIteratorSet([309558941], 0, 1): success
test SubList.testListIteratorSet([-394592764], 0, 1): success
test SubList.testListIteratorSet([-1006479474], 0, 1): success
test SubList.testListIteratorSet([-2102717940], 0, 1): success
test SubList.testListIteratorSet([1764134838], 0, 1): success
test SubList.testListIteratorSet([2079657705], 0, 1): success
test SubList.testListIteratorSet([720910685], 0, 1): success
test SubList.testListIteratorSet([1656521947], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@3fac75b0, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@63c81bd1, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@4203b901, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@2e5529ba, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@1d07522b, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@129ab531, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@6ee54fc8, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@169db331, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@3d2f7a9a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5a9da02e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@6225ecc4, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@608147c8, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-1291043060], 0, 1): success
test SubList.testListIteratorSetPrevious([-837539790], 0, 1): success
test SubList.testListIteratorSetPrevious([-1678876111], 0, 1): success
test SubList.testListIteratorSetPrevious([-1718059524], 0, 1): success
test SubList.testListIteratorSetPrevious([-2054492882], 0, 1): success
test SubList.testListIteratorSetPrevious([2047048506], 0, 1): success
test SubList.testListIteratorSetPrevious([349969753], 0, 1): success
test SubList.testListIteratorSetPrevious([-455385138], 0, 1): success
test SubList.testListIteratorSetPrevious([-409867069], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@39ad05c0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@7545cc4b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@f1ef4b4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@7dadbaa6, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@3852eae0, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@6a82428, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@61b3363b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@360b8b91, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@4e6fa9f5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7e0ab489, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@518fdf5e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5102315d, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@7e873650, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@1c1b0bbe, 2, 5): success
test SubList.testModAdd(java.util.Vector@27ce3d80, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@71f3c254, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@222dd817, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@73a1715f, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@52aba8d, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@1eba25de, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@5ef990b1, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@3b3f409f, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@1adc11ee, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@fee4b17, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@f449eb9, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@77d2bcae, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@26ccb4a8, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@506f4ff8, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@2cbbbe0c, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@61cacb95, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@76f2180b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@8865566, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@2d3083ec, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1539d05f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@507113a2, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@50891dca, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@1c39c867, 2, 5): success
test SubList.testModClear(java.util.LinkedList@4fec93aa, 2, 5): success
test SubList.testModClear(java.util.Vector@fcc429a, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@3173f0f7, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@27c487e5, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@59e98f16, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1e01cba1, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@653264d4, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@24b4c667, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@148183da, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@60766f08, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@16dce4, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@25abbf09, 2, 5): success
test SubList.testModGet(java.util.LinkedList@607fd1b7, 2, 5): success
test SubList.testModGet(java.util.Vector@11660311, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@763cc157, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@537cb512, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@29dcc4a0, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@77834372, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@55c7f88d, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@744c7ab8, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@a75c176, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@4d039207, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6bb47cbb, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@1d5a8c79, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@6496f0c2, 2, 5): success
test SubList.testModHashCode(java.util.Vector@55a79053, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@5680277e, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@1c4f706f, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@50441429, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@581fb1d7, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@6c253b92, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@552b54cf, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@8b4a70a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@9b7cae9, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@2e703036, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@24110892, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@4b89ddeb, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@22f955ab, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@112c63ed, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@7351e1f3, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@692759cb, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@63c73f4a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@1821cca0, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@75cddf33, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@71fe53ef, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@11c7d28a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1333e87d, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@120baea3, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@459a82af, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@26a73460, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@57681870, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@16316662, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@74a12fe9, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@32778dc8, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@44413bd6, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@22b79f1a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4281e23a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@722aa5bd, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2f8865a8, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@6f7a17a7, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@6c31730d, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@335d7285, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@39d134f4, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@411909fa, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@530b0ce4, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@7c9f149, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@78e07c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@752559a1, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@44feb45f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@53080957, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7748b43d, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@11c99148, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@4f2c82d4, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@2248f726, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@4645abfe, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@6f99c201, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4c819525, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@8ec079a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@69d655f6, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@aaa15b3, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@e430b1d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@268b0633, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6953f458, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@17a43442, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@4ca7321f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@5d120398, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@a40c9d9, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@3dbfb1a3, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5f0e351a, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@c049d42, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@10b7f971, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4485b2d9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@28c00797, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@33ef6bcc, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4e459d8, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@71d1debc, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@75950ca4, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@ebb8e6, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@45bd66a4, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@62ea3c21, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5108711c, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@135cbaa, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@19039d10, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@6b03fde5, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6994101d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@791eb515, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@bdefb1f, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@611f00f7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@75429b30, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@488b0561, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@4446a740, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@5000af7a, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@65eb8d1e, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@7065fb85, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@6fbc38b3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4a32fc32, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@244383ed, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@480ebca1, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@78abcc18, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@7119747d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@58d6fa, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@ae7cdab, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@bc3c0f3, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@307f0eb6, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@395d4e11, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@7d5aa300, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@64dbfbbc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@3951d851, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1de23966, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@626b15b4, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@314e0151, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@2ff83fb2, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@7b0410b8, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@695ff39c, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@376aa2ea, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@4e578d8, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@d51f47f, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@352abfc2, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@2bbcbe25, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@60ba4e4f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6515465b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@2639bc06, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@761c8cf8, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@594094fa, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@559a87bb, 2, 5): success
test SubList.testModRemove(java.util.Vector@285f2ea5, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@20250d4d, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@3d457b39, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@52063d28, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@5a7cdd53, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@6b01bacc, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@2c7c1934, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2bed3067, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@41a5b71c, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2f5f5ad7, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@7bf3ab6e, 2, 5): success
test SubList.testModSet(java.util.LinkedList@3d4ccdbc, 2, 5): success
test SubList.testModSet(java.util.Vector@518cc9e4, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@2920db74, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@3cd1a674, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@37b68c6a, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@210fc49d, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@2ac81217, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@48642f7, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3707cff0, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@48eab062, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@35ed7556, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@5529e4ce, 2, 5): success
test SubList.testRemove(java.util.LinkedList@795197e5, 2, 5): success
test SubList.testRemove(java.util.Vector@6714b6f6, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1ae6e549, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@44c5db31, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@79bb6a61, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@64d88040, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@42c4b936, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@1a1f43e3, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1361738509], 0, 1): success
test SubList.testSet([-38701704], 0, 1): success
test SubList.testSet([1608636036], 0, 1): success
test SubList.testSet([1741371557], 0, 1): success
test SubList.testSet([530249015], 0, 1): success
test SubList.testSet([-748317938], 0, 1): success
test SubList.testSet([676618312], 0, 1): success
test SubList.testSet([-44414351], 0, 1): success
test SubList.testSet([-1818682061], 0, 1): success
test SubList.testSet(java.util.ArrayList@1595fa53, 2, 5): success
test SubList.testSet(java.util.LinkedList@6a2cf437, 2, 5): success
test SubList.testSet(java.util.Vector@509beb35, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@559f1d5d, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@67268e4, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@d2a25c6, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@6e867c4e, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@7922375, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@11b2ae7c, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@d23e8cd, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@1b82243b, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@75ffe17a, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@3728e7de, 2, 5): success
test SubList.testSubList(java.util.LinkedList@65a6cc36, 2, 5): success
test SubList.testSubList(java.util.Vector@19f82548, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@796d1fea, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@392cd1c5, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@4fbebf24, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4261148a, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@4dde7486, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@785272c9, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@2c491e73, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@1a4c196c, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5731237, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@682b70ad, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4ef95584, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@3dabb2a6, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@5f4ccab4, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@65fbd4a9, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@4781d8f2, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@4781d8f2, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@48380aef, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@34144391, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@5bbbd46d, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@744150c4, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@60367c8a, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@25f05de1, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@71a03264, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@3f2faad3, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@34d93555, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@204364a2, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@204364a2, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@5afd81c3, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1d47ce7b, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@27533dcc, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@61433993, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@2c66fa1a, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@68d9d07e, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@4dd6e464, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@767776bc, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5d575a95, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@2c066544, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@2c066544, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@56938883, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@c750b86, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@22171a00, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@482e0050, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@71b4651a, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4bf02ffb, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4c8bcc82, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@1c1829a3, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@674b8fbd, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@63791447, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@63791447, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1fa23ce, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@511b80f8, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@59339db5, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@28f06409, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@57380420, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@778c599f, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@30f77002, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@9750ed0, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@702bcda6, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@14107d5e, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@14107d5e, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@2ad055ad, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@454fb10a, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@24be00c1, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@48112f83, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@5df4e94a, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@3aa86c9, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7da1656f, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@6b5ce092, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@10c97bfb, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@223f2fe2, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@223f2fe2, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@a9365b9, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@7e7d1e55, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2e4f5db1, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@29968cf7, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@5287d7b2, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@5d9ed73f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@61d7d700, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@9e41b11, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@22e39740, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@37ba0c43, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@37ba0c43, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@389f8513, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@4732003c, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4548e62, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@e3fe2ae, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@361b3a5a, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@4a142e97, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6dd38713, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@32e43a75, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@76da6594, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@527b9079, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@527b9079, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@7166810, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@41ddcdd7, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@60dd2927, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@40e898e3, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@3ce3544d, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5ee7e3a0, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@187f2d17, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@6e8fc2df, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@73ad9a27, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@16b8cb21, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@6af3d6f2, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@40f07a8c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@242d466e, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4aef7c8b, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@6600861f, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4f9d4a63, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@54d25cc1, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@3f1dfa93, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@2c1aa5dc, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1de4f153, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1de4f153, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@4441e636, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@7f039439, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@4fb504fe, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@7d7ce0e7, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
