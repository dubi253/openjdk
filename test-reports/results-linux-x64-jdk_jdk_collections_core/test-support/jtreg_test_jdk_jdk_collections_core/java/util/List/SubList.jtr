#Test Results (version 2)
#Thu Feb 29 16:01:49 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=476 0\:00\:00.476
end=Thu Feb 29 16\:01\:49 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az665-734.fog2pefswkletp0y445k1dqqob.bx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 16\:01\:49 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1015-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=477
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/566)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 16:01:49 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 16:01:49 UTC 2024
elapsed time (seconds): 0.019
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 16:01:49 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 16:01:49 UTC 2024
elapsed time (seconds): 0.019
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 16:01:49 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 16:01:49 UTC 2024
elapsed time (seconds): 0.105
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 16:01:49 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 16:01:49 UTC 2024
elapsed time (seconds): 0.105
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/207)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 16:01:49 UTC 2024
Mode: agentvm
Agent id: 3
finished: Thu Feb 29 16:01:49 UTC 2024
elapsed time (seconds): 0.35
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91969)----------
Seed from RandomFactory = 2320173606922944515L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1499095323], 0, 1): success
test SubList.testAdd([42, -1727961395], 0, 1): success
test SubList.testAdd([42, -1426078051], 0, 1): success
test SubList.testAdd([42, 187179823], 0, 1): success
test SubList.testAdd([42, 1160707945], 0, 1): success
test SubList.testAdd([42, -1652671661], 0, 1): success
test SubList.testAdd([42, 960306716], 0, 1): success
test SubList.testAdd([42, 1010195928], 0, 1): success
test SubList.testAdd([42, 1972451029], 0, 1): success
test SubList.testAdd(java.util.ArrayList@33b0021a, 2, 5): success
test SubList.testAdd(java.util.LinkedList@fca226a, 2, 5): success
test SubList.testAdd(java.util.Vector@664771b3, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@5fad9293, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@77553424, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@14e8a34c, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@702bb5a5, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@12f81db1, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@1bf4f9a0, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@53d09f01, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@2661c751, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@4848a7cd, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-1001807864, 42], 0, 1): success
test SubList.testAddAtPos([-415818406, 42], 0, 1): success
test SubList.testAddAtPos([42, -13900381], 0, 1): success
test SubList.testAddAtPos([42, 1540684581], 0, 1): success
test SubList.testAddAtPos([-807908280, 42], 0, 1): success
test SubList.testAddAtPos([-1411144933, 42], 0, 1): success
test SubList.testAddAtPos([-1914443946, 42], 0, 1): success
test SubList.testAddAtPos([1818181957, 42], 0, 1): success
test SubList.testAddAtPos([-733571520, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@5f637649, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@241eb207, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@7a2bacc0, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@4be0fd78, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@205b5caa, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@9937606, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@7985b0f7, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@cc05a30, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@53cdcb57, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4a514aaf, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@2eb33de0, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5ec7644e, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@49815883, 2, 5): success
test SubList.testClear(java.util.LinkedList@2a8ad8d5, 2, 5): success
test SubList.testClear(java.util.Vector@d2e6ac, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@56ead8e5, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@705d45a0, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@19932214, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@2c61055c, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@42538af6, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@96be72b, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@64007e1a, 2, 5): success
test SubList.testEquals(java.util.LinkedList@d60b76a, 2, 5): success
test SubList.testEquals(java.util.Vector@25fb577c, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@3794825d, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@6a6938f2, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7bf02355, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7b64deaa, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@47c4f37e, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@ce8a350, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@753255de, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@486b2a57, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@52385210, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@424607c0, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@37f37c0d, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@61f806dc, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@5ec36217, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@7271ae07, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@bbb6f99, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@bbb6f99, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@6b947438, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@12613578, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4771e709, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7fcb3d34, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@7f1a195b, 2, 5): success
test SubList.testGet(java.util.LinkedList@74b09edf, 2, 5): success
test SubList.testGet(java.util.Vector@6241a46a, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@638fe678, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@34e63fa9, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7507569d, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@76e63124, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@6e656766, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@18189087, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@3703b0de, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@33014068, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2e3c61ff, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@47861ecc, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@257440ee, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@2bc8c839, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@4e0770be, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6b0f9ea2, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@4afb2d48, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@4afb2d48, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1909543, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1c5c228c, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@74ce1b50, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@8a20038, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@677de60e, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@25b2fc7a, 2, 5): success
test SubList.testIndexOf(java.util.Vector@6f8c1328, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@5004c0cb, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@765c64dd, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5f1ea500, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@213ad9e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@504e4297, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3a6e1295, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@74db9087, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@6a96ff4c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@d5cb970, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@b323a32, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@38004b66, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@304e3ca7, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@35252160, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1ef3208f, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3587c606, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3587c606, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6b344fa7, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@276e1a8, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@574580cd, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@42bad468, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@9dadaf7, 2, 5): success
test SubList.testIterator(java.util.LinkedList@6e0ef2e9, 2, 5): success
test SubList.testIterator(java.util.Vector@3ee3fb93, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@5e3ca809, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@123f0172, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@afac33d, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@596374fb, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@5e75142a, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@41a8ce06, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@63770966, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@12c138e1, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@70972931, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@37fd1907, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@73a5a08e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@51e62391, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@71b99bf0, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@406b1365, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@311fd37e, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@311fd37e, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@4e5cf325, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@76887fc7, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@53d737b6, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5d552e28, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@20a34c70, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@6daae979, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@71d60d38, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@378578ea, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@5d3be406, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@390b7621, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@bcc1cde, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@640e0ebb, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@282c7a31, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@c747cde, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@69a2fcfb, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@57a612, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@2df2210e, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@6c4accc8, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4d0749c6, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@1eb77698, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5a6686ce, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4326545d, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4326545d, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@4972e61b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@6ba7bf7a, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@16a97166, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@469c1c07, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@5f228517, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@1068a65c, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@4126c025, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5f212389, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@6fedba57, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@d00146c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6c3694a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@a48cb44, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@61706b36, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@2b148428, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@517065a3, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@833099b, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@3c716faa, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@649bcd3e, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4fd71c94, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@22d36fa9, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@4c624f73, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@30b63387, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@63e3dc81, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@6634567c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6db9397, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@1d2577b4, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@104c7af9, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3f3d0626, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@3382aee6, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@53b0f327, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@521393e1, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@521393e1, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@5143b31e, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@65b994c2, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@ed1c44e, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@350660d6, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@593b27e9, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@706bc5a7, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@46ac13fb, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@1e6d7945, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@351bbe35, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@3517d40c, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@3517d40c, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@4da0355a, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@29322aa4, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@9fb8945, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@16e519ca, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@22f74371, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@6f385e8f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7623b3a2, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2f6ca53b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@167232a8, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@34e6a369, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@77e5d16a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@44658b51, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@47d87511, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@2634ff81, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@400479b3, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@112e4de4, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@31511f69, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@79bbd597, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4b333423, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@391d8db5, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1f33a8f1, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3b6edef0, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6c4486c5, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@13dcf745, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@23523725, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@365af01f, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@22ca38e4, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@145c6790, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@5aa624a6, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@61f9005c, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@6009706, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@6009706, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@30bbec39, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@34f0b2b8, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@56e8173f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5aacb745, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@31c93be8, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@3e658168, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@7c0d4e40, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@271350d2, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@1b8ec003, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4b59f6c3, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@333aed39, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@4cb33f32, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@3b4ffb86, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@31938f94, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@7ac27e53, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@42cace91, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@467a475f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@231e6833, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1f1e1422, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@744fee56, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@47dc73f1, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6a245110, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-364240359], 0, 1): success
test SubList.testListIteratorSet([1548925549], 0, 1): success
test SubList.testListIteratorSet([-1832663847], 0, 1): success
test SubList.testListIteratorSet([-369836867], 0, 1): success
test SubList.testListIteratorSet([-802552824], 0, 1): success
test SubList.testListIteratorSet([-1887833870], 0, 1): success
test SubList.testListIteratorSet([-1766338314], 0, 1): success
test SubList.testListIteratorSet([-2045047932], 0, 1): success
test SubList.testListIteratorSet([-2049071092], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@25aa179, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@58b2702a, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@44908fd, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@6f16c5ba, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@9e5af6f, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@22ace82, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@59869867, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@1182c235, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@677e656e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6733c898, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@4d155f45, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6d8bc781, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1790616491], 0, 1): success
test SubList.testListIteratorSetPrevious([-803907584], 0, 1): success
test SubList.testListIteratorSetPrevious([1351871820], 0, 1): success
test SubList.testListIteratorSetPrevious([-960688926], 0, 1): success
test SubList.testListIteratorSetPrevious([-1761100092], 0, 1): success
test SubList.testListIteratorSetPrevious([-1352845695], 0, 1): success
test SubList.testListIteratorSetPrevious([-525127575], 0, 1): success
test SubList.testListIteratorSetPrevious([1636612852], 0, 1): success
test SubList.testListIteratorSetPrevious([1430458272], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@20c816e4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@3bd73628, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@6f63428f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@586135a4, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@422556d1, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@603b8f54, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@78495ae, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@38da8328, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@a14adb0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5dc9b6b7, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@287de59a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3cf042ff, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@46461407, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@47ff0ec1, 2, 5): success
test SubList.testModAdd(java.util.Vector@62124445, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@3b34cf32, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@4b918a15, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4056f337, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@323e3c8a, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@2fbd5ee1, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@5f274f7c, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@6c57ed30, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@62ebff0c, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5f15d8ab, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@48fd9f3f, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@40d21ee7, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@1e387d8f, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@5fdc9fa7, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@787bbc55, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@67f233, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@1354b1b3, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@7c2ac3b3, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@3d8bc63d, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4e901984, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@739bdfd, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@46e60ac5, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@7c38ee31, 2, 5): success
test SubList.testModClear(java.util.LinkedList@395ef428, 2, 5): success
test SubList.testModClear(java.util.Vector@3724b526, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@3fe87a8d, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@15c62f00, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@511ed959, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@3ba9d59c, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@464ddcf1, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@36b11ad3, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@f30013d, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@7bf28e9f, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@449daab5, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@7755d2e4, 2, 5): success
test SubList.testModGet(java.util.LinkedList@3671864b, 2, 5): success
test SubList.testModGet(java.util.Vector@2c4151ab, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@f61ad4d, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@f8f81f6, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@79d914e0, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@9474a33, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@450d02a0, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@2b64a82e, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@61c2cc24, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@7c45db37, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@796c9a27, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@2d1a97cc, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@7bb7274b, 2, 5): success
test SubList.testModHashCode(java.util.Vector@384dc5d5, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@f0437d8, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@1c12b966, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@213c3b8f, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@5f4858f0, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@53363fbd, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@58bc9678, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1dd4fe7f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@1235a12f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@38aa3d91, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@3d92b626, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@5b3b194d, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@2fbb7203, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@20c9ae7c, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@551d0a1e, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@42da195b, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4ca1a726, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@1eaa1f0d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@262c77b1, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@22aa54c5, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@2b6075f2, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4947d27, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@103145a5, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@e424a00, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@4a7ebd94, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@174b583f, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@3ebad1e0, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5093dbf6, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@310cbe1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@776a538a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@707aed20, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2f2245e1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@7e2da790, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@44620e64, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@25afc5f5, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@40c839ed, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@4fe2802d, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@21a4bc0f, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@250393e4, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@16a31422, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@d208c60, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@d74e386, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1d0f9a76, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@73df7273, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@2c2139b2, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@13df6e33, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@28ff0325, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@16458562, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@183f1773, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@1ef2f245, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@7802d834, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6530922b, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2553bc9a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@61c66ea3, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@62f96fdc, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@84154d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@46c81289, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1a09870e, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@252199f3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@4553c76b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@5e29e2d0, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@1f246f6, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@17ab908e, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@53b9d056, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@309fddf1, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@123387ce, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7f3abfe1, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@50e5a1e4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@6ff8024d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7ee5da60, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@4a0b1001, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@3aa730b2, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@12ca9d53, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@5ee89a49, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@3783c6, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@f543c94, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@7829e238, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@65c547b1, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@755753b2, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2abd4967, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@656f5e36, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@137072ef, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@be2c614, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@4e8178d9, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@78236be8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@7fd5544, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@67141cb5, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@353d3f3e, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2c01d6fa, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@10ce0870, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@65ce1785, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7959d92b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@7e0a1ffa, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@76d9a5bc, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@114d6131, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@100a8b02, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@3e6358d7, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@64d002b6, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@6bcbbe2b, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@194303ba, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@378a5bc0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@58818a8a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@8bad3e2, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@75aa3d14, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@18e7c99a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4461bf50, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@3384f534, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@4687039b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@21dd84ba, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@48951c41, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@1785474e, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4300b6f4, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@23e84296, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@789d20ce, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@51eb5d4c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1a60c86d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@13b7de84, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@54ad5a51, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@1903d988, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@66edcf4b, 2, 5): success
test SubList.testModRemove(java.util.Vector@c554a7d, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@490eef98, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@3e6ffa54, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@56e6ad13, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@75dba88a, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@29cea697, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@f186670, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@168b06a, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@12504b4d, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@79e4fe71, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@6d155125, 2, 5): success
test SubList.testModSet(java.util.LinkedList@5275718f, 2, 5): success
test SubList.testModSet(java.util.Vector@11936d9f, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@13f3567e, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@bccb465, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@75dc796b, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@545946b4, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@121ce65f, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@73d939ef, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@6c71ed96, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@66b619c3, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4a5a4356, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@7624a6b, 2, 5): success
test SubList.testRemove(java.util.LinkedList@31209711, 2, 5): success
test SubList.testRemove(java.util.Vector@76aab76, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@59d2c125, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@6e3e6a29, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@7f5fa07a, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@1f03f3e6, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@71df50af, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@7e483cee, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-333600544], 0, 1): success
test SubList.testSet([-1206588988], 0, 1): success
test SubList.testSet([571539250], 0, 1): success
test SubList.testSet([620532248], 0, 1): success
test SubList.testSet([-1943618974], 0, 1): success
test SubList.testSet([-1739181227], 0, 1): success
test SubList.testSet([1604927561], 0, 1): success
test SubList.testSet([1245732439], 0, 1): success
test SubList.testSet([-1490861115], 0, 1): success
test SubList.testSet(java.util.ArrayList@111fd37, 2, 5): success
test SubList.testSet(java.util.LinkedList@64e96a0c, 2, 5): success
test SubList.testSet(java.util.Vector@69d5ca5e, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@45abf57, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@3f1b4b40, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@2524a998, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@67b5244b, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@3bd67979, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@7e655c9f, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@3e792fbe, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@3fc8e8df, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1a28251a, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@1fdbc4eb, 2, 5): success
test SubList.testSubList(java.util.LinkedList@1ecc85c0, 2, 5): success
test SubList.testSubList(java.util.Vector@169ffd5e, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@2cb6bed8, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@6752d52, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3f38b0ad, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@358300b7, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@65d9e574, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4f4ea1c3, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@e7c19ee, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@7a318351, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@151bdd41, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@1cdf6cc7, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@41645add, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@2db376ec, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@ff017ed, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4af0f5ac, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@9bee472, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@9bee472, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@7461db79, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@52d62f00, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1f27a33a, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6794f03d, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@cea59de, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5929d721, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5bcc245, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@1afaed95, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@64f22b38, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@531e8351, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@531e8351, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@5d9f2946, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@48bbeaac, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@1de82f7d, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@115b5cd8, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@2bd6061d, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6e59722f, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1e384bb3, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@180c2fcd, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@127f40bc, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@6807baa5, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@6807baa5, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@9d92696, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@337e3a28, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@3b02992b, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@56220cbd, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@65af01c, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4727541, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@548371ae, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@3c3d385f, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@6b630497, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@429d0084, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@429d0084, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2d33dde2, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@59c07d8c, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@7641f93f, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@283ca6ae, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@79f03f00, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@13317c5b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@fd50573, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@c1ff127, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4a2e4eaf, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@3c731531, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@3c731531, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@64de6d7f, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@25953121, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@3f27ce5a, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@72e41756, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@3fac66f8, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@70a52fb5, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@53f27417, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@607c80d4, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1cd7f893, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@6d3d939b, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@6d3d939b, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@6d3b3c36, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@63fc85bf, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4d70a699, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@78550e87, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@76b38543, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@499f550d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1ca829c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@7c15e09b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@68f437e0, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@31c1edde, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@31c1edde, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3698170c, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@2cf3b567, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1f2f94d0, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6b928bcf, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@462d566d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2e768617, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7f44ad2d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@56cec335, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2f42044b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@2eb40537, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@2eb40537, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@6219bea3, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@5206b174, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1cd8345e, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@4393e497, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@597159bd, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@24c9554, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5c4f96f6, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@48655482, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@259360f6, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@ef5b180, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2504a555, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4f994658, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@bc39f2a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@7b0875d5, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@60bc6d90, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@7e305a7f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@75ac36ef, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@5d3bf9a7, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@2ff74d52, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@64f112bb, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@64f112bb, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@4be1c36a, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@126d04b9, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@26ce7cb5, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@305af36f, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
