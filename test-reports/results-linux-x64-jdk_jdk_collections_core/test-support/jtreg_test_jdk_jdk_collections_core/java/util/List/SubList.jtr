#Test Results (version 2)
#Fri Apr 12 13:27:31 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=519 0\:00\:00.519
end=Fri Apr 12 13\:27\:31 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az566-948
javatestOS=Linux 6.5.0-1017-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Apr 12 13\:27\:30 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1017-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757350400,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1017-azure
totalTime=519
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/566)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Apr 12 13:27:30 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Apr 12 13:27:30 UTC 2024
elapsed time (seconds): 0.059
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:27:30 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Apr 12 13:27:30 UTC 2024
elapsed time (seconds): 0.059
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Apr 12 13:27:30 UTC 2024
Test directory:
  compile: SubList
finished: Fri Apr 12 13:27:30 UTC 2024
elapsed time (seconds): 0.116
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:27:30 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Apr 12 13:27:30 UTC 2024
elapsed time (seconds): 0.116
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Apr 12 13:27:30 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Apr 12 13:27:31 UTC 2024
elapsed time (seconds): 0.343
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91943)----------
Seed from RandomFactory = 2237030209407673959L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1281017875], 0, 1): success
test SubList.testAdd([42, 50135301], 0, 1): success
test SubList.testAdd([42, 754262163], 0, 1): success
test SubList.testAdd([42, 139548087], 0, 1): success
test SubList.testAdd([42, 1103724246], 0, 1): success
test SubList.testAdd([42, 966868563], 0, 1): success
test SubList.testAdd([42, 1345304039], 0, 1): success
test SubList.testAdd([42, 1377624585], 0, 1): success
test SubList.testAdd([42, 1329416205], 0, 1): success
test SubList.testAdd(java.util.ArrayList@2765a3da, 2, 5): success
test SubList.testAdd(java.util.LinkedList@70451169, 2, 5): success
test SubList.testAdd(java.util.Vector@26e99b04, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@c81c6fc, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@e9b9e93, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@620cf5e8, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@54d02dfd, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@72a41fbe, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@4beaccdb, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7ebc53fd, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@789fcc4a, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@778540f2, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-335937450, 42], 0, 1): success
test SubList.testAddAtPos([-4967218, 42], 0, 1): success
test SubList.testAddAtPos([339269734, 42], 0, 1): success
test SubList.testAddAtPos([579917821, 42], 0, 1): success
test SubList.testAddAtPos([42, -717716337], 0, 1): success
test SubList.testAddAtPos([-188295158, 42], 0, 1): success
test SubList.testAddAtPos([42, 976556952], 0, 1): success
test SubList.testAddAtPos([298415930, 42], 0, 1): success
test SubList.testAddAtPos([-2059085581, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@6493dc76, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@322901ef, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@433a8b46, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@3fecbc86, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@15950370, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@d6829d2, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@246b52a6, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@6a0001ed, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@4fe01107, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@57cf83c3, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@2de208d0, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6ccf8052, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@27e95e9, 2, 5): success
test SubList.testClear(java.util.LinkedList@2ba8bba1, 2, 5): success
test SubList.testClear(java.util.Vector@68ad3496, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@3019b954, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@834dfa1, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@5bae4ad6, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@2b874391, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@20563bfa, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@3651e49f, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@3dc41bed, 2, 5): success
test SubList.testEquals(java.util.LinkedList@eded3c, 2, 5): success
test SubList.testEquals(java.util.Vector@2db2ba76, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@9b89436, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@27e4da40, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1493dc32, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@677def52, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@bf4e0d0, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@357fabbb, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7e3e6b51, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@dbee8d8, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@557f03e9, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@7bcb0262, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@4e175acb, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@4a14d7f9, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@7994f82, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@62709c79, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@614ebd63, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@614ebd63, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@3bd14b84, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@7bad2cf1, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@48df6f0f, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@772b894b, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@1b262d0, 2, 5): success
test SubList.testGet(java.util.LinkedList@5422c67, 2, 5): success
test SubList.testGet(java.util.Vector@5513bf39, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@1c2848e7, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@3cc87b47, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@163c5f0, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@5d0376d9, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@b4701fa, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1e1551da, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1998fe40, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@47b6db23, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@28c161c8, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@72db81fa, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1cd19b8b, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@56cf5db4, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@548c8a50, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@122ec33b, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@70bd0ba6, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@70bd0ba6, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@bfe5c78, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@6b08eacd, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1cfba40a, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@171c186b, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@5bf07f30, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@6e95bb0, 2, 5): success
test SubList.testIndexOf(java.util.Vector@54c98d05, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@163a14e5, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@4186714e, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4ad45db0, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1ac1bbcd, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@1830c07, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@37da2a1, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@64017777, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@352c52dc, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7a5d407c, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@56456627, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6a051dfe, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2167ab7e, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@1c236d44, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@76af5c61, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1c65c1b0, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1c65c1b0, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@156254f6, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@664399c1, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@be26414, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1534864c, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@28456c50, 2, 5): success
test SubList.testIterator(java.util.LinkedList@3c3590f9, 2, 5): success
test SubList.testIterator(java.util.Vector@45ead07, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@4da9f475, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@687243f6, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@6f5f8833, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@2351dc54, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@6345d1e7, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@253d9fdb, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5eca456f, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@57e062a, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@71869cd6, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@24efac7e, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@e263ad3, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5754e05, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@23ac9275, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@44e4117c, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@7a54e780, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@7a54e780, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@561f750b, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@19476f11, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@235d2b31, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5d33df7e, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@5e185c02, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@6d90787a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@cba4684, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@28ed4ff, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@3b618053, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3aef477b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@63446c34, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@7fe56e13, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@6b2b1776, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@93de93a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@66d307c6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@398fab9d, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@361fdb94, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@34d993ed, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@627c948b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@359e8310, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5e135191, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@58d708c1, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@58d708c1, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@5314f850, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@23f4d7a3, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@194af8e9, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@464fc81, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@62d13197, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@36f76823, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@779da40, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@4f94bb8f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@702e24cd, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@296ac999, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4fe7d155, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@31a24178, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7a0a085f, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@251942c4, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@64269b1d, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@10cadfe4, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@1ee9137a, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@72f79e1e, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@56d82f4d, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@e972e02, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@7dcd9a28, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@780a77a8, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@40455585, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@71227875, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@eb68598, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@10351b5e, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@c063b1, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@60f91550, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@3caa4c1f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@17fdb224, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@5ecfe5ae, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@5ecfe5ae, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@253d1fc7, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@34e543ed, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@2d8b3eac, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4404c978, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@4cd05ce8, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@76eece77, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@5453706a, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@7f7fd06, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@4f22dbf0, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@160d83aa, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@160d83aa, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@6f603076, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@237797f7, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@6eeec4a6, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@3306203c, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@7c813c32, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1404f84b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@46750230, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@62716a8c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@39e87406, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2163ddc1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1832217f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@10c2e1aa, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7a1acfd5, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@576a8af5, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@5922be10, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@1d0ed271, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@71420301, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@2efda0f, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@39964011, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@646df8a4, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@5f3db790, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3f6b5218, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5eb55b14, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@4e319f0c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6174fd53, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@67cb0c37, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@4d52f15a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1c53d386, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@30a7a460, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@7fd39bbf, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1df1f934, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1df1f934, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@4b6feedc, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@74ccfe90, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@54d96a7a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@32f4a78e, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@2256ee84, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@2533f523, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@547bddab, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@61c60393, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@52754635, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@574908b6, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@54d847bd, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@5f56013f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@428dd19a, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@407c9511, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@5026a695, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@696555e, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@355078ae, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@21704396, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4e68632b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@fe7654f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@257bbde6, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7abc32eb, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-757185205], 0, 1): success
test SubList.testListIteratorSet([-500509058], 0, 1): success
test SubList.testListIteratorSet([1173598], 0, 1): success
test SubList.testListIteratorSet([-988692299], 0, 1): success
test SubList.testListIteratorSet([1092981622], 0, 1): success
test SubList.testListIteratorSet([-731726354], 0, 1): success
test SubList.testListIteratorSet([513103670], 0, 1): success
test SubList.testListIteratorSet([-278506530], 0, 1): success
test SubList.testListIteratorSet([-622205111], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@4c622d4f, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@3c756b47, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@5727ebcb, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@44044a66, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@33441224, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@679be1e4, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@164b700, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@6ed3803f, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@4a1b998e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1012d06e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@773e2b16, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@590b87, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-938290387], 0, 1): success
test SubList.testListIteratorSetPrevious([637472012], 0, 1): success
test SubList.testListIteratorSetPrevious([740238174], 0, 1): success
test SubList.testListIteratorSetPrevious([-182258751], 0, 1): success
test SubList.testListIteratorSetPrevious([-2013446178], 0, 1): success
test SubList.testListIteratorSetPrevious([358515055], 0, 1): success
test SubList.testListIteratorSetPrevious([462189053], 0, 1): success
test SubList.testListIteratorSetPrevious([-1929610401], 0, 1): success
test SubList.testListIteratorSetPrevious([-227389998], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@6bfc2ae4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@1c4c425f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@7f61459d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@652093bc, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@627cd9b9, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1b998974, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@298503cb, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@2e52a0af, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@766fde1, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7f380f3c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@28f7b3a5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@777b13b9, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@5a39395b, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@131e765, 2, 5): success
test SubList.testModAdd(java.util.Vector@2230b747, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@68a1074c, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@7b76c147, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@53913e83, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@1c016702, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@2317083b, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@629b10b8, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@42600012, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@27adebe4, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@50f933f9, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@7e3c0a19, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@390855cb, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@47efd555, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@eace479, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@5facab1, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@139ac6cc, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@4bc3b9ef, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@1799d0af, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@232689c9, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2ec35b49, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@2e05c4f4, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5a63dc88, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@6ba5a3ce, 2, 5): success
test SubList.testModClear(java.util.LinkedList@74f68963, 2, 5): success
test SubList.testModClear(java.util.Vector@242bf7a5, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@6c976576, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@41657cae, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@687a14ce, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@79f7911f, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@75e278a6, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@4b407d02, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@56b17f1f, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@4323bcd7, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@2e404dd0, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@5918126f, 2, 5): success
test SubList.testModGet(java.util.LinkedList@433b0a3e, 2, 5): success
test SubList.testModGet(java.util.Vector@7f039847, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@5252319, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@bd717b1, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1c298a21, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@6c1cf391, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@4ea883cf, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@32fbec2c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@250f6d97, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@7136cb26, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@19a4ff69, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@5dc10930, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@5dde13fb, 2, 5): success
test SubList.testModHashCode(java.util.Vector@a18ebf2, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@79f34b4, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@3aadb7e0, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7373c992, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@6f7603dd, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@3415b212, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@4eb85bca, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@307b1f27, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@5327146f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@2fd7d832, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@3c9f28a5, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@6a09ae91, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@759de73, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@4c280dfa, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@779b3167, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@2825c0a, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@5468c441, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@4ac33c2, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@5a7d1341, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@59681d90, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@f1a72da, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@5223a88e, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@697db884, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@5db56bc5, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@258b3c62, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@48940ba0, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@53851fa6, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@74773e3a, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@2a30120f, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@4cfee687, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@2df1b46d, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3b6bd5da, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@47c98a40, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@74a90716, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@43741765, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@6e3e380d, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@3b7a450a, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@b73c68e, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@f01560c, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1d9415ff, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@2ec26d70, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@2c9349da, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@d145eae, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6b83ae2, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@19a7964f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@75b2f0fb, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@2d9a0449, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@2ece70fa, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@7bddbb39, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@7c1e431d, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@2eaf7c9b, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@54aab844, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@513f2a90, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@1a4baa87, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@388affcb, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@76b0b96c, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@405cb3aa, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@43de77c8, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@ba6e934, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@165bd550, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@4f8a08c1, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@4c958a2e, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@6d2796ec, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@683fa36f, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6979445a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@28e2839f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@72f1dc26, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@689ab1f5, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@da8588c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@25b98423, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@34b9d277, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@1b59b3f4, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@53d17923, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@49cad58a, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@31cb0592, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@61bb0a49, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@3a838380, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@6acc4520, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@709b4713, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4cfc6b0b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@221d42ff, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@47d261d0, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@563b2b8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@3e3937c8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@68812682, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@2eba76e9, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@42eefdac, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@32b21b44, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@771d709b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@b4098a4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@ac4a8d6, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7a4cf9ce, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@4fe38b1e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@11aa87d3, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@57cad0d0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@20decada, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@5fd7ee38, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@56217f03, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@3f3f96f4, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1d552bbc, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@4958ab76, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@31974340, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@2fbe59bb, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7d4ea314, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@9d59d6d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@34e88b0b, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@65dfcebc, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@b9df8ff, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@76da633b, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@23e91f89, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@34061096, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@22be5bd1, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@341b70b3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@2d23a31f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@18b113ea, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4db16657, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@29e13c99, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@42feaa36, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@33d705f6, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@217f4a3d, 2, 5): success
test SubList.testModRemove(java.util.Vector@40c0e383, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@516969b8, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@79d718f8, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@53d449ad, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@4d54f45e, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@23a50c65, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@6cf65da5, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@583c3e9a, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@5539f63f, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@31d171a3, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@7036f27b, 2, 5): success
test SubList.testModSet(java.util.LinkedList@47b7f26, 2, 5): success
test SubList.testModSet(java.util.Vector@77e46b03, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@6d230117, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@3e582835, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@fed4f65, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1d86d900, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@1c36a92d, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@57343115, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@2d4c97f4, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@2a6cae0a, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@36d55783, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@23917fc9, 2, 5): success
test SubList.testRemove(java.util.LinkedList@21a231b5, 2, 5): success
test SubList.testRemove(java.util.Vector@638a754b, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@4c42d540, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@23decb4e, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@73c31f13, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@4914e2cc, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@2a8618a, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@5e460173, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1667150319], 0, 1): success
test SubList.testSet([-1924913881], 0, 1): success
test SubList.testSet([157120661], 0, 1): success
test SubList.testSet([-1215598158], 0, 1): success
test SubList.testSet([-288182538], 0, 1): success
test SubList.testSet([1842856875], 0, 1): success
test SubList.testSet([1028838957], 0, 1): success
test SubList.testSet([676269791], 0, 1): success
test SubList.testSet([540796661], 0, 1): success
test SubList.testSet(java.util.ArrayList@2073c844, 2, 5): success
test SubList.testSet(java.util.LinkedList@281a2b5a, 2, 5): success
test SubList.testSet(java.util.Vector@4bdd6970, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@2dad182e, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@6dda54d7, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@595e53f8, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@4a4a0700, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@475043c1, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@64c4bdaa, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1da80075, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@444f57dc, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@592dde2e, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@72291b82, 2, 5): success
test SubList.testSubList(java.util.LinkedList@6a184614, 2, 5): success
test SubList.testSubList(java.util.Vector@387f69c2, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@386210c1, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@7d1e3f49, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@53d7e4cb, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@28f99e4, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@4d91ff1d, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@526043c, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@377228c, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@a71bcb2, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1372cc96, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@6b7e83b1, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@2678b5ae, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@7d8721c4, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@38baa600, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@632276e5, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@4c109cbe, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@4c109cbe, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@42b087b, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@5900ac77, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@66013f42, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@4259a9f0, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@2241fc3b, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@761df740, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1c21964c, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@27741adb, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6fd31574, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@23ed906f, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@23ed906f, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@2760360b, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@197f441c, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@7c55f9c1, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@7aeec81d, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@6677cd0e, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1f7a91dc, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@2f706200, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@479914e5, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@45421af5, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@394c3f63, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@394c3f63, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@671c5720, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@741bc3fd, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@5711a1ea, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5c314679, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@546873e3, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@38a28a52, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@49831480, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@36f71c3c, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@587295e9, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@3ab46097, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@3ab46097, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@18a54c9d, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@4e87d90d, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@786d8158, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@6880563f, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@1324dbba, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@343a006, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@56a5921a, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@46ca0143, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@7050dcf4, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@216d0a53, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@216d0a53, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@ef56ad4, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@3200a8b3, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@31b04093, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5f2e0568, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@319c146a, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@5fa3bc29, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@79d8c30a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@386a8b9f, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@67dfbab8, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@5badd072, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@5badd072, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@7d3b848c, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@352a67ad, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@393a49f4, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@100c6d9a, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@6b9b3b18, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@da83960, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@406f9609, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@402fccf2, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@fe73b46, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1380cd8c, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1380cd8c, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@9539cc4, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@46db5a8, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7a0353b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@248f615d, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@33cf42dd, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7905df13, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3d2a6ed8, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@4fc321a3, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3ce34ca0, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@5656cdc7, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@5656cdc7, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@4c9a3f48, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@3ff2e84f, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@5689d1e1, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@45375800, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@5a7ee76a, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@ff0bae3, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@23254e72, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@24d81f8a, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@4db194b9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@3f89dc5f, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@3d3aed6e, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@fd07b66, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@416adb01, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4a92a93, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@61a0fd5b, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@24a9f280, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@29b524b7, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@1226db67, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@7c16d532, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@4d56b197, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@4d56b197, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@2b31cd50, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@4e013d12, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@3115c1c0, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@3d3e09ec, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
