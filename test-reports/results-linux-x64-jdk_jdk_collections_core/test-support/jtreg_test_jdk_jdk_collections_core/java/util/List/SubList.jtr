#Test Results (version 2)
#Mon Apr 29 00:37:13 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=689 0\:00\:00.689
end=Mon Apr 29 00\:37\:13 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az585-363.vitsawovrx5upos552vgumbwsa.phxx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1018-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Mon Apr 29 00\:37\:12 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1018-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757346304,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1018-azure
totalTime=690
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/566)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Mon Apr 29 00:37:12 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Mon Apr 29 00:37:12 UTC 2024
elapsed time (seconds): 0.026
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:37:12 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:37:12 UTC 2024
elapsed time (seconds): 0.026
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Mon Apr 29 00:37:12 UTC 2024
Test directory:
  compile: SubList
finished: Mon Apr 29 00:37:12 UTC 2024
elapsed time (seconds): 0.201
result: Passed. Build successful

#section:compile
----------messages:(7/269)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:37:12 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:37:12 UTC 2024
elapsed time (seconds): 0.2
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/207)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Mon Apr 29 00:37:12 UTC 2024
Mode: agentvm
Agent id: 6
finished: Mon Apr 29 00:37:13 UTC 2024
elapsed time (seconds): 0.46
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91952)----------
Seed from RandomFactory = -6434581094270653745L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1349202563], 0, 1): success
test SubList.testAdd([42, -1036809241], 0, 1): success
test SubList.testAdd([42, 357649467], 0, 1): success
test SubList.testAdd([42, -1340303354], 0, 1): success
test SubList.testAdd([42, 758039592], 0, 1): success
test SubList.testAdd([42, 401571534], 0, 1): success
test SubList.testAdd([42, -1516235661], 0, 1): success
test SubList.testAdd([42, 538699766], 0, 1): success
test SubList.testAdd([42, 396648758], 0, 1): success
test SubList.testAdd(java.util.ArrayList@56f966e2, 2, 5): success
test SubList.testAdd(java.util.LinkedList@3775ef28, 2, 5): success
test SubList.testAdd(java.util.Vector@30933d8d, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@1a845110, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@1a3e335c, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@2709a222, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@3f229bff, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@2179ae32, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@314e6331, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@4edc2705, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@51fb6109, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1c4061e6, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([1320505391, 42], 0, 1): success
test SubList.testAddAtPos([278823501, 42], 0, 1): success
test SubList.testAddAtPos([-501883738, 42], 0, 1): success
test SubList.testAddAtPos([-501038195, 42], 0, 1): success
test SubList.testAddAtPos([1172641877, 42], 0, 1): success
test SubList.testAddAtPos([42, -36214593], 0, 1): success
test SubList.testAddAtPos([42, 2001395522], 0, 1): success
test SubList.testAddAtPos([1971024645, 42], 0, 1): success
test SubList.testAddAtPos([42, -2081196869], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@e17ad84, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@288fab12, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@5c5b348, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@2e993be6, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@5aa34e07, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@18797151, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@d0c21a6, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@6050759d, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@3df8aa5b, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6eed4630, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@6ad0520a, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@72524b3f, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@1306a5f2, 2, 5): success
test SubList.testClear(java.util.LinkedList@5b731dd3, 2, 5): success
test SubList.testClear(java.util.Vector@23a765da, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@3cc53609, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@60d089c7, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@63a1a63f, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@12660b98, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@7beb42e, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@32fc58e9, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@2140e6dc, 2, 5): success
test SubList.testEquals(java.util.LinkedList@74b958e, 2, 5): success
test SubList.testEquals(java.util.Vector@40af3efb, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@6729092d, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@423cfef2, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@799432da, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4dca4b8b, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1a0e7a4c, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4a743142, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4562cc9c, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@16c19c9a, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@512d06e2, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@57ebcdd4, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1348e85b, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@63e916ef, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@7e89ec80, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6f96d19d, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@19de3023, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@19de3023, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5b67fa4c, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@4c72976c, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@79c45832, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@16834fb6, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@6f4b50cb, 2, 5): success
test SubList.testGet(java.util.LinkedList@4b50e3ce, 2, 5): success
test SubList.testGet(java.util.Vector@5fc03705, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@65058faa, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@16ca4efb, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4c51bd43, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@21ea383a, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@65a1d8aa, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@686bdf08, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@79531bd1, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@57a0356f, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@43c8f100, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@6b6d7aa5, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@494615d5, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1d56b03c, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@32c9c701, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@24c63f0f, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@169dca4b, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@169dca4b, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@21ea2bcc, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@50c7fa29, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@5be5d8ba, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6621464, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@48a4f525, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@c3721dc, 2, 5): success
test SubList.testIndexOf(java.util.Vector@1c17a3b2, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@2fd87890, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@56b71bf0, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@43319ba, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@7cdb3c22, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@170be0dd, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@4edd0115, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@43821dfe, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@1e1bfdde, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7e1bf778, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@16e086b0, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@49e28606, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@bcf2014, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@7a440e5a, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@79c93258, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@7aa0ba68, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@7aa0ba68, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@625e7b9a, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@54da1894, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3428de7e, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@3a183fa2, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@5420f77a, 2, 5): success
test SubList.testIterator(java.util.LinkedList@6d4a5390, 2, 5): success
test SubList.testIterator(java.util.Vector@337b7f8b, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@75d6de6d, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@638a6388, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@14f45033, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@10014f8, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@76d87223, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@73e70364, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@58a0892e, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@6adf962e, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@3e0032ef, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@d4a9c46, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4f68348c, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@30100f6a, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@3fe517cf, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@50b48cf1, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@55aa609f, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@55aa609f, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@4198f21e, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@7822a7a3, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1ddd64ae, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@31bf1136, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@1f8c3b1a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@5ce325c6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@f86fca8, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@31cb2954, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@1ac49e6b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@19fda7c4, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7f9adeed, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@5fe464e5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@2ed03be5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@60a09a1c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@6fb604b0, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6f689a5f, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@11b69f21, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@6e9b3eff, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5288fda4, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@621688e4, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@330f2eb1, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2014aaa5, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2014aaa5, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@4966e44d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@13f7f8dd, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@5da4ad9a, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2cb4d9be, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@7bd81778, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@1c7c43a6, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@24aaf2fd, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5ea4b323, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@40ad82d1, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@10d1f163, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@17610790, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@58b7cf23, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@49046246, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@3c55d98c, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@24c0bf49, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@4c47a4a8, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@e508737, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@454f9f51, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3a6938ce, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@57918f3f, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@47e2f85b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1b4e9faa, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@f8e3a54, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@48c089be, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@183c9bca, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@74c11da4, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6533368b, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@192deba3, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@1909536, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7728b34e, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@73f50f10, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@73f50f10, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@475db7bd, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4ab67936, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@47efed39, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7f4dc3de, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@752d68be, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@2832eeaf, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@76f2e599, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@4c230bb, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@7373ba22, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1459ee2f, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1459ee2f, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@5a4e0abd, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@17171541, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@8033cda, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@4bba0199, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@5b5eab74, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@7b875b9a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@630bf787, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@55cc3034, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@232f73fd, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@34366390, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5387295c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@29e907fc, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@30c84375, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@59e99ed8, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@b628cca, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@53bd2456, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@285ab368, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@6f5d25d5, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2e70e007, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3cccb51a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@202be077, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@9bf426c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6d4d6648, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@5c1afb15, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@181a35a4, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@343b9ab1, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@6318c22e, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@598237cd, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@7bec2654, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@496b1134, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@5a2e2194, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@5a2e2194, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@7f8af3e3, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1882ac0c, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2c89191a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6fd3b27c, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@b5d9455, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@10be9231, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@621d4bb7, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2838c9cb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@7c3f2267, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@73045920, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@146a5e67, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@3d7cd223, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@71bbc4a9, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@766d49b6, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@56437eeb, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@203bc43f, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@6bc0fb31, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@4d096cab, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@200b14a1, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7f98702e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@38340707, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6cb7927d, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1229943179], 0, 1): success
test SubList.testListIteratorSet([-674445505], 0, 1): success
test SubList.testListIteratorSet([384095503], 0, 1): success
test SubList.testListIteratorSet([2067995791], 0, 1): success
test SubList.testListIteratorSet([1288995961], 0, 1): success
test SubList.testListIteratorSet([178293321], 0, 1): success
test SubList.testListIteratorSet([442052615], 0, 1): success
test SubList.testListIteratorSet([-138078131], 0, 1): success
test SubList.testListIteratorSet([-1360984857], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@65a9374a, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@5787f973, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@5b92d6cb, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@2b3d5410, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@7c8384b8, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@35c537e7, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@35cf5d6a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@168ad3b6, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@4159547c, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6eb546e2, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@788d5b4a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3293a86, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-2059750303], 0, 1): success
test SubList.testListIteratorSetPrevious([382697136], 0, 1): success
test SubList.testListIteratorSetPrevious([-45052182], 0, 1): success
test SubList.testListIteratorSetPrevious([-596783855], 0, 1): success
test SubList.testListIteratorSetPrevious([15568370], 0, 1): success
test SubList.testListIteratorSetPrevious([1082861415], 0, 1): success
test SubList.testListIteratorSetPrevious([-601172365], 0, 1): success
test SubList.testListIteratorSetPrevious([-2081660504], 0, 1): success
test SubList.testListIteratorSetPrevious([-1896357314], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@57d6dadf, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@32345d6c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@ee1bc55, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@99c8d6a, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@616d5e5e, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@ec6b3ca, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@d1d1134, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@310d6bc0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@1bba46a0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3d2c63cd, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@51638e6a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@42db60d3, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@6f926f36, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@5d465b49, 2, 5): success
test SubList.testModAdd(java.util.Vector@77dc6bad, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@803d552, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@4d7d51ca, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@3e600079, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@6814b0d, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@6f9f2f60, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@6ffc23e9, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@3c7e9337, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@1fba5fe7, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1f386a52, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@1d6d5ed8, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@48824ba1, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@438ba039, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@32c7cb87, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@25226bb0, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@53de2fd6, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@6a5ade55, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@5de65c74, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@272ba421, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@149f3087, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@efbaf2c, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@369eae2e, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@1ddd2cfb, 2, 5): success
test SubList.testModClear(java.util.LinkedList@1b152ae3, 2, 5): success
test SubList.testModClear(java.util.Vector@54852f93, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@78fcd041, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@7e643b5e, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@4fe97b4a, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@10c08385, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@bde6924, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@5f081722, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@634f1dc2, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@34a26052, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@3223f179, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@281bebf2, 2, 5): success
test SubList.testModGet(java.util.LinkedList@31080ef8, 2, 5): success
test SubList.testModGet(java.util.Vector@7e94e23a, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@b1aceca, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@6532d8cf, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@614ba01c, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@5dafe96d, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@fe246dc, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@4621c097, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@423b307e, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@5327dfc9, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@5f41aaa, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@4895f0d4, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1a9483ad, 2, 5): success
test SubList.testModHashCode(java.util.Vector@26912b92, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@70b11923, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@355db6c1, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@30330921, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@cc65942, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@77bc1243, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@35b216e2, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@e5ddf2d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@2260d379, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7c3c59d0, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@10c11970, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@d9e2676, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@34fcd767, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@af83563, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@6552966, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@73d84b1c, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@c22e637, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@4f87a95, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@23f62fe3, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1b9724d1, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@42959cbe, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@5ac8fb9a, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@2135667, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@794d4c8f, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@24fbdf0, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@5c8f2576, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@283966e, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4158ee14, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@4217937c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@6ed191b4, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@6ff6055, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@73fe45a4, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@1a65b539, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@bb77393, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@4bf0702a, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@3d80c4e8, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@13193fb8, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@ac95dc4, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@821161a, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@524da688, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@78d134ec, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@20b249b, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@8d6845c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3dd2eb4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@4bfe6686, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@36341b4d, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@4564c5bf, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@b22ee36, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@2aa29630, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@5db2237a, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@6dc58067, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@944cd91, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@5f454fed, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@39578848, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@4342a3e1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5729515f, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@5ab38e65, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@591e5c0f, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@3bf37d16, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@58f39933, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@38cf0128, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@77618595, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@90afa70, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3cab42c6, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@48ab7d80, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@97ac27, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@637df2a6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5b8599c6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@69c4998e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@f1a9df6, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@230ea362, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@563d6220, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@327b4652, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@515d3fa1, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@1a87a082, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2d3fb526, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@4974839a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@3539b2bc, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@336c82d0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@53325032, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@1773474b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@48a427e6, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@7f2c2d50, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@7bbf2a2e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@4bb5a73c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@3b2be4d, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@5a390a10, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3d1016bc, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@d2dcb41, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@2fc68a47, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@62f30713, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1d9cd2d7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@5b6ba0b5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@393713a9, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@23be3ffc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@71f992b1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@10354dd2, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@99a4cb5, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@4774ccfd, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@71927117, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@470826b6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@3c27c7bd, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@4cbd30fc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@68a1ec59, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@3352e946, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@704f3304, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@38f114c6, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@20a604b3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@64c7a754, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@2ffaed27, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@245d8258, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2c005114, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@5275d933, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@70df6469, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@daae1b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1df0a958, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@66dc9199, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@530a0d58, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@6311a71b, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@1c0f5db5, 2, 5): success
test SubList.testModRemove(java.util.Vector@53c131d6, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@7fda89e, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@6101dcc5, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@17ecd036, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@6344fe06, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@16912818, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@39a36a9a, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2823435d, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@6f3fe1e3, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1e70b23, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@7a25f39e, 2, 5): success
test SubList.testModSet(java.util.LinkedList@7259568d, 2, 5): success
test SubList.testModSet(java.util.Vector@3276a3e3, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@4deb96df, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@7d841907, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@6b2f4992, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1a58bfee, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@6a83ccf2, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@3cea6f82, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@38b5b7b3, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@24738f6b, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@551bfb3e, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@168a8401, 2, 5): success
test SubList.testRemove(java.util.LinkedList@5ad09060, 2, 5): success
test SubList.testRemove(java.util.Vector@720af355, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@606674b, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@705e68e9, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@dc49ba, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@7a8e53f8, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@75492b6, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@55ab4a7f, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([133974778], 0, 1): success
test SubList.testSet([-1708896722], 0, 1): success
test SubList.testSet([524827489], 0, 1): success
test SubList.testSet([700104539], 0, 1): success
test SubList.testSet([155264055], 0, 1): success
test SubList.testSet([1370682546], 0, 1): success
test SubList.testSet([736292595], 0, 1): success
test SubList.testSet([733150748], 0, 1): success
test SubList.testSet([1043229739], 0, 1): success
test SubList.testSet(java.util.ArrayList@51eaf327, 2, 5): success
test SubList.testSet(java.util.LinkedList@341a3093, 2, 5): success
test SubList.testSet(java.util.Vector@49c097a8, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@4220a8e3, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@69762854, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@55a76858, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1d283bb5, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@5c61fb03, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@61932cc8, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5571d5a7, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@42c30438, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@4379669e, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@728170a6, 2, 5): success
test SubList.testSubList(java.util.LinkedList@72b641cd, 2, 5): success
test SubList.testSubList(java.util.Vector@75238b3f, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@5257383d, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@41925c27, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@45732ffe, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@34f3b60a, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@3596fa23, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6638cb81, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3cc2f609, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@4034fb15, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6f4e842a, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@3b4e6d6e, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@49a5b326, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@5a846665, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@24fcf23b, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@18acc248, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@6ddd480, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@6ddd480, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@4441326a, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@6f4884b8, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@37b4c779, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@34b7b10c, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@51b54ef4, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6626225e, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@2b16d552, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@d272250, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@75685e78, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@17318402, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@17318402, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@15f1ca83, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@40357f05, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@76992233, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@49fd3147, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@5d0d3719, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6f4d35d2, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@623d1003, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@330fd7c8, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1da2598, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@36b45766, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@36b45766, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@68a623e7, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@538303c3, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@46d16d3e, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1b9b3501, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@48901c00, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@33106ed8, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1b5a6b0c, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@30da791f, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@43264eec, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@3200975a, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@3200975a, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2476f50, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2ed1848e, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@53e2a35b, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@1986ce88, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@76984610, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@3574268, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@39f4ec46, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@2cb53501, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@5c7ed30b, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@17638944, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@17638944, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@23c5d7b4, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@21f2b35c, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@6cd8def6, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4ae8c2ce, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@3a0b91b0, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@b0cd6a8, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7d2387e, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@16036fce, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@fe448fc, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@65239bfb, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@65239bfb, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@191b49e4, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@37929b18, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@293e2210, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1df589d5, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@75863716, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@644bca5e, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@581305b2, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@5a2ef08f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@31304add, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@33146115, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@33146115, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@63a265c6, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@63fb447b, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@63cf61c9, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@5ce53445, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@42d58e0, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@41139ccd, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3da6395d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@24b5190b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3e669d98, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@2f2d7edf, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@2f2d7edf, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@45cc5f1f, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@19d80bfe, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@65f18994, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@25b200bf, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@519b1314, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@165900e0, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5181aabb, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@7eb0c3fc, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@207de033, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@603a4a0f, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@69befa80, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2065f477, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@362a44d4, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@5797b654, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@afd01f4, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@431ab46c, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@6c884033, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@7a946222, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@22b5f27c, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@650858b8, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@650858b8, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@46dc24d, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@7f46fdc8, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@35cc140f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@620b3de9, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
