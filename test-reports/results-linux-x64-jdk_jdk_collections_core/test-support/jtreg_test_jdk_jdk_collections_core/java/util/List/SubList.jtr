#Test Results (version 2)
#Tue Mar 05 01:33:28 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=502 0\:00\:00.502
end=Tue Mar 05 01\:33\:28 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1198-260
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Tue Mar 05 01\:33\:28 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1015-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=504
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/566)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Tue Mar 05 01:33:28 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Tue Mar 05 01:33:28 UTC 2024
elapsed time (seconds): 0.056
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:33:28 UTC 2024
Mode: agentvm
Agent id: 1
finished: Tue Mar 05 01:33:28 UTC 2024
elapsed time (seconds): 0.056
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Tue Mar 05 01:33:28 UTC 2024
Test directory:
  compile: SubList
finished: Tue Mar 05 01:33:28 UTC 2024
elapsed time (seconds): 0.104
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:33:28 UTC 2024
Mode: agentvm
Agent id: 1
finished: Tue Mar 05 01:33:28 UTC 2024
elapsed time (seconds): 0.104
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Tue Mar 05 01:33:28 UTC 2024
Mode: agentvm
Agent id: 3
finished: Tue Mar 05 01:33:28 UTC 2024
elapsed time (seconds): 0.341
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91965)----------
Seed from RandomFactory = -4814836428033270341L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1077764968], 0, 1): success
test SubList.testAdd([42, -1253794609], 0, 1): success
test SubList.testAdd([42, -1147427984], 0, 1): success
test SubList.testAdd([42, 564635507], 0, 1): success
test SubList.testAdd([42, 514376518], 0, 1): success
test SubList.testAdd([42, -1910184028], 0, 1): success
test SubList.testAdd([42, -1477438613], 0, 1): success
test SubList.testAdd([42, 756690111], 0, 1): success
test SubList.testAdd([42, -1645688801], 0, 1): success
test SubList.testAdd(java.util.ArrayList@6988b020, 2, 5): success
test SubList.testAdd(java.util.LinkedList@6b11eb6d, 2, 5): success
test SubList.testAdd(java.util.Vector@f8f215d, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@13d1e86c, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@121ab97b, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1ef1e4, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@6c010f04, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@28f032, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@7267aa65, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@37b214c0, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@3986c2f9, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@8e38b75, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -1739094155], 0, 1): success
test SubList.testAddAtPos([42, -1059983734], 0, 1): success
test SubList.testAddAtPos([1490947224, 42], 0, 1): success
test SubList.testAddAtPos([1410112769, 42], 0, 1): success
test SubList.testAddAtPos([42, -443829623], 0, 1): success
test SubList.testAddAtPos([-1281251006, 42], 0, 1): success
test SubList.testAddAtPos([952716167, 42], 0, 1): success
test SubList.testAddAtPos([-2008335977, 42], 0, 1): success
test SubList.testAddAtPos([42, 221312330], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@2baa3727, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@7ccab7df, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@5740c16, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@56c0dc59, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@6485f227, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@243bb2f1, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@ca6db55, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@4dd3708d, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@7809482a, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2d0b5759, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@277c52c8, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7b26b12f, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@dcc6b2c, 2, 5): success
test SubList.testClear(java.util.LinkedList@305bff04, 2, 5): success
test SubList.testClear(java.util.Vector@5a9693e3, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@41e47c7b, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@46021e19, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@246501cd, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@67f5980c, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@28077eb2, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@5f43504a, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@53b6f1b8, 2, 5): success
test SubList.testEquals(java.util.LinkedList@5c3556d2, 2, 5): success
test SubList.testEquals(java.util.Vector@1a68caf4, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@7d8851ae, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@6161418d, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3deb971c, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7b5fc236, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@15ad4317, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4c47d502, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3cd24b7b, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@60ee33d7, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4d3de398, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@3efaaf88, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@7a09f825, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@25ffc2a0, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@4c12f6c7, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@22824a84, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@d6e84ab, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@d6e84ab, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5066fd8e, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1eb99c4a, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4eae6fd2, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@167ef222, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@12218ce3, 2, 5): success
test SubList.testGet(java.util.LinkedList@78d757e1, 2, 5): success
test SubList.testGet(java.util.Vector@f9a4d8f, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@747ed933, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@2cfc2be1, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@3f4e0934, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3c0a1aac, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@111c2433, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@28bcc991, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2254299f, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@53fc62af, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4ff3897a, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@3a91c74e, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@8150793, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@d153161, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@566aa454, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1e650db8, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@5b0cfcf5, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@5b0cfcf5, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@70ede016, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@406a9aea, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@2c1159a6, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@26110bf8, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@6943d8b0, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@271e4d31, 2, 5): success
test SubList.testIndexOf(java.util.Vector@6c7114d7, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@6b83d707, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@12e75428, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@52acec1d, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@2d4d15a0, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@2e002d92, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@7420c668, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@f798576, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@65aae4be, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@54f1055a, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@26f65927, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3588a4ba, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@58c85371, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@4517b259, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@61a1e8e5, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3e2cea3a, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3e2cea3a, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@4dbd4aeb, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@267f77ca, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@7d60bcde, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7c1b8e07, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@76dacac3, 2, 5): success
test SubList.testIterator(java.util.LinkedList@232924a, 2, 5): success
test SubList.testIterator(java.util.Vector@49bf1916, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@10144272, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@52e322ec, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@77628654, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@70b5d598, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@6c741a61, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5af3ef6f, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2284c1d1, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@44c526ff, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@557ac22f, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@4789e953, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2a20eb8d, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2d02166a, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@6566bd7d, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@209eddb0, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@66dfffab, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@66dfffab, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@460133dd, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@25f825c1, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@14927dc3, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@7a60eb50, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@2a2522ee, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@2ba58ce8, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@7dd0e1d9, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@7e5b9fef, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@7619342c, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@59fb51be, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@4b194de, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@144417ad, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@141b42b0, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@396c96e3, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@4a812fdc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@122f6e28, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@711fa0d7, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5f4e14e4, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@34e6b790, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@7e47f943, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@74baa65c, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@15648b8a, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@15648b8a, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@37516700, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@2777a441, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@407b2b11, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@183bdd4c, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@44673863, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@4fd89d49, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@604afb44, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@3c34cbf0, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@3fcdfaf6, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@7f75ff06, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@bfbb276, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@18f9dff2, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1aefda26, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@4e10e38a, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@2a50998e, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@75028a5, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@24f6219a, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@4060a14f, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7dcebb74, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@63289da3, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@e993387, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@36b4222f, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@56bc381f, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@63fb7cff, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@340b535f, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@56829d87, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@73d21f93, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7f95d163, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@6468e0a, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1066eb14, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@246f367d, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@246f367d, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@334123f3, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@c6070d4, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@4a04b596, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2afb10af, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@edc9c8d, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@2810c427, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@794281d3, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@500eef70, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6f55e544, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@6fcd2a77, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@6fcd2a77, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@21d53ca3, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@788d59c9, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@3f984aff, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@63e9ab4b, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@4049a3ec, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@7843de3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@663c3bfa, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@26970a24, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@77df1922, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3b281e8c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1cdb69a1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@451f08b5, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2abfe7f, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@44e362a2, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@c01ddf6, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@ecdc5a2, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@799d70d0, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@6ad04e3b, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@c3dffe6, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6d7d13a6, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@306e925e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@11be983c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7a4e8182, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@510844e6, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@517f2bca, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@217dfa7, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@276a6023, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@43165409, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@59f6cb55, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@50b997d6, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@611f7771, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@611f7771, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@3dbd2728, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@78da8e0e, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@5d6c0fac, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4d0df432, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@4420049a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@d703fc4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@2b91dc08, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@630f917f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@5d5fed98, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7c667fbc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@61cc6117, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@211cc9b7, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@b919d16, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@4c0afcc3, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@3e878b53, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@4db9be68, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2e608fd, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@6c321767, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@3bc00d19, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@5d4ce6ce, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@75f61e64, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@24c1bf2f, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1205865134], 0, 1): success
test SubList.testListIteratorSet([286223603], 0, 1): success
test SubList.testListIteratorSet([885092453], 0, 1): success
test SubList.testListIteratorSet([1828643499], 0, 1): success
test SubList.testListIteratorSet([748857695], 0, 1): success
test SubList.testListIteratorSet([-1590300998], 0, 1): success
test SubList.testListIteratorSet([989130149], 0, 1): success
test SubList.testListIteratorSet([1778076977], 0, 1): success
test SubList.testListIteratorSet([-63635311], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@351e3b63, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@4e982fdb, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@1a8da36b, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@1e551447, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@55739bbb, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@12453f45, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@6e167fd8, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@5690c6c4, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@2049a5e6, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3efc32eb, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@49f84aea, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2b838165, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-2009634791], 0, 1): success
test SubList.testListIteratorSetPrevious([491049507], 0, 1): success
test SubList.testListIteratorSetPrevious([-510950074], 0, 1): success
test SubList.testListIteratorSetPrevious([-931566427], 0, 1): success
test SubList.testListIteratorSetPrevious([1497622320], 0, 1): success
test SubList.testListIteratorSetPrevious([-1372488796], 0, 1): success
test SubList.testListIteratorSetPrevious([-370726955], 0, 1): success
test SubList.testListIteratorSetPrevious([-1243477173], 0, 1): success
test SubList.testListIteratorSetPrevious([1249820244], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@43514bfc, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@4d5ccbaf, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@6f7295b0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@166da378, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@6252d023, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1cab423c, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@419e2e14, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@524f873f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@1e4ea805, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@38444f5d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@7b738b3a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@159982b3, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@4effc6d9, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@208e6f17, 2, 5): success
test SubList.testModAdd(java.util.Vector@1fdc5eb7, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@263ef114, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@58284385, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@220cbfa9, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@79dc9753, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@171c15ec, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@7fc66a0b, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@8e5ea98, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@4e709567, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1f2eb5e2, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@27807736, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@9914f5d, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@8dd71cb, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@2427303f, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@6faac0e2, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2e4333bb, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@4e48300a, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@871f910, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@12e1da48, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6c631376, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@5e48d4a3, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2fefcfc9, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@6c385f1b, 2, 5): success
test SubList.testModClear(java.util.LinkedList@36e0c110, 2, 5): success
test SubList.testModClear(java.util.Vector@53da04dd, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@46d6dd81, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@1a25f152, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6fb4b24e, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@14288fc7, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@33a08974, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@5089b7f6, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@7d95c658, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@1a7fad88, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@4baac2a3, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@2e198e0, 2, 5): success
test SubList.testModGet(java.util.LinkedList@84afae7, 2, 5): success
test SubList.testModGet(java.util.Vector@1ec241f5, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@2a55c1d4, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@615516dd, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@2c56a898, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@295fe46b, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@5480554a, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@4dba96fc, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@f697ed3, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@f5eb1a9, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@38b6bc6e, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@1ae33cf3, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@29b1900f, 2, 5): success
test SubList.testModHashCode(java.util.Vector@6c9f712f, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@6c552996, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@52815b95, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@519069ab, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@4eb2fb7e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@6fdb0fb6, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1ace563e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@3735f838, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@6d0f344d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@52e998d0, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@1cb250c5, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@54d89c7f, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@42479951, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@1677d7d0, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@4a3885e0, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@a79330, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@62e06920, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@46f9b44f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@45d8997, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@29e1cee4, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@ee9ec75, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1a80c85, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@2c7b6b1a, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@27e51c2f, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@19ef2055, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@6e43883, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@55487434, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@11cab79, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@a01f5eb, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@15ba4a6c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@7ad91d0c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7d61a83, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@5ac50595, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6b006291, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@741f1626, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@42b23742, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@2371f201, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@71312ccd, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@69642ae9, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@636ccdfe, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@27ff784e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@2757c802, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@35dd5db0, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@13be8e6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@544c6bf4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3bcbb9a0, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@5f0dc667, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@4b8c394e, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@4283868, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@778d3b53, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@38fc2a9b, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@72ffb5f5, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@43052f92, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@12d67f7c, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@41bd3105, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@34e51040, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@40989187, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@452548f, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@4d09f9ef, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@49551cb9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@5effb73a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@9175a33, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@29146da2, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@43643db6, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@498b701e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@52325fc5, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4036d56a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7a76b281, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@24bff997, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@171db72, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@4aac4c11, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@1b833ce2, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@52191a79, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@364d0853, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@3e9d95de, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@eb99acd, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1412ae6a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@46bfb651, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1e75c9f7, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@301b6e94, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@351d57ff, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3f319f22, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@269b0bbd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@54862cb4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@553a5fd4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@1554a6bc, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@2a52484a, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7c0b2ac8, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@62a27f67, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@5bb9683c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2371c218, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@47ae1f9c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@76944ba5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@257d6772, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@394020fd, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@72df77c5, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@22a19c67, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@6bd0032f, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@2f887e7b, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@67be4e8e, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@2e2c8fdf, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@50ee2570, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@2878861, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@68d2624d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@6324fd23, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@610d3883, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@746d77c4, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@574c794c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@b1d39cf, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@36e320f3, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@4de48112, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6d8e3d9e, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@3ea10b1, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7674ba42, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@30353fa3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@59b264dd, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@6de03c0e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@16032f14, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@6a9a5e5b, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@6ad8d4a, 2, 5): success
test SubList.testModRemove(java.util.Vector@2c9bb931, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@1304bac2, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@49998d8e, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@c89e2a3, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@66e0200b, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@73e860a3, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@763da074, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4ed874b4, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@155603cf, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@49874632, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@244ab659, 2, 5): success
test SubList.testModSet(java.util.LinkedList@1c42e01f, 2, 5): success
test SubList.testModSet(java.util.Vector@4def54ec, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@683dfe5b, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@5584a271, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@143f5e58, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@58887a1d, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@18580c33, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@55302b28, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@210fe0bf, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@24d3e899, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@7173ee9f, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@26ae4a3c, 2, 5): success
test SubList.testRemove(java.util.LinkedList@6c8ea6a9, 2, 5): success
test SubList.testRemove(java.util.Vector@403dac3, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@25173205, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@1c10b05, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@25adb2b6, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@3c875006, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@7c0d59f2, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@70f5a035, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1887323078], 0, 1): success
test SubList.testSet([809231486], 0, 1): success
test SubList.testSet([-162111952], 0, 1): success
test SubList.testSet([1392656091], 0, 1): success
test SubList.testSet([-1150891285], 0, 1): success
test SubList.testSet([-1307200945], 0, 1): success
test SubList.testSet([-645617116], 0, 1): success
test SubList.testSet([1936485343], 0, 1): success
test SubList.testSet([2116969429], 0, 1): success
test SubList.testSet(java.util.ArrayList@5dc3d095, 2, 5): success
test SubList.testSet(java.util.LinkedList@5ca5c629, 2, 5): success
test SubList.testSet(java.util.Vector@6063b235, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@59bb9aac, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@3b81f268, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@795b0d3d, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@7bd11396, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@223da252, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@23535aa5, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1cc245a9, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@18d9f991, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@57ce1e8c, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@114561fe, 2, 5): success
test SubList.testSubList(java.util.LinkedList@4da46a9b, 2, 5): success
test SubList.testSubList(java.util.Vector@634b061a, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@174619f5, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@2b88ebdc, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@37e2d76b, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@9e2e46e, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@5fc8c49b, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6543d0dc, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@295b763, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@667abd92, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5026ff69, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@633f3c69, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@18f38481, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@75dbc066, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@78a0f1f6, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@78b12aa1, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@284e590c, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@284e590c, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@cee6d69, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@366939ed, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@16d89e73, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@29ed06d8, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@356f63e6, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4d2d9fe3, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4d18e734, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@28721171, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@3c7bf518, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@652459aa, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@652459aa, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1a8bfa32, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@2d76aada, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@4c120caf, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@21b4ba75, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@d5aafca, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@4f4f7304, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@629cf217, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@bfff1d5, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@441fa67, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@3e26bbbc, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@3e26bbbc, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@6df418b1, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@78ff2826, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@50d44b66, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1283bb38, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@64698055, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@68716d15, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@5c058755, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@5cd2b41c, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7de5943c, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@502246f1, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@502246f1, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@488bd834, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@21cfe248, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@7f3a8f12, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@4b5fbb74, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@6a7000a2, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@d461207, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4b010691, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@5ee19b5d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@31d24249, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@3dc2b755, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@3dc2b755, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@4c737696, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@489d420c, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@5d979105, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3255862, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@60cd25c2, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1c3ca332, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7fc5401e, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@3eee6632, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@4d3c9560, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@5ee4cea8, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@5ee4cea8, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@2c6cdaa, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@66e13e31, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@28969863, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@43d475c5, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@2000fb54, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@52bc8345, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@2753c5da, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@4c9b7f33, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@8a379be, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1f70746a, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1f70746a, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@213134bc, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@4d1d2202, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7a22e9ff, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1580780d, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@282ce918, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6503a292, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@22781d67, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@7537f2a2, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7a1b92a3, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1c32194a, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1c32194a, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@15107c46, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@4daae8a, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@11ace65e, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7ff7ddce, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@7f42b927, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@62ebcf2e, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@4f395455, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@77de3f5a, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2cda7684, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@1ce1e9d5, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@e3ea24, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@59b2aa3d, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@70410b84, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@57ff2951, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@77580057, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@27a8d86e, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@33f05ce6, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@d970e5d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@5be4a1c, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@5c291ec, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@5c291ec, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@4652ed0e, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@49f5df80, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@1502edf, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@435bbd64, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
