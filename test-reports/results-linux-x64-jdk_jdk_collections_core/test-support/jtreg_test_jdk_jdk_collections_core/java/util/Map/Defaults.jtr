#Test Results (version 2)
#Sat Apr 13 18:16:20 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
author=Mike Duigou
keywords=bug8010122 bug8004518 bug8024331 bug8024688 testng
run=USER_SPECIFIED testng Defaults\n
source=Defaults.java
title=Test Map default methods

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
elapsed=526 0\:00\:00.526
end=Sat Apr 13 18\:16\:20 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az695-953.gmayhch2cacunn5b1cp1zlasod.dx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1017-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Sat Apr 13 18\:16\:20 UTC 2024
test=java/util/Map/Defaults.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1017-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757350400,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1017-azure
totalTime=528
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Map

#section:script_messages
----------messages:(4/322)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f, mixed mode, sharing)

#section:build
----------messages:(7/206)----------
command: build Defaults
reason: Named class compiled on demand
started: Sat Apr 13 18:16:20 UTC 2024
Test directory:
  compile: Defaults
finished: Sat Apr 13 18:16:20 UTC 2024
elapsed time (seconds): 0.161
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:16:20 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Apr 13 18:16:20 UTC 2024
elapsed time (seconds): 0.161
----------configuration:(13/942)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3438)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Map/Defaults.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
----------direct:(12/1022)----------
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:624: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(0L), map.compute(new Long(3L), fun));
                                                   ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:625: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(3L), map.compute(new Long(3L), fun));
                                                   ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:626: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(6L), map.compute(new Long(3L), fun));
                                                   ^
Note: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 warnings
result: Passed. Compilation successful

#section:testng
----------messages:(7/210)----------
command: testng Defaults
reason: User specified action: run testng Defaults 
started: Sat Apr 13 18:16:20 UTC 2024
Mode: agentvm
Agent id: 3
finished: Sat Apr 13 18:16:20 UTC 2024
elapsed time (seconds): 0.364
----------configuration:(13/934)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map

----------rerun:(28/3015)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Map/Defaults.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/Map/Defaults.java false Defaults
----------System.out:(518/56880)----------
test Defaults.testCompute("Hashtable", java.util.Hashtable@74e211f7): success
test Defaults.testCompute("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@56769a2c): success
test Defaults.testCompute("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@10c26b71): success
test Defaults.testCompute("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@714e5660): success
test Defaults.testCompute("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@20874e48): success
test Defaults.testCompute("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@71c8ed82): success
test Defaults.testCompute("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@24633271): success
test Defaults.testCompute("HashMap", java.util.HashMap@7e70c0ac): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@6cc44363): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@174b9017): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@269623d7): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@77646f58): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@4f5ac4af): success
test Defaults.testCompute("HashMap", java.util.HashMap@3f43ae56): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@5361641f): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@732a748d): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1c686e5e): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@608afd58): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1d0b6511): success
test Defaults.testCompute("EnumMap", java.util.EnumMap@2667be03): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7172c046): success
test Defaults.testCompute("TreeMap", java.util.TreeMap@7234065d): success
test Defaults.testCompute("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5edaf84b): success
test Defaults.testCompute("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1dd3a9e): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@417a8b33): success
test Defaults.testComputeIfAbsent("Hashtable", java.util.Hashtable@2a0e6d55): success
test Defaults.testComputeIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@c4b46ff): success
test Defaults.testComputeIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5a6e4f26): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@26c35e77): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6ce6dcd4): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@4e9c7321): success
test Defaults.testComputeIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@d1baa): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@2527d55d): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@56204a21): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@52fca016): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6bb41ee4): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@49f82f8e): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7dcf0c17): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@15f2a632): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@1d2a1cf5): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@730b666f): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@26318a4b): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@39b60757): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@77d9f638): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5ec24c72): success
test Defaults.testComputeIfAbsent("EnumMap", java.util.EnumMap@393d2dde): success
test Defaults.testComputeIfAbsent("TreeMap", java.util.TreeMap@19505477): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@23cb3e51): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@4394364): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@587720b3): success
test Defaults.testComputeIfAbsentNullFunction("Hashtable", java.util.Hashtable@507eb1c0): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@2ac0d347): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@3e20520b): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5cb45d46): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5d434c97): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@54bc1066): success
test Defaults.testComputeIfAbsentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@5e75c6ac): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@6fd19f4b): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@e5f3060): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@79c33eee): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@176760c): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1587aeee): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1a72be56): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@59c57305): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@4d8d2962): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@24bc5aaa): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@57f02981): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5d3197ec): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6e69d94a): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@537d9578): success
test Defaults.testComputeIfAbsentNullFunction("EnumMap", java.util.EnumMap@51c03415): success
test Defaults.testComputeIfAbsentNullFunction("TreeMap", java.util.TreeMap@7bffa271): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@42e2f7c3): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@3125aeaa): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@466109e7): success
test Defaults.testComputeIfAbsentNulls("HashMap", java.util.HashMap@287730cb): success
test Defaults.testComputeIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@313b85d9): success
test Defaults.testComputeIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@1e2cdeb0): success
test Defaults.testComputeIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6c8f4a9c): success
test Defaults.testComputeIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@26681fd0): success
test Defaults.testComputeIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3d297c93): success
test Defaults.testComputeIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@281758db): success
test Defaults.testComputeIfPresent("Hashtable", java.util.Hashtable@1bf8ea74): success
test Defaults.testComputeIfPresent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@459d0cd): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@30b7c2de): success
test Defaults.testComputeIfPresent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@12c2e409): success
test Defaults.testComputeIfPresent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6bd7a370): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@6dbe6d3d): success
test Defaults.testComputeIfPresent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7bec4e44): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@3c9b08b3): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@7c0d1653): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4564daf6): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@2aa9767c): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@718ac8e5): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@7bd7153b): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@40b15ca0): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@1ca3623a): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@11a537aa): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@53ffee32): success
test Defaults.testComputeIfPresent("EnumMap", java.util.EnumMap@6266bd20): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@63a9bcf5): success
test Defaults.testComputeIfPresent("TreeMap", java.util.TreeMap@33d0117d): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@15ebcabe): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@c9a8350): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@19c5762f): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@746b9c41): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7f998a45): success
test Defaults.testComputeIfPresentNullFunction("Hashtable", java.util.Hashtable@6f6e3595): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@76851660): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@54bf0de1): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@4b2f4d52): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@4e311e85): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@14bafb36): success
test Defaults.testComputeIfPresentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@14e1fc3): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@432f175b): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@7ddaa4c2): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5d053b3): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6217186d): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1ed43cf1): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@1483da65): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@4730fa74): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@687fd347): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@33ea96eb): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6c1985be): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@31dd9429): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3f2f649d): success
test Defaults.testComputeIfPresentNullFunction("EnumMap", java.util.EnumMap@c69cd69): success
test Defaults.testComputeIfPresentNullFunction("TreeMap", java.util.TreeMap@eeef2be): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5ec9cd64): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@664cdeb7): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@3d757738): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@28a9b431): success
test Defaults.testComputeIfPresentNulls("HashMap", java.util.HashMap@7233479): success
test Defaults.testComputeIfPresentNulls("IdentityHashMap", java.util.IdentityHashMap@8c3059d): success
test Defaults.testComputeIfPresentNulls("LinkedHashMap", java.util.LinkedHashMap@485b2ac9): success
test Defaults.testComputeIfPresentNulls("WeakHashMap", java.util.WeakHashMap@60fed779): success
test Defaults.testComputeIfPresentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3fe229ad): success
test Defaults.testComputeIfPresentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1c0b5aa2): success
test Defaults.testComputeIfPresentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@162cb11a): success
test Defaults.testComputeNullFunction("Hashtable", java.util.Hashtable@266733e): success
test Defaults.testComputeNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@11d4cef0): success
test Defaults.testComputeNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@a38a513): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5e0f4de7): success
test Defaults.testComputeNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@b94ffc0): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@471d75d4): success
test Defaults.testComputeNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@52c801a5): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@3dea0064): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@7ab43104): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@3f40c1dc): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@47a7dbf6): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1e3c794d): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5ca351bc): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@5e8e3a87): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@2f47db85): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@df74b02): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@f0c6216): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@a9a8366): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@488f8ad7): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@38f833d0): success
test Defaults.testComputeNullFunction("EnumMap", java.util.EnumMap@5230185d): success
test Defaults.testComputeNullFunction("TreeMap", java.util.TreeMap@75380a28): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2eb7d834): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@29080a73): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@c485f95): success
test Defaults.testComputeNulls("HashMap", java.util.HashMap@39196fca): success
test Defaults.testComputeNulls("IdentityHashMap", java.util.IdentityHashMap@62a7bf95): success
test Defaults.testComputeNulls("LinkedHashMap", java.util.LinkedHashMap@7599599f): success
test Defaults.testComputeNulls("WeakHashMap", java.util.WeakHashMap@4b47d13a): success
test Defaults.testComputeNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6e204299): success
test Defaults.testComputeNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3cdf6dfa): success
test Defaults.testComputeNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@107b788): success
test Defaults.testConcurrentMap_computeIfAbsent_racy(): success
test Defaults.testConcurrentMap_computeIfPresent_racy(): success
test Defaults.testConcurrentMap_compute_racy(): success
test Defaults.testConcurrentMap_compute_simple(): success
test Defaults.testConcurrentMap_merge_racy(): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@684d5052): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@3b4a0fba): success
test Defaults.testForEach("Hashtable", java.util.Hashtable@3c212c37): success
test Defaults.testForEach("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5d9c6056): success
test Defaults.testForEach("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@52e400f2): success
test Defaults.testForEach("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@8ade888): success
test Defaults.testForEach("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@14ff63a): success
test Defaults.testForEach("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@5bd25956): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@66e8919f): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@1ee542a8): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@6f26382a): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5e12ac9): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@179793de): success
test Defaults.testForEach("HashMap", java.util.HashMap@7a770581): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@4b477fed): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@1a58face): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@166b86eb): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7d1c260c): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4cabb830): success
test Defaults.testForEach("EnumMap", java.util.EnumMap@1d33d943): success
test Defaults.testForEach("TreeMap", java.util.TreeMap@681fa19): success
test Defaults.testForEach("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@197da0d9): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1e160437): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4e474ad): success
test Defaults.testForEach("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@524aac8b): success
test Defaults.testForEach("HashMap", java.util.HashMap@6e17a652): success
test Defaults.testForEach("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@22a34adf): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@48be291c): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@75aafbb9): success
test Defaults.testGetOrDefault("Hashtable", java.util.Hashtable@ab00553): success
test Defaults.testGetOrDefault("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@77a54d28): success
test Defaults.testGetOrDefault("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@74a50464): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@459a7c7a): success
test Defaults.testGetOrDefault("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@47fca2ec): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@6b97e1e6): success
test Defaults.testGetOrDefault("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@31d359ba): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@76398973): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@37048348): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@6f957d8): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@572b7c07): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2e3dc184): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@53654795): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@411ca2d9): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@714ef57c): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@3ff31b66): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@439400ce): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@14738da8): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@dcff7f6): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@52365eac): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3e50e03e): success
test Defaults.testGetOrDefault("EnumMap", java.util.EnumMap@39ec86): success
test Defaults.testGetOrDefault("TreeMap", java.util.TreeMap@63a9e214): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1cf92274): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@67396992): success
test Defaults.testGetOrDefaultNulls("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@1b5e6060): success
test Defaults.testGetOrDefaultNulls("HashMap", java.util.HashMap@63f5506b): success
test Defaults.testGetOrDefaultNulls("IdentityHashMap", java.util.IdentityHashMap@79a2a98d): success
test Defaults.testGetOrDefaultNulls("LinkedHashMap", java.util.LinkedHashMap@1defc751): success
test Defaults.testGetOrDefaultNulls("WeakHashMap", java.util.WeakHashMap@3989b6d8): success
test Defaults.testGetOrDefaultNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5ae65171): success
test Defaults.testGetOrDefaultNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@46995502): success
test Defaults.testGetOrDefaultNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1b567030): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@251f8e20, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@162b9fe0, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@36ba3fc8, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5be54e, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@69736721, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3f2d09d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@49f97201, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@268ab855, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@454159bc, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@1e0e5f21, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@312b3642, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6637fb85, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@bb574, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@31a813fc, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@54af8c72, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@1cff9e98, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@2c90be2e, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6b5c28fb, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@65318fbf, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5f4583d7, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@33d2b6c0, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@36cbddce, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@762ae01c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@467069a6, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@76416a7a, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@7265ff48, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@a91fb86, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@c7f0afd, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@c211aae, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@40f9b3c4, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1cb4f9b, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@13e1607c, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@13e27ee4, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@496e67eb, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@73f08576, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3807bf93, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@12167a07, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7368cf28, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@63c32027, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@10dd37e4, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@dc7b895, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@1ca28bc8, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2000d05e, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2f3cd03, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2ae46adf, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@38b849f, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@b3adaa, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@26fb39df, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@761b4146, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@2fd49f88, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@2be2f6fb, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@3f04e96, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@440c6a28, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@508977cb, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@27310eb6, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@d9cb7f7, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@792ad1b8, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@2acb4e9, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@7231a23b, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@43c66f4d, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@294cd0b4, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@29bcdd40, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2c62d7c0, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@39b893fc, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@43e9c5a7, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@40d9b47e, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@4a14c79c, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6578abdb, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@21f843cb, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@15a24480, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@599a438d, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@4b96ec13, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@70b4710, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@ed97916, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@3c999c62, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMergeNullMerger("Hashtable", java.util.Hashtable@4fd95b50): success
test Defaults.testMergeNullMerger("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@bfbacfd): success
test Defaults.testMergeNullMerger("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1cc8ad76): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@491e0698): success
test Defaults.testMergeNullMerger("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@3a481e6): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@566defab): success
test Defaults.testMergeNullMerger("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1cf98ffb): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@3dfe7b81): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@4243cd10): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4ac6a6c6): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7bc64dae): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2ae95989): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@2acb6f34): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@2ea787c1): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@734f1d18): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@3a2924bc): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@50edab16): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1ab67eab): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@727fcc37): success
test Defaults.testMergeNullMerger("EnumMap", java.util.EnumMap@7fa7503d): success
test Defaults.testMergeNullMerger("TreeMap", java.util.TreeMap@7e8466a): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@7d021e80): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@62d6c57e): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@46b74d84): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@7935d3a3): success
test Defaults.testPutIfAbsent("Hashtable", java.util.Hashtable@911f64a): success
test Defaults.testPutIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@69771c): success
test Defaults.testPutIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@6c66458b): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@48445abc): success
test Defaults.testPutIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@51206ce5): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3916ed31): success
test Defaults.testPutIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@64a51867): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@2db490b3): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@13aeee42): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@482cfc71): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@79ae77b1): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2803033e): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6d890c9): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@2c4d5f94): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@69ff75fa): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@e606b74): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@284101ee): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@54f1dca8): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@51a6809a): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6bf6a5cd): success
test Defaults.testPutIfAbsent("EnumMap", java.util.EnumMap@3ac4c1f4): success
test Defaults.testPutIfAbsent("TreeMap", java.util.TreeMap@1454f7f3): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@4e80d830): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@208a6b8c): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@57c76600): success
test Defaults.testPutIfAbsentNulls("HashMap", java.util.HashMap@1079490c): success
test Defaults.testPutIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@7f288084): success
test Defaults.testPutIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@527ea5e8): success
test Defaults.testPutIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@51031f6e): success
test Defaults.testPutIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6bac12d1): success
test Defaults.testPutIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@516a1c3d): success
test Defaults.testPutIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@592bc96a): success
test Defaults.testRemove("Hashtable", java.util.Hashtable@55e32441): success
test Defaults.testRemove("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@4efd0bf1): success
test Defaults.testRemove("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@15090727): success
test Defaults.testRemove("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@3960f44e): success
test Defaults.testRemove("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@3233688b): success
test Defaults.testRemove("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@6e246700): success
test Defaults.testRemove("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@3a955948): success
test Defaults.testRemove("HashMap", java.util.HashMap@ee01d7b): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@7006ec7c): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@14de2e7a): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@25809b91): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@74f1d135): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@57dd5eb3): success
test Defaults.testRemove("HashMap", java.util.HashMap@70bf4965): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@3b03c187): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@516b0746): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@4399275c): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3dea9a61): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4fe74077): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5f2d3a0): success
test Defaults.testRemove("EnumMap", java.util.EnumMap@44fb61fd): success
test Defaults.testRemove("TreeMap", java.util.TreeMap@28f4137a): success
test Defaults.testRemove("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@55cdd118): success
test Defaults.testRemove("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@231f51f7): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@551d960): success
test Defaults.testRemoveNulls("HashMap", java.util.HashMap@2a440b0f): success
test Defaults.testRemoveNulls("IdentityHashMap", java.util.IdentityHashMap@6357f59c): success
test Defaults.testRemoveNulls("LinkedHashMap", java.util.LinkedHashMap@2c192fbe): success
test Defaults.testRemoveNulls("WeakHashMap", java.util.WeakHashMap@8ab2fe4): success
test Defaults.testRemoveNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@421469e7): success
test Defaults.testRemoveNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@653f83f1): success
test Defaults.testRemoveNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@215df90): success
test Defaults.testReplaceAll("Hashtable", java.util.Hashtable@76a8992d): success
test Defaults.testReplaceAll("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5eba3d52): success
test Defaults.testReplaceAll("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@200b1b5d): success
test Defaults.testReplaceAll("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@70acb1cb): success
test Defaults.testReplaceAll("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5a7041a8): success
test Defaults.testReplaceAll("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@12274099): success
test Defaults.testReplaceAll("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@45d57a2): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@f31a27): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@486e9c7c): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@16876662): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3c1659de): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@12c99c54): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@65710b01): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@6a41ffe): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@3bafc780): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@4d4f476d): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1f873769): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2ed2c8db): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7fa8c826): success
test Defaults.testReplaceAll("EnumMap", java.util.EnumMap@fc9d9e8): success
test Defaults.testReplaceAll("TreeMap", java.util.TreeMap@7be6533f): success
test Defaults.testReplaceAll("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2787d706): success
test Defaults.testReplaceAll("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1ea28cc5): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@141dc51): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@329a620f): success
test Defaults.testReplaceAllNoNullReplacement("Hashtable", java.util.Hashtable@7a43f31e): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@7beaea6): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1464a12f): success
test Defaults.testReplaceAllNoNullReplacement("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@546af0ed): success
test Defaults.testReplaceAllNoNullReplacement("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1c072408): success
test Defaults.testReplaceAllNoNullReplacement("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@49365e85): success
test Defaults.testReplaceAllNoNullReplacement("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@19e8a587): success
test Defaults.testReplaceKV("Hashtable", java.util.Hashtable@42329f01): success
test Defaults.testReplaceKV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@f8f65af): success
test Defaults.testReplaceKV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@d58aa99): success
test Defaults.testReplaceKV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2f2c6002): success
test Defaults.testReplaceKV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@456136ea): success
test Defaults.testReplaceKV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7d6232e6): success
test Defaults.testReplaceKV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@8350d6d): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@6846219b): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@7ee31616): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@30f953a): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@32c676b9): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@63206a75): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5780d16b): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@676e75f4): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@7035aee2): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@dd1dbed): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@8b8c242): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@38aa0455): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4c65a0a2): success
test Defaults.testReplaceKV("EnumMap", java.util.EnumMap@7de36e7f): success
test Defaults.testReplaceKV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2c4a5fed): success
test Defaults.testReplaceKV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@47274801): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3469b737): success
test Defaults.testReplaceKV("TreeMap", java.util.TreeMap@79970e6e): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4eb26f94): success
test Defaults.testReplaceKVNoNulls("Hashtable", java.util.Hashtable@71d3cffd): success
test Defaults.testReplaceKVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@15271666): success
test Defaults.testReplaceKVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5283e50c): success
test Defaults.testReplaceKVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@4104994e): success
test Defaults.testReplaceKVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@441005b0): success
test Defaults.testReplaceKVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@aa79587): success
test Defaults.testReplaceKVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@36087b45): success
test Defaults.testReplaceKVNulls("IdentityHashMap", java.util.IdentityHashMap@90e1828): success
test Defaults.testReplaceKVNulls("LinkedHashMap", java.util.LinkedHashMap@742d008): success
test Defaults.testReplaceKVNulls("WeakHashMap", java.util.WeakHashMap@12979691): success
test Defaults.testReplaceKVNulls("HashMap", java.util.HashMap@1d2572d7): success
test Defaults.testReplaceKVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@609ef378): success
test Defaults.testReplaceKVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7e4ad154): success
test Defaults.testReplaceKVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6c15dc27): success
test Defaults.testReplaceKVV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@34cee50a): success
test Defaults.testReplaceKVV("Hashtable", java.util.Hashtable@65521a2b): success
test Defaults.testReplaceKVV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@40af2478): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@458d5fb7): success
test Defaults.testReplaceKVV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@27a9c750): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@27c2c02a): success
test Defaults.testReplaceKVV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@3361c9f8): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@655d0d90): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@ba0c76a): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@75f3ef31): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@44cc1e32): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@15dc107e): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7c0a6556): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@1192e90b): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@78a765ba): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@58353891): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@8110155): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6dab047d): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@675b79d2): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@14bd865f): success
test Defaults.testReplaceKVV("EnumMap", java.util.EnumMap@490bff66): success
test Defaults.testReplaceKVV("TreeMap", java.util.TreeMap@17ed2b6d): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@602790cd): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@27f17a40): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@6d3a05bb): success
test Defaults.testReplaceKVVNoNulls("Hashtable", java.util.Hashtable@82dc5ef): success
test Defaults.testReplaceKVVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@4a81a1b): success
test Defaults.testReplaceKVVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@6b9e40eb): success
test Defaults.testReplaceKVVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@6fd5365f): success
test Defaults.testReplaceKVVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@319cd47f): success
test Defaults.testReplaceKVVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@71ed2f3b): success
test Defaults.testReplaceKVVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@6e0b6c37): success
test Defaults.testReplaceKVVNulls("HashMap", java.util.HashMap@5eb5f493): success
test Defaults.testReplaceKVVNulls("IdentityHashMap", java.util.IdentityHashMap@4e042c68): success
test Defaults.testReplaceKVVNulls("LinkedHashMap", java.util.LinkedHashMap@102274d0): success
test Defaults.testReplaceKVVNulls("WeakHashMap", java.util.WeakHashMap@3ca12ea8): success
test Defaults.testReplaceKVVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6afb641): success
test Defaults.testReplaceKVVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5c47eb52): success
test Defaults.testReplaceKVVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@d009366): success

===============================================
java/util/Map/Defaults.java
Total tests run: 512, Passes: 512, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
