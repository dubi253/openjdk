#Test Results (version 2)
#Fri Mar 01 18:40:23 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
author=Mike Duigou
keywords=bug8010122 bug8004518 bug8024331 bug8024688 testng
run=USER_SPECIFIED testng Defaults\n
source=Defaults.java
title=Test Map default methods

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
elapsed=531 0\:00\:00.531
end=Fri Mar 01 18\:40\:23 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1019-196
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Fri Mar 01 18\:40\:23 UTC 2024
test=java/util/Map/Defaults.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1015-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=531
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Map

#section:script_messages
----------messages:(4/322)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd, mixed mode, sharing)

#section:build
----------messages:(7/206)----------
command: build Defaults
reason: Named class compiled on demand
started: Fri Mar 01 18:40:23 UTC 2024
Test directory:
  compile: Defaults
finished: Fri Mar 01 18:40:23 UTC 2024
elapsed time (seconds): 0.128
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
reason: .class file out of date or does not exist
started: Fri Mar 01 18:40:23 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 18:40:23 UTC 2024
elapsed time (seconds): 0.127
----------configuration:(13/942)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3438)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Map/Defaults.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
----------direct:(12/1022)----------
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:624: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(0L), map.compute(new Long(3L), fun));
                                                   ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:625: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(3L), map.compute(new Long(3L), fun));
                                                   ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:626: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(6L), map.compute(new Long(3L), fun));
                                                   ^
Note: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 warnings
result: Passed. Compilation successful

#section:testng
----------messages:(7/210)----------
command: testng Defaults
reason: User specified action: run testng Defaults 
started: Fri Mar 01 18:40:23 UTC 2024
Mode: agentvm
Agent id: 3
finished: Fri Mar 01 18:40:23 UTC 2024
elapsed time (seconds): 0.401
----------configuration:(13/934)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map

----------rerun:(28/3015)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Map/Defaults.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/Map/Defaults.java false Defaults
----------System.out:(518/56917)----------
test Defaults.testCompute("Hashtable", java.util.Hashtable@6499b552): success
test Defaults.testCompute("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3a3c4acc): success
test Defaults.testCompute("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@3b7a4d0e): success
test Defaults.testCompute("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@b3321ea): success
test Defaults.testCompute("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@68e83a85): success
test Defaults.testCompute("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@60d0b780): success
test Defaults.testCompute("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@12504d57): success
test Defaults.testCompute("HashMap", java.util.HashMap@21859489): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@406e598): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7b0140f7): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@35a9fe91): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7a474735): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@4e9b98a3): success
test Defaults.testCompute("HashMap", java.util.HashMap@3f1d9676): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@4b771d3b): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@fa69298): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1a68b87a): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3ee35cac): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4a305db8): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@31e72781): success
test Defaults.testCompute("EnumMap", java.util.EnumMap@6f896dd7): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2af82b4c): success
test Defaults.testCompute("TreeMap", java.util.TreeMap@1b2ebfb8): success
test Defaults.testCompute("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@48a131dd): success
test Defaults.testCompute("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1b6c9d92): success
test Defaults.testComputeIfAbsent("Hashtable", java.util.Hashtable@29a5e7d2): success
test Defaults.testComputeIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6d22ab4e): success
test Defaults.testComputeIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@41170e5a): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@20c96b0b): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@10c3e620): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@19068406): success
test Defaults.testComputeIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1a85e71c): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@1b11908b): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@626f0b11): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@514578b4): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@26c4348d): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4a41f57c): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@23f02810): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@b51ba4c): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@35ca2cbe): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@f6ae7da): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@3d983f4c): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1174f17b): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2e42d8fe): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1523e963): success
test Defaults.testComputeIfAbsent("EnumMap", java.util.EnumMap@180aac7e): success
test Defaults.testComputeIfAbsent("TreeMap", java.util.TreeMap@60aad0a3): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@358c99ca): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2bd61445): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@6e96f654): success
test Defaults.testComputeIfAbsentNullFunction("Hashtable", java.util.Hashtable@6d9663ec): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@2fdade74): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@6de06ff4): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@3505002e): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@28d2f027): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@13ff20cd): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@3f29275c): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@47a1b28b): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3e5ed2f9): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5ca55f29): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@4f47902): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@30d2fef4): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@76c6029a): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@52d76c42): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2f4bc5ac): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1bd58171): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7d4c79e6): success
test Defaults.testComputeIfAbsentNullFunction("EnumMap", java.util.EnumMap@72a426b6): success
test Defaults.testComputeIfAbsentNullFunction("TreeMap", java.util.TreeMap@3de86ddc): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@4486280f): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@349d1454): success
test Defaults.testComputeIfAbsentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@195b94fb): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@550f1bac): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@48bb988a): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@117e21c): success
test Defaults.testComputeIfAbsentNulls("HashMap", java.util.HashMap@608d5955): success
test Defaults.testComputeIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@3d16f91c): success
test Defaults.testComputeIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@592e9b41): success
test Defaults.testComputeIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@6d164f53): success
test Defaults.testComputeIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3fe41e4b): success
test Defaults.testComputeIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@42faaf1): success
test Defaults.testComputeIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@77035362): success
test Defaults.testComputeIfPresent("Hashtable", java.util.Hashtable@41eeb589): success
test Defaults.testComputeIfPresent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@208876fc): success
test Defaults.testComputeIfPresent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@40d2ca12): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@52acc628): success
test Defaults.testComputeIfPresent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1096704c): success
test Defaults.testComputeIfPresent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@5e55ade4): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@54ebf06e): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@3f1a3463): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@70e575d3): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@21c14ac6): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2416378d): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@258f97a6): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@7b0f99d6): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@379ce8af): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@5d0952d9): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@58a185d2): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@68ca095b): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@721850b8): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2592d227): success
test Defaults.testComputeIfPresent("EnumMap", java.util.EnumMap@2db118df): success
test Defaults.testComputeIfPresent("TreeMap", java.util.TreeMap@57621276): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@fe38281): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@3bcddb68): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@6a4c302a): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@2a54c243): success
test Defaults.testComputeIfPresentNullFunction("Hashtable", java.util.Hashtable@99f755): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@7a3e4323): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5878d7e1): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2b03983): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@77268048): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@32399490): success
test Defaults.testComputeIfPresentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@156d6753): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@6ce9563e): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@2a67f61c): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@431d4500): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3b783a59): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@ca8e29e): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@207c32f4): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@6a0d75db): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@123a1e25): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@64ee104a): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@76ceeb08): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@67eb2506): success
test Defaults.testComputeIfPresentNullFunction("EnumMap", java.util.EnumMap@6a33d237): success
test Defaults.testComputeIfPresentNullFunction("TreeMap", java.util.TreeMap@3f8d46c5): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@7a45695): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@57b8b428): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@28308fb1): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3b034918): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1945ddda): success
test Defaults.testComputeIfPresentNulls("HashMap", java.util.HashMap@4157ad7c): success
test Defaults.testComputeIfPresentNulls("IdentityHashMap", java.util.IdentityHashMap@72ed16b9): success
test Defaults.testComputeIfPresentNulls("LinkedHashMap", java.util.LinkedHashMap@73ffd17c): success
test Defaults.testComputeIfPresentNulls("WeakHashMap", java.util.WeakHashMap@28dfa6c6): success
test Defaults.testComputeIfPresentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1989b2d2): success
test Defaults.testComputeIfPresentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1a26c682): success
test Defaults.testComputeIfPresentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@69ab3ec1): success
test Defaults.testComputeNullFunction("Hashtable", java.util.Hashtable@4fd2741e): success
test Defaults.testComputeNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@67004bfd): success
test Defaults.testComputeNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@775ec322): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@193a6fe8): success
test Defaults.testComputeNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@32499df0): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@16c4e027): success
test Defaults.testComputeNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@3cc3a1fd): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@129c6c6f): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@592b0362): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@1f944cdb): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@673ebf5b): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@573077df): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7c3a70bd): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@3a6b9e07): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@1ded18d2): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@19d78630): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@3762f7d6): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@38020fc4): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3804de85): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2e190ce): success
test Defaults.testComputeNullFunction("EnumMap", java.util.EnumMap@461d5b6a): success
test Defaults.testComputeNullFunction("TreeMap", java.util.TreeMap@4cf694f9): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@221d6c21): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@60cd8ef4): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@4d1910f7): success
test Defaults.testComputeNulls("HashMap", java.util.HashMap@6ad5f1de): success
test Defaults.testComputeNulls("IdentityHashMap", java.util.IdentityHashMap@754d67f6): success
test Defaults.testComputeNulls("LinkedHashMap", java.util.LinkedHashMap@51e50ab9): success
test Defaults.testComputeNulls("WeakHashMap", java.util.WeakHashMap@5048ff2a): success
test Defaults.testComputeNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1d1c017a): success
test Defaults.testComputeNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1ab09ed6): success
test Defaults.testComputeNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@33adda30): success
test Defaults.testConcurrentMap_computeIfAbsent_racy(): success
test Defaults.testConcurrentMap_computeIfPresent_racy(): success
test Defaults.testConcurrentMap_compute_racy(): success
test Defaults.testConcurrentMap_compute_simple(): success
test Defaults.testConcurrentMap_merge_racy(): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@7d3df716): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@55d3f3c4): success
test Defaults.testForEach("Hashtable", java.util.Hashtable@10df7576): success
test Defaults.testForEach("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3ab34349): success
test Defaults.testForEach("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@47a7c4b4): success
test Defaults.testForEach("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@44143ab4): success
test Defaults.testForEach("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@273765ee): success
test Defaults.testForEach("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@40017304): success
test Defaults.testForEach("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@66815e26): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@63c2fb18): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7b8e4972): success
test Defaults.testForEach("HashMap", java.util.HashMap@2f313cea): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4a3f53a3): success
test Defaults.testForEach("HashMap", java.util.HashMap@6e0c36d1): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@1ba1b63d): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@763d5397): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1fefc925): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3853dce1): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1c8b97a3): success
test Defaults.testForEach("EnumMap", java.util.EnumMap@6ab71181): success
test Defaults.testForEach("TreeMap", java.util.TreeMap@3168b639): success
test Defaults.testForEach("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@4820489): success
test Defaults.testForEach("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@713995eb): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@51e27f4d): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1b5addfa): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@5fa8bbff): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@14eef9ff): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@114d1a34): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@6e84288d): success
test Defaults.testGetOrDefault("Hashtable", java.util.Hashtable@10afa7e3): success
test Defaults.testGetOrDefault("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@4a63157a): success
test Defaults.testGetOrDefault("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@3a069981): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7abdf055): success
test Defaults.testGetOrDefault("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@3458de0): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@30cb00ab): success
test Defaults.testGetOrDefault("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@636d697d): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@5070100f): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@616a4774): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@305fef40): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6046776d): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@341133b6): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@12b2bc64): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@bef29ec): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@2f37a33e): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@1a7cbc4a): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@2bdcc1b5): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4e4ed1bf): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2fb922b6): success
test Defaults.testGetOrDefault("EnumMap", java.util.EnumMap@1edccb31): success
test Defaults.testGetOrDefault("TreeMap", java.util.TreeMap@4f96ddf9): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@7cfd2ece): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@4bd866d6): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3f51ca1c): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@1707f812): success
test Defaults.testGetOrDefaultNulls("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@a676a7f): success
test Defaults.testGetOrDefaultNulls("HashMap", java.util.HashMap@3b586e0): success
test Defaults.testGetOrDefaultNulls("IdentityHashMap", java.util.IdentityHashMap@6ea4845e): success
test Defaults.testGetOrDefaultNulls("LinkedHashMap", java.util.LinkedHashMap@3d7cfbeb): success
test Defaults.testGetOrDefaultNulls("WeakHashMap", java.util.WeakHashMap@7e527a57): success
test Defaults.testGetOrDefaultNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@61be9864): success
test Defaults.testGetOrDefaultNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@27a8d9bd): success
test Defaults.testGetOrDefaultNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@363fe01): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@2f7666ac, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1034de4c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2155417b, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2a129879, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1831cfed, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@10a981c9, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@499f34bc, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@489862b, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@66fa1dd4, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@76f1a220, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@439bd8bf, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@67514bf8, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@11a3705, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@20a8b40d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@2605d81f, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@57f1839a, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@125865e1, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@19aa4439, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7e33229d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@10dfd254, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@71e3f08a, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@3a0efe49, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5a5234f7, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2d2b10a0, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@d0fc0ab, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@4acef622, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7245c568, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5a7c6f3c, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@65aa28e6, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@4c685c47, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7f70b6d, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@5ab6c1c0, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@218827f5, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@880d237, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@29d49b6e, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6663d6fd, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3f67e0d6, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4a3fbadc, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@50b187e2, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@4f663e06, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@4652c26d, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@42a5bda, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@48e569c6, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@720da108, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2d054169, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@683c6d32, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@4c8a3048, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@408f02c, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@4b3e0df6, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@35d78cf6, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3e3952a, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@100198e1, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7cdd1d71, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@39dea7d0, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@aa419c6, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@44268f98, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@458429d0, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@6fb5cf03, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@472d80e4, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@6716b1d0, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@70970f66, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@51ca4b25, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@76e56fc3, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@71e4c8f1, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@1f0a12d9, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@1b6e561d, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@71e53fd7, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1b073b3, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@543856a6, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@630f3e4, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@4259a190, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@3e3cb9fc, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@776401d5, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@56637e6, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@53cd4324, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMergeNullMerger("Hashtable", java.util.Hashtable@3b5bf53f): success
test Defaults.testMergeNullMerger("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@642892f5): success
test Defaults.testMergeNullMerger("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5ae4a454): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7b8ce403): success
test Defaults.testMergeNullMerger("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6bffc033): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@45cf29b4): success
test Defaults.testMergeNullMerger("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7e951df3): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@67a95f09): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@6e3397d4): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@5325c452): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2b7b42cc): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@638cc3b7): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@307f69bb): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@1f2c102b): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@c1dee27): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@2ee79ca8): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@29c68de0): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4186fd28): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5f8a1c84): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4b2ed431): success
test Defaults.testMergeNullMerger("EnumMap", java.util.EnumMap@77476b06): success
test Defaults.testMergeNullMerger("TreeMap", java.util.TreeMap@4f4f864f): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@4ac6be75): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@61b63b8d): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@2a195783): success
test Defaults.testPutIfAbsent("Hashtable", java.util.Hashtable@3109b753): success
test Defaults.testPutIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3e6ca4f9): success
test Defaults.testPutIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@6c664e57): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@74717975): success
test Defaults.testPutIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@3b1cb5ff): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@65c2289): success
test Defaults.testPutIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@c2299d): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@957b7d1): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@c06fced): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@7034bd68): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@410e8efe): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@101b4227): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@108a6ee3): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@1455be95): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@41552a39): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@8802b3c): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@3fd70b48): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@7f51aec2): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@2d5b446c): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@354c734e): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7a21bfc4): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@476128b2): success
test Defaults.testPutIfAbsent("EnumMap", java.util.EnumMap@41ff23a6): success
test Defaults.testPutIfAbsent("TreeMap", java.util.TreeMap@486abdea): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@2ec3eb9f): success
test Defaults.testPutIfAbsentNulls("HashMap", java.util.HashMap@621708bd): success
test Defaults.testPutIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@53dff4bd): success
test Defaults.testPutIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@61de2427): success
test Defaults.testPutIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@277132fe): success
test Defaults.testPutIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4cf35985): success
test Defaults.testPutIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5d73b1de): success
test Defaults.testPutIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@18dad9c2): success
test Defaults.testRemove("Hashtable", java.util.Hashtable@4595fe25): success
test Defaults.testRemove("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@50218b54): success
test Defaults.testRemove("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@10301303): success
test Defaults.testRemove("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@465d7499): success
test Defaults.testRemove("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@484c6da6): success
test Defaults.testRemove("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@17087b97): success
test Defaults.testRemove("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@ef71090): success
test Defaults.testRemove("HashMap", java.util.HashMap@45677fac): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@455f8537): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@4a8f41e): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3566b75b): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@64870b51): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7b5e87e6): success
test Defaults.testRemove("HashMap", java.util.HashMap@60c91377): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@512bce9): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@538ff9ef): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@2aa0957f): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@551026c0): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6dff5d62): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@272b1621): success
test Defaults.testRemove("EnumMap", java.util.EnumMap@22f8f4a4): success
test Defaults.testRemove("TreeMap", java.util.TreeMap@663a832b): success
test Defaults.testRemove("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@6bc8beed): success
test Defaults.testRemove("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@3846d86d): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@23703c52): success
test Defaults.testRemoveNulls("HashMap", java.util.HashMap@3ebad3a4): success
test Defaults.testRemoveNulls("IdentityHashMap", java.util.IdentityHashMap@3884b2ab): success
test Defaults.testRemoveNulls("LinkedHashMap", java.util.LinkedHashMap@1275f3b5): success
test Defaults.testRemoveNulls("WeakHashMap", java.util.WeakHashMap@3d9ab656): success
test Defaults.testRemoveNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@75dbf200): success
test Defaults.testRemoveNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2e03c985): success
test Defaults.testRemoveNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@12b2dc21): success
test Defaults.testReplaceAll("Hashtable", java.util.Hashtable@28654b03): success
test Defaults.testReplaceAll("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@38385b21): success
test Defaults.testReplaceAll("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@249af7f6): success
test Defaults.testReplaceAll("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@e47bfd6): success
test Defaults.testReplaceAll("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@55fd1740): success
test Defaults.testReplaceAll("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@64bba6ef): success
test Defaults.testReplaceAll("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@70317180): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@44f178fb): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@53325049): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@26b2eb0c): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5e7fd818): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3c134f0a): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@65a7fdcd): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@5488589a): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@5880282): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@452c4aa1): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1c6fba3): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@412fe087): success
test Defaults.testReplaceAll("EnumMap", java.util.EnumMap@48cf80f3): success
test Defaults.testReplaceAll("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@14c01d7b): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@457b7059): success
test Defaults.testReplaceAll("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@4f7ab5ed): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@7905511a): success
test Defaults.testReplaceAll("TreeMap", java.util.TreeMap@1e7ea515): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@43dbad35): success
test Defaults.testReplaceAllNoNullReplacement("Hashtable", java.util.Hashtable@4b4f2cff): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@36f10b7e): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5de5d227): success
test Defaults.testReplaceAllNoNullReplacement("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@3de1155c): success
test Defaults.testReplaceAllNoNullReplacement("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@3736bf99): success
test Defaults.testReplaceAllNoNullReplacement("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3eac8c57): success
test Defaults.testReplaceAllNoNullReplacement("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@74703cce): success
test Defaults.testReplaceKV("Hashtable", java.util.Hashtable@43126e17): success
test Defaults.testReplaceKV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@77ee5bcb): success
test Defaults.testReplaceKV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@646967b3): success
test Defaults.testReplaceKV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2bf0f7ad): success
test Defaults.testReplaceKV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@414ad423): success
test Defaults.testReplaceKV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3f90481d): success
test Defaults.testReplaceKV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7fca71af): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@67684f1f): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@233f7205): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@22f642c): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@33e7a67e): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@62009b63): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@273215c5): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@664e85c2): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@3cf6c54a): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@308084dc): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@5a450f65): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5f3a5a68): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@674aa049): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4504ee46): success
test Defaults.testReplaceKV("EnumMap", java.util.EnumMap@57857230): success
test Defaults.testReplaceKV("TreeMap", java.util.TreeMap@7d1846c5): success
test Defaults.testReplaceKV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1a659365): success
test Defaults.testReplaceKV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@5d6d30ec): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@48a4ae48): success
test Defaults.testReplaceKVNoNulls("Hashtable", java.util.Hashtable@9d5a094): success
test Defaults.testReplaceKVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3915c384): success
test Defaults.testReplaceKVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2ea993af): success
test Defaults.testReplaceKVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2476df86): success
test Defaults.testReplaceKVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5c2ce9ef): success
test Defaults.testReplaceKVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@5032afbf): success
test Defaults.testReplaceKVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@358c0882): success
test Defaults.testReplaceKVNulls("HashMap", java.util.HashMap@6eb3a4b1): success
test Defaults.testReplaceKVNulls("IdentityHashMap", java.util.IdentityHashMap@5561e92f): success
test Defaults.testReplaceKVNulls("LinkedHashMap", java.util.LinkedHashMap@2c143fb2): success
test Defaults.testReplaceKVNulls("WeakHashMap", java.util.WeakHashMap@1c49388b): success
test Defaults.testReplaceKVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@147dc3bb): success
test Defaults.testReplaceKVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2c095a8f): success
test Defaults.testReplaceKVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7b159710): success
test Defaults.testReplaceKVV("Hashtable", java.util.Hashtable@3ce12fe0): success
test Defaults.testReplaceKVV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5d67560b): success
test Defaults.testReplaceKVV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@58c80871): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@774277fc): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@5477d6a8): success
test Defaults.testReplaceKVV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1811a0bc): success
test Defaults.testReplaceKVV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7d104991): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@275fbc18): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@36d32ae7): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@7ddc25db): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4cebfb34): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1df3da94): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@75478f87): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@19bd23ce): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@1a958bc): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@20592583): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@7ddfb121): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1c5a5c30): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@19f5024a): success
test Defaults.testReplaceKVV("TreeMap", java.util.TreeMap@282619bf): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@79dafd05): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@7926a756): success
test Defaults.testReplaceKVV("EnumMap", java.util.EnumMap@2d8ce53c): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@12372c79): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@54215713): success
test Defaults.testReplaceKVVNoNulls("Hashtable", java.util.Hashtable@29b4798f): success
test Defaults.testReplaceKVVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@14569367): success
test Defaults.testReplaceKVVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@34e2be8c): success
test Defaults.testReplaceKVVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@6cbb6941): success
test Defaults.testReplaceKVVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@37943142): success
test Defaults.testReplaceKVVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@436c16e): success
test Defaults.testReplaceKVVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@411a78cc): success
test Defaults.testReplaceKVVNulls("HashMap", java.util.HashMap@7d88a959): success
test Defaults.testReplaceKVVNulls("IdentityHashMap", java.util.IdentityHashMap@3164d94): success
test Defaults.testReplaceKVVNulls("LinkedHashMap", java.util.LinkedHashMap@ac9a838): success
test Defaults.testReplaceKVVNulls("WeakHashMap", java.util.WeakHashMap@2f05474f): success
test Defaults.testReplaceKVVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@25c851ea): success
test Defaults.testReplaceKVVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4b8a93fd): success
test Defaults.testReplaceKVVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@79f2727f): success

===============================================
java/util/Map/Defaults.java
Total tests run: 512, Passes: 512, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
