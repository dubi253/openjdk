#Test Results (version 2)
#Fri Mar 01 14:20:38 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=243 0\:00\:00.243
end=Fri Mar 01 14\:20\:38 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.13
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 14\:20\:38 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=243
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-6b97c64ba93b85bce3eebab445c80b80ad3118f9)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-6b97c64ba93b85bce3eebab445c80b80ad3118f9, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 14:20:38 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 14:20:38 UTC 2024
elapsed time (seconds): 0.015
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 14:20:38 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 14:20:38 UTC 2024
elapsed time (seconds): 0.015
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 14:20:38 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 14:20:38 UTC 2024
elapsed time (seconds): 0.047
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 14:20:38 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 14:20:38 UTC 2024
elapsed time (seconds): 0.047
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 14:20:38 UTC 2024
Mode: agentvm
Agent id: 6
finished: Fri Mar 01 14:20:38 UTC 2024
elapsed time (seconds): 0.179
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91944)----------
Seed from RandomFactory = -3820762492259069825L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1261014876], 0, 1): success
test SubList.testAdd([42, 443157802], 0, 1): success
test SubList.testAdd([42, 860016054], 0, 1): success
test SubList.testAdd([42, -1448094212], 0, 1): success
test SubList.testAdd([42, -462707144], 0, 1): success
test SubList.testAdd([42, 1979250681], 0, 1): success
test SubList.testAdd([42, 995031863], 0, 1): success
test SubList.testAdd([42, 1723729696], 0, 1): success
test SubList.testAdd([42, 692736495], 0, 1): success
test SubList.testAdd(java.util.ArrayList@44068867, 2, 5): success
test SubList.testAdd(java.util.LinkedList@1c9625d7, 2, 5): success
test SubList.testAdd(java.util.Vector@d4c48bb, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@702279b0, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@2f9b33e9, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@2b7d83b6, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@70c9489b, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@733c01e1, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@1651c508, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@6ba332a1, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@69d262c4, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7b4f1452, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([667359551, 42], 0, 1): success
test SubList.testAddAtPos([42, -2041322183], 0, 1): success
test SubList.testAddAtPos([42, -2046688671], 0, 1): success
test SubList.testAddAtPos([42, -1334742274], 0, 1): success
test SubList.testAddAtPos([-123048610, 42], 0, 1): success
test SubList.testAddAtPos([42, -460837859], 0, 1): success
test SubList.testAddAtPos([42, 1244088068], 0, 1): success
test SubList.testAddAtPos([42, 276609368], 0, 1): success
test SubList.testAddAtPos([42, -205338410], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@e591189, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@18226b69, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@786a39cc, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@1699e16b, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@4c88c764, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@55ac93ff, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@13eec78c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@13f7022b, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@53b38da3, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@70f4f4e4, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@2e02f518, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@683195bf, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@2e79d4b, 2, 5): success
test SubList.testClear(java.util.LinkedList@3e19af22, 2, 5): success
test SubList.testClear(java.util.Vector@2a9f66d3, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@61fcb6b3, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@4da17428, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@25790434, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@15acbaa5, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@7a13c164, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@d51c2da, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@4f7a5552, 2, 5): success
test SubList.testEquals(java.util.LinkedList@62ccab1f, 2, 5): success
test SubList.testEquals(java.util.Vector@36aa33df, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@5a7fc9d7, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@2f404929, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@36ad7eb3, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4eb6c1c4, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@403a130e, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4d31dfa9, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3dab04e3, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@47eda8d6, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@417f14c3, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@a21f2b2, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@52f71b9e, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@471aedc0, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@7ec71068, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@f3cbc31, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@9d0d9af, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@9d0d9af, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5f98f4ac, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1596f79, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@3a396148, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@72433f4e, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@74cbded5, 2, 5): success
test SubList.testGet(java.util.LinkedList@5fa034bb, 2, 5): success
test SubList.testGet(java.util.Vector@4806b11e, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@176296ac, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@7daec2b, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@683446a, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@6593a18f, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@476a4c96, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@4fc07936, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@367dbf39, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@745d0c17, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@3ebce3e0, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@9b4cebd, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3cb26daf, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@264ad7e8, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@7e64a132, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@7927619a, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@620af1df, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@620af1df, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@7f9de96c, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@75cd8dcf, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@21106012, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1175f669, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@1e2b65e4, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@28cdc05d, 2, 5): success
test SubList.testIndexOf(java.util.Vector@7f1fabb2, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@3e3cd949, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@7185201a, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@78460034, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@79388b0e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@52a37cf2, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@61c36fb2, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@56dda55d, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@7524e72, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@232484fa, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@77d95517, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@709f0b9a, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@241ce02f, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@5c4849d7, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4edf4f3b, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@7063e727, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@7063e727, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1e0f99f6, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6802ba3f, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@7ebd51ac, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@22f67755, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@5da293c5, 2, 5): success
test SubList.testIterator(java.util.LinkedList@e671869, 2, 5): success
test SubList.testIterator(java.util.Vector@233bdf70, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@467c2723, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@23bd3239, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2df2b97, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1354d679, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@27f77e8f, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5b829bbb, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@601d88ed, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@42c87e64, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@26637ea0, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@6c2d97fa, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@679af456, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@7c20569d, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@5245c276, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@ae97178, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@7bd205e2, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@7bd205e2, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@561d177a, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@61108113, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4488efc7, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@43b6565e, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@6850cf81, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@2a705090, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@c79883a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@79d072c0, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@d3f011, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@49b57fad, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@4a0d9704, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@51bc98ce, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@2f007823, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1fd49551, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@21658310, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6858d685, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@59c61d35, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1d83047b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@6a790cc0, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@64df794, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7c0795d8, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@3464978c, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@3464978c, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@42864781, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@3298683, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@3f01e67b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@51b90ac1, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@38085434, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@3d83ca8f, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@74fd8e3, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@739eaf9a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@6420563a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@7922ce39, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@15f8bd73, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@37aeba39, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@69c9f3c1, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@1c56989d, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@5abb75c6, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@7aaf6aa, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@4a00135d, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@35fd9bbb, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@16850c3e, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@3b4a9567, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@728280a3, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@601404a1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@e2a9c2a, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@135065a7, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7d4e1116, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@7201780e, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@153f97e5, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1d4e2f58, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@7b79fa03, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4112b25a, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@15f8a75b, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@15f8a75b, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@364be27, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@f2241a7, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@46ffe441, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3843a8ea, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@47acecf0, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@27e3d7db, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@a9814d, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@6ac2f3af, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@62c42081, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@24303fbd, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@24303fbd, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@3065926d, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@40a43d67, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@10b008ef, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@81ae670, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@28449e7, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@19bdc1ab, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1aa40567, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1557d892, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@68af10e1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@268d4507, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@316f5015, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@5c69956e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@d26b4cc, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@f9e86e1, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@6428a6ca, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@65d8ecc8, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@1f66bc3d, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@75fb96d7, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2b659ff1, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@697f125e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@2d0c7e20, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@27bd6d18, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4c0e0924, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@3dc89042, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6f316dd0, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@6da1af93, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@15c51aa8, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@21bd6ff5, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@2fa1c961, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@57f675ee, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@72301204, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@72301204, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@8bfeba9, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@53ee4c99, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@b59d5d3, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3bca5859, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@4b916dfa, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@63876dce, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@db66289, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@b328203, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@3bf06669, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4c1cf398, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6b6b5cdd, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@1933a754, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7e96b06d, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@28fea471, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@22f6d8cd, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@5135b574, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@219d9719, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@76bf565e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@28d9e822, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@23e84e49, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@2d397afa, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2cc901f8, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-108739636], 0, 1): success
test SubList.testListIteratorSet([860439542], 0, 1): success
test SubList.testListIteratorSet([-2068560805], 0, 1): success
test SubList.testListIteratorSet([-785297638], 0, 1): success
test SubList.testListIteratorSet([625039508], 0, 1): success
test SubList.testListIteratorSet([18113922], 0, 1): success
test SubList.testListIteratorSet([-1422393301], 0, 1): success
test SubList.testListIteratorSet([-2085208395], 0, 1): success
test SubList.testListIteratorSet([1893638043], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@78b2a32, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@345c41ae, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@7e232a67, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@10986c29, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@6dc5cbf8, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6d116c, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@5cbf17b9, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@59ab7400, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@56edd209, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4a760fbb, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@58db9ef2, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@11a81cd7, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([578527940], 0, 1): success
test SubList.testListIteratorSetPrevious([-488678837], 0, 1): success
test SubList.testListIteratorSetPrevious([1601691872], 0, 1): success
test SubList.testListIteratorSetPrevious([404245705], 0, 1): success
test SubList.testListIteratorSetPrevious([1005091170], 0, 1): success
test SubList.testListIteratorSetPrevious([797958614], 0, 1): success
test SubList.testListIteratorSetPrevious([-387051066], 0, 1): success
test SubList.testListIteratorSetPrevious([-1754354312], 0, 1): success
test SubList.testListIteratorSetPrevious([-1401632913], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@6bccc26d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@5c23866f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@6d158632, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@3f34c45c, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@2136d27e, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@662a0bd8, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@ed6cec1, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@6e55fa58, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@6dc7e85d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@4e86aa30, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@35804eaa, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@41d68133, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@6f28c7bd, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@62316bfb, 2, 5): success
test SubList.testModAdd(java.util.Vector@5854d97d, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@5e05a9a2, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@16d47a07, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@41593f22, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@32d12f5c, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@1efce544, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@21476f66, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@6d4d8ab0, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@55db9f00, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@547dc1f3, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@1f6038cb, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@63668133, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@7aa18340, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@1639e478, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@4e881215, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5ad4fd02, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@45782b19, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@58ac0df, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@3ef9b45c, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4d3c6847, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@6f1fbf1b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@41d7b6cc, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@1e9b3313, 2, 5): success
test SubList.testModClear(java.util.LinkedList@1ceb1f17, 2, 5): success
test SubList.testModClear(java.util.Vector@140aba89, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@77208347, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@15907f59, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6c286d9b, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@5438364a, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@6b5e6fd9, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1bffd7ad, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6b29d531, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@133c94b, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@5d9fcf1f, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@70083d96, 2, 5): success
test SubList.testModGet(java.util.LinkedList@606be97b, 2, 5): success
test SubList.testModGet(java.util.Vector@b1b26e8, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@f369e7d, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@150b4e59, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@52e90b6a, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@72243937, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@3ce5dae5, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@44e82a7e, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1972c9dc, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@391e9f34, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@2da10e81, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@249e88bd, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@12eaf66, 2, 5): success
test SubList.testModHashCode(java.util.Vector@661ec89, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@71d83c8, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@a133179, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@70ec92f1, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1c06da12, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@3158b554, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@7998d90a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1632023f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@5831f780, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1bac6263, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@6ed7f859, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@5cc36a14, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@31d69b0c, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@6f4bda5f, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@1f343a6b, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7a63a60d, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@208772dc, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@544b5ab5, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@26d6bed3, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@65fcb533, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@2a9eaff0, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@278a0653, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@231884a9, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@6d050fff, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@6d554264, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@3ba16a55, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@b4aef4c, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@325a0df7, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@7c793764, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@551d7247, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@6c16e2ba, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@32aa52de, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@3924fb3d, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@901c088, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@467a2109, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@6ea1869a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@29f69539, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@5487be2d, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@6b38a6dc, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@373bba28, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@3a11dda6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@2e434780, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@29f0ea4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@68378ffa, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@1c37f526, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@718b4039, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@43848983, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@58bc988, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@5680484, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@1f4ffff8, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@2d77425, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3bc65998, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@35c3fc82, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@515238b9, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1182cee1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@454d79a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@40fd06da, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3baf0307, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@7530a602, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@68842c3e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@23ca102f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@727752e8, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@794f054, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2fe44230, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1d00ab95, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@12579535, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7e6e8b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4c6ab648, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@76f0dba1, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5ef25071, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@7efef510, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@66603792, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@196950d8, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@2c13891, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@726541a8, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4e5e77f3, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@7e096e6f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@15f169, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@5b152a53, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6599498, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@4855304c, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6e55d1ed, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@71376907, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@337892c4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@4cbcb7af, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@2eeb3d7b, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@4dc9e33b, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@70574e29, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1f075ec7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@57933747, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@42110e4f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@694ac1cb, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@68c595a5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1f4024dd, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@46510335, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@166ea47a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@74f71181, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@6ce7b8eb, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@15be6af2, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7c58b64, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@70c852cc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@2f3049ba, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@31afdcf5, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@33320b8e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@62ebdc0f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@482e2dde, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@98edd9a, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@745f690, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@7ac10de6, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@4e6247ea, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@5a12b09c, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3ef6a432, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@280a4342, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7e683218, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@7f61dfb8, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@133c1996, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@3b63a653, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3cd8a396, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@3113af55, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@31cedc8a, 2, 5): success
test SubList.testModRemove(java.util.Vector@3e211eac, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@39a0201a, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@682e3d55, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4c1d069b, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@6fd412ab, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@15c57c8c, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@669389c1, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2dde9006, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@12996e66, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@55bef2a5, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@7960f34b, 2, 5): success
test SubList.testModSet(java.util.LinkedList@d9668c1, 2, 5): success
test SubList.testModSet(java.util.Vector@4030f705, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@1a635c85, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@468a1ca1, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@d8e6ed5, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@30c3dc06, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@f693301, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@52b640f6, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1d7e8637, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@5d30b461, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@25f552d7, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@58ab21bd, 2, 5): success
test SubList.testRemove(java.util.LinkedList@2ef0006e, 2, 5): success
test SubList.testRemove(java.util.Vector@657e3d8b, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@6b95bd16, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@63db0d0f, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@7bd6fda5, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@2656cb3d, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@3b4d0061, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@4616f655, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1884021481], 0, 1): success
test SubList.testSet([1356382870], 0, 1): success
test SubList.testSet([1977830717], 0, 1): success
test SubList.testSet([776057706], 0, 1): success
test SubList.testSet([1649641197], 0, 1): success
test SubList.testSet([507943150], 0, 1): success
test SubList.testSet([-1744072509], 0, 1): success
test SubList.testSet([-307039395], 0, 1): success
test SubList.testSet([-2104622114], 0, 1): success
test SubList.testSet(java.util.ArrayList@1baf7a69, 2, 5): success
test SubList.testSet(java.util.LinkedList@60baec54, 2, 5): success
test SubList.testSet(java.util.Vector@623398cd, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@403aa8ba, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@4254f596, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@9275cad, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@2f9fe84d, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@6a127295, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@62a36cbd, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5e03adf6, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@64e86f0f, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@67d11565, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@1c5659e9, 2, 5): success
test SubList.testSubList(java.util.LinkedList@25251f0e, 2, 5): success
test SubList.testSubList(java.util.Vector@394b7e54, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@15162733, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@7e3ec03, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@fb04b18, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@368bde02, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@4ed7a993, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@d9eec17, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@2b820f0f, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@5eaf8746, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@68fc3a02, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@1fd67b9c, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1e50f6dd, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@859f535, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@13ee05cf, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@558e9a69, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@378f19b6, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@378f19b6, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@4b231b63, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@36d19859, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@e92d179, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@472e5333, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@13e78b7, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@b3e088c, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@27ed389c, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@25ded12b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@2b5a492d, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@5c17d9c2, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@5c17d9c2, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@497ad594, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@2e5fc5dd, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@6bc7559b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@1ee76537, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@3b5a7898, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@2bb54999, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5692af11, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@7751dc53, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6c359da1, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@dd0558c, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@dd0558c, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@2be0ff47, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@46730d3f, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@6241fc05, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5b328c8, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@22ff97ad, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7479686e, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@6e9220b4, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@4bd5ae49, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3081421a, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@75b42b9b, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@75b42b9b, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@21b877ee, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@fa67290, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@6ede27cb, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@4475c2a, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@7776b963, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@3a8a334a, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1c4970ef, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@a37ffe0, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@c4ce012, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@7983d3cd, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@7983d3cd, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@45473330, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@306348d, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@a0047bb, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@768c9faa, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@27f173e9, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@527268d7, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@ee3b28d, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@1357ef95, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7f462808, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@30b084ac, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@30b084ac, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@3dc7de53, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@37d0316c, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7513d59a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7f61cb27, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@3f7e81c3, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@50130130, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@7c9cd857, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@51f034c7, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@175388a6, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@12b358a3, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@12b358a3, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@66234f33, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@7167d8d5, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@61d02a7f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@2bcedba5, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@63ae176f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@27557926, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3388c9bd, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@900a6ad, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@5071cd02, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@6b71199c, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@6b71199c, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1f4327a5, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1327894a, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2d7bf039, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@15b27a43, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@7f49f42c, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6b457a80, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@42aea598, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@3a73ef39, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3e324261, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@7b5dd252, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@59b2989a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@33695ea9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@d0a156a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@78feed15, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@60bc44c4, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@286276fd, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@da36ca6, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@1f963f08, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@77a82f6b, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@27113c2, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@27113c2, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@f281a06, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@7e1ba60, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@7a190299, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@1a3f14c5, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
