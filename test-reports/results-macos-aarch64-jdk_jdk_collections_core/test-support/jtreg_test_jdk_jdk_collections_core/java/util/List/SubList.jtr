#Test Results (version 2)
#Thu Feb 29 15:55:27 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=249 0\:00\:00.249
end=Thu Feb 29 15\:55\:27 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 15\:55\:27 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=250
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 15:55:27 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 15:55:27 UTC 2024
elapsed time (seconds): 0.013
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 15:55:27 UTC 2024
Mode: agentvm
Agent id: 2
finished: Thu Feb 29 15:55:27 UTC 2024
elapsed time (seconds): 0.013
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 15:55:27 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 15:55:27 UTC 2024
elapsed time (seconds): 0.044
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 15:55:27 UTC 2024
Mode: agentvm
Agent id: 2
finished: Thu Feb 29 15:55:27 UTC 2024
elapsed time (seconds): 0.044
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 15:55:27 UTC 2024
Mode: agentvm
Agent id: 7
finished: Thu Feb 29 15:55:27 UTC 2024
elapsed time (seconds): 0.191
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91951)----------
Seed from RandomFactory = -7289596301159309618L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 860504298], 0, 1): success
test SubList.testAdd([42, -1677118620], 0, 1): success
test SubList.testAdd([42, -2132126387], 0, 1): success
test SubList.testAdd([42, 673359620], 0, 1): success
test SubList.testAdd([42, -557005817], 0, 1): success
test SubList.testAdd([42, 822195506], 0, 1): success
test SubList.testAdd([42, -234611267], 0, 1): success
test SubList.testAdd([42, 1178493304], 0, 1): success
test SubList.testAdd([42, -689740589], 0, 1): success
test SubList.testAdd(java.util.ArrayList@123adc1c, 2, 5): success
test SubList.testAdd(java.util.LinkedList@4fd385, 2, 5): success
test SubList.testAdd(java.util.Vector@283da72, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@4add77a0, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@7907fd47, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@6e4a1fc8, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@124efe12, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@3bd7e268, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@24f304fb, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@4dc94163, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@766b4853, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@71534090, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 1248837034], 0, 1): success
test SubList.testAddAtPos([42, 1844911142], 0, 1): success
test SubList.testAddAtPos([1860359213, 42], 0, 1): success
test SubList.testAddAtPos([42, 778590542], 0, 1): success
test SubList.testAddAtPos([42, -733230043], 0, 1): success
test SubList.testAddAtPos([-945005729, 42], 0, 1): success
test SubList.testAddAtPos([42, -510781330], 0, 1): success
test SubList.testAddAtPos([1551717246, 42], 0, 1): success
test SubList.testAddAtPos([42, -304950933], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@6beae1af, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@3255f004, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@1bf66ce7, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@69cbf753, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@e211198, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@536ea506, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@35ba4a28, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@3be7c6ec, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@66c089a0, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@468124f9, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@46051586, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@688f5374, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@742566f7, 2, 5): success
test SubList.testClear(java.util.LinkedList@6c893b99, 2, 5): success
test SubList.testClear(java.util.Vector@7f16165d, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@4757019d, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@9212d0f, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@63c001f6, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@2315bf60, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@79646242, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@3124e227, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@7ceb601, 2, 5): success
test SubList.testEquals(java.util.LinkedList@5c8aa153, 2, 5): success
test SubList.testEquals(java.util.Vector@1623e241, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@5f38c977, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@4b41bb79, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@f916731, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4079a280, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@95c1f30, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@286f916d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4e16d92d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@45213d0d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4d970355, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@73a43bc3, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@5541d0be, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@43e20a67, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@1af922d4, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@226fd33, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@51850986, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@51850986, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@42bcca4, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1235ba64, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@311834c5, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@2a1a6fe2, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@49d39599, 2, 5): success
test SubList.testGet(java.util.LinkedList@ae5c0bd, 2, 5): success
test SubList.testGet(java.util.Vector@3fc50450, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@cc84be2, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@89af8e8, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@a30341f, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1ed5e4e2, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@1e2d79de, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@568c3235, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7353823, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@2e08ddec, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@68781a16, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@720f404, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3899712e, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6b6b6289, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@d7765c9, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@4cc7eae2, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@20f80a07, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@20f80a07, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@4477ba13, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@17e2bccc, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@4ef586bd, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@11d4d7c9, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@596f683c, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@2d2ecfaf, 2, 5): success
test SubList.testIndexOf(java.util.Vector@61284f1c, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@ceb1b56, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@4bd64321, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@57357b9b, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6b6f5f5b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@13265c65, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@5eec4e53, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@891cc59, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@39fd0342, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@3d3c9a67, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@6f906e1d, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@39bbae37, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@513cd211, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@47af0991, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1b14be22, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3d21950f, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3d21950f, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6a8176f6, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6448bfb, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@572e7ac1, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@66c75c68, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@16857a77, 2, 5): success
test SubList.testIterator(java.util.LinkedList@4b1ad972, 2, 5): success
test SubList.testIterator(java.util.Vector@420b25c3, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@3f59b616, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@5e09db51, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@27dfb115, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4c08427f, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@6113df90, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@6d009318, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5df67dba, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@7e2d894d, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@46393f5, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@4e4694be, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@258c1852, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2d51cbb4, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@7d363982, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2d26cf40, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@1454a4aa, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@1454a4aa, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@4f0f466f, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@6af7526e, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@6f2878c, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@56df8249, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@54791dcc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@510152c1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@3ea6e793, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@41811285, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@2be29ea, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3fb943ed, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@2998546c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@1e7b113, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@661c3fc5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@f3c6f28, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@64f0c3ca, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4287e3be, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@34611c39, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7a0924e9, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5a6e11ed, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@363d0304, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@71d41e26, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@58195335, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@58195335, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@2f94f4bf, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@6b8b4335, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@156ff7e9, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2d975f1d, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@726d0b72, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@600437b2, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@9d8d3a, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@48d5cf05, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@2eec80ca, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@609a6eb4, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4b15fa80, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@7733fbcd, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3c09c558, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@177157de, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@254d4671, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@22c13bd8, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@4db4d177, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@4394dc79, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1e0a7ea, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@d118620, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@44d68ad0, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@32c1634d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6f47fdaf, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@63ec2cac, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@17a1687f, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@70b48df9, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1c957d97, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3751a523, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@4a0cbef7, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6fcecf08, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@9fb379e, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@9fb379e, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@c1375b4, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@2c5030, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7bccc3a5, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@62df0add, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@7f9fe417, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@5e7b91b2, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@5e96a066, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@456c4570, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@53e21bd7, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@4ebc0db3, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@4ebc0db3, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@49e44257, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@b5638b3, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@5bbd1218, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@5ecaa0da, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@2b8939a9, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@5dfdb97, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@58285547, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6887cb95, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@3b668ad9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@33241b3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5eaf58b1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@650b688b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1105b89a, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@778ac273, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@26f31b77, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@13031a2c, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@427a8d50, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@250e360e, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2f30cd0c, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@69c3278e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@4fb0a147, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4ca62d4e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6abaab0b, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@67c29f01, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2c4740d2, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@5666b51d, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3be82bef, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@311f9c7b, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@74343139, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@4ccb9352, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@e5c8578, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@e5c8578, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@5d07c0d5, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1a6ba301, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@bceac9a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@2cca11d7, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@ef5010d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@3af79275, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@3bd53ba9, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@6102da88, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@20f8310a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@6b302a64, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@2ee3dc36, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@53435c1c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@3affa208, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@59335200, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@5b744bee, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@77cf370e, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@793640cf, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@2e30aab2, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1d49f0a5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@609ab045, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@73e3c842, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2a43eaf7, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1758942223], 0, 1): success
test SubList.testListIteratorSet([489343519], 0, 1): success
test SubList.testListIteratorSet([-1523110795], 0, 1): success
test SubList.testListIteratorSet([1798432261], 0, 1): success
test SubList.testListIteratorSet([-200862333], 0, 1): success
test SubList.testListIteratorSet([-482432212], 0, 1): success
test SubList.testListIteratorSet([-666471330], 0, 1): success
test SubList.testListIteratorSet([-1365846728], 0, 1): success
test SubList.testListIteratorSet([450010951], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@36e6b09, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@138e83e8, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@c4b8f71, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@642f3e4c, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@247c6d23, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@714d42bf, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@20b36e1e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@391e4cd6, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@6dfd4a33, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@69083483, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@10b32e46, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4754e9af, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([432392740], 0, 1): success
test SubList.testListIteratorSetPrevious([2040681483], 0, 1): success
test SubList.testListIteratorSetPrevious([-445871143], 0, 1): success
test SubList.testListIteratorSetPrevious([1007950829], 0, 1): success
test SubList.testListIteratorSetPrevious([-756243975], 0, 1): success
test SubList.testListIteratorSetPrevious([-107766191], 0, 1): success
test SubList.testListIteratorSetPrevious([262490763], 0, 1): success
test SubList.testListIteratorSetPrevious([-735406737], 0, 1): success
test SubList.testListIteratorSetPrevious([1896638688], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@7a519ab8, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@5cd191c5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@6de6ac6d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@5912aa01, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@396cfe48, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1676c87a, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@2475d148, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@1f1f18d0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@40fd906d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@4935ee02, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@68dd019a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7d52996a, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@153ad11e, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@252c2cfa, 2, 5): success
test SubList.testModAdd(java.util.Vector@6c273ded, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@561dbcb5, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@1915d61c, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@20097606, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@198c9721, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@3d150cbf, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@1e136cc1, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@62912ac0, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@5a57cdbd, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@63de457e, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@36dd2fa2, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@451e4881, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@742100ac, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@4349a16f, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@6042b8c9, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3fd2418b, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@10e051e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@6b4488c9, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@159ef754, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@26240e61, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@6947e868, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@48d2b7db, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@5d1f3c40, 2, 5): success
test SubList.testModClear(java.util.LinkedList@709d8ef8, 2, 5): success
test SubList.testModClear(java.util.Vector@70a56123, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@1e7d86d7, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@7491c5d4, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@5de983d7, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@387e92fb, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@17ed69c, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@55f8f50c, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@72cec844, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@130e074e, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@b4b158f, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@14d5614a, 2, 5): success
test SubList.testModGet(java.util.LinkedList@27cd65d4, 2, 5): success
test SubList.testModGet(java.util.Vector@2e12040b, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@68b5df99, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@500f89de, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@65819e1e, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@38cc5bf6, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@4282b14, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@41d136f3, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@68768715, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@7d7105c5, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@175f81e3, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@200e721, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1105f033, 2, 5): success
test SubList.testModHashCode(java.util.Vector@d12ec40, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@32e88688, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@5189847d, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@3834a6ab, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@76be7d09, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@50aea71e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@73e104f6, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@930da97, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@1792c763, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@2c3cd82e, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@171933d0, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@287c858b, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@32bc84cd, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@16bbbfa2, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@1ba6025, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@29be5640, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@1c21e475, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@3822e169, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@25830651, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@44866d7f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@5dc9bf9c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@463954ac, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@63b19c76, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@3f496162, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@32adb6fd, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@2edff9ab, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@2ac9459c, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6f787b94, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@1a983670, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@56b193e5, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@1c856038, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7362ce22, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@2c645f59, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@526dcbba, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@f781f00, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@63492e34, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@2e75649b, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@d7dec46, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@3e187feb, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1a77e9e, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@238369ad, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@2f0dbad7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@464d918, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7004f4c4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@7ebdee44, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@72547f4e, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@54b70e2, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@3f0377c9, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@7ec9a886, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@7aabc727, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@31366eca, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@590eaee2, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1a595ff2, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@d6bf76b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1cd78760, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1e9b4899, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@7d0b9b73, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3c7af5d7, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@17ff777, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@7fc49a3e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@571677b8, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@4307a1bb, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@69678415, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@41e3b602, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5ddd5050, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@d561b4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@465046d3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@650d2fef, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@169b6597, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@255e448a, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@5d0a894, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@6647d48d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@2285e1b0, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@28fae77, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@26f9017f, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2463eac7, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@6218fee, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@66ca0606, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@686cb087, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@24cbd063, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@b5ae7e6, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5bb51383, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@1e33d71a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@6b9115d8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@62a07f90, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@11982bfd, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@4dcd6548, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@49b7dddc, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4531eccb, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@2d7697fb, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@56fec6e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@13893db, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@2454234b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@39b4983f, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@65ac81b4, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@5590ab53, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@5c4c8196, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@2b8f2adc, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@2e731f8f, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@29dec9cf, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@52c6604e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@58246e7b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@21c7bb48, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7224a4b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@482a4b34, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@54689ad2, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@51175e7f, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@22320b1e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@e49de5c, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@4c79891d, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@5d14b908, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2b4b88e2, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@371a374d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@3d89fc2e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@6494b3df, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4f2d07f2, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@1e401681, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3be7c714, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@2b67eb69, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@55ec9223, 2, 5): success
test SubList.testModRemove(java.util.Vector@656e9ef, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@5605c19c, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@2633fb78, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@39cb4fc6, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@4c42c8a2, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@3dc6df92, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@acf299c, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5fc7f6b9, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@6b050d22, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@6bce3d9d, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@42918fe2, 2, 5): success
test SubList.testModSet(java.util.LinkedList@1730a2ae, 2, 5): success
test SubList.testModSet(java.util.Vector@58b76464, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@5e21115d, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@13d13239, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3ebce3bb, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@63671301, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@5fdb202a, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@10e152c8, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@d56c1cb, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@71e57f1f, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@128302d7, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@58a417d, 2, 5): success
test SubList.testRemove(java.util.LinkedList@25fc0dcf, 2, 5): success
test SubList.testRemove(java.util.Vector@44bbd353, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@23104ae3, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@2fc0c287, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@24573cea, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@374272d2, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@261d80e6, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@66cdf1b5, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([524234851], 0, 1): success
test SubList.testSet([-416223719], 0, 1): success
test SubList.testSet([-28462808], 0, 1): success
test SubList.testSet([-149355271], 0, 1): success
test SubList.testSet([-1509806516], 0, 1): success
test SubList.testSet([1983979173], 0, 1): success
test SubList.testSet([1428810037], 0, 1): success
test SubList.testSet([-104825556], 0, 1): success
test SubList.testSet([-39463089], 0, 1): success
test SubList.testSet(java.util.ArrayList@394043d1, 2, 5): success
test SubList.testSet(java.util.LinkedList@562a66a2, 2, 5): success
test SubList.testSet(java.util.Vector@5858ded0, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@5b7b3b2d, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@4cc2f510, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1a1e5735, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@36153c6, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@657c73a, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@5596a27f, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@47e34daf, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@7a11d66b, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@717a8249, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@14749d6e, 2, 5): success
test SubList.testSubList(java.util.LinkedList@3489fb2e, 2, 5): success
test SubList.testSubList(java.util.Vector@33f8111a, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@7b4f0782, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@303c124f, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@15ef73a1, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@7bcf730f, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@7b0d7ac4, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@5d5f431e, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5396dc6d, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@6946ca91, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@250efa7e, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@5292701a, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@7f3b74cc, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4bc9ca06, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@6a98376e, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@17d82e59, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@716b79af, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@716b79af, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@646e92f5, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@559a9de7, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@48b9c102, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@163eafe1, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@53149c96, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@66de7c93, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@2f86e02, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@4fcc915f, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@52677e71, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@75295a0f, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@75295a0f, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@73dc49a1, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1ffefd38, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@1cccd04e, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@6cd63094, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@281b2e6c, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3f9ada70, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@692f12b2, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@799c56d2, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@39b84981, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@cfce90f, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@cfce90f, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@7141fdd4, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@a9ec1e1, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@3de4f3be, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2dc85daa, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@4eaaee81, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@30e95cbe, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3d11504c, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@614f4ee4, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@c099c52, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@50f34baf, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@50f34baf, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2c2a52d5, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@54f9ec0e, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@7aa61e6, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@c20d413, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@6a64a2b3, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@63b2bc30, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4338f7c2, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@54b1ed06, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1baad41c, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1af9bac5, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1af9bac5, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@44b69544, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@131ab5a3, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@34d7f293, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@108e3655, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@65bbf5eb, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@2bf03f3b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@5d344add, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@408eb1f0, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@5a30a0b3, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@6a6c44f0, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@6a6c44f0, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@731d0f9c, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@36a4f7d3, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6a7f7bef, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7453f1aa, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@2a0c93c7, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@659d4b0f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@7675958c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@7d1abfb4, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@70edef1, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@4b0b80d1, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@4b0b80d1, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@5a94120d, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@6ea09621, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@56ce646d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1622ac2, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@717f7d4b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@5870661b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3c3598e8, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@16d198e8, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2a9ba633, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@5381f40a, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@5381f40a, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@10f2e5c5, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@7b3c346c, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4e889213, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@63a68971, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@7527234, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@79202caf, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@52c68c70, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@2f0ab573, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1d7938ae, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@79c25605, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@11aa21c2, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@59fe20e0, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@5cdfab6a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@17226e1c, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@47d66529, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@2e8a03b6, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@249b4812, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@5d50440e, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@778333e5, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@338ed7db, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@338ed7db, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@5d912867, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@39a2082c, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@aaf379e, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@1bd92bd8, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
