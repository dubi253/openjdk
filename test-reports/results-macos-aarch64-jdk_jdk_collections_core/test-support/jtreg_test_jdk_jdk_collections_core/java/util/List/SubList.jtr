#Test Results (version 2)
#Sun Mar 17 17:41:27 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=5205 0\:00\:05.205
end=Sun Mar 17 17\:41\:27 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.23
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Sun Mar 17 17\:41\:22 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=5205
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/274)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Sun Mar 17 17:41:27 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Sun Mar 17 17:41:27 UTC 2024
elapsed time (seconds): 0.02
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Sun Mar 17 17:41:27 UTC 2024
Mode: agentvm
Agent id: 2
finished: Sun Mar 17 17:41:27 UTC 2024
elapsed time (seconds): 0.02
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Sun Mar 17 17:41:27 UTC 2024
Test directory:
  compile: SubList
finished: Sun Mar 17 17:41:27 UTC 2024
elapsed time (seconds): 0.038
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Sun Mar 17 17:41:27 UTC 2024
Mode: agentvm
Agent id: 2
finished: Sun Mar 17 17:41:27 UTC 2024
elapsed time (seconds): 0.037
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Sun Mar 17 17:41:27 UTC 2024
Mode: agentvm
Agent id: 4
finished: Sun Mar 17 17:41:27 UTC 2024
elapsed time (seconds): 0.141
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91951)----------
Seed from RandomFactory = 2972094715211366813L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1539701885], 0, 1): success
test SubList.testAdd([42, -103517883], 0, 1): success
test SubList.testAdd([42, -895996270], 0, 1): success
test SubList.testAdd([42, -666473858], 0, 1): success
test SubList.testAdd([42, 1723295711], 0, 1): success
test SubList.testAdd([42, 1008645167], 0, 1): success
test SubList.testAdd([42, -398794753], 0, 1): success
test SubList.testAdd([42, 1546480434], 0, 1): success
test SubList.testAdd([42, 845624886], 0, 1): success
test SubList.testAdd(java.util.ArrayList@53c9583e, 2, 5): success
test SubList.testAdd(java.util.LinkedList@22bb0be, 2, 5): success
test SubList.testAdd(java.util.Vector@25db1139, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@2834c559, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@3c893eab, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@6ca814ab, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@6d98085b, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@637e7387, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@5e844728, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@784398da, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@6d067923, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@6857c5bb, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -605822107], 0, 1): success
test SubList.testAddAtPos([1291957701, 42], 0, 1): success
test SubList.testAddAtPos([1609530985, 42], 0, 1): success
test SubList.testAddAtPos([42, 1309573268], 0, 1): success
test SubList.testAddAtPos([1399647211, 42], 0, 1): success
test SubList.testAddAtPos([42, -2025641775], 0, 1): success
test SubList.testAddAtPos([66048781, 42], 0, 1): success
test SubList.testAddAtPos([42, 1276643939], 0, 1): success
test SubList.testAddAtPos([42, -580227836], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@531b1462, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@dba98e4, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@10a7e0c0, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@4cd97dcd, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@5a04befc, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@25e0e54a, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@78cf54c8, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@7e4d7271, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@64b16ad4, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@51b839f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@5ca13f07, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1092fc85, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@c2cfc2, 2, 5): success
test SubList.testClear(java.util.LinkedList@261ae2ad, 2, 5): success
test SubList.testClear(java.util.Vector@58221a95, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@7f932b01, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@4b9b7a6b, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@34d877d5, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@602a7061, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@691dd3db, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@3a3469d6, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@3067cf62, 2, 5): success
test SubList.testEquals(java.util.LinkedList@71eafef8, 2, 5): success
test SubList.testEquals(java.util.Vector@4520b646, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@5c228ac3, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@447e479b, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3b5e8a79, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6bfe4a5a, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@442c3b65, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@547d8502, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@990c42d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@396e7ca1, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@b8137f4, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@50b36ab9, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@5c073b93, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@63f4684b, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@74dbd758, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@7063e786, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@635ec1ab, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@635ec1ab, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@2beb5a85, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5920e3f4, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@77e8b8d2, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7bd88830, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@42f4be74, 2, 5): success
test SubList.testGet(java.util.LinkedList@6b8ac10d, 2, 5): success
test SubList.testGet(java.util.Vector@7caa6d16, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@44da6871, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@230d5367, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6752a661, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@208a9ed0, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@44dc99a5, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@72b49f0f, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1e03b460, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@29ac9a75, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@40eb750, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@464d106e, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3deee13f, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@61cc51c9, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@5a98e8cd, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@38724d9c, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@1380f1f3, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@1380f1f3, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@363f19f7, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@5f3eb131, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@6fb93b4a, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@444cf5ec, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@1bbcd671, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@511e8926, 2, 5): success
test SubList.testIndexOf(java.util.Vector@465b7d39, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@8396bf9, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@67962365, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@558fdd3f, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3003725e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@5d77dca9, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@57f3e419, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1611f633, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@6d329c35, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@66c27f8, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@4356396, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@12113056, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@d0a1932, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@59307560, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@778baa0, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@262b5fc9, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@262b5fc9, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@4294f37d, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@385f9eee, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@7b212ce1, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@68e8b355, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@3c94422b, 2, 5): success
test SubList.testIterator(java.util.LinkedList@628c8826, 2, 5): success
test SubList.testIterator(java.util.Vector@3fb1c100, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@c4f4755, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@4e4eb11b, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@137edd37, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@613d5a86, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@be4c6d8, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5d6e65bb, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2f920fb4, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@30a643c3, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@632e5987, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@b812441, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5dc30284, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@3a343b2c, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@795afc97, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@29b71ddc, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@7c053458, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@7c053458, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@27e2faca, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@75690c4d, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@b4a58ee, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@41f7a8c1, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@75d05dcc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@7e5a05bd, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@121c5c97, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@3f367d1c, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@3a8070, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@62c2e7a8, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@52e9daef, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@4cd7318c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@71ca2c32, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@569e3a36, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@5ebb0342, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5b659a79, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@177f4ba1, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@20e736bb, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@458f6f0d, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@7f1278a0, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4e664063, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4ab7ee10, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4ab7ee10, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@bc5e6dc, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@7238a65b, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@38aa95e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@70f2caa7, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@4572bf32, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@5e8e434a, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@44269fd4, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@6c883161, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@401e9c8d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@7986846f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@31e4c9f0, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@6d90bbd6, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@29ec679c, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@14ef2fcf, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@26de4e1f, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@4249decc, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@276baba8, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@2c07ef8e, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@28cf724b, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@3c435ff6, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@20abed56, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7498c536, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@54fe5909, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@20da1085, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2ba4615a, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@229079a1, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2640309d, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@52a5ff71, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@49dd555b, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@53e1a80b, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@c59290e, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@c59290e, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@77e01057, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@6f1005dc, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@6b253b75, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@14674714, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@1fad2266, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@2b722501, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@2f074ae0, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@41524c8f, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@5d44d950, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@2286e2cf, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@2286e2cf, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@4ccfec1a, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@1ed36587, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@384ab154, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@338af9d0, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@6ba83271, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@737d7f8a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3d3e40ca, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3795d68a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@113b207c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@442d61a6, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@32343253, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@6eb5ad50, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2135bee5, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@752094bd, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@4e7b3034, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@6a663787, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@14b7f1e1, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@42c0230e, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3e079039, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6b667090, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@5e5dfb4e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@412b946b, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6524a833, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@6d1c8b55, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6c19a918, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@d15c84e, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@18c33e5a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@272447ed, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@6d0e45cf, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@6d37216f, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@797702d9, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@797702d9, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@621bbcb, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@6f4bb739, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@522affad, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@2fa40afe, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@7dcc2106, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@24a970e5, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@6c8cb011, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7b40d15c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@500feaa0, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@602dfd16, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@30e3cbd, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@41bd5c44, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@43648494, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@7673a1e9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@4e7ebfd4, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@2ed22b23, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@7b01f292, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@5f90a1fe, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@d9a0275, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@428d1445, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@39d1275b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@4d8df94b, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1973621671], 0, 1): success
test SubList.testListIteratorSet([126751465], 0, 1): success
test SubList.testListIteratorSet([-892224815], 0, 1): success
test SubList.testListIteratorSet([-1759257304], 0, 1): success
test SubList.testListIteratorSet([-2136989107], 0, 1): success
test SubList.testListIteratorSet([-1114245280], 0, 1): success
test SubList.testListIteratorSet([-300067242], 0, 1): success
test SubList.testListIteratorSet([1201084040], 0, 1): success
test SubList.testListIteratorSet([459118322], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@edef14d, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@5d0f08e3, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@58cddef5, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@15486ac4, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@23d850a, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4d687ab8, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@19605301, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@d83a0a6, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@3db911cf, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2b272e4d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@2d7e4000, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@dc25b8e, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-2125749303], 0, 1): success
test SubList.testListIteratorSetPrevious([-642540451], 0, 1): success
test SubList.testListIteratorSetPrevious([579310185], 0, 1): success
test SubList.testListIteratorSetPrevious([-507870468], 0, 1): success
test SubList.testListIteratorSetPrevious([1182182941], 0, 1): success
test SubList.testListIteratorSetPrevious([-1836282109], 0, 1): success
test SubList.testListIteratorSetPrevious([2029540209], 0, 1): success
test SubList.testListIteratorSetPrevious([749470784], 0, 1): success
test SubList.testListIteratorSetPrevious([566806404], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@66cd8889, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@d5c416b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@4107bb85, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@fc993eb, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@1f5b94dc, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@32dd80c0, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@749f980a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@1bfd48e4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@2c0ee4a3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@58e045d3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@6c994ea0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@43c0a92f, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@685fc010, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@3a0048d1, 2, 5): success
test SubList.testModAdd(java.util.Vector@615d9f05, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@5354d818, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@d4e07cd, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@41a70e23, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@c57d770, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@759ba83e, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@608fe407, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@67aa8a07, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@20b89da7, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1c2a4122, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@16ce1903, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@4feb1dbc, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@785062e8, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@61516110, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@7f19053, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1fd49eb5, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@7a28065, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@7054567b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@383299bb, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@53b4bd29, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@50e08b90, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@29623061, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@42964568, 2, 5): success
test SubList.testModClear(java.util.LinkedList@78f827fb, 2, 5): success
test SubList.testModClear(java.util.Vector@1edcaf33, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@53055fbe, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@4ef86e88, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@664c11d, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@9902ef7, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@7aa55245, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@7a3551fc, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@38486ad0, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@4bad47b4, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@21a1b333, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@2872c2e2, 2, 5): success
test SubList.testModGet(java.util.LinkedList@3dea6a2b, 2, 5): success
test SubList.testModGet(java.util.Vector@17769fd3, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@60ea595c, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@3420043, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@419375fd, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@3e194e6c, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@1811d0db, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@11a42e41, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@7e64478e, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@78bbe85c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@62b61db8, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@231a5c0d, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@ab0e255, 2, 5): success
test SubList.testModHashCode(java.util.Vector@56749cd, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@7094e581, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@5f3589d3, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@2d55a8ed, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@226b52d7, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@ff87bce, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@3fc76d27, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@29ddb9fa, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@79f67f08, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@648abc77, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@7b136534, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@56ad8171, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@1f06a3e3, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@108972f2, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@27641bf3, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@78f63c29, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4fedb5fc, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@3b9f6c67, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@5d4ea2ea, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@67425e6c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@45420596, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@60bd8911, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@6455fdd6, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@39b5290, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@301551a4, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@5202a5a1, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@1ef151d9, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7129effb, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@7cec05b4, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@7fa1e870, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@345b382f, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4901dfa2, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@3ea3e090, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5a3c5203, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@71af2432, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@668213b3, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@c48fec6, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@2d343ef8, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@14db2466, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2e72a6ee, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@4e381a3f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@3bc8379e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@597f9b73, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1657899a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@208f043e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2f78c6ea, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@62e4af83, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@12ee3bc1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@6f78eeca, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@a3438bb, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@34049e63, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4fda4fd3, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@52fe4428, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@2931b9e8, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2b04b78, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@54f30df3, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@a29f5b7, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7ecf499c, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@2a34cd64, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@74423bd6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@2330224b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@33daee08, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@22a39f0d, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@f9bd6ef, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2f7a646a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@3b6e15f2, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@286e7db9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@15d6f16b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@429a3471, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5b747b80, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@26b2ed9f, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@3b4a67de, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@646ed1e9, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@187222a8, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@57dbde28, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@58226563, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@51dec865, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@28b6c854, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@3cfc77e4, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@642596aa, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@101c48a5, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5aa70237, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@7462133f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@56966cd4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@75fc465f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@1072453a, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@c661ef9, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@40aa050d, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1c339fde, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@501124f7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6f3293d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@15d6c62, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@6c6e3e44, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@482e8ab2, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@76f701d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@5a616456, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@3528aaca, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@61db293b, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@65ab316, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4381eb7a, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@47dcf2b3, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@2c782dee, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@71a80cf6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@a2f7f68, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@636073be, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5c172cb3, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@76ca4f4b, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@4b92636b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@12be5b41, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@775af015, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@76c38dc6, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@23fad0f0, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@62919a2a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@168e9b5f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@449059a1, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@70227400, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@6a6b0b1a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@39a5c524, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@1123fb7a, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@7148b744, 2, 5): success
test SubList.testModRemove(java.util.Vector@4a45306f, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@7260b692, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@78ac4be6, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@6b0f3dca, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@240fc50c, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@4c4d1982, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1a088cc3, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@14ced6f8, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@22505178, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2a09b388, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@db8d312, 2, 5): success
test SubList.testModSet(java.util.LinkedList@7fc53a80, 2, 5): success
test SubList.testModSet(java.util.Vector@32f885c, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@2d3b1d27, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@3d920b2b, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@521c7527, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@3d8a29b0, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@7778d560, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@6ed45c87, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@78439194, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@4fad89fe, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@6e9298ca, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@27a95915, 2, 5): success
test SubList.testRemove(java.util.LinkedList@829bf9a, 2, 5): success
test SubList.testRemove(java.util.Vector@43805ec, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@285f456b, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@254d5386, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@d66a643, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@270bc78d, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@46d8ecb6, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@7c8312a4, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([215767522], 0, 1): success
test SubList.testSet([1017960698], 0, 1): success
test SubList.testSet([-237322088], 0, 1): success
test SubList.testSet([-1639439449], 0, 1): success
test SubList.testSet([-308410716], 0, 1): success
test SubList.testSet([217263924], 0, 1): success
test SubList.testSet([1803532540], 0, 1): success
test SubList.testSet([487870621], 0, 1): success
test SubList.testSet([2089825023], 0, 1): success
test SubList.testSet(java.util.ArrayList@3d794e33, 2, 5): success
test SubList.testSet(java.util.LinkedList@d7c8931, 2, 5): success
test SubList.testSet(java.util.Vector@4b70b012, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@6208fe7b, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@6bb53b16, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@63cb3d9d, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@5b696403, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@848a616, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3577ecc2, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@609f263f, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@39119ae6, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5f9f3ee7, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@2975a51c, 2, 5): success
test SubList.testSubList(java.util.LinkedList@559f4855, 2, 5): success
test SubList.testSubList(java.util.Vector@64db9c8f, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@59a5d0da, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@1512f9c9, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@2bc542cd, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@2d323587, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@7bf251c5, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@a9982a9, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1ce88498, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@34c86c65, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@754421d6, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@e0feb51, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4c7628bc, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@497ca0b8, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@10390d0d, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@11abfc6a, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@e83fc04, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@e83fc04, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@5f08a555, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1fe76a8b, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@2f1f767b, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@15676412, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@678f398d, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@545cb9ff, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@68f257f5, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@7bdb8527, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@46a7529d, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@2b43452f, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@2b43452f, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@20cc7ae5, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@7abfbfc8, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@685f9b1e, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@47e9b190, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@1138305b, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1c5f2be9, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@61831fd5, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@33c76b09, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@2dc73ca8, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@9d248f2, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@9d248f2, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@66376f21, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@46608697, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@50f69a1c, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@269bffb1, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@353074af, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1541d72a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@43fd9421, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@53030426, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4d4205c8, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@7fed054e, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@7fed054e, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@8f75ce6, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2825da33, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@1d253b63, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@3b2e3739, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@14609a69, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@396e7e04, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@70504750, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@51e21133, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@62b2a597, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@2fa66e0f, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@2fa66e0f, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@f8742e3, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@291c3ac, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@168837e5, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@65a201d6, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@a485f7d, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@22b1cb31, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@48667966, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@4c72703d, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@b0f2799, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@7222b518, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@7222b518, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@45485179, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@52dbd74c, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5ef5e1f8, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5d87f813, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@1830d84d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3a7b3333, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@5785f054, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@6a05ba9f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@d46a393, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@15833bf2, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@15833bf2, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3675554d, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@6815e4a6, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2ec3ec5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@528f2feb, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@754c478e, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3eb6b798, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7091fba7, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@214ffb34, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7834c121, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@3413169, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@3413169, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@651e2bd9, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@a98330f, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@5118c9cb, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1b5384d, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@19b84a8, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@31123b0e, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@24d75b3, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@259c47a3, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2ab8da3f, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@7e9c1721, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@762663d, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@579c86, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@a353350, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@65d73cdc, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@27d9518d, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@21960af9, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@540adea9, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@3f7688a1, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@209d19b, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@3455cf07, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@3455cf07, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@20d237c5, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@5afa4cbd, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@2a7359cc, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@375d4dcc, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
