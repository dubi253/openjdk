#Test Results (version 2)
#Fri Mar 01 03:45:41 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=230 0\:00\:00.230
end=Fri Mar 01 03\:45\:41 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 03\:45\:40 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=230
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-50286a266e0fe84d975d98fd52284c36d9162b97)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-50286a266e0fe84d975d98fd52284c36d9162b97, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 03:45:40 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 03:45:40 UTC 2024
elapsed time (seconds): 0.013
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 03:45:40 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 03:45:40 UTC 2024
elapsed time (seconds): 0.013
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 03:45:40 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 03:45:40 UTC 2024
elapsed time (seconds): 0.059
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 03:45:40 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 03:45:40 UTC 2024
elapsed time (seconds): 0.059
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 03:45:40 UTC 2024
Mode: agentvm
Agent id: 6
finished: Fri Mar 01 03:45:41 UTC 2024
elapsed time (seconds): 0.156
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91946)----------
Seed from RandomFactory = 7947366182430311133L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1149298667], 0, 1): success
test SubList.testAdd([42, 1412625417], 0, 1): success
test SubList.testAdd([42, -1629865937], 0, 1): success
test SubList.testAdd([42, -1928439955], 0, 1): success
test SubList.testAdd([42, 1580009163], 0, 1): success
test SubList.testAdd([42, -379774375], 0, 1): success
test SubList.testAdd([42, 1858932643], 0, 1): success
test SubList.testAdd([42, 848172928], 0, 1): success
test SubList.testAdd([42, -509005673], 0, 1): success
test SubList.testAdd(java.util.ArrayList@609aa836, 2, 5): success
test SubList.testAdd(java.util.LinkedList@5259d962, 2, 5): success
test SubList.testAdd(java.util.Vector@129b0245, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@7f9e1f66, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@3c0d195b, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@52d3aaab, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@52a19ed, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@58925ffc, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@14285e94, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1050dd1b, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@41d47cb1, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@35cfbecb, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-2047021108, 42], 0, 1): success
test SubList.testAddAtPos([42, -1334471173], 0, 1): success
test SubList.testAddAtPos([804492900, 42], 0, 1): success
test SubList.testAddAtPos([42, 296907619], 0, 1): success
test SubList.testAddAtPos([730540096, 42], 0, 1): success
test SubList.testAddAtPos([-400030099, 42], 0, 1): success
test SubList.testAddAtPos([42, 1519049741], 0, 1): success
test SubList.testAddAtPos([-1735392405, 42], 0, 1): success
test SubList.testAddAtPos([-492411061, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@a82b226, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@4a3a0037, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@12a6ecd5, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@5183d06, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@7eefa24d, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@68db5aa5, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@6148ce97, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@2db7c7c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@70897537, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@21b2bcc5, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@5c5467d1, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@83e3ec1, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@374bf4d5, 2, 5): success
test SubList.testClear(java.util.LinkedList@2b6775fd, 2, 5): success
test SubList.testClear(java.util.Vector@7b4a372c, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@58d15bb7, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@70ba29d, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@48fb3f0f, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@4ab14a4, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@2130c0c9, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@51f57e5f, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@5cb3585c, 2, 5): success
test SubList.testEquals(java.util.LinkedList@1ce905d7, 2, 5): success
test SubList.testEquals(java.util.Vector@4228ae93, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@3a527a84, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@42d6e8e9, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@d372d65, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5120219d, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@69a608a, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5204177a, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@2463bd0e, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@13004c1d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1bc75de4, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@4a145e57, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6889bf9f, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6236c839, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@7bcef96e, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@12c6c597, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@397d2c30, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@397d2c30, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@6cb4c65d, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@4b2b8838, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@67809536, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@fa0d929, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@b65756a, 2, 5): success
test SubList.testGet(java.util.LinkedList@4ec5e4ed, 2, 5): success
test SubList.testGet(java.util.Vector@267d522a, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@4094fd00, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@17715f66, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6d5a6f61, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@261b0a8c, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@1d3ebc26, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3f1811ee, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7b50cad1, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@cf8a1bf, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5e137cea, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@bb17577, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@5c60c153, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@d215e75, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@7b3ee499, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@70f675c9, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@38b53894, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@38b53894, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1cb7f84e, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@7153bac0, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@a442531, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@53d9ff93, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@296c6af9, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@5bb02967, 2, 5): success
test SubList.testIndexOf(java.util.Vector@10d7a34c, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@604b9ffe, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@26ec1963, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7371695f, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@5ec384b4, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@24a22dac, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6b2773eb, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@e0b0192, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@6a76d9e7, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@b4164e9, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@55032cd3, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7c71f07d, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1ba751e4, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@355b8528, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@650f609c, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@466d6d56, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@466d6d56, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@75e17d3d, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6cda247d, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@17ea65d7, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2f282a25, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@27cec9d5, 2, 5): success
test SubList.testIterator(java.util.LinkedList@18209e5f, 2, 5): success
test SubList.testIterator(java.util.Vector@5bbd39fc, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@30ebe7f6, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@6e63942e, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@7498e18, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@30bbeb39, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@3c64cf1, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@70717d9b, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@28299e9c, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@293271dc, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1b20bd7d, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@6aa97b35, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@773a60a3, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@40f46167, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@5dc9a034, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@36dbdc74, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@1810bca6, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@1810bca6, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@55372402, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@1df75b12, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@667bebb2, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@73a24d88, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@464ea7ab, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@207f92b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@6dbd5c63, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@775a7bac, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@40914e7a, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@66f215f3, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@2972b8fa, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@114ed9a9, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@18ebeb8b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@308ce125, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@42bf8f2a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5da1f59, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@3f83c40d, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@d3b58fc, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@29ba96ea, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@1f86071c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@41e4881, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@57a4ef0f, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@57a4ef0f, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@770618b9, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@5c515d88, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@3c0856ba, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3ff27d19, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@a32b471, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@6a236af6, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@d343569, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@8615d04, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@31adbcb2, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@67fe849, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@76309436, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@2b41608b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@54244a40, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@637267bd, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@60e9f09b, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@537b4d91, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@65f9078e, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@6b6a0e21, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@56f2d5b7, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@2963adb5, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@410fd15c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7aef6caf, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@435e86e4, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@2793e174, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4d1cbc1c, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@1c383a25, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2e3c67c1, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7a303477, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@56e931d2, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1a7768f7, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@4e947afa, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@4e947afa, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@77d6485e, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@5d073d6e, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@194be5d8, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@221bd7eb, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@5d0f1d0a, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@48a71168, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@636659b9, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@53b3f31a, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@42fd5f75, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@250fa2c8, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@250fa2c8, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@3f2bbff7, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@363d22d, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@400c6b0d, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@68254589, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@4ac6db24, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@6f859d99, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6e9ce4a0, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2337f56c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@4083d9da, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@52bdac9a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@59a5619d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@4538042c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1ce4ca0, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@bf72c2b, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@207481c8, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@46ea279e, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@72eab0bd, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@673d2ef5, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@169c099e, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@9b89fcb, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@6f18824d, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4790924d, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@a35125, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@113bbac9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3510ef80, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@144f3645, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@2bfb2310, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@5b6a4178, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@4f448200, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@5ef646a3, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@7d8264da, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@7d8264da, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@5e363a15, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@33cc6a06, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4558695, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5b97289, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@125a2523, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@23e6c983, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@16bd4c47, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@67cb81f4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@625e62be, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@36afa5f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@67645816, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@23497913, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@64eb83bf, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@9ba8bd, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@3f52f77, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@16a8fa0, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@132bff64, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@5abc47d2, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@19f3884b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@52322e0, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@29bba676, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@437e75ff, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-926527332], 0, 1): success
test SubList.testListIteratorSet([-164680369], 0, 1): success
test SubList.testListIteratorSet([11704637], 0, 1): success
test SubList.testListIteratorSet([1438473272], 0, 1): success
test SubList.testListIteratorSet([-201580928], 0, 1): success
test SubList.testListIteratorSet([1352376616], 0, 1): success
test SubList.testListIteratorSet([-483816993], 0, 1): success
test SubList.testListIteratorSet([440119839], 0, 1): success
test SubList.testListIteratorSet([-497871509], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@4dbed5b2, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@1657228b, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@332aff1c, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@51f40730, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@289afc13, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@660910e2, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@34c9f338, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@27a45a00, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@704e85f1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5a3a41cc, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@7a22277e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@767246ed, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([287905392], 0, 1): success
test SubList.testListIteratorSetPrevious([1257596807], 0, 1): success
test SubList.testListIteratorSetPrevious([679960852], 0, 1): success
test SubList.testListIteratorSetPrevious([1926375549], 0, 1): success
test SubList.testListIteratorSetPrevious([352038914], 0, 1): success
test SubList.testListIteratorSetPrevious([-886153220], 0, 1): success
test SubList.testListIteratorSetPrevious([-1038691934], 0, 1): success
test SubList.testListIteratorSetPrevious([175282940], 0, 1): success
test SubList.testListIteratorSetPrevious([-1616938304], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@6f9d92bc, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@7ed18748, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@557b460a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@7f6d2e1, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@5fa5b363, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@649608af, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@49c7281b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@7d2fd12c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@6be05e88, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@23915db, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@49a16eb2, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@62128d46, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@19e3a676, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@37b76efc, 2, 5): success
test SubList.testModAdd(java.util.Vector@40e75132, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@72afbba7, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@502e7d2d, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@3e810198, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@619fd5b9, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@13aa5ce, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@408e308, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@688a88ab, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@1eb7e9ea, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4c11c674, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@22ea5587, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@3c14871, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@7eed377c, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@2568e67e, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@64ce3931, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@372fa208, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@2c8b435b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@4a4cfcd, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@4bb6708, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@600b7f25, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@2e067258, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4fb6edf6, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@2cc9d5c1, 2, 5): success
test SubList.testModClear(java.util.LinkedList@63ee6e66, 2, 5): success
test SubList.testModClear(java.util.Vector@7aba2667, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@36dca724, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@795e975a, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@712e750, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@38661718, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@58f1befa, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1875b699, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@4a2e0970, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@729ed3c0, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@3c58769b, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@1b00908d, 2, 5): success
test SubList.testModGet(java.util.LinkedList@3e2de2a0, 2, 5): success
test SubList.testModGet(java.util.Vector@55110dca, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@a5407b2, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@4ea263e9, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@515d6c92, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@1d3453dc, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@28c84a34, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@71079ee9, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@5599526c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@429e21fe, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@33bd1277, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@411e0679, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@2b435361, 2, 5): success
test SubList.testModHashCode(java.util.Vector@6393e2fa, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@358a86f8, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@630f0998, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1e064d07, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@27ee0de2, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@2116ba2c, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@7e7fa8c9, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@425773c4, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@212c2edf, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@2d4aed74, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@7e1f66e0, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@5343d541, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@70f72b06, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@70dba30, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@684e2ae1, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4e8951f, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@78738e74, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@254696f0, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@3d61e95a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7cae9c74, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@3924a889, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@2f000b18, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@6acfbabe, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@4d16f327, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@4c946d75, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@28dfe115, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@55f3c1b6, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@523c7e3, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@6b32e166, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@38411cb4, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@5fcd4739, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7a559fab, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@29256c67, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@392b6be8, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@177cd777, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@6bf8121, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@624d8571, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@95cf62b, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@4dfd1887, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@56242507, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1b99db9e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@6f4ab0b6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@2a60fbf0, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5a470b8, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@53e84c21, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@474b4581, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@276a292d, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@3ead9935, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@5fb4a41d, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@1dec42c5, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@405ece09, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@206fa824, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2cf5ce84, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@7ff99b92, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@ccc685d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4ce8c81c, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@5587c618, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5718dbe8, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@52042bf8, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@42a89259, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@6b1c47de, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@3ab43ad, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@35ad7fd6, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@50f13999, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@518dec6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@20b7ff5e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@12b398cf, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6db2a9d4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@466412a8, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4bdb0ab6, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@72821911, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@47e4758f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@4ce6a3, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@2feba9ce, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@bd900d0, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@d145935, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1ecfb9ca, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@574ef670, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@7654d141, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@488615e8, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@3c4475b6, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7065605b, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@2dfa08f7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@1ff88187, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@2c3491bd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@2669c65f, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@5b6f6ccf, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7a752c9e, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@7c17ee5a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@feecf5b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@679d370b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@22ac3ab9, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@5384bbfd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@463db521, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@291980a5, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@47b265fb, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@3527a0ce, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@7e4f7697, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@566e651e, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4b12928d, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@caa2b4a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@78c4a834, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@43293408, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@572068fe, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@66fb05f4, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7fd933a1, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@756de7b4, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@2797fe20, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@58040ea0, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@12805a82, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@58fda4b9, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@34a3982a, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@7c42720, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@37e288c3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@6f434c2e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@12bcd467, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@6a86748d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7088efb7, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@4efde5d, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@5218ed2f, 2, 5): success
test SubList.testModRemove(java.util.Vector@413782dd, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@29a1f28, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@1962bca5, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@43dde08, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1bc76e11, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@40986a8e, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@14c9b09f, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4408e5e1, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@5e3ee6ce, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@237f6bd0, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@176b2725, 2, 5): success
test SubList.testModSet(java.util.LinkedList@2b3f418, 2, 5): success
test SubList.testModSet(java.util.Vector@180ac749, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@333d22d1, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@1fb20a70, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@73c777b8, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@482d6d1a, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@1e28417d, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@62a2cf71, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3cf0f4df, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@280612c3, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@86f76d8, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@2b1dbbeb, 2, 5): success
test SubList.testRemove(java.util.LinkedList@1dee2f92, 2, 5): success
test SubList.testRemove(java.util.Vector@a08f944, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@757a59f0, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@1a406688, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@4e6ec0f6, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@399b0561, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@db55f29, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@7e9ec300, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1443080948], 0, 1): success
test SubList.testSet([-1347453515], 0, 1): success
test SubList.testSet([-1708787513], 0, 1): success
test SubList.testSet([1268491659], 0, 1): success
test SubList.testSet([899117438], 0, 1): success
test SubList.testSet([-1533459019], 0, 1): success
test SubList.testSet([666229887], 0, 1): success
test SubList.testSet([824557994], 0, 1): success
test SubList.testSet([-1318721565], 0, 1): success
test SubList.testSet(java.util.ArrayList@5ceea86c, 2, 5): success
test SubList.testSet(java.util.LinkedList@34e15d3a, 2, 5): success
test SubList.testSet(java.util.Vector@1e113a8, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@40e092d1, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@4a6b33a6, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@40042de2, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@606d156c, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@37ea5774, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@b6db172, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@38b41568, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@459c982b, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5817bbe, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@499ab957, 2, 5): success
test SubList.testSubList(java.util.LinkedList@2f699d34, 2, 5): success
test SubList.testSubList(java.util.Vector@27bbc7a, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@1ca915f7, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@620f0b89, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1c05c890, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@7cbf966a, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@3d3eea66, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6f456590, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@45dddb26, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@238d06c3, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@546f2627, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@1812948b, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4c0caf2e, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@10eb7bbb, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@74402175, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@499a77dd, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@212a3f61, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@212a3f61, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@70151159, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@3fcff60b, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@61e747c8, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6037f1a, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@b8806a9, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5e7987da, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6a5d9fa2, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@15df2d3f, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@7de790cc, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@4fc982cf, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@4fc982cf, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@3ce5f264, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@479d9139, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@7c996abb, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@26e8be97, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@1e4a0ca1, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1b3f4e58, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5c0c8352, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@26b2bb10, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@38d066b4, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@ecb3f59, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@ecb3f59, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@51eede34, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@699ac60, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@20000068, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2d6a79f2, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@401fc370, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@6a7d0c5f, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7b80ee19, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@6b73e5a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@14a35ddb, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@94ede60, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@94ede60, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@58901daf, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@3d3c38c, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@522d1c68, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@7b3161a0, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@575d8f93, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@46587eb4, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4644aec7, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@558d2791, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@59f6c346, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@257f93e4, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@257f93e4, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@3e32d21c, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@489ea43, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@3f67e493, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4ff39b31, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@79b02313, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@5c3bf79e, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@22fafbb4, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@505f905d, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@5ee08219, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@3ec0078b, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@3ec0078b, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@cdbcda0, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@419d963f, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@34db42f4, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@60c57e7e, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@199a1950, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@51b2bb51, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@4e09743d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@2ed61eec, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@6856c49e, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@46135434, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@46135434, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@64e534b5, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@35ed702a, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@55bd76cc, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6890fc6a, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@5827a6d0, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@611eefd7, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@343e8dc0, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@177f582d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@5f701e5, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@15ffdb37, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@15ffdb37, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@2b2bc711, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@2ec2f0ad, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2f53ce34, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6206c723, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@55b3c8d, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@69dde21d, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3c4e40c2, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@22faa938, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2920dc12, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@1e99a484, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1505c0c9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@3377aaa3, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@73d70ba1, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@64529b5f, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@60d2e75a, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@d2a1c9b, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1acaf216, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@31595d93, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@28bd2250, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@10420c55, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@10420c55, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@344ff1f3, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@724a0b95, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@416c3f12, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@2ce45b73, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
