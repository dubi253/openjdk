#Test Results (version 2)
#Sat Apr 13 18:05:05 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=5238 0\:00\:05.238
end=Sat Apr 13 18\:05\:05 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.13
javatestOS=Mac OS X 14.4.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Sat Apr 13 18\:05\:00 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.4.1,family\:mac,simple_arch\:aarch64,simple_version\:14.4,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.4.1
totalTime=5239
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Sat Apr 13 18:05:05 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Sat Apr 13 18:05:05 UTC 2024
elapsed time (seconds): 0.016
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:05:05 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Apr 13 18:05:05 UTC 2024
elapsed time (seconds): 0.016
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Sat Apr 13 18:05:05 UTC 2024
Test directory:
  compile: SubList
finished: Sat Apr 13 18:05:05 UTC 2024
elapsed time (seconds): 0.034
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:05:05 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Apr 13 18:05:05 UTC 2024
elapsed time (seconds): 0.034
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Sat Apr 13 18:05:05 UTC 2024
Mode: agentvm
Agent id: 3
finished: Sat Apr 13 18:05:05 UTC 2024
elapsed time (seconds): 0.182
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91977)----------
Seed from RandomFactory = -8731726228327172741L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1209729623], 0, 1): success
test SubList.testAdd([42, -285540597], 0, 1): success
test SubList.testAdd([42, 1697908744], 0, 1): success
test SubList.testAdd([42, -1974654392], 0, 1): success
test SubList.testAdd([42, 1568926106], 0, 1): success
test SubList.testAdd([42, 1592557499], 0, 1): success
test SubList.testAdd([42, 374000599], 0, 1): success
test SubList.testAdd([42, 2015284751], 0, 1): success
test SubList.testAdd([42, -1887035796], 0, 1): success
test SubList.testAdd(java.util.ArrayList@61dc8229, 2, 5): success
test SubList.testAdd(java.util.LinkedList@7fc15c62, 2, 5): success
test SubList.testAdd(java.util.Vector@7a6762ae, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@55941e9, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@4014f148, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@e0c3fcf, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@54612f55, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@5143d207, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@7f58009f, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7d55bcd4, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@143eb484, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@3a71c56a, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-1216908918, 42], 0, 1): success
test SubList.testAddAtPos([-238847284, 42], 0, 1): success
test SubList.testAddAtPos([-1272734019, 42], 0, 1): success
test SubList.testAddAtPos([42, -1817953808], 0, 1): success
test SubList.testAddAtPos([1604608270, 42], 0, 1): success
test SubList.testAddAtPos([407315423, 42], 0, 1): success
test SubList.testAddAtPos([42, -775800721], 0, 1): success
test SubList.testAddAtPos([42, -1527929416], 0, 1): success
test SubList.testAddAtPos([42, -1059612789], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@2a1c8c77, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@486f39ff, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@43625b65, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@fa4a2c0, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@4b865492, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@719a465c, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@66af785b, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@c85baf6, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@2ad5fe9f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@517df58c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@4a4eed62, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@71319703, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@2945747b, 2, 5): success
test SubList.testClear(java.util.LinkedList@13c41306, 2, 5): success
test SubList.testClear(java.util.Vector@55717496, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@552e31cd, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@5b75f776, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@35b2f33e, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@57e876f1, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@54b25092, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@7442430b, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@cb60781, 2, 5): success
test SubList.testEquals(java.util.LinkedList@16889681, 2, 5): success
test SubList.testEquals(java.util.Vector@4505bb89, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@61f21ccc, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@69192935, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4ef33a5c, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2f7103ef, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@75347264, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@53e070e3, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3308f1f1, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@5c76f48a, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@512ed80, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@26e2cc2b, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@297b0a48, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@26b350c5, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@ecfb230, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6b9122a7, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@37a645bd, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@37a645bd, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@c8753c7, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@6818ce24, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@495b474e, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@25752fd2, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@3359dc56, 2, 5): success
test SubList.testGet(java.util.LinkedList@702672b8, 2, 5): success
test SubList.testGet(java.util.Vector@2ef9aaa2, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@5597ef04, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@1e7063f9, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5ddd3bb9, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@46c4482a, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@533c444, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@eb33d63, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1d3f86ac, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@7535ab7c, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@39585a6f, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@7d494765, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1887c2, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@77a04d94, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@5cba5cbc, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@72d33fb6, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@1e9e8c08, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@1e9e8c08, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@3a3504e1, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@2fb1baf3, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@6255b728, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@19e26b9d, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@fd1a1a6, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@44d9a4, 2, 5): success
test SubList.testIndexOf(java.util.Vector@71e51a22, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@2595e6a, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@72edcc42, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2f393bdb, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1fbe72fa, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@424593ca, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@444f99e3, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2aa51d48, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@6a52e35e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2c25021a, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@2b8ede7c, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@68ab4bfd, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7229ee7e, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@d91a579, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5dbd1f5f, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@c54f262, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@c54f262, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@3f3ab911, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1b8cf033, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3cdce2d9, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@6080a5da, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@69ca393, 2, 5): success
test SubList.testIterator(java.util.LinkedList@c1f4b9d, 2, 5): success
test SubList.testIterator(java.util.Vector@7ca15986, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@4f485364, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@3117cb14, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@68c3b3eb, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4616b03b, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@3e55162e, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@3071a656, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@8132f3d, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@5c1a905d, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5ee6cd88, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@69b81981, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@76ddda96, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@76eabebc, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@347f3ec8, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4d9723e4, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@753a04c8, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@753a04c8, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@5f699004, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@28d7224b, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4ff75af2, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@22944acb, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@24e80768, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@5b52f2f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@1fbebc5a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@72d306d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@5f183098, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@77a03ec0, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@2cf91a56, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@4578cc06, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@48a650d1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3d87dc55, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@2573b0ed, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@79ad0218, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@7b9b23fb, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4cb4542e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@73c9bfa3, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@3a9869d, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@425b7f3c, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@47d962a4, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@47d962a4, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@6e20a9bc, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@56602884, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7072ae35, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@44d6e087, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@1b173eba, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@6e1057dc, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@1526e91e, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@413819ad, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@1c1c834a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5f1c9faf, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5f535e55, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@7a7a561d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@74019bb3, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@1c43f087, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@77973248, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@7e985ff5, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@41736d10, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@62131da3, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@777be795, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@171ea251, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@4210c514, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1f79b8af, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4f6a448a, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@5c599d19, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7a63d2a3, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@6879d0c9, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@49fa6d5e, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@c0b0b41, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@76b61ffd, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@55feeaf5, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@5ac90f72, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@5ac90f72, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@21579e5d, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@7aed326f, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@482919d3, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@558100c3, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@1a63bb6b, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@3ae8cb75, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@4a811b0a, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@3105b2a3, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@7275dde8, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@171b1b13, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@171b1b13, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@7515d872, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@24082929, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@675a1c07, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@74a39f42, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@44e885ff, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@533fd97f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@78bce627, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1d59f475, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@200f566d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@432f3021, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4e109c54, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@590ffd10, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3781e1a3, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@29d8fb10, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@25e2e277, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@f558c19, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@144deca4, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@98438b4, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2697418f, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@36b1ec85, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@52f821b3, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@34a066c0, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@155dcf09, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@4cef7973, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6d4e4645, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@fc42c14, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@13e28b8a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@7d4ebac9, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@14026e83, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@64093914, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@2cb53cdf, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@2cb53cdf, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@317bebd2, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@5e0de8c, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6d9f3723, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@31ad2649, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@432e7d82, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@7b09c113, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@6106b43e, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@5a47b192, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@7ba818f3, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4e0ec775, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@17b78e9a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@17678ed1, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@b7899c2, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@568af2b7, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@2b829a5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@3f2177ec, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2fdcd807, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@58116bc8, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@60da6ed5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@61dc21fe, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@7a1f94d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@37184c51, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1988544902], 0, 1): success
test SubList.testListIteratorSet([-1714024875], 0, 1): success
test SubList.testListIteratorSet([332306060], 0, 1): success
test SubList.testListIteratorSet([-899628901], 0, 1): success
test SubList.testListIteratorSet([2146422831], 0, 1): success
test SubList.testListIteratorSet([6352387], 0, 1): success
test SubList.testListIteratorSet([-844255245], 0, 1): success
test SubList.testListIteratorSet([-1323813955], 0, 1): success
test SubList.testListIteratorSet([1035352624], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@a20ce87, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@6b860666, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@7bae9202, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@da09a4e, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@44d5eadd, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6bd88dcb, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@6944cbdc, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@3ccd8cea, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@13863532, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7770f086, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@1190bc24, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@12ff14c4, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-2045205781], 0, 1): success
test SubList.testListIteratorSetPrevious([1037201068], 0, 1): success
test SubList.testListIteratorSetPrevious([-1716056003], 0, 1): success
test SubList.testListIteratorSetPrevious([-390474361], 0, 1): success
test SubList.testListIteratorSetPrevious([-1836940939], 0, 1): success
test SubList.testListIteratorSetPrevious([1792209751], 0, 1): success
test SubList.testListIteratorSetPrevious([-1077619079], 0, 1): success
test SubList.testListIteratorSetPrevious([-992183484], 0, 1): success
test SubList.testListIteratorSetPrevious([-292927545], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@4f16cd23, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@3f9d89db, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@2467d93d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@42ab3441, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@eeb43b4, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@59b9b76b, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@67dfd711, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@6dae5218, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@295121d3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@af14f8a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@6295ac34, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@70d7c063, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@3b8edbaf, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@387d0902, 2, 5): success
test SubList.testModAdd(java.util.Vector@1a1dce1b, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@e0b84b5, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@3478de9e, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4dda97a4, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@7264e466, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@40a1ff85, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@47cdb4d3, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@28859c6b, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@69594528, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@32a5fffd, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@b31ba1f, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@3145d1a7, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@3b2131cf, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@7250aa50, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@492b6705, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6fbd818b, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@3232a363, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@6c42351b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@7499d985, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6416de0f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@370e40d3, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@727ac7c9, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@3439f66f, 2, 5): success
test SubList.testModClear(java.util.LinkedList@5ee1fe8, 2, 5): success
test SubList.testModClear(java.util.Vector@333fe94d, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@1dbc3808, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@6ed16cc7, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@397fa3ad, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@3a416a09, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@46db6fa5, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@34b8064c, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@45a61510, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@752a42e5, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@3784da1c, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@2e76302d, 2, 5): success
test SubList.testModGet(java.util.LinkedList@5c6011b5, 2, 5): success
test SubList.testModGet(java.util.Vector@662f47ac, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@616fde36, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@3bdff4e4, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6da5aa07, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@4d8365, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@10ac666d, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@31143237, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@5aa6a5f7, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@61140746, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@76cd02cf, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@594af0b8, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@6a3a9f68, 2, 5): success
test SubList.testModHashCode(java.util.Vector@1c01489, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@40de3b26, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@41edb7fa, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7dfc470, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@2f143732, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@2e7453c4, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@73783de4, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@27bf5758, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@3123bc14, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@99b5c98, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@3806720b, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@73d54663, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@3b9241d3, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@e72ddad, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@68d82244, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4c559e03, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4f8ab206, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@6ea89998, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@5958c731, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@10c67e61, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@e5f014a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@559e2e7a, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@3df169ee, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@13b72140, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@5366f606, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@5be89e12, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@2849b5c1, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3eda435f, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@4a56c840, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@6de76d3e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@1a6eed3b, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@15930741, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@2f4377ee, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@39d33919, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@3d735150, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@9891c7d, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@5edac4d0, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@56df64c2, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@eaa304, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1d3f5947, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@30aa7fd7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@392aa8fd, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@578a2a24, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@241443b1, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@7b506e28, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1e118ab2, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@16369b5e, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@222e6bea, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@3d4d953d, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@53762469, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@5c860e1, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@566f104a, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2bb9c705, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@70a95dfe, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@7b7a4ad5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@483ca02b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@e7715ce, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@537ef2fb, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@7e1a0ce9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@2fcd1770, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@594b6f2e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@2f60c993, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@183e7137, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@50a0bf6d, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@53e0dfb0, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@51708577, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@596bbc95, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@78a5690c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@6f61a395, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@49562740, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@4e1fdb3b, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@575829ef, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@2abbb445, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@3e6a4e70, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@3829cb7a, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2429029c, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@27a58798, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@65e76419, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@30acba5c, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@526d1081, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@4faf4f3d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5af2a0d5, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@7ee97ab9, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@53465b9f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@cfd9c5a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@7f1fdfc1, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@6a62dfd, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3e323c99, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@24a91fcf, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@2446b480, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@638d33b2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@58a3fa5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@308e58d9, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3bd31901, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@39f438b5, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@316c4924, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@6287dcfc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@6b05fb99, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@3e0a8ee1, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5fc7e5db, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@6141a7af, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@4a398c71, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1fab4e5e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@31018e31, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@58907622, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3cec5db2, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@18c90b52, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@6e72656a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@32e54bbd, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@2ecc3e8, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@4ac3c218, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@14242fa3, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@c168d66, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@53ad6257, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@3910350a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6fb8c401, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@79ecdbf2, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7a130dfe, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@ce55236, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@20d2defa, 2, 5): success
test SubList.testModRemove(java.util.Vector@7d08c770, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@4ffef78e, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@77569bf3, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5bba0596, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@23276a4d, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@4d7896d5, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@5a928426, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@38321876, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@4b54e53a, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@7d13d972, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@3e560bd8, 2, 5): success
test SubList.testModSet(java.util.LinkedList@1b8a1790, 2, 5): success
test SubList.testModSet(java.util.Vector@4eeda165, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@6df7715c, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@5511170d, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@7364dfd5, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@7ba0d884, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@7241f3ad, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@9db9057, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@23746e14, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@124b5e54, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@657a2ae2, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@559bed9e, 2, 5): success
test SubList.testRemove(java.util.LinkedList@459ad283, 2, 5): success
test SubList.testRemove(java.util.Vector@762859cb, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@3f96e461, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@7e467efe, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@3f268aff, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@28a52e7b, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@4a815a01, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@664fc612, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([642399023], 0, 1): success
test SubList.testSet([2014576667], 0, 1): success
test SubList.testSet([-1217912255], 0, 1): success
test SubList.testSet([-780891798], 0, 1): success
test SubList.testSet([1542903252], 0, 1): success
test SubList.testSet([-1141738539], 0, 1): success
test SubList.testSet([-1350503827], 0, 1): success
test SubList.testSet([-2045288176], 0, 1): success
test SubList.testSet([83907922], 0, 1): success
test SubList.testSet(java.util.ArrayList@23e2e06a, 2, 5): success
test SubList.testSet(java.util.LinkedList@6b70077c, 2, 5): success
test SubList.testSet(java.util.Vector@4956c1fa, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@58cf3927, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@46771d60, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@286ef9fb, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@657bf093, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@7cf5112c, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@166d0bcb, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@3d9d0347, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@2b5d3a5a, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@3fe2d1d4, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@3798c97d, 2, 5): success
test SubList.testSubList(java.util.LinkedList@72c8ca2f, 2, 5): success
test SubList.testSubList(java.util.Vector@3ee59590, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@5408cd53, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@3211e7b4, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6fdd1025, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@270a39b9, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@342c2eb5, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@2ce8a67, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5edaa9cd, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@2152cfa6, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@121f30f3, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@12f69986, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1d796d8e, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@5b015b70, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@d6ad25d, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@487851f6, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@4a544f6e, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@4a544f6e, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@5b96943a, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@49b67bc7, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@7b8fcfac, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3e0b1d94, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@413c70f1, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4fcd25ff, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@46b254c4, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@354ba019, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@2f69627d, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@ea02bf0, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@ea02bf0, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@7b5b2d51, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@46a55516, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@732410c6, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@30720bcc, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@68cd52f9, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5583a0fa, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1cb60a90, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@59325cbe, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@79fa0d3f, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@215963b3, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@215963b3, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@68e36a84, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@17f4c53f, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@40c5e6ba, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1dce58bc, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@38780624, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@61d008d2, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@44f854ae, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@255098fe, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3127e6e0, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@2357fe73, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@2357fe73, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@b5f0894, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@65ee9dec, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@1375190a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@2bf44348, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@6aaae02d, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2003a280, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@27a693a1, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@69ecc18, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@243b6b8b, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1d86aa56, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1d86aa56, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@62e8c4f1, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@faa885, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@1ae1d76d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2543d1d7, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@297925a1, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7c41029e, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@230788e2, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@21b69157, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@90f3aef, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@4ce8f59a, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@4ce8f59a, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@10cf357a, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@dae6707, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1fd6bee9, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7811f4fe, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@790bba3d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@13da866f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@63fa54ea, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@6701ee8b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@413d2620, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@232403dc, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@232403dc, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@785b16a5, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3f070c0d, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@16b70e65, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7c5cae64, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@31cfe80d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@f95272f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2d15d58b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@66d8d446, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@51c4ba6, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@52fd86e6, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@52fd86e6, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@373e858e, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@2c1fae6a, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@3a0d2442, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@35dd3905, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@2d69ae34, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@385550fb, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@503c6158, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@5028e4b3, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@513c5fca, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@70cc57da, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@529d5fb5, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@3ee01fce, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@b40e8fb, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@18351c23, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@4cc6e8f7, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@188aefd1, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1d077f86, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@26ecf080, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@62485664, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@3737dcbc, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@3737dcbc, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@565bb174, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@52f790d, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@53967f92, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@707b96b2, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
