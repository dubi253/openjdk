#Test Results (version 2)
#Fri Mar 01 16:27:44 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=302 0\:00\:00.302
end=Fri Mar 01 16\:27\:44 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 16\:27\:44 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=303
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 16:27:44 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 16:27:44 UTC 2024
elapsed time (seconds): 0.018
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 16:27:44 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 16:27:44 UTC 2024
elapsed time (seconds): 0.018
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 16:27:44 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 16:27:44 UTC 2024
elapsed time (seconds): 0.057
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 16:27:44 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 16:27:44 UTC 2024
elapsed time (seconds): 0.057
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 16:27:44 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 01 16:27:44 UTC 2024
elapsed time (seconds): 0.226
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91971)----------
Seed from RandomFactory = 1833782655623289647L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -262401766], 0, 1): success
test SubList.testAdd([42, 2096929092], 0, 1): success
test SubList.testAdd([42, 810089945], 0, 1): success
test SubList.testAdd([42, -291011413], 0, 1): success
test SubList.testAdd([42, 1019980374], 0, 1): success
test SubList.testAdd([42, 431141495], 0, 1): success
test SubList.testAdd([42, -1843492504], 0, 1): success
test SubList.testAdd([42, -949994995], 0, 1): success
test SubList.testAdd([42, 437947682], 0, 1): success
test SubList.testAdd(java.util.ArrayList@f71aec5, 2, 5): success
test SubList.testAdd(java.util.LinkedList@6d4ec180, 2, 5): success
test SubList.testAdd(java.util.Vector@1f0918c, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@4d854c66, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@6327bcd9, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@34e5e692, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@7dd83161, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@16319db3, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@35831604, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7bb50aaf, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@3c46f054, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@10009037, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([1164901265, 42], 0, 1): success
test SubList.testAddAtPos([42, 2005949164], 0, 1): success
test SubList.testAddAtPos([591069215, 42], 0, 1): success
test SubList.testAddAtPos([42, -1054242838], 0, 1): success
test SubList.testAddAtPos([772414898, 42], 0, 1): success
test SubList.testAddAtPos([42, -1489994744], 0, 1): success
test SubList.testAddAtPos([1830370426, 42], 0, 1): success
test SubList.testAddAtPos([1212144033, 42], 0, 1): success
test SubList.testAddAtPos([42, 104203406], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@229ce10, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@662da968, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@21d39f53, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@54c50157, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@306362bd, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@574a0b1e, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@4bbd89ee, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@2c75411f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@686d39f5, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4034698c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@4f79b833, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@17b91303, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@11b2feb5, 2, 5): success
test SubList.testClear(java.util.LinkedList@5990774e, 2, 5): success
test SubList.testClear(java.util.Vector@764e2eab, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@76b97ea, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@6df44c26, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@73c05b5c, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@3a9e8518, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@19838744, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@1fe1f01, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@27bbe568, 2, 5): success
test SubList.testEquals(java.util.LinkedList@fffd58e, 2, 5): success
test SubList.testEquals(java.util.Vector@489320a7, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@422433b3, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@7b6b7b53, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1d2df383, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7058398e, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@435fb85d, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@69a1ff9f, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1e8400d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@1e643292, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3e30a0e3, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@5dccdd82, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@510b9095, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@462a3809, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@2eb8485c, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@50034f49, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@6deea51d, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@6deea51d, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5f6d37b9, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@4dcbc184, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7e043fe3, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@37819e4f, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@494994f3, 2, 5): success
test SubList.testGet(java.util.LinkedList@43fb9042, 2, 5): success
test SubList.testGet(java.util.Vector@7563d0e, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@78396cfc, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@221dadf3, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@afacc06, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@7b8da4f7, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@2617b6cb, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@385563f, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6ce12a7d, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@1f0cfbbb, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@56716bd1, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@34f8de11, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@27a3603c, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@21098aa7, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@6e82098e, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1f22bbc4, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@4bbf786c, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@4bbf786c, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@2f7e5ef4, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@2f7c1c3f, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@4ae7d82, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@453b8ba9, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@10d7181, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@5b743941, 2, 5): success
test SubList.testIndexOf(java.util.Vector@5af04de4, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@206bd1c6, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@15c27626, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4b793b2b, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@2c801a00, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@aa94b40, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@25f26fda, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@31565f9b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@7f3de6a9, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2262615e, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@752c2dcc, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@9da0020, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2cd664cd, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@3b13e1b2, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@59f93487, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@121ce97, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@121ce97, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@71c5a04d, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@36d31952, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@75817e54, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@59c73068, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@2311ffe3, 2, 5): success
test SubList.testIterator(java.util.LinkedList@41468e80, 2, 5): success
test SubList.testIterator(java.util.Vector@7d81c301, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@400a8873, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@7ced39dd, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@34b7a2f8, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@15e5d45d, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@6b2d4172, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@49a93619, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@e317f9a, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@563c1c8e, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@6817e05d, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@6991000c, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2abef807, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4676cb67, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@539d7cd5, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@18d4e6e3, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@63eedb95, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@63eedb95, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@2532f00a, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@55bf537b, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@3aa6691d, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@88f1fe6, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@790efe98, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@3cf7b32b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@13473790, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@6bd7650c, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@43b3fe0d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3ee5f085, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1e9c3f0b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@31225ee5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@13f1a182, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@77fa8bf, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@2034c56d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@366cb14b, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@611ab0b3, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@51ba8c01, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@76878a0, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@56d2e2f3, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7e4b6f41, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6fe721be, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6fe721be, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@28c15c17, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@408fde5f, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@550d70a3, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@7eb53567, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@4d51475, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@604c7a4e, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@6e2a5584, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5bf3eb6a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@6fb2389b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@799af0b1, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3c528a75, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@18b9b82d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@227a4d4e, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@176483bd, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@640b3338, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@7b389bf1, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@2c069082, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@4ff1c494, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@907ecb4, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@71f026ad, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@39a32a54, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@5decd4f0, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4ad77194, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@164ce46f, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3d820c3b, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@78756ec4, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@d27bca4, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@29c853c2, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@4f66978f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@45c9dd16, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@164ff839, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@164ff839, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@6bfa7238, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@24fac1bc, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@518f79fa, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4f711407, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@58ea8b5d, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6fc780ab, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@3652d647, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@6cda6cc1, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@75abdb05, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@2f3b03eb, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@2f3b03eb, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@61b31ede, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@11ac3764, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@5aec68b9, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@3f945d9c, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@21813162, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@2486d730, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@614c74a3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@d28f2a5, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@342096e5, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4da832de, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1305ff3a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@62bf6cd8, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6bf87112, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@705fd49a, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@4aea00ec, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@5072d0f6, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@3c2bceb3, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1d5d9111, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3bc68563, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@61d882a9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@63786208, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@347bde34, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@28ee55c7, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@4dc98b73, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2fba26fb, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@2d912f6b, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@5a5b2624, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@4c9963f1, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@6785730a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@33c1aa33, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@3266bba1, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@3266bba1, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@2b481f13, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@7839842a, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@39b0d2a5, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@177baec, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@24ba703c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@3685871c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@6d2a42e9, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@70df9fcf, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@516fff1, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@12d8dd06, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@798020f0, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@1be041a3, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@756ac87f, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@7e8509a0, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@4d1297d5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@62885759, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@6a94d6f3, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@42e63e5e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@48d0c95c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1a9bd1d9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@2daaf562, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@603d91ca, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1639170716], 0, 1): success
test SubList.testListIteratorSet([-146275395], 0, 1): success
test SubList.testListIteratorSet([-666978375], 0, 1): success
test SubList.testListIteratorSet([852763980], 0, 1): success
test SubList.testListIteratorSet([1652390626], 0, 1): success
test SubList.testListIteratorSet([477345755], 0, 1): success
test SubList.testListIteratorSet([-1066133812], 0, 1): success
test SubList.testListIteratorSet([-477395681], 0, 1): success
test SubList.testListIteratorSet([1929867682], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@35b551be, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@49763104, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@46e4cf90, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@efc1751, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@2d690331, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@62aeae77, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@44838b4b, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@6cc1cecc, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@26620abf, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@67c92094, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@37b222ba, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7d63346c, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([748997162], 0, 1): success
test SubList.testListIteratorSetPrevious([1817645860], 0, 1): success
test SubList.testListIteratorSetPrevious([1214011528], 0, 1): success
test SubList.testListIteratorSetPrevious([1824491850], 0, 1): success
test SubList.testListIteratorSetPrevious([1329643751], 0, 1): success
test SubList.testListIteratorSetPrevious([-418138371], 0, 1): success
test SubList.testListIteratorSetPrevious([-1301607189], 0, 1): success
test SubList.testListIteratorSetPrevious([-113432450], 0, 1): success
test SubList.testListIteratorSetPrevious([1090911506], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@64a02794, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@5e04306c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@7b73fb0a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@5f0dcd69, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@721f7308, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@4b4740e8, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@57875470, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@59bb6523, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@2536f98e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5e53e5d4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@7cf5d647, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@79c6bcc4, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@5395ca8b, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@65ed967b, 2, 5): success
test SubList.testModAdd(java.util.Vector@563ec4be, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@292f356d, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@36bf23ff, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@7788da3, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@7ed0275c, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@8ec10df, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3c5febcd, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4bb465f0, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@1dd8e892, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@6114c4ca, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@5911c013, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@518f4f5a, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@5308054f, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@7188cfd5, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@14e59005, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4cef46ea, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@5539028c, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@6eb59251, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@38be1e6f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@78bf32b9, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@67ca612b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@c1473cf, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@1e82ab22, 2, 5): success
test SubList.testModClear(java.util.LinkedList@1fc65e89, 2, 5): success
test SubList.testModClear(java.util.Vector@7bc85f27, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@a761d47, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@25a1147, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@5692b0d8, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@2d6825cc, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@2266a927, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@67957461, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1ffee29d, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@237fb39e, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@71e83ead, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@17cf4c7c, 2, 5): success
test SubList.testModGet(java.util.LinkedList@765ae29e, 2, 5): success
test SubList.testModGet(java.util.Vector@42d0066d, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@6f39197f, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@a34f03d, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@51aa4f07, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@1fe55e70, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@1055e538, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@787ec608, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@76990e8b, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@5d99d8df, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@78fee9ff, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@45ec785d, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@9acda7f, 2, 5): success
test SubList.testModHashCode(java.util.Vector@6a8ef822, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@647f9135, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@72ef3f7, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@6a32d035, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@62cc35bb, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@cc63add, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@73bf2333, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@71d8e433, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@663fedad, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@359d4342, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@5e174faa, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@4ce845a2, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@7328ec49, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@70d07a3f, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@6773356a, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@35132cd3, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@760a75fc, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@1144d6fc, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@5a49f1db, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@38c46250, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@1c9ca7ce, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@d68d737, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@63f1d51f, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@738eb9a5, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@30734910, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@7d92acd2, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@3394c775, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1b935d15, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@3ea87cc5, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@300eeb9f, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@735c682e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@26353ed7, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@43b9a2d0, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2eac5b3e, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@7badf7ba, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@75954dae, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@2b660515, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@2a6b679f, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@1fd95d0a, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7e463a2c, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@4a3e511d, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@d1090c6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@79ff4d69, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@70078167, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@387dfdd7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@48d82e0f, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@40558b32, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@605fb610, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@749327b7, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@4201292a, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@2e2cd41c, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@25433adb, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@51be2518, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@30b2b24, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@6e7aad08, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@19229ff7, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@ad6a702, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@12cca670, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@799a8869, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@6f9b3b6d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@371a8ebe, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@2e3cfb79, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@2312ef63, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2563b917, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2622eca6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@197dcd4d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@419eaf60, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@64d9b169, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@61014792, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@13177038, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@28d10171, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@310526ee, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@2790813b, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@1bff8741, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@696f149a, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@22a8f9b0, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@572e9f8a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@22ea16c7, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@63cdeb1a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@609fc67, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@2d7936dd, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2c3566b9, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@3262cdd1, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@4be18629, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@47cd37ab, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@287f5a57, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@4e1e51bd, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@316e18c5, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6ff0272c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@47b9a0a4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2d0c1fa, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@ff59947, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@5d1f90df, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@66761d91, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@5daa2cfc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@2131d8cb, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@2c717658, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@4b9c6c13, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@4f70a571, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@231a4856, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@273dea64, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@2f2d8434, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@6ea2785b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@526c5e9e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@2fb4aba8, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@15903e47, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@390881ad, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@1a0e16a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@73f09c92, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@6c2f3498, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@56816c61, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@387ebdc9, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@5717b13d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@31b906e9, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@109d8d54, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@363364f5, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@7acad742, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3db05674, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@3a854367, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@6d82430d, 2, 5): success
test SubList.testModRemove(java.util.Vector@70e5fe01, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@17c9b2d9, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@4a7dfac1, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1dfcde60, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@15b4e2f0, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@6628d1ec, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@3188c511, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@6cb14449, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@50130a1f, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@48f22b51, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@23e19347, 2, 5): success
test SubList.testModSet(java.util.LinkedList@1540aa32, 2, 5): success
test SubList.testModSet(java.util.Vector@6f8583c, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@2087fa47, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@297494a2, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@30849080, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@18302c3c, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@53a28c42, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@3caded8e, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@c4e08ac, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@5111f2c0, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@2cc6353e, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@72fd5d97, 2, 5): success
test SubList.testRemove(java.util.LinkedList@3fa53c22, 2, 5): success
test SubList.testRemove(java.util.Vector@6a155760, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@263dd3dd, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@3b3036c4, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@437cf7a1, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@31413117, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@25f2b920, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@7b1d6db7, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1091876829], 0, 1): success
test SubList.testSet([-694202855], 0, 1): success
test SubList.testSet([1797596839], 0, 1): success
test SubList.testSet([675328337], 0, 1): success
test SubList.testSet([1673804153], 0, 1): success
test SubList.testSet([1915583244], 0, 1): success
test SubList.testSet([-492146259], 0, 1): success
test SubList.testSet([859318036], 0, 1): success
test SubList.testSet([-1529483709], 0, 1): success
test SubList.testSet(java.util.ArrayList@1b88755d, 2, 5): success
test SubList.testSet(java.util.LinkedList@77f67473, 2, 5): success
test SubList.testSet(java.util.Vector@a043cc6, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@7637f85a, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@7b6cf74a, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@32caff65, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@56c18b37, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@79c20cd3, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@360299c7, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@743d947c, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@3b84298c, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@3b561314, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@28b70b38, 2, 5): success
test SubList.testSubList(java.util.LinkedList@153db7d5, 2, 5): success
test SubList.testSubList(java.util.Vector@636d2a40, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@12c98621, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@730a9afd, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@575983de, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@759c86c6, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@18eb75f4, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6a4d90f9, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@104d91ee, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@59274877, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@26854e87, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@1a7d1cf2, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@210e3e08, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@42c78b7c, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@7593eb61, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@699710f9, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@5f3d0927, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@5f3d0927, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@2deb8e23, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@54af250f, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1e3de663, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6f17f5a7, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@6d834592, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@57c13c91, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6196d6ed, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@994ecfe, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@34703afd, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@1420e838, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@1420e838, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@966e7d6, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@156c4b9e, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@72f66d3a, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@3ae565f0, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@471f02b3, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5d53d1c9, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@4f31a1be, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@33ba8a5, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@11a17116, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@4869c152, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@4869c152, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@674810e5, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@46507361, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@3a2abd51, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@77f11708, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@39d0485b, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@20a9a1d0, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@60f7c9f9, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@89d1673, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@485dc386, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@f65454f, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@f65454f, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@63155f46, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@4c636a99, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@2350a5af, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@4b7a53aa, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@2dbc0fec, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@783000e6, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1def7799, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@5d072cc6, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@7bd74624, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@7d384de1, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@7d384de1, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@b649218, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@6d67bec5, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@5b4e975d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5bdd99d5, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@70225ab7, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@4c9cbdd8, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@457055db, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@4ab0e2fa, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6e4b7d8f, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@b57b128, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@b57b128, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@14a006c, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@602143e5, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2ff3855b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@635fc559, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@524b1dcb, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@53f3ba8e, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@4e6c12b5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@49e1627f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@5c52c9d2, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@8574c48, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@8574c48, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@20c56186, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@280d4c96, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@639883ab, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@2197ae83, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@243fab17, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6f9513c1, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6a461506, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@18875360, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2f243d04, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@24cffa28, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@24cffa28, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@640320db, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@744db102, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@ec8e5ab, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1c1fd060, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@7e841579, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@140dfa44, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@4e197109, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@1ba22aae, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3433aabd, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@7ae356d1, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@5b7addb2, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@683926d7, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@60ae46c9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@6033b3, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@7e73f08a, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@44c80ffc, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@e30b8f6, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@5f9712a8, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@36013c0, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@3ce4e437, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@3ce4e437, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@722fea06, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@4e2d209, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@104746ea, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@60dd0733, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
