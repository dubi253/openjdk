#Test Results (version 2)
#Fri Mar 01 14:58:49 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=250 0\:00\:00.250
end=Fri Mar 01 14\:58\:49 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.12
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 14\:58\:48 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=250
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-e22bbb87eb47c075e30a3ae770ba2979e9628e8f)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-e22bbb87eb47c075e30a3ae770ba2979e9628e8f, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 14:58:48 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 14:58:48 UTC 2024
elapsed time (seconds): 0.018
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 14:58:48 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 14:58:48 UTC 2024
elapsed time (seconds): 0.017
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 14:58:48 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 14:58:48 UTC 2024
elapsed time (seconds): 0.042
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 14:58:48 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 14:58:48 UTC 2024
elapsed time (seconds): 0.041
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 14:58:48 UTC 2024
Mode: agentvm
Agent id: 6
finished: Fri Mar 01 14:58:49 UTC 2024
elapsed time (seconds): 0.189
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91979)----------
Seed from RandomFactory = 5448867700883377212L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1482963757], 0, 1): success
test SubList.testAdd([42, -1427795656], 0, 1): success
test SubList.testAdd([42, -1403527791], 0, 1): success
test SubList.testAdd([42, 742576161], 0, 1): success
test SubList.testAdd([42, 1700756169], 0, 1): success
test SubList.testAdd([42, 1437358821], 0, 1): success
test SubList.testAdd([42, -2142532891], 0, 1): success
test SubList.testAdd([42, 2033369358], 0, 1): success
test SubList.testAdd([42, 511810544], 0, 1): success
test SubList.testAdd(java.util.ArrayList@6f0afdd2, 2, 5): success
test SubList.testAdd(java.util.LinkedList@65f405e5, 2, 5): success
test SubList.testAdd(java.util.Vector@74d344f6, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@1a53f072, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@46525bff, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@74975fc9, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@4a1bbd55, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@62177bd4, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@7f3fc214, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@a371174, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@2a3b18aa, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@73b18661, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-1207578051, 42], 0, 1): success
test SubList.testAddAtPos([42, -1001265249], 0, 1): success
test SubList.testAddAtPos([42, 779903679], 0, 1): success
test SubList.testAddAtPos([1287418966, 42], 0, 1): success
test SubList.testAddAtPos([1689585495, 42], 0, 1): success
test SubList.testAddAtPos([-1922690236, 42], 0, 1): success
test SubList.testAddAtPos([1902837057, 42], 0, 1): success
test SubList.testAddAtPos([944160777, 42], 0, 1): success
test SubList.testAddAtPos([-570670992, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@36eec7f5, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@2063c5eb, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@79c114bc, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@8555f42, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@45c42d5b, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6d232473, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@30dd1681, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@7d52faef, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@4ba715ba, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1aed6c50, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@49207b36, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5b96b253, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@33de272c, 2, 5): success
test SubList.testClear(java.util.LinkedList@1dbcdd0e, 2, 5): success
test SubList.testClear(java.util.Vector@7d91aac6, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@4afdc47a, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@5db7469d, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@45bdc4b2, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@77414e07, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@5fbfb86, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@43a0f654, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@66b6752a, 2, 5): success
test SubList.testEquals(java.util.LinkedList@667484d2, 2, 5): success
test SubList.testEquals(java.util.Vector@741ffe1a, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@2397b40a, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@272808c2, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@67afbe8b, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4a43da56, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1a5cb0ef, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@366246e8, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@215fbcc8, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@5adafee9, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@566d532, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@2dfbfc35, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@4d023de6, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@225bc997, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@52c364ae, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@427ff6b7, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@85c766, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@85c766, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@13030907, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@26344c73, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@53630605, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@70137742, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@78e19025, 2, 5): success
test SubList.testGet(java.util.LinkedList@5423db8a, 2, 5): success
test SubList.testGet(java.util.Vector@1baffe38, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@3a482ae9, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@68a586dc, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@9217a94, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3e201b32, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@66020140, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1df9c3d9, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@262b101f, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@235ffd8f, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@25bddd19, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@d4203b4, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@5d78d3db, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@29b0c602, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@1960afc, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3fb17b56, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@2ef26896, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@2ef26896, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@6bee39ee, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@73d5d255, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@5ea26109, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7f77c2d0, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@75bceae6, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@315cd78d, 2, 5): success
test SubList.testIndexOf(java.util.Vector@634e7d45, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@42ce8ef9, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@1914f9f1, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@74a20cbe, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@43a06866, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@ad97a00, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1986d9b2, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@646c07e5, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@39124a5c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@3b66bbc1, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@7e004778, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3a2954e, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@38fc8814, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@410fe50f, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4b92d128, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@873bddf, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@873bddf, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@50aacd04, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@49a333fb, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@54b67978, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@51d1ad15, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@3474acac, 2, 5): success
test SubList.testIterator(java.util.LinkedList@64366a7c, 2, 5): success
test SubList.testIterator(java.util.Vector@216970e2, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@25cfc4dc, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@3283233b, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@72fc2642, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@3c1a17ff, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@7123a822, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@51ab4244, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2dab00c2, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@b290c75, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@11a83812, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@4588f01, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@660bdbd3, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1fbe28b3, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@6b411c75, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@78c6f780, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@354e351, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@354e351, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@7786365a, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@2929b8a5, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@7b68a2de, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2cd35590, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@11589c84, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@47537633, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@7f5c5c0a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@303d7e9, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@1e5cf07d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@32773631, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@22457192, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@36c4b1a1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@79cdfb65, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1999cea5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@1162883e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@55f62b7a, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@38619f28, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@28126e50, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@466e153b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@93cba3b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@52fbf2da, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6bbe6919, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6bbe6919, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@2fead17d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@1e997d96, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@40537f3b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@67d1b6a, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@17f12797, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@d2c1007, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@6d9d6e20, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@3b47be93, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@4a73561d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@1ddec482, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@790e2bc2, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@5327f66b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@183bc1eb, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@3bd9fe80, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@189f9840, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@1245a345, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@5cecbf69, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@6672bc5c, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4cf75339, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@75516ab2, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@3b40e440, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@56288f98, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6761d207, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@4ee80ed7, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@610bf2d, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@747bb199, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5b9dc46d, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@48ccb942, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@272b5584, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@62249a24, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@559805c1, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@559805c1, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4cdccee, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@52edb865, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@23534228, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7ef30c8f, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@e0dde4c, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@4dbaae0f, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@4b12c3f1, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@7a5d3911, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@25984e15, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@50bb79e1, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@50bb79e1, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@7ce74965, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@517b413, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@403fe12d, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@4d86e4d6, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@32261785, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@2eccc4eb, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@61adb13, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5101219, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@42e6d43a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@11606d5d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@552e823f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@7a46626e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@14235f33, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@427bd812, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@11291193, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@3aaefd31, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@14a40182, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@371cb8e0, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@ff555f2, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@138b23b7, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@4231088f, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5bfa7bbe, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2427be3, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@284c9470, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1aa654e0, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@664b0f78, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@8c0a287, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@70af6dfe, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@2c5b2964, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@63fb5fae, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@280f9140, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@280f9140, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@5c270361, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@70e69678, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@7ccacded, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@74624e, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@1dbb67a9, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@4fe659d6, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@6823c25b, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@22745155, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@24ee16b3, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4a9c6c6e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1d670a18, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@6d9e0643, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@475bb475, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@28a9ee8e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@6cfe2bdf, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@444aec3a, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2b9850e9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@68b225bb, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@12a4a09f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@27d8d648, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@7e33a95c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@34d37751, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([183629420], 0, 1): success
test SubList.testListIteratorSet([-169427693], 0, 1): success
test SubList.testListIteratorSet([2030861522], 0, 1): success
test SubList.testListIteratorSet([1873936527], 0, 1): success
test SubList.testListIteratorSet([-1940012508], 0, 1): success
test SubList.testListIteratorSet([-1949214057], 0, 1): success
test SubList.testListIteratorSet([734041585], 0, 1): success
test SubList.testListIteratorSet([-1141806499], 0, 1): success
test SubList.testListIteratorSet([2078373258], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@4e1e3249, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@10593b4a, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@2ef2d2c3, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@3ecdb747, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@1efe0bed, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@108c1078, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@4ddbde04, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@398ee724, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@2966a984, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@27231ce3, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@725bf221, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7749cf99, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1966350702], 0, 1): success
test SubList.testListIteratorSetPrevious([-1350415930], 0, 1): success
test SubList.testListIteratorSetPrevious([-1633181748], 0, 1): success
test SubList.testListIteratorSetPrevious([419156787], 0, 1): success
test SubList.testListIteratorSetPrevious([-2095228651], 0, 1): success
test SubList.testListIteratorSetPrevious([-2031937444], 0, 1): success
test SubList.testListIteratorSetPrevious([2045835132], 0, 1): success
test SubList.testListIteratorSetPrevious([1394618837], 0, 1): success
test SubList.testListIteratorSetPrevious([-40436566], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@34935ea3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@17f19dda, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@40410cd3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@1b0c19a2, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@74c2b17f, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@4deb4bd9, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@78972c25, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@5573b4ca, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@746293c4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7236e6b3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@cdbca4a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@2d540656, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@332b0c93, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@12d9072a, 2, 5): success
test SubList.testModAdd(java.util.Vector@2351c623, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@1f6c3311, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@52950184, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5dde5cfc, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@1d5b0fa7, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@312300d1, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@5685f1ef, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4dbcf319, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@101d781c, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5c53bfd2, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@3215074a, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@1ce30fab, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@32f09f66, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@78995385, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@49f5db2f, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1b0ed8fc, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@40b190e9, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@49d1d69b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@727a4b11, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@383ef1c2, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@23102227, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7745e4e0, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@10562362, 2, 5): success
test SubList.testModClear(java.util.LinkedList@7b583613, 2, 5): success
test SubList.testModClear(java.util.Vector@1906b7b8, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@5a4da43f, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@18291624, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@3006b85e, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@22d1efcf, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@4c60dd59, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@593fa82b, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@505e5d68, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@6c5634f3, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@22b8ed17, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@56798264, 2, 5): success
test SubList.testModGet(java.util.LinkedList@5d69235b, 2, 5): success
test SubList.testModGet(java.util.Vector@388f047e, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@664380db, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@7acb8bca, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@5233f7d0, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@7003caa1, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@72fab05c, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@4ed343a5, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@433093f, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@2ea25df0, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@70c0cd65, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@613a4a97, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1d035ec9, 2, 5): success
test SubList.testModHashCode(java.util.Vector@44180bb1, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@78e2ac73, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@2774146e, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@37779c6a, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@3d2ebcfd, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@35ba2e06, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@37cad991, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@465ff08b, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@288f5ef, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1036ac32, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@65ca3c9a, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@50b5eed1, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@46eff52c, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@208f5b10, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@4216b748, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@58c2c7a4, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@1f1ca49c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@2943de0f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@40054b6, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@42d2a2dd, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@2be1064c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@3c2ac157, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@9ab3685, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@69732f57, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@1313597c, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@4e9e0cdb, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@6636119d, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5abb5921, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@58894737, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@57c434e0, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@6309cb07, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@722670ff, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@728b7191, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2e788aa6, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@6d37f138, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@a0fcde7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@2b7f3533, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@703a6e9c, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@46e1c7e4, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@16895c2e, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@67347ef0, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@2aa1125c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@53a9600e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2db55395, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@50b0402f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7c8fc697, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@514955c2, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@194bd630, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@65c55a26, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@2725a0f5, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@594d8d3e, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@73592f44, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@67f208f1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@2cbfada5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1389869f, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@60173905, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@6fc4a25, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4d3c12ae, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@7d009e3a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@569fd3f6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@13553ca9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@373e409b, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@b9b032b, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@605b6543, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@c2a55e2, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@34d881bc, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@69407e71, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@28fa42d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@266b6d9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5f4ab9e4, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@2e8e40da, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@34768f55, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@790b6320, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@102f3e6c, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@6ce08256, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@dc65d2b, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@2c9300bb, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@691631bb, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@57f58d66, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@695cc605, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@4f48e528, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@c6be02d, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@7218eaf0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@51d285d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@6cc90860, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@2a08b5dd, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@4e636ca7, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3e9a315c, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6e9d61c0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@4e791da8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1c96ef3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@100a9389, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@22bf2989, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@326483d5, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@27e8032f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@49c01a10, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@7acd4859, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@22ba068d, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@713036e1, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@74d36953, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1c3b09cf, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@9d3ab6a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@444b7b8d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@18c273ad, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@549a716a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@23e14057, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@6db1070f, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@354d468, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@515d8af6, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@49df6b38, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@4bb6d7e5, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7d21700a, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@79e2e66e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@6a66c109, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@30fc2133, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7af4932a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@6ebe897b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@25dd00ba, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@25631d0d, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@48ce2e84, 2, 5): success
test SubList.testModRemove(java.util.Vector@5d47710f, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@57c084a1, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@4c2793b2, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5d66615a, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@75fda2fc, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@15ec9219, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@30cb8625, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@482573ed, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@45b71511, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5d298d0e, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@216177e7, 2, 5): success
test SubList.testModSet(java.util.LinkedList@6e41f3c7, 2, 5): success
test SubList.testModSet(java.util.Vector@4dca7a06, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@70d33ada, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@7e43d3e2, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@6fddcdd3, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@5387dcf7, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@5d9a01ab, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@5d6c437b, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4ba0eff7, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@4ebc0bd8, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@154c5c6f, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@5fc9edd6, 2, 5): success
test SubList.testRemove(java.util.LinkedList@57ec7e45, 2, 5): success
test SubList.testRemove(java.util.Vector@4c0673f7, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@7cba1d9d, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@1f83f5a3, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@25aef58c, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@7c154626, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@58409be, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@73bad1ea, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-2060255141], 0, 1): success
test SubList.testSet([180458176], 0, 1): success
test SubList.testSet([-374199114], 0, 1): success
test SubList.testSet([-729028129], 0, 1): success
test SubList.testSet([-1811395411], 0, 1): success
test SubList.testSet([807636655], 0, 1): success
test SubList.testSet([-1125959669], 0, 1): success
test SubList.testSet([-1786598527], 0, 1): success
test SubList.testSet([558767508], 0, 1): success
test SubList.testSet(java.util.ArrayList@ea1c268, 2, 5): success
test SubList.testSet(java.util.LinkedList@1aa70bae, 2, 5): success
test SubList.testSet(java.util.Vector@3d7a3f21, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@5a8ed300, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@4b177b42, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@2ddf3a35, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3ca6b68c, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@46c99b08, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@5b94b6d5, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5b39bc40, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@c8544f1, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@584d28ae, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@7f0ddca7, 2, 5): success
test SubList.testSubList(java.util.LinkedList@2dd38999, 2, 5): success
test SubList.testSubList(java.util.Vector@2d0c80c2, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@6dbb596d, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@34458f44, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7306900b, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@26bf70cf, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@2bbb992a, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@f81cffe, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@42172053, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@3e53f41c, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@64663ad3, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@2a455a6a, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@278f1786, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@5b5278e3, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@5bddf40b, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@788acac9, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@1ad32e3f, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@1ad32e3f, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@7a95d479, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@6a75cc82, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@148cd0b6, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@c4ff307, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@2e339565, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@44e1bab2, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5c952517, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@17b8a9b0, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@482e4fa0, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@3109efc9, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@3109efc9, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@79759c4e, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@2129679, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@a751e1, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@7311f55b, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@30eb51c0, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1d0105d7, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@793dfaf6, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@153ad5db, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5d9fe40, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@48c9cbaf, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@48c9cbaf, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@459f3b12, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@d649145, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@59be9ffb, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5b7a8926, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@5ab1d7d1, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@792839a9, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@2657f58d, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@5677b7e3, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7960f259, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@57b61d02, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@57b61d02, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@7abbb8db, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@3750bea6, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@194e215b, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@21f55159, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@1a4cbe2c, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@43924c67, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@6a8c76af, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@31d2ac40, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@5b0fca3, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5c87af56, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5c87af56, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@5213fdb7, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@6d75dea6, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@3cf49aa4, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@34de3ad8, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@56a1e3c8, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6547bdf2, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7d665ddf, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@68cf6376, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@16f1a527, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@174837e3, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@174837e3, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@483526dc, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@6c627c3, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@76704532, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@78aaeebd, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@74a4ad7f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@38799046, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@e8ee90b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@27d5efca, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@fb70b3d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@13d546cf, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@13d546cf, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@2af432a, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3797b0fc, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@6eb97d54, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@73b5c06a, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@7d9f5866, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@554a219f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@50e4176d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@5890c3ed, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@720d4f4e, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@3cc502ca, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@3cc502ca, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@42108ac9, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@71accba0, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2cb4d031, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@55f33316, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@13aa6c94, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@13595584, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@785ee5e8, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@1d79956f, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@7b145b4a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@5892c54e, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@7d6dabd9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@19820dc2, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@65d5cb64, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2092122, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@39cc942a, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@6eda59a9, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4fc0b266, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@22d31755, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@ca851ac, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@480ac0cc, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@480ac0cc, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@3b37f8e0, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@208692a0, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@73c58a8d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@687733b0, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
