#Test Results (version 2)
#Fri Mar 01 13:51:40 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=252 0\:00\:00.252
end=Fri Mar 01 13\:51\:40 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.11
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 13\:51\:40 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=252
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-20701581e347c4357fe545087c534ed5d212b8ce)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-20701581e347c4357fe545087c534ed5d212b8ce, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 13:51:40 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 13:51:40 UTC 2024
elapsed time (seconds): 0.013
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 13:51:40 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 13:51:40 UTC 2024
elapsed time (seconds): 0.013
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 13:51:40 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 13:51:40 UTC 2024
elapsed time (seconds): 0.043
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 13:51:40 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 13:51:40 UTC 2024
elapsed time (seconds): 0.042
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 13:51:40 UTC 2024
Mode: agentvm
Agent id: 6
finished: Fri Mar 01 13:51:40 UTC 2024
elapsed time (seconds): 0.195
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91957)----------
Seed from RandomFactory = 4948548751151237671L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1500048785], 0, 1): success
test SubList.testAdd([42, -1084024706], 0, 1): success
test SubList.testAdd([42, 2036368541], 0, 1): success
test SubList.testAdd([42, 793830963], 0, 1): success
test SubList.testAdd([42, 1723253594], 0, 1): success
test SubList.testAdd([42, -501461050], 0, 1): success
test SubList.testAdd([42, 44996448], 0, 1): success
test SubList.testAdd([42, -1030342563], 0, 1): success
test SubList.testAdd([42, 1019530945], 0, 1): success
test SubList.testAdd(java.util.ArrayList@54f9c43b, 2, 5): success
test SubList.testAdd(java.util.LinkedList@1b430569, 2, 5): success
test SubList.testAdd(java.util.Vector@1e381383, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@78b3eb2, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@be047cc, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@51fce496, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@5a245a81, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@2d301dc, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@34ae88cc, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@76508d3c, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@4bbf4350, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@68d65a02, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -1312649891], 0, 1): success
test SubList.testAddAtPos([-1182145032, 42], 0, 1): success
test SubList.testAddAtPos([703692513, 42], 0, 1): success
test SubList.testAddAtPos([42, -10418407], 0, 1): success
test SubList.testAddAtPos([42, 146262211], 0, 1): success
test SubList.testAddAtPos([42, 1498443671], 0, 1): success
test SubList.testAddAtPos([122294732, 42], 0, 1): success
test SubList.testAddAtPos([42, 1160897370], 0, 1): success
test SubList.testAddAtPos([42, 844775861], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@5b53153b, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@419aa6a0, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@3e441b17, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@22e3929a, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@28128b2d, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@641b374f, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@6b5d6156, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@1c17eba0, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1d70f7c7, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4767572b, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@7ba5b0c7, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@154cc899, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@1464a3d5, 2, 5): success
test SubList.testClear(java.util.LinkedList@27b7a552, 2, 5): success
test SubList.testClear(java.util.Vector@7c02095d, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@4a2740a, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@3100ab77, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@4e416268, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@1676d02e, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@28353f4d, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@6675585c, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@26927f2f, 2, 5): success
test SubList.testEquals(java.util.LinkedList@470d0232, 2, 5): success
test SubList.testEquals(java.util.Vector@59cd60ac, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@59511c93, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@1fc4e015, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@2c473c45, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4831204a, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@38501b75, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@64e2d43b, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@74e59a0c, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@2778c7b6, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6603085, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@2423a044, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@2bac7390, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@7f9c7700, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@4b179dfb, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@63968af5, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@39089564, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@39089564, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@2aea36c9, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@53b2d160, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@535fab7c, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@60cbce48, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@2980441f, 2, 5): success
test SubList.testGet(java.util.LinkedList@29aa0aa2, 2, 5): success
test SubList.testGet(java.util.Vector@5b29bab, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@71493522, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@2fad0b6, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4c97112d, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@28fdf7c3, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@56074934, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@5a2209fc, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7df759b0, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@1fedcb50, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@66994cfb, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@19fcaee3, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@44ccbaf0, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@7f32d1f7, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@528d96f0, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@5fff73a9, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@7f2c89d6, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@7f2c89d6, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@3c301ce4, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@d34e959, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@78296d9e, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@3fdd4af7, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@3e945404, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@a850005, 2, 5): success
test SubList.testIndexOf(java.util.Vector@85956c4, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@713c7859, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@2fdd660c, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@305fbdb8, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1e7cd911, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@6eb5c52a, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@65151067, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@56849719, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@4960480b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@69477e99, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@3adddc02, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1ae4f352, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@48995dd5, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@756b82d7, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@513b16e2, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@51580bf5, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@51580bf5, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@7a46d37c, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@3ec493d1, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@60b808a2, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@12832f7d, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@1c61df98, 2, 5): success
test SubList.testIterator(java.util.LinkedList@19a54d96, 2, 5): success
test SubList.testIterator(java.util.Vector@3695dae4, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@576310fc, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@39b2171f, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5bed47a1, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@169b54bc, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@1937953, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@37160f40, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@a05ac43, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@5204dbff, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5515a325, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@a26063d, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@121f89c5, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1b2cb9aa, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@5fa2e40a, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1aa601b5, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@14a0cb9e, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@14a0cb9e, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@2142a1f8, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@48bf12b6, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@6ab95640, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@acca1f6, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@6e6a4013, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@2e3fcf9f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@6824f985, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@23b0665f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@2a2dfa4d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@61a3287e, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@175dbb6e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@27e82b96, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@31f8dfe7, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@8c335a1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@10818e7e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@67328c32, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@1ea36b8c, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@50e7c5eb, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5f07966, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@6614910f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5c538964, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@5c13e3e2, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@5c13e3e2, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@6cb0c4a3, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@27568427, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7cf33031, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@390fa95b, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@5af07564, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@46312052, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@c190a14, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@464b652e, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@5909cd73, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@66d5fc01, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@50de260d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@3685963f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@8b0b9a4, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@47bf7b9a, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@2bd7045b, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@6132c1a7, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@420d6a9d, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@8c0c8b, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@225505b7, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1369fa5f, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@3ce5df89, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@195de72b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@52d193f, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@642482c7, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2a06b694, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@3e5d0c2f, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2582cd40, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3a808fb, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@6b7ba6df, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1f85a37c, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@392132bd, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@392132bd, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@5bccacd0, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1503f766, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@6d8434cf, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4a1d61bc, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@6127a667, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@219266e4, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@2feeff7a, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@44d12a5d, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@36ad9ef1, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@35975b93, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@35975b93, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@5a23c5e9, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@18ee85ec, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@75932104, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@768176a9, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@2088337b, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@73dcdda9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6498a4d3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@18996918, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@6edc404e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5ee4a9df, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@37e57d2, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@43f40b35, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@58c11fc9, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@2c00849e, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@55d96b49, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@46bf6634, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@6d3af607, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@271530e5, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@540b8a00, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@73c29a67, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@4b82cdc2, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@215edf94, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@37d4835a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@65281650, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@312f69cc, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@2c43ce75, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@27da113f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@14b6ab67, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@5b7da936, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@2d20701c, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1adcb9cb, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1adcb9cb, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@44fdf54c, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@33587fd7, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@c16fee5, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@471ca9a1, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@2df0ac76, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@4f636382, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@4f7c3afe, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@55606048, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@39a7f3e4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7b75b7fb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@44918468, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@306fcd33, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@41bb1c97, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@1014dedc, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@13d224d2, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@7d632f5e, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@5972367d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@39d4fe5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@190e2550, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@761fe635, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@763a43a6, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@43b7ead5, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1763993651], 0, 1): success
test SubList.testListIteratorSet([298088268], 0, 1): success
test SubList.testListIteratorSet([1505583414], 0, 1): success
test SubList.testListIteratorSet([-1128727736], 0, 1): success
test SubList.testListIteratorSet([2043045117], 0, 1): success
test SubList.testListIteratorSet([155615140], 0, 1): success
test SubList.testListIteratorSet([-1848760312], 0, 1): success
test SubList.testListIteratorSet([-431383268], 0, 1): success
test SubList.testListIteratorSet([-94823520], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@608bc505, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@267c223d, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@6eab496, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@51cc496a, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@54a7286, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@17db0874, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@2efd0a59, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@39090859, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@2b8d474d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5d5c76b1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@50b94f5c, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@75562018, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-1420538323], 0, 1): success
test SubList.testListIteratorSetPrevious([507033616], 0, 1): success
test SubList.testListIteratorSetPrevious([-1695241524], 0, 1): success
test SubList.testListIteratorSetPrevious([936278484], 0, 1): success
test SubList.testListIteratorSetPrevious([-639503032], 0, 1): success
test SubList.testListIteratorSetPrevious([612512971], 0, 1): success
test SubList.testListIteratorSetPrevious([1799787946], 0, 1): success
test SubList.testListIteratorSetPrevious([505696932], 0, 1): success
test SubList.testListIteratorSetPrevious([196805510], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@1d4963af, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@710ae5fc, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@44210fec, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@78dd3679, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@3cf49743, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@391e389, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@5ea2c26d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@3326e545, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@1d96be47, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@181ca0b0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@18ee961c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5a348be3, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@60c3c91c, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@39e250ef, 2, 5): success
test SubList.testModAdd(java.util.Vector@12f4ab80, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@565e3edf, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@5853d75, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5c8115bb, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@137a7861, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@4f22dc3c, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@74bba583, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@67c05ec8, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@69cbd830, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@6799b9bb, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@6863b199, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@157a76dc, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@1e300ea6, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@5541c474, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@742636a5, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6079b4ba, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@25d1072c, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@3670f34f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@475a7a20, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@67d69fff, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@66829a8c, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@ceb5df8, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@9957539, 2, 5): success
test SubList.testModClear(java.util.LinkedList@44153cfa, 2, 5): success
test SubList.testModClear(java.util.Vector@620ca136, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@265518d4, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@7051694b, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6560a1ae, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@72a31a95, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@15699940, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@6fa91aa2, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@623fa1d6, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@660a4967, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6e15e905, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@965cdd, 2, 5): success
test SubList.testModGet(java.util.LinkedList@6b74d4ac, 2, 5): success
test SubList.testModGet(java.util.Vector@315a0c15, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@3a30a904, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@1ef6c739, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@309b05e2, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@df767b6, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@d33fe13, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@1b66cd66, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@16dd052c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@40b1289f, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@5f505f53, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@4303d731, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@780256de, 2, 5): success
test SubList.testModHashCode(java.util.Vector@78d891b3, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@18291d9a, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@7aa246b6, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@6087cc6a, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@16bbc99d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@6e241caa, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@7d3cb2e8, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@707c31a2, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@46f5bbc9, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@74193bca, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@400ae16a, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@1f7a7095, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@26be62fa, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@2d3b7720, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@fb89ef7, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@5284b028, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@67cd53e1, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@36e6844a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@5e684294, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@3e95ee94, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@4b215111, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@79ed0c45, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@652763c2, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@28e1b797, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@3e51e8b7, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@68d5030f, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@ce3b5f4, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6b25a393, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@7081a6a8, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@5d3985ea, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@26b1637d, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@187e1655, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@2f4954e3, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@f199c2, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@4cca8bdb, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@68a5284, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@20c08f70, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@5a014705, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@24f70c81, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@23d3b0c2, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@7a36a0a9, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@60052d9f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@b0e62f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@61cf7b0d, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@480f057f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4a9e47c, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@28171ed6, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@7c30c2e8, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@37b633ad, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@5703afbc, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@4db44ae4, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5a78a232, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@37748226, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@5cb444b9, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@57a745be, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7a67b120, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@5fcc0908, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5948beb4, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@4352a9ed, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@4f04c117, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@37d3ef63, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@6c3126d7, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@64f2d178, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@267b5b04, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@ce1769a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@7d7b4d49, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@54e439e3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@567ba08d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@46f30d54, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5181d913, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@310ee679, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@36d30b4e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@2efc9dfd, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@24f62023, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@3a6105cb, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2bcca226, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@2a50b9c5, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@29f72c85, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@735cda2c, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2781586c, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@b185ac, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@c359069, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@7f3a7329, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@3853e11f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@61e0de24, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@55242d84, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@5f6c0a6, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@40ad6ce3, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1017b925, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@625919f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@35ef1c03, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@13f1e67c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@24501be3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@10d9b426, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@779738f5, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@166cafc9, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@2f5642e0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@5cada23d, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@64e9f6ee, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@18f2d0c3, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@65375ead, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@3b7e6050, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@3e0342ed, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@65770ddc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@559fff57, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@398f5cac, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@23972355, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@1181b2b6, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@4667acd5, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@4d3f3af3, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@6f60d19a, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@33502c89, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@18bbe301, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@4ee42c70, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@8ba27e8, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@8c7803c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@6d4e32ee, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@43318f69, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@5a7c43a1, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@58d1275f, 2, 5): success
test SubList.testModRemove(java.util.Vector@4dd11107, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@3cf67c71, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@42b251b7, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@867f672, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@2e5bcadb, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@7612f775, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@589f56ba, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@72071700, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@6a340930, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4c780298, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@74feae03, 2, 5): success
test SubList.testModSet(java.util.LinkedList@15f1f80, 2, 5): success
test SubList.testModSet(java.util.Vector@37a164ee, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@8ce4f0e, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@70ca85d7, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@5ca90ae5, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@34a0c9b3, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@2a1d0ee1, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@8a078e0, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4a50c961, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@51d801b, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@45bf3ec, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@6d6230ae, 2, 5): success
test SubList.testRemove(java.util.LinkedList@3b1eac28, 2, 5): success
test SubList.testRemove(java.util.Vector@5d738c99, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@394c873e, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@4a94badf, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@7dbf64b5, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@22da7a41, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@3fddada7, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@38bec6c6, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1477898561], 0, 1): success
test SubList.testSet([1414025786], 0, 1): success
test SubList.testSet([-2100403409], 0, 1): success
test SubList.testSet([-1885610217], 0, 1): success
test SubList.testSet([1828701157], 0, 1): success
test SubList.testSet([739282082], 0, 1): success
test SubList.testSet([1399607620], 0, 1): success
test SubList.testSet([172349824], 0, 1): success
test SubList.testSet([1317446970], 0, 1): success
test SubList.testSet(java.util.ArrayList@3f0faef0, 2, 5): success
test SubList.testSet(java.util.LinkedList@566dcbf8, 2, 5): success
test SubList.testSet(java.util.Vector@b592ee6, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@4c2f16d4, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@5c7a163e, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@3522a378, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@16742043, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@4bfe4f95, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@7ef8321d, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@143075eb, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@297639d2, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@4ba97253, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@537c9db3, 2, 5): success
test SubList.testSubList(java.util.LinkedList@82b1f03, 2, 5): success
test SubList.testSubList(java.util.Vector@657f3c19, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@6776563, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@525d112, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@4b9e34ad, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4c5c545c, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@78777d6f, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@64e8483e, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@55253dc4, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@79c45a9d, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@467973fa, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@7409eb7c, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4d15070e, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@278604cb, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@297b1c93, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@2a1aafca, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@24672b82, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@24672b82, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@39d2da5e, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@40c526dd, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@def7803, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@666d6abb, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@32153f37, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@75fb31f0, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@3fce0b7a, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@67d93ef7, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@2424e691, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@7826935b, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@7826935b, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@a14ed15, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@77b02dbe, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@6a7f085d, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@7a8c0981, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@3f51004f, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1d7e9747, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@4040314e, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@226abd32, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1cfa1a46, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@51edcd1a, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@51edcd1a, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@5ac6b5de, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@7aeab654, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@65af464c, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4e947e38, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@22bde59e, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@a8dc5b, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@48d653d1, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@1401ff74, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@16e2320, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@5db9660a, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@5db9660a, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@3d9fa695, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@3d2c8208, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@11c17089, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@63ffb5ec, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@6d14bb63, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2b898307, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1bf795ee, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@1a2a123a, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@299a2c44, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@641b34fb, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@641b34fb, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@2a2771a0, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@519e6eab, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@28e9a3d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6e07e3b, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@31a6d8da, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@70ce1750, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@66b44988, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@3c173eda, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@443254fa, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@650e8691, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@650e8691, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@3e7d0b3a, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@6f662744, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6787ec6e, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@270ed9fe, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@691b9b0b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@4a6a0dad, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3c2feb39, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@5e384af, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@59f4bb2d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@2123f087, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@2123f087, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@2ffb6c70, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@20a9e8d4, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@581e0980, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@364b7ce0, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@4c754f9d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6b986802, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@59020f39, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@15d809c4, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6f748d91, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@56dbd214, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@56dbd214, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@7eaecabb, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@232f07, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1e917dbb, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1ec7133d, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@72ec8bfa, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2acdf0a2, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@599747b4, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@1b3c3013, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@48b3d48, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@6e6db26, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1c12ae0a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@5e316318, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@da88c2b, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1f440866, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@3b6f975c, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@563a83dc, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@16a82d72, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@7ef00853, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@79c52613, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@22582273, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@22582273, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@35f5b8ba, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@3a49b7fd, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@46ae33d2, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@d308909, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
