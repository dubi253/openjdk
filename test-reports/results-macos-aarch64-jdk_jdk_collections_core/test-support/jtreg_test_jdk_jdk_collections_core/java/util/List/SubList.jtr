#Test Results (version 2)
#Thu Feb 29 23:15:29 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=172 0\:00\:00.172
end=Thu Feb 29 23\:15\:29 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 23\:15\:29 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=172
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 23:15:29 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 23:15:29 UTC 2024
elapsed time (seconds): 0.014
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:15:29 UTC 2024
Mode: agentvm
Agent id: 2
finished: Thu Feb 29 23:15:29 UTC 2024
elapsed time (seconds): 0.013
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 23:15:29 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 23:15:29 UTC 2024
elapsed time (seconds): 0.034
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:15:29 UTC 2024
Mode: agentvm
Agent id: 2
finished: Thu Feb 29 23:15:29 UTC 2024
elapsed time (seconds): 0.034
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 23:15:29 UTC 2024
Mode: agentvm
Agent id: 6
finished: Thu Feb 29 23:15:29 UTC 2024
elapsed time (seconds): 0.123
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91952)----------
Seed from RandomFactory = 6468746107927006843L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 460525982], 0, 1): success
test SubList.testAdd([42, -1981839468], 0, 1): success
test SubList.testAdd([42, -442698840], 0, 1): success
test SubList.testAdd([42, 2052776425], 0, 1): success
test SubList.testAdd([42, -1116360690], 0, 1): success
test SubList.testAdd([42, -1426293649], 0, 1): success
test SubList.testAdd([42, -802841043], 0, 1): success
test SubList.testAdd([42, -1662068230], 0, 1): success
test SubList.testAdd([42, 1285595027], 0, 1): success
test SubList.testAdd(java.util.ArrayList@8fba80d, 2, 5): success
test SubList.testAdd(java.util.LinkedList@6f057b44, 2, 5): success
test SubList.testAdd(java.util.Vector@3db335de, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@5b9be1d9, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@7de5ef81, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@6559b714, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@f9353e7, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@60db86c, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@fe153b2, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@68d12ed0, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@3630f60c, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@75e0b742, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-1459630105, 42], 0, 1): success
test SubList.testAddAtPos([-114969499, 42], 0, 1): success
test SubList.testAddAtPos([-87809669, 42], 0, 1): success
test SubList.testAddAtPos([-810081749, 42], 0, 1): success
test SubList.testAddAtPos([-1206072351, 42], 0, 1): success
test SubList.testAddAtPos([423039480, 42], 0, 1): success
test SubList.testAddAtPos([42, -1265978020], 0, 1): success
test SubList.testAddAtPos([42, -880277572], 0, 1): success
test SubList.testAddAtPos([42, 1365167080], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@3966bfc3, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@5718f5a3, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@27106f2c, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@50886593, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@7de13a29, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@47fc10df, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@896ef71, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@2117adb6, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@77eb5f07, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3c6a7d77, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@178b2cb6, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@38df6c38, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@73b25ffc, 2, 5): success
test SubList.testClear(java.util.LinkedList@26b0a34a, 2, 5): success
test SubList.testClear(java.util.Vector@90e08fa, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@72401d93, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@d1b5a62, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@2158ddca, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@3f2b3830, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@3ced62d7, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@1720623e, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@5421cd97, 2, 5): success
test SubList.testEquals(java.util.LinkedList@2f7b89c8, 2, 5): success
test SubList.testEquals(java.util.Vector@6efc5f5d, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@c51b0d0, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@6f569f98, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@2b4b3539, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7274f6c4, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@44015791, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@10a36998, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@62098fac, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@f965d6b, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5a0ee02d, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@2f77ad89, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@47a65945, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@34085c5d, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@7cdf66de, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@22babba2, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@7f2d0513, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@7f2d0513, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@329c41b7, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1d9d7ff7, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4141bf3c, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6473ea8d, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@207ffb52, 2, 5): success
test SubList.testGet(java.util.LinkedList@42e3e94e, 2, 5): success
test SubList.testGet(java.util.Vector@ade52bc, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@402440cb, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@49f33cd6, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@35601b3a, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@52cd182e, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@31efdb44, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@4d1e9fd6, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1b571997, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@123d8ec0, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@bffc631, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@2e4515f8, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1171e978, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@5c543f63, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@e4cf57c, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@ad95077, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@439974f8, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@439974f8, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@47dc9a15, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@43523538, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@498bb959, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@49213c8, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@2ea69be6, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@3e1d8ac2, 2, 5): success
test SubList.testIndexOf(java.util.Vector@40f468a8, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@3a956f8d, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@3eba79dc, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@225d9732, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@55e92d20, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@380894e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@21e967f9, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@388e70d6, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@413e9926, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2fbfbe8d, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@284a9954, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5c5410ba, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6acd1783, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@3448f849, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@53646a79, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@6471602c, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@6471602c, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@159594e, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@3500fa72, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1bf235e, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@6c0d6c84, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@193bb90, 2, 5): success
test SubList.testIterator(java.util.LinkedList@5f13f612, 2, 5): success
test SubList.testIterator(java.util.Vector@11d164ca, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@3c9c8da3, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@3b6058a7, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@658aee16, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@112d8bc1, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@20b499d, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5dce0f5d, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2a63f259, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@2045fe50, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@7bec094, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@65e7f002, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@22d1462e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5819ca9c, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@5d7f2264, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@55fa73fa, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@11b2a7be, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@11b2a7be, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@739280e2, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@39201daa, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@f5d2eb4, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@bbe8d16, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@6ff377a0, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@1078f019, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@2de9d54b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@38249f49, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@1d2c703b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@34c4fa03, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@5109a89e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@5d237119, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@3b15fefd, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@17c7dac8, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@38b6300, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2d0cfac2, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@562a321c, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1273707b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7c7e70a8, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@40214bee, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@2a29c7e0, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2869061f, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2869061f, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@79c539cf, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@4807a5, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@2d3bc5f8, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1007c5e4, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@5365d919, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@5e84b7a9, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@3843aaf0, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@114564a1, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@2d6496cf, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5a676063, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@ff907eb, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@654f1a07, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@35a3300b, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@451f1a53, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@19f6e73e, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@2b3d15e3, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@2f1699aa, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@103103a1, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@303055be, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7f8227c9, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@64613592, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@5db68a65, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@164415cf, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@6e406e21, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@344040, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@36542102, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@62d508cb, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7272d0c8, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@bc4712f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6981af66, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@8da3ea1, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@8da3ea1, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@5c48d849, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4664ee97, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@53369be0, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@41d84d77, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@6bf7da35, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@317729c2, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@3e3fa84d, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@5407743c, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@50272bda, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@40ff3f39, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@40ff3f39, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@655a6ddd, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@5703331f, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@281c0ebc, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@16d9f082, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@6d4845c9, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@3c9abab2, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@24664a5b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1f4a92df, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@7b32e257, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2194df67, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@22ee4809, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@54d09dd5, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5b0dffd3, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@1831a864, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@3d1128b8, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@1d481d3e, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@152b8445, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@3fb981f2, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@eabddf1, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@316c3462, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@7d081275, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@23eeb413, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@53aa3504, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@7c33b9b9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@70f922b2, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@3287e560, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@27b24104, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@5fa05ab, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@758afd02, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@124a257f, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@3e24d9e3, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@3e24d9e3, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@60f86ab1, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@6bbbabf6, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@542b7032, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4034c836, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@558747a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@3758917f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@16905c4, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@45a179af, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@14a37823, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@527a6481, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6b6aeef0, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@36e46099, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@5118e6b7, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@74716cac, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@7d3aed7e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@2710462f, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@40c41200, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@6ea33355, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@380e01de, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@4bce9980, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@950312a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@bb6879a, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([989282838], 0, 1): success
test SubList.testListIteratorSet([207523494], 0, 1): success
test SubList.testListIteratorSet([1306742562], 0, 1): success
test SubList.testListIteratorSet([904456850], 0, 1): success
test SubList.testListIteratorSet([1307983778], 0, 1): success
test SubList.testListIteratorSet([1955406561], 0, 1): success
test SubList.testListIteratorSet([-459815687], 0, 1): success
test SubList.testListIteratorSet([301526575], 0, 1): success
test SubList.testListIteratorSet([1024061855], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@10fa64ca, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@7004956a, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@61684062, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@58ad7d3c, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@646bf801, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6b460e6c, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@972d00d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@41dc200, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@3dd98ecd, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@14194ff5, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@61769356, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@35454da2, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1345882601], 0, 1): success
test SubList.testListIteratorSetPrevious([1526475292], 0, 1): success
test SubList.testListIteratorSetPrevious([1080595818], 0, 1): success
test SubList.testListIteratorSetPrevious([1731883674], 0, 1): success
test SubList.testListIteratorSetPrevious([2025769126], 0, 1): success
test SubList.testListIteratorSetPrevious([-1121091968], 0, 1): success
test SubList.testListIteratorSetPrevious([827970003], 0, 1): success
test SubList.testListIteratorSetPrevious([19236319], 0, 1): success
test SubList.testListIteratorSetPrevious([224247057], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@1db900d3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@76dcb71e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@230e121a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@3d8c707f, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@39aecd84, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@13c70693, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@2abfb8a8, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@78cea2fe, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@5e7b74c9, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@36f01412, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@dfd66f1, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@24e61b8a, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@4ebfd069, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@670f3153, 2, 5): success
test SubList.testModAdd(java.util.Vector@6ef905a7, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@1ca42cef, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@498490fd, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@ebdb55c, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3fdd3bed, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@76e4c7ee, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@689a57c1, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@292aac45, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@5db9ac8d, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5622399e, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@6d42dc66, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@4efc163a, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@2800f9d6, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@878cf3a, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@2134f551, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@139c0715, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@30eceed3, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@639f891, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@47cf28c1, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@c7b6aab, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@347b941e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@59084852, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@439cfe14, 2, 5): success
test SubList.testModClear(java.util.LinkedList@615d54ea, 2, 5): success
test SubList.testModClear(java.util.Vector@2b329372, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@a75090e, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@6fc5dce4, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6b46d1f7, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@61d9a50b, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@39746ddd, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@6618e216, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1e14a679, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@5aa0af01, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@44c08a2b, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@30d13012, 2, 5): success
test SubList.testModGet(java.util.LinkedList@30d2205, 2, 5): success
test SubList.testModGet(java.util.Vector@292537db, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@30a40d02, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@4e2fdcd0, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1ce86572, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@47c7e107, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@3169b420, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@4d37c515, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@73cf6876, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@33bbba8b, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6cbbda25, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@460d07aa, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@47afb4e1, 2, 5): success
test SubList.testModHashCode(java.util.Vector@9fcf1b6, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@455e9e44, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@18057556, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@37c52206, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@20bc4630, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@79e94868, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@29e24107, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@69369055, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@517535ea, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@2f5be036, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@2d20d735, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@68ce3db1, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@6d84c3a9, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@1523a903, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@2959ff74, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@6412ce79, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@3fe86ebb, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@29249fbb, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@6891ea99, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@10b21ad, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@74532fd0, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@5d55393b, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@178897e1, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@6597ac4b, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@127a5cb0, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@695bf5dc, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@1f4bcd00, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2f6ac3c2, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@15cb7f1c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@3c3eaa7c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@6aa84d1d, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7e4cb195, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@5d527d12, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3510a0c3, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@403b30b5, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@310affaa, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@eefd4d2, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@70c1cbf, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@272d137c, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4b715654, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@734b6dff, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@649497c8, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@61f8e1f7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@31224840, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@7c210366, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6b453517, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@77868c09, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@2b08c143, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@239add87, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@56bc172d, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@3c05a9fe, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2f9ee9e7, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@4626bd33, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@6bf38aae, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@222bd5f3, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3280bc9b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@26a9dce5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5b221764, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@3a24275f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@3042ad03, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@2a55c754, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@4453ca57, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@71def3c6, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@28948b52, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@74176131, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@75264d7e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@47388bfd, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5db363ca, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@1d145229, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@d928d33, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@1a9a7e36, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@5a572b78, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@74b72826, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@503aae52, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@cd6fed0, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@102a2426, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@2b3546b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@6cb64e36, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@d80171b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1c8f6286, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@442938cc, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@532bd2b8, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@367dfff2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@4c4e541b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@4d153494, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@737721e2, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@75d2c1f7, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@48e635d7, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@5c7fb93, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@5de11039, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4b0bd941, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3c43b38f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@de5fe8a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@750633ab, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@4d27f9c7, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@c75f360, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@33fe68f4, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@4f1e5c01, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@642fbb32, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2f29b0ab, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@24f6b38e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@455d0a3, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@6308fe47, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@73122bd3, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@3f1d4a75, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@45070a16, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@6cac3fc2, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@61b3d475, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@57fce73b, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@90c80fe, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@7f10dcb4, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7b6de298, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@6418379c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@3a6a1311, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@27280139, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@59c81342, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@77ff80f1, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5eb11e7e, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@401de367, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@78ae6cd5, 2, 5): success
test SubList.testModRemove(java.util.Vector@17641053, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@76393718, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@162b3c1d, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@d6362ac, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@31d930e5, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@7d2ec053, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@12c556b8, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@77eba6d, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@4dcf0cd0, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@7df46ae9, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@5a7d8938, 2, 5): success
test SubList.testModSet(java.util.LinkedList@3568f4fe, 2, 5): success
test SubList.testModSet(java.util.Vector@566ee98c, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@5887312e, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@7daba9c6, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@617fd8ea, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@5d44fcc5, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@464bdf8a, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@4d9a004f, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@6bc1b90d, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@52a7da40, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@33dab0bc, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@38148f5b, 2, 5): success
test SubList.testRemove(java.util.LinkedList@1a51ca38, 2, 5): success
test SubList.testRemove(java.util.Vector@4d3a8ead, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@6515b2a5, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@773dea2b, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1ce4fd35, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@3758481d, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@3f1dc389, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@10c5e31, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([899307023], 0, 1): success
test SubList.testSet([1565635886], 0, 1): success
test SubList.testSet([1095354120], 0, 1): success
test SubList.testSet([1249568523], 0, 1): success
test SubList.testSet([53481645], 0, 1): success
test SubList.testSet([-10320914], 0, 1): success
test SubList.testSet([-318869098], 0, 1): success
test SubList.testSet([-1288086729], 0, 1): success
test SubList.testSet([412873833], 0, 1): success
test SubList.testSet(java.util.ArrayList@6569adf, 2, 5): success
test SubList.testSet(java.util.LinkedList@549d11c4, 2, 5): success
test SubList.testSet(java.util.Vector@51bcabad, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@8c20398, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@2da3cbec, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@68eaa851, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@75a843e1, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@5ddcfee0, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@142645a3, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@58132f9, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@35f77e64, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1c55d3f, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@44eb53f1, 2, 5): success
test SubList.testSubList(java.util.LinkedList@23bf23c1, 2, 5): success
test SubList.testSubList(java.util.Vector@3234fb5a, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@7b4a20ce, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@303ea68c, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@363550b3, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@7d8bad3d, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@670f9c43, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@5ca15127, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@23ca4634, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@167ac731, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3ed2b23b, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@3e229061, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@533208d9, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@533e6e37, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@2b26fd4b, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@3b1a0aed, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@6a5db16, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@6a5db16, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@488c6f7a, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@32db4bb2, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@7e04cd4b, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3d180c9a, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@10b0f85c, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@73e4b00, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1fed19d3, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@17ccda1, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@3f37994a, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@50baecb8, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@50baecb8, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@7656ef15, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@3c9e92f2, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@5c208308, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@157cceca, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@13f69e10, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6f19f0bd, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@4374fc14, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@1f3f6d39, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@7452c3b7, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@21792906, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@21792906, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@75e07b1b, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@426c7de, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@145a4fd0, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@717323ec, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@3d05c921, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@205c1da7, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@6efa035d, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@32196d13, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@23c926fc, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@1cf6684a, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@1cf6684a, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@c5a6472, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2a234bd, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@15abff8e, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@2a9e1d41, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@5a60ae18, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@33e1a5, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@52b00367, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@4fbf4741, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@26ff7598, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1be40bcb, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1be40bcb, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@513a8334, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@47397745, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@50e64b2d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6d6796a5, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@34163db1, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@edd93bd, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@335cc6ac, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@2ce507a4, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6c0c46aa, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@4fdb270f, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@4fdb270f, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@64759fee, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@168f2358, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3349583, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1f443bc6, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@4035a45f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1e8b97b2, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@50b195d9, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@744aec18, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@557ef49d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1b0c55e9, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1b0c55e9, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@30d4d3d7, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3c3887e0, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@64667cd6, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@26f41f76, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@67f7be5b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@11a40511, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1b474130, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@2c6b32fa, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1dcf40be, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@24bef51d, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@24bef51d, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@65af2fad, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1fd71f6e, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@27da331c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@679c3e14, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@6d5f363, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2b558f5b, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6ba42a0f, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@57ba0a17, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@ed8166f, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@2bc67ce0, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@671ac49c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@326aab38, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@664ee237, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@62f53767, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@7c0c0975, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@6e3567a7, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@69ffbc3f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@655f03f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@14d21514, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@3a1ae33d, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@3a1ae33d, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@3d26c986, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@5a2678dd, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@a56718d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@75b18d7f, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
