#Test Results (version 2)
#Fri Mar 01 18:33:36 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=233 0\:00\:00.233
end=Fri Mar 01 18\:33\:36 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.23
javatestOS=Mac OS X 14.3.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 18\:33\:36 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.3.1,family\:mac,simple_arch\:aarch64,simple_version\:14.3,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.3.1
totalTime=234
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 18:33:36 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 18:33:36 UTC 2024
elapsed time (seconds): 0.014
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 18:33:36 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 18:33:36 UTC 2024
elapsed time (seconds): 0.014
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 18:33:36 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 18:33:36 UTC 2024
elapsed time (seconds): 0.041
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 18:33:36 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 18:33:36 UTC 2024
elapsed time (seconds): 0.041
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 18:33:36 UTC 2024
Mode: agentvm
Agent id: 6
finished: Fri Mar 01 18:33:36 UTC 2024
elapsed time (seconds): 0.177
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91953)----------
Seed from RandomFactory = 6560488245959892662L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 467309190], 0, 1): success
test SubList.testAdd([42, 325747452], 0, 1): success
test SubList.testAdd([42, -1190286397], 0, 1): success
test SubList.testAdd([42, -827907967], 0, 1): success
test SubList.testAdd([42, 551002973], 0, 1): success
test SubList.testAdd([42, -454379998], 0, 1): success
test SubList.testAdd([42, -2027148894], 0, 1): success
test SubList.testAdd([42, -154854105], 0, 1): success
test SubList.testAdd([42, -1899835697], 0, 1): success
test SubList.testAdd(java.util.ArrayList@772dc561, 2, 5): success
test SubList.testAdd(java.util.LinkedList@457380f9, 2, 5): success
test SubList.testAdd(java.util.Vector@3ac389c6, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@134e9ac, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@66b2e729, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@5612c273, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@2925471a, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@70d2f48e, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@50f4a133, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1a169923, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@6d78001f, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@5ecd944, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([1810339866, 42], 0, 1): success
test SubList.testAddAtPos([42, -1075444140], 0, 1): success
test SubList.testAddAtPos([42, 1426206225], 0, 1): success
test SubList.testAddAtPos([1640982460, 42], 0, 1): success
test SubList.testAddAtPos([355948171, 42], 0, 1): success
test SubList.testAddAtPos([42, -1864912726], 0, 1): success
test SubList.testAddAtPos([42, 246881535], 0, 1): success
test SubList.testAddAtPos([42, 275365128], 0, 1): success
test SubList.testAddAtPos([-1197707102, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@c4c5805, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@5ced5896, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@6c9c545f, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@5af9a7a6, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@238396c9, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6b33390b, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@61b39a40, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@6c8817bf, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@4ece9a0, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3a96660f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@20b71603, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@428816b0, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@3893201c, 2, 5): success
test SubList.testClear(java.util.LinkedList@539ce31, 2, 5): success
test SubList.testClear(java.util.Vector@bcd4d97, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@3e454494, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@40a67ec4, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1ea190ea, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@7eee85fe, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@4682904b, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@2db3d140, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@4d269551, 2, 5): success
test SubList.testEquals(java.util.LinkedList@5b49eca6, 2, 5): success
test SubList.testEquals(java.util.Vector@18ef7e51, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@2f163699, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@7adddb45, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@290edd68, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@3d20171c, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@413439aa, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@4aa0410d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@464f74ec, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@50f4eb15, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7c619cf8, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@3b9792e0, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@21ca50af, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6ba62253, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@6acfae51, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@7813a5bc, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@14615c8, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@14615c8, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1125ec71, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5fb78444, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@dc25ab, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@210afdd4, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@5927a40c, 2, 5): success
test SubList.testGet(java.util.LinkedList@41c40a0, 2, 5): success
test SubList.testGet(java.util.Vector@3a0d8c51, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@4a41f7bf, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@3098b146, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2c9852f2, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@31003513, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@3b47aacd, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@72b3dbe8, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@128eed5e, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@62094c70, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5a2afde9, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@2c6f873c, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@7ff63adb, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@79656e2b, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@6750e383, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1a6a63fb, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@44296be8, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@44296be8, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@22cdb396, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@2f27432d, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@ea77270, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@11e218bd, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@70c6a710, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@2229bcb6, 2, 5): success
test SubList.testIndexOf(java.util.Vector@2391c6be, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@2105cc47, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@3a8a9ba0, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4b13c529, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@2af89e6b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@6182c77e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@41be8e5a, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@69701a7a, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@29175b77, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2a361959, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@78d7b556, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1d422008, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4441ec26, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@57e8daa7, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@162c5128, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@8c99142, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@8c99142, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@3d3abb48, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@fac5586, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@486ebb81, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@37dd0e0b, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@5cf1e92b, 2, 5): success
test SubList.testIterator(java.util.LinkedList@5264ec01, 2, 5): success
test SubList.testIterator(java.util.Vector@271e7cf1, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@31dbed97, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@3a0302ca, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@404bda50, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@7cdcf2d4, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@5d1ce34b, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@45515219, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@652d1ebb, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@76f57d44, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@29264db0, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@7bcdb50e, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@bc85563, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@dda7edb, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@4260cb7c, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5ecd28e7, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@302db5c2, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@302db5c2, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@112c93f4, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@7ad2ec30, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5ccaa688, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@68022a57, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@1f6bbd2a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@3b6674a4, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@10e286e6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@2059cdf1, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@6174d430, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@35fc9d9a, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@3a5df527, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@17ee9c91, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@44599ef8, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1feb3524, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@43c8c3e2, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@68029677, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@3edcf1b6, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4a5b226b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@b94d821, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@25940d8a, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@26b877f, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@493bd302, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@493bd302, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@3057c358, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@2f577894, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@2e3351ca, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@c16f66, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@57dd9996, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@68ad4778, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@2f6ce2d6, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@30151532, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@c6efc35, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@64ecc8c5, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7e0e5bc2, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@47228fca, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1a55148a, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@372a284e, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@726207e1, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@7c15bac7, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@14bb375f, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@3382043, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1b7e5860, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@58f7d915, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@73b2dbf5, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7141f78b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3f6853cd, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@13f9007c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@367ae872, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@678eac72, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@405900dc, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@32e3fa59, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@18d2e6d0, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@514002b2, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@7abb85a8, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@7abb85a8, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@170ca49f, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@48bedbc8, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7898df76, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1004c793, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@28cb3268, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@4983b617, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@60414742, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@40f73f0, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@271bc28, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@8dab347, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@8dab347, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@75f16ea0, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@1d7f8aba, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@3a14f08b, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@16a0102d, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@1196aef1, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@688f7bf, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@24827ac1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7ccb5eeb, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@76ba1da9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@16c69c67, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@387f7408, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@4ff59fc3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@61a3833e, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@7fd99c15, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@5b9a57e9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@7cab4cb3, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@3fc38310, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@5c0c8b4d, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@34a92be9, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@528eacd6, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@374482b5, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7a208e3a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5b6ce12c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@3009654, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@356656d, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@2ee1189, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@16422e5c, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3462ddcf, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@4265fe77, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@145706fd, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@4c61860f, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@4c61860f, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@727b71a5, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1913927f, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6ee8531, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@67e501b6, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@238a9139, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@46b080f3, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@71b593eb, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@34ee1441, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@26e6f5ee, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@55fee0f4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6957a386, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@6fca6637, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@38de363f, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@a2aa594, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@2310b5c5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@4eb3f8fd, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@612fc4fb, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@113ca46f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@196bf7a3, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@615b2979, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@46ca5725, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6c834f05, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([357784973], 0, 1): success
test SubList.testListIteratorSet([1152427422], 0, 1): success
test SubList.testListIteratorSet([454328974], 0, 1): success
test SubList.testListIteratorSet([1790369431], 0, 1): success
test SubList.testListIteratorSet([-1480473215], 0, 1): success
test SubList.testListIteratorSet([1544275034], 0, 1): success
test SubList.testListIteratorSet([1950632282], 0, 1): success
test SubList.testListIteratorSet([-20181804], 0, 1): success
test SubList.testListIteratorSet([1335891627], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@13f2f12a, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@2a93327a, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@1d9868f8, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@39c7e472, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@438f332d, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6f0ed8f4, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@3afd8f82, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@28644015, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@70fbbb8d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6c0aa383, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@2e570ed, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7c749f23, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1618344989], 0, 1): success
test SubList.testListIteratorSetPrevious([267926254], 0, 1): success
test SubList.testListIteratorSetPrevious([2099832971], 0, 1): success
test SubList.testListIteratorSetPrevious([953577742], 0, 1): success
test SubList.testListIteratorSetPrevious([-1183660792], 0, 1): success
test SubList.testListIteratorSetPrevious([-1688339680], 0, 1): success
test SubList.testListIteratorSetPrevious([1871296014], 0, 1): success
test SubList.testListIteratorSetPrevious([-351827686], 0, 1): success
test SubList.testListIteratorSetPrevious([-224749149], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@5cd9be73, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@53bf066b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@1c39f373, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@59750d1c, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@10687f81, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@539835d, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@581ef1f3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@4e975342, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@22a892a5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@391f2305, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@61b07a5a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5fca9e8f, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@3f609475, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@4424e06d, 2, 5): success
test SubList.testModAdd(java.util.Vector@5b47a9c0, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@5a933ca7, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@268dce34, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@60c98c85, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@7b7e2a90, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@13152747, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@7f6c32b3, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5b3fc02e, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@5565803c, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4680245a, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@1a109287, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@33fbdde4, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@723e1eb5, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@390a36f, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@4cd8c69d, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6e255983, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@2783d2c6, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@4b8fe226, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@776d033f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5e20fd3c, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@2530e3, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@66647955, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@59acef1b, 2, 5): success
test SubList.testModClear(java.util.LinkedList@52be1b05, 2, 5): success
test SubList.testModClear(java.util.Vector@162d51c3, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@51352280, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@3887bddf, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@38992784, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@3bd5122b, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@be145e6, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@6f33ae88, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@3bdd0bec, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@102e31c0, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6cfbb9d5, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@63f3df72, 2, 5): success
test SubList.testModGet(java.util.LinkedList@45c18f3, 2, 5): success
test SubList.testModGet(java.util.Vector@5e7a1125, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@7634b5e2, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@218c7225, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@3da6842a, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@5dc44d40, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@4f827950, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@77413e9a, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@ced4e71, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@7c5c043b, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@5ec556f, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@1de76994, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@4f71d5bd, 2, 5): success
test SubList.testModHashCode(java.util.Vector@6eaa3e14, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@2ea81192, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@63b2eb27, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@4de2d11e, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@5cee9f63, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@6794431d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@6a69cab2, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@3bec8814, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@7fc09656, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7346aef2, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@22935366, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@234dda00, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@54ce2e3c, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@4a60fac7, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@71df5baf, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@3e79056f, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@484e6089, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@5ef0962d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@1c74567e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4b57592b, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@7ba475d5, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7c576291, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@5c2a4bce, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@8a3d741, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@7648677f, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@7c29cd0, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@5b6324c7, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3321fdf2, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@31ecfb0e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@1b17f44d, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@63d52cd8, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4a35db3a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@9dd409a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@24c1f431, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@71ae5e75, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@65d924e6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@50a4aa68, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@30f3496f, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@46d4c9a6, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7d768bbf, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@18ce1d34, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@267f8fef, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@dd733ed, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@56c745d6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@42ad69b8, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4f4eb5b1, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@6b6d6186, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@73ccb22b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@401445a, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@2cff758f, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@25157e44, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6e91aa5b, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@d4af53e, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@78f6f704, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@3b971f98, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5d43125b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@48bf639d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@ba17d94, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@4416519b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@5c43b9cd, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@78b7fa75, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@2032c856, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@36def27c, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@153065b2, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4b0deda4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@4daf57ed, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6ef1040e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@272ae299, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@264ec790, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@280934b7, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@b27188a, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@7b60eb74, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@b436975, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@667147f7, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@50f14958, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@176a3b7d, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@412926d9, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@388146e5, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@6b3ed049, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@16dfb8a8, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@21952d5a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@35650ae6, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@a430571, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@74cf92d2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@65124e5d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@31ed6063, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@748aa7cf, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@763eeecc, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@3f54d65d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@418232f7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4bdbcb73, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4afe558, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@63a6ef56, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1f30904e, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@5babfab0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@500de105, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@7d08ee30, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@589905a8, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@c681631, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@65ba22b7, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@475729aa, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@70be6815, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@167bb6b8, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7be0b8b8, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@262fd6df, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4cb63690, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@54293370, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@154d6a1f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@21fd9a54, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@21717e4b, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@4409385f, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@26ab1ddd, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@7bb65b89, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@1cdf9a82, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@210ee550, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@27529ca, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@50a0224d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6c9de426, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@4828f5cd, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@78e41f21, 2, 5): success
test SubList.testModRemove(java.util.Vector@239c1955, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@64704d65, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@291dd8b, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@573ed376, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@3bb9fb63, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@3608fae5, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@358db4b6, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@3229fd77, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@723224d8, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@73371235, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@1a08dae6, 2, 5): success
test SubList.testModSet(java.util.LinkedList@5135a08a, 2, 5): success
test SubList.testModSet(java.util.Vector@53e078da, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@35635e2a, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@7082cc4c, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@621f7407, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@65e2b59, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@450ca492, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@11592985, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3f17409b, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@57d77df6, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3745a424, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@777301bc, 2, 5): success
test SubList.testRemove(java.util.LinkedList@f76376c, 2, 5): success
test SubList.testRemove(java.util.Vector@6a5db03e, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@74568bfd, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@22464ef1, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@278bcab2, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@49e0a773, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@42918599, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@5d4fcafb, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1613538380], 0, 1): success
test SubList.testSet([-1542871380], 0, 1): success
test SubList.testSet([757848237], 0, 1): success
test SubList.testSet([-1745676477], 0, 1): success
test SubList.testSet([-11130695], 0, 1): success
test SubList.testSet([-38432928], 0, 1): success
test SubList.testSet([-774261168], 0, 1): success
test SubList.testSet([1030994193], 0, 1): success
test SubList.testSet([594174895], 0, 1): success
test SubList.testSet(java.util.ArrayList@490bba07, 2, 5): success
test SubList.testSet(java.util.LinkedList@5e1401c9, 2, 5): success
test SubList.testSet(java.util.Vector@21779120, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@5a1182bb, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@34c9e531, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@68c98fc2, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@6e78fd39, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@2a27b35b, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@de459eb, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@3086e2c8, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@5cd6debd, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1d2b105f, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@ff01a7d, 2, 5): success
test SubList.testSubList(java.util.LinkedList@546b0a22, 2, 5): success
test SubList.testSubList(java.util.Vector@1d2e42f7, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@2d23c49a, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@44f8ddaf, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@79532e12, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@206fc699, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@339ea0b7, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@c1415df, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@701550ec, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@49a47dd, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@2ec68a1c, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@6be964d3, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@20d5e230, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1eeec2a0, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@4448da9c, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@7a9f86de, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@2eb2104d, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@2eb2104d, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@30ef3e4a, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@427966f7, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@668eff65, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6a2eedf2, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@33b2238b, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@31425926, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@52fa6220, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@635b0180, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5cff7b9, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@6d7b9537, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@6d7b9537, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@4b0b6f79, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@57d11be9, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@59d4f67d, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@381b159f, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@3f3c9929, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1572f53b, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@66d90d37, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@6673d8f, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@96c1d6, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@a5d6967, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@a5d6967, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@2754d5a4, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@a401aaa, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@111bc820, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@41ce4ab7, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@204d6050, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@41c26459, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@314509dc, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@350fd6f1, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1079b0d2, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@a8643c8, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@a8643c8, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@5c820e5, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1a39cbe4, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@4c43437, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@28ba01b5, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@624c876d, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@41dfdb43, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4c98b488, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@4bb85fbb, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@77497b0e, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@56506fcc, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@56506fcc, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@5dc4bbb7, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@2f266b14, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@16d7dd57, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7ef0262d, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@db0df2a, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@37819998, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@5eefc8c9, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@6d64c91d, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6bc6486d, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@7afc92df, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@7afc92df, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@53af7955, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@5c743fbd, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2d6c3c3, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@69f3833d, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@61b53e15, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@74bf75d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@35b3b67e, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@254e3b03, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@737f0943, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@4ffcdfeb, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@4ffcdfeb, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@63ae2544, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@917db91, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@53c49cd6, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@b3932fc, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@4c38eb4e, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@44020efa, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@15b20233, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@3b080d9b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2e28371a, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@450d04be, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@450d04be, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@3dc9edd1, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@67f13cf3, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@6cbf21a0, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@73cb46c2, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@7737cc3d, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@60121f09, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5ebe7eb6, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@637442eb, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@c552b28, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@577252e9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@73c7a955, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@6d3d5ce2, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@679ab9e, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@d89a5d3, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@79025aaa, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@29dfa1ea, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@66a03017, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@45b7fd17, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@7b019736, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@6fd1454, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@6fd1454, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@649fe1f0, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@1071ec58, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@11a5379d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@74498328, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
