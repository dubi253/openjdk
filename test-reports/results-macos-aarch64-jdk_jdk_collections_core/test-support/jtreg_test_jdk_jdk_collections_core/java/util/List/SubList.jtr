#Test Results (version 2)
#Mon Apr 29 00:25:46 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=205 0\:00\:00.205
end=Mon Apr 29 00\:25\:46 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.8
javatestOS=Mac OS X 14.4.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Mon Apr 29 00\:25\:46 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.4.1,family\:mac,simple_arch\:aarch64,simple_version\:14.4,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.4.1
totalTime=205
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Mon Apr 29 00:25:46 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Mon Apr 29 00:25:46 UTC 2024
elapsed time (seconds): 0.015
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:25:46 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:25:46 UTC 2024
elapsed time (seconds): 0.015
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Mon Apr 29 00:25:46 UTC 2024
Test directory:
  compile: SubList
finished: Mon Apr 29 00:25:46 UTC 2024
elapsed time (seconds): 0.038
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:25:46 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:25:46 UTC 2024
elapsed time (seconds): 0.038
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/207)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Mon Apr 29 00:25:46 UTC 2024
Mode: agentvm
Agent id: 3
finished: Mon Apr 29 00:25:46 UTC 2024
elapsed time (seconds): 0.15
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91977)----------
Seed from RandomFactory = -8267489914992952757L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1112560163], 0, 1): success
test SubList.testAdd([42, 536713960], 0, 1): success
test SubList.testAdd([42, -247946138], 0, 1): success
test SubList.testAdd([42, 1642546274], 0, 1): success
test SubList.testAdd([42, 2121348604], 0, 1): success
test SubList.testAdd([42, -1958383673], 0, 1): success
test SubList.testAdd([42, -392404905], 0, 1): success
test SubList.testAdd([42, -2009715425], 0, 1): success
test SubList.testAdd([42, 1029168963], 0, 1): success
test SubList.testAdd(java.util.ArrayList@6cb9f0ad, 2, 5): success
test SubList.testAdd(java.util.LinkedList@1bb462d2, 2, 5): success
test SubList.testAdd(java.util.Vector@5c017567, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@4eb89414, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@10a75fe5, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7a20407d, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@421b3692, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@5903bb4e, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@625e8386, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@46dec404, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@7d618b6e, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@51467954, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 2009926708], 0, 1): success
test SubList.testAddAtPos([-1077397551, 42], 0, 1): success
test SubList.testAddAtPos([42, -1998817567], 0, 1): success
test SubList.testAddAtPos([42, -1791471094], 0, 1): success
test SubList.testAddAtPos([-1791770453, 42], 0, 1): success
test SubList.testAddAtPos([1081993036, 42], 0, 1): success
test SubList.testAddAtPos([1015836773, 42], 0, 1): success
test SubList.testAddAtPos([42, -614792963], 0, 1): success
test SubList.testAddAtPos([1937501356, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@10684a1e, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@7bd9bb82, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@29cf4527, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@ba0e82, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@6388d79, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2d671e81, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@52a2ea09, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@74e3dc95, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@3e19b992, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1ff32a88, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@60c54d7b, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@61c3b7a0, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@63d268a1, 2, 5): success
test SubList.testClear(java.util.LinkedList@cee4b7a, 2, 5): success
test SubList.testClear(java.util.Vector@797013f7, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@60e120e7, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@191ba0a7, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@12dddb12, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@7bcee83c, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@6ddbafad, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@7d1f0181, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@2419fc4b, 2, 5): success
test SubList.testEquals(java.util.LinkedList@10e357ff, 2, 5): success
test SubList.testEquals(java.util.Vector@4fabb27a, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@ddced59, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@64fe22cb, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@590898e4, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@19c44ad4, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@17be0982, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6ea3d641, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@604f4791, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@1002f081, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5804cfc7, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@6734c0e1, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6570d835, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6ee027bb, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@29365dbe, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@73ceb95e, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@609e1e76, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@609e1e76, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1e599156, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@44ac3c9f, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1245e4e8, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1b2a2a1f, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@146462c, 2, 5): success
test SubList.testGet(java.util.LinkedList@4467c4ff, 2, 5): success
test SubList.testGet(java.util.Vector@60461a43, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@47212679, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@56afba31, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7f67bc58, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@b6331c8, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@2243df7e, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@23d7b876, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5e440b35, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@308154da, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@28455754, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@35a19ce9, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@13209b61, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3be4c1bf, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@6431220b, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@2b91a534, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@6b6a9411, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@6b6a9411, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@7e73a775, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@2a397615, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@13534ba8, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@3a3f5b, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@78c40808, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@44568715, 2, 5): success
test SubList.testIndexOf(java.util.Vector@2ed694a9, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@732f207b, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@4d5926a3, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4fcf8248, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@18dde019, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@24260ae9, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@620075ca, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@21c67fc8, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@17036b4, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@3c80331d, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@70720ca0, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2f3be8b5, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2c118b03, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@5ae64008, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@525c726a, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@22b5c4c3, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@22b5c4c3, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@5674b032, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@18c7e283, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@52909897, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@70258848, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@2f02a5fa, 2, 5): success
test SubList.testIterator(java.util.LinkedList@41e87b1a, 2, 5): success
test SubList.testIterator(java.util.Vector@30992600, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@20f3657a, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@20aa1aac, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@36718525, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4bfc2850, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@6b5c3fe1, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@634e73cb, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@4efc7f90, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@441c0110, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@291ab54, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@4c14e9a3, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1bc63511, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2a793356, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@755bbb4d, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@428a026f, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@4cfe851e, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@4cfe851e, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@ead7a13, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@2601aa92, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@27484199, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@24188d39, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@65a3fd5d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@1bddd799, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@345060e3, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@189ada4, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@61f64da6, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@37b412b6, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@148a9a4, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@e5d964c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1ae584ec, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@39f1733e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@71c74dd0, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@7bd6fb26, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@44008a6a, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@30486e4f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@2952bfa3, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@5e02766b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4deaee27, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@7ac50d34, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@7ac50d34, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@3684bcc, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@66d5f0fa, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@5cdad7e5, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@76e564e9, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@566c1271, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@223fc14a, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@5f71481b, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@188016bc, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@550e3db, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@69937e8f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@761f1a53, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@afe98f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@61d9c8a8, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@336919a5, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@7982273, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@14c7bce9, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@6611e8b0, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@610a41a5, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4e469f8c, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@2940c122, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@293ca2c2, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@39741058, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@413411ef, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@5a182484, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@22485636, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@5609189f, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2fd80bec, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@e212221, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@328e150f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5d417100, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@2a521c3a, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@2a521c3a, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@56de8608, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@5818ca35, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@316934cb, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7c230011, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@1bd565a0, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6327fda2, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@14f6cfea, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@39b2bf49, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@333e474f, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@2d0b8531, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@2d0b8531, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@7cf8a55d, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@218c12b9, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@1e7419d4, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@e793116, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@3b2aff8f, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@7d9b647d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@58d7b174, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@355fc8a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@3d6d0e00, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6aa66dc2, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@450346ce, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1f57a9e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@14a01af7, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@401057a5, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@4fa1e8dc, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@38efd9b1, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@3277f46d, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@ec875a1, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@719cd1ff, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@144ab547, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@53ef52b5, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5ed5ffc5, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@68f5800a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@226f0908, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@174ac781, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@307cbbc2, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3e6aa43c, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@56c1a44, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@217f7df5, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@42ebdab0, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@18ef5e75, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@18ef5e75, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@2ec187a1, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@654102ff, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@199a8fec, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@43eef552, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@18eb54cb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@27d374a3, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@664bf292, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@79821f6f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@2567f682, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@5fa069ab, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@2e399ee8, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@4706b6ef, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@140315d3, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@74d393a0, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@29a73d28, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@32c231f5, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1bd44ff, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@536b005d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@5dad637f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1a298879, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@78be8713, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@67df9347, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([95880140], 0, 1): success
test SubList.testListIteratorSet([683829622], 0, 1): success
test SubList.testListIteratorSet([-2122003898], 0, 1): success
test SubList.testListIteratorSet([606385831], 0, 1): success
test SubList.testListIteratorSet([762085280], 0, 1): success
test SubList.testListIteratorSet([-1929097413], 0, 1): success
test SubList.testListIteratorSet([1660564782], 0, 1): success
test SubList.testListIteratorSet([-1756269824], 0, 1): success
test SubList.testListIteratorSet([584498522], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@6a81e0b9, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@30b00d16, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@2646dae1, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@607f343d, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@851f1c1, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7b375e9b, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@61adc502, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@403e9d59, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@6f7119d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@558f33c1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@8d7bbdb, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@386eb46f, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([695462642], 0, 1): success
test SubList.testListIteratorSetPrevious([-1601850969], 0, 1): success
test SubList.testListIteratorSetPrevious([-1729616849], 0, 1): success
test SubList.testListIteratorSetPrevious([-1693456428], 0, 1): success
test SubList.testListIteratorSetPrevious([-491529483], 0, 1): success
test SubList.testListIteratorSetPrevious([1498476173], 0, 1): success
test SubList.testListIteratorSetPrevious([275788709], 0, 1): success
test SubList.testListIteratorSetPrevious([-15119118], 0, 1): success
test SubList.testListIteratorSetPrevious([1490372423], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@11a871d5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@1155bab9, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@34fcc051, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@7a7d673b, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@f62929b, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@545515b6, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@63a36c28, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@5dd17b91, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@2b54fa7d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7547374c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@5a71867e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@53f3672b, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@9ec3083, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@30b4ec95, 2, 5): success
test SubList.testModAdd(java.util.Vector@7f521291, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@51eb00d0, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@3b934871, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@109f5704, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3527eca7, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@1f9af540, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3653cbd1, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@36e87f86, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@7861b522, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@76c473cf, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@3e88498, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@3a9f1e78, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@4cd165e2, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@35683e09, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@2e355283, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@194eda73, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@12c96117, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@1a8a775, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@2aee0d63, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@53f2fd22, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@4a46def9, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@329d9409, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@9f955e6, 2, 5): success
test SubList.testModClear(java.util.LinkedList@4ff34ef8, 2, 5): success
test SubList.testModClear(java.util.Vector@4ae9780d, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@1eb1877a, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@745b48ec, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@294f5bc4, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@699a7c14, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@3d04444a, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@26823fa, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@46d50eb2, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@7924062e, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@2f8052f1, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@834b261, 2, 5): success
test SubList.testModGet(java.util.LinkedList@2ca85000, 2, 5): success
test SubList.testModGet(java.util.Vector@39c3fb0d, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@63594d55, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@1e54b96e, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4380cff5, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@90b97c4, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@76318634, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@6f8bec8d, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@7e572a0c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@2bcb1aef, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@ae4772, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@714310ff, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@33275c60, 2, 5): success
test SubList.testModHashCode(java.util.Vector@5e056490, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@1273f13, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@1ddf1fe, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@64bc6f7e, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@37e40044, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@3499e5f7, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@38ef74bb, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@3dde51f0, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@242adc53, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@30683263, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@52d296f8, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@eb97d0d, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@19d86d31, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@1a0bed08, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@45352cc3, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@223944ea, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@22eba4e7, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@51ac71a5, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@46f5a413, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1eb504b9, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@7bd943ef, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@520805c4, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@75168ebf, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@5df68238, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@327fbb7, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@778ebb11, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@26112d66, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3ab6e374, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@33ac2ec9, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@1248fcfd, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@163e5002, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1cfa2812, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@b44e32b, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@b28fc3b, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@18cbcd48, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@7b2aa45e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@5df9c94e, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@40be5746, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@3fdb4f77, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@23efeb67, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@3027e101, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@31987580, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@7efbec89, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@615cf305, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@68b3501c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@282961a2, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@4790e17f, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@788e066d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@219cc3da, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@2b13254f, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@37267911, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@110e9a9d, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@7ade1b98, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@13bfe281, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@470032c1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5f166cba, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@13d5225a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@45fc8552, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@42fc3826, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@26cb76f2, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@64e2f655, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@6d90c3be, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@3fb2927a, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4e82681e, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@257620c7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@7b1fa5aa, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3faff87, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@24307890, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@13b2db5c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@333ecc83, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@643df046, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@21752d12, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@129be89d, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@487baf51, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@6002163b, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@457778bd, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1e6f0c4b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@2aac8e1c, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@41053d74, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5e939ed5, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@62ab5d7d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@39e1ef12, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@3d2858cd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@4f2c36c0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@4a86cd24, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@2e4dfff0, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@5fef9da9, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@54b7b371, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@30f53b8d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@6fa0400f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@42043aee, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@33ce141, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@191bf27a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@18f8d168, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@6a350add, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@541add05, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@72f6f544, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@335f583, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@4de3d360, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4faf5f20, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@467be109, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@418992c6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@4fe4824e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@62154d27, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@2d337819, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@35bdf40a, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@11c02abb, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@4a88dd8a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@254ba6f7, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@619a602c, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@5aab83db, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@11adfdeb, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@4ac7416a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@346a6dcb, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@2df8ec77, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@342d71eb, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@2231ba7b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5c7002d8, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@73121584, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@42f0f294, 2, 5): success
test SubList.testModRemove(java.util.Vector@6e5ba255, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@619603f5, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@1ce76996, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@3270bd20, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@535e4cfe, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@43e71751, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@74935f6, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@41f146db, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@240086f9, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@6947f9c1, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@7d9e328a, 2, 5): success
test SubList.testModSet(java.util.LinkedList@2451f366, 2, 5): success
test SubList.testModSet(java.util.Vector@7d4f9cd1, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@266ed1ad, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@196188d6, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3ae38f8c, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@7e79053b, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@343a36dd, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@31993c98, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@5c5cff54, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@5ed02bc9, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@71bf840f, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@267045cb, 2, 5): success
test SubList.testRemove(java.util.LinkedList@7558e015, 2, 5): success
test SubList.testRemove(java.util.Vector@468a61ce, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@722d507d, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@1d719b9d, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@25175470, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@3472b248, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@1ce710d7, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@6bfe96a9, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1465746090], 0, 1): success
test SubList.testSet([509282941], 0, 1): success
test SubList.testSet([1879886144], 0, 1): success
test SubList.testSet([-700864192], 0, 1): success
test SubList.testSet([1582383841], 0, 1): success
test SubList.testSet([-2090426807], 0, 1): success
test SubList.testSet([496900505], 0, 1): success
test SubList.testSet([-1871560354], 0, 1): success
test SubList.testSet([668104998], 0, 1): success
test SubList.testSet(java.util.ArrayList@f2e9ffe, 2, 5): success
test SubList.testSet(java.util.LinkedList@78d75f08, 2, 5): success
test SubList.testSet(java.util.Vector@43476ecb, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@390ab9f2, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@17420c67, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@3cff7599, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@c56009e, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@2f6a6d34, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@185a870e, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@78b7228c, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@31270da5, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@332947e6, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@4d68e620, 2, 5): success
test SubList.testSubList(java.util.LinkedList@36180c00, 2, 5): success
test SubList.testSubList(java.util.Vector@4f30233d, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@2bfeac0c, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@3c81a832, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3977af99, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4884998f, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@14e95d4b, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@2a9f5872, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5518da55, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@1c7889b8, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@2a2a5e08, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@53f47827, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@5b9e1663, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@5af75224, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@5310f98f, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@437e2b73, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@1f2d0142, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@1f2d0142, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@762ed462, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@63ec168, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@5d31b6c6, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5b1bc95a, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@1b630f3e, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1a8740ad, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4e8eaf1d, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@3a514676, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6ddf03de, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@2afb3283, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@2afb3283, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@63ee3e4e, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@351ef319, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@348f6c15, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@75062873, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@1565c16, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@234235f6, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1d907026, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@f6064ff, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3a5867d0, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@4549588b, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@4549588b, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@5e4965d2, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@7836cebc, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@a403184, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4a94f92e, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@8bfe61d, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@2faea977, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4591e375, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@1f95aa44, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3c86e974, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4da19427, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4da19427, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@5cc46046, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@5a94981c, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@6f750377, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@22d3f958, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@63b5a1c4, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@37273f66, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@6681cdb1, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@4bc89d7b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4ae95e47, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@73f559d5, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@73f559d5, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@3e92a414, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@63b51b63, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@78c0ec86, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@57becbf6, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@33f44520, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1da2f13b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@4877c5ac, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@ea25fc6, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@748acf7, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@9926673, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@9926673, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@7e40c083, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@4cada0d4, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7abc1157, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@63f3e0fd, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@6dcf9a95, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@2dcd08e0, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@4223fe8b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@728071c4, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@2a6f347f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@16298644, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@16298644, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@76b395b, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@69246e59, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@3af3a41c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@796e69a3, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@69896dcb, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@74edf417, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@19986034, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@95d7096, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@44e25871, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1593f722, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1593f722, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@12f1861e, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@36118aa1, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@197b1070, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@310aa8f6, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@77c6faf1, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@260a4bf2, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@86a344e, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@2e546bfc, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@4844720a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@5814f6fe, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4cd4cfa3, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@39a43350, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@24f300cc, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4cb37e99, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@50c49119, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@36fd3f9f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@71a01d97, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@260a8ecf, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@3c7963b8, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@d5c89e3, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@d5c89e3, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@42cf96e9, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@188e435a, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@5358cee1, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@3a76068c, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
