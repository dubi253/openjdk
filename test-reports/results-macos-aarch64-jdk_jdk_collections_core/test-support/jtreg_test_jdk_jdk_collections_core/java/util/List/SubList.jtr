#Test Results (version 2)
#Fri Mar 15 23:40:13 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=236 0\:00\:00.236
end=Fri Mar 15 23\:40\:13 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.10
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 15 23\:40\:13 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=236
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ced5e427db9ce5a0c5a328b30c33edee96767763)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-ced5e427db9ce5a0c5a328b30c33edee96767763, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 15 23:40:13 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 15 23:40:13 UTC 2024
elapsed time (seconds): 0.014
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 15 23:40:13 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 15 23:40:13 UTC 2024
elapsed time (seconds): 0.013
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 15 23:40:13 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 15 23:40:13 UTC 2024
elapsed time (seconds): 0.042
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 15 23:40:13 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 15 23:40:13 UTC 2024
elapsed time (seconds): 0.042
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/207)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 15 23:40:13 UTC 2024
Mode: agentvm
Agent id: 6
finished: Fri Mar 15 23:40:13 UTC 2024
elapsed time (seconds): 0.18
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91943)----------
Seed from RandomFactory = 6170572327735505149L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 294373828], 0, 1): success
test SubList.testAdd([42, -749661124], 0, 1): success
test SubList.testAdd([42, -2106667177], 0, 1): success
test SubList.testAdd([42, 1359212478], 0, 1): success
test SubList.testAdd([42, 981543172], 0, 1): success
test SubList.testAdd([42, 607436800], 0, 1): success
test SubList.testAdd([42, 951321850], 0, 1): success
test SubList.testAdd([42, 1735668233], 0, 1): success
test SubList.testAdd([42, -1039594173], 0, 1): success
test SubList.testAdd(java.util.ArrayList@3790a5b7, 2, 5): success
test SubList.testAdd(java.util.LinkedList@645a8be0, 2, 5): success
test SubList.testAdd(java.util.Vector@2c6ddee9, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@7eee4ece, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@31b5489b, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@2d21552c, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@2feb8c98, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@6c08d1c, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@4edee3d4, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@14e297eb, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@12889c9, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@55eb13e5, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 448086362], 0, 1): success
test SubList.testAddAtPos([-878390680, 42], 0, 1): success
test SubList.testAddAtPos([42, -22873805], 0, 1): success
test SubList.testAddAtPos([-40663658, 42], 0, 1): success
test SubList.testAddAtPos([42, 1088827221], 0, 1): success
test SubList.testAddAtPos([742225550, 42], 0, 1): success
test SubList.testAddAtPos([42, 826341612], 0, 1): success
test SubList.testAddAtPos([42, -1405974703], 0, 1): success
test SubList.testAddAtPos([42, 726176727], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@1f488bd4, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@77cbc193, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@3fa0b8f4, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@167c5d5c, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@24083b9a, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@797250d8, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@289f3639, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@4d4a2581, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@212133f1, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@31aac90d, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@1e8cee09, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@50c88f59, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@16a45fc1, 2, 5): success
test SubList.testClear(java.util.LinkedList@28024b61, 2, 5): success
test SubList.testClear(java.util.Vector@7203ae69, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@57b37171, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@451415c, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@6f9b74b2, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@7408ab9, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@6df1b766, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@4cdb2bfd, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@5d9671c8, 2, 5): success
test SubList.testEquals(java.util.LinkedList@7a47ee7f, 2, 5): success
test SubList.testEquals(java.util.Vector@58c25fd3, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@29f261fa, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@76222b36, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3ae0ccf8, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@470fc134, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@472ad75c, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@479365df, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@27ec50d2, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@65d5c071, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@79c55661, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@521a31a0, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@21092a72, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@3f0a5f16, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@67400c9e, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@44cadbff, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@57e73abc, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@57e73abc, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@7fdee214, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@6e5c0ecd, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@170f04fc, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1804aba6, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@27e1f012, 2, 5): success
test SubList.testGet(java.util.LinkedList@276a07a4, 2, 5): success
test SubList.testGet(java.util.Vector@1e52e450, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@2044fb39, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@40501dba, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@34576224, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@7587e695, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@278c046e, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@cec6533, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4b695631, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@4ebd27da, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4f8091c6, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@178f9a9b, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3e1d3d59, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@501610ad, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@6d5c27ea, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@31a457c6, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@6d2a781c, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@6d2a781c, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@5af91c1a, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@4873446, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@476a69ed, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@757e27e2, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@46c63d2b, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@79ea1d9c, 2, 5): success
test SubList.testIndexOf(java.util.Vector@cd0ff90, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@5583ce2b, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@60470565, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@3699dae9, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@7fbc286, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@79a8fa6, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@7d0128a0, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@33652227, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@5af541f8, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2b908456, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@6b09fa84, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@d4d3164, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1147ed2f, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@179094fa, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3110096c, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@58b859a7, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@58b859a7, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@74118ec6, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@19a50053, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6beed05, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2de81f90, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@7b617e76, 2, 5): success
test SubList.testIterator(java.util.LinkedList@3f640085, 2, 5): success
test SubList.testIterator(java.util.Vector@1af46b27, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@5f088f95, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@3d07788d, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@589845a8, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@46e57b17, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@27b56e8f, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@f04ecb9, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@68f4a107, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@2da7f57, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@602dd49a, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@72057f60, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@3616ef15, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4727acdc, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@1728ddc4, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@9808336, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@3b4b1d3d, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@3b4b1d3d, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@673ed828, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@7573ecc7, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@399df9ed, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2bfd6b51, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@7d721dd6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@651b6b3a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@41ab6d02, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@1874292, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@6535bf9b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3c6322b4, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@6b6155f7, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@123df246, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@57ad896b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6dd26eff, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@75cb9e28, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1b8b7de0, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@702defae, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5067f160, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3ba395c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@3005846a, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@6ca37abe, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1790e5ae, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1790e5ae, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@66ad32f1, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@3efd22e, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7f08cd7b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@744d41de, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@31273f98, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@3a98e183, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@21080682, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@20a37c86, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@7db73f71, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5cecb0fc, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@382654bb, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@63384a0d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@60118d96, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@7716c8e9, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@1d8c8232, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@25ab0305, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@76ab2959, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@31136cc4, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6cdc360b, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@6516d865, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@3ac192a1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@694ef669, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6c8eb900, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@e7c648c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2e15dfb9, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@2fdbd8ab, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2e7d418, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3918d0c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@73f5deee, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4de9256f, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@34e43787, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@34e43787, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@3c8186e4, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@2e108411, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@44018495, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@212ffca4, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@1be13359, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@75667208, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@632ffe89, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@24af5733, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@201f9ac8, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@5f385961, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@5f385961, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@76db5a74, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@7b3b72ea, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@2afa0791, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@4e331e40, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@cd63d8e, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@13a8f1b3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@56190173, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@382ae17c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@3efe5a2d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@60db7e18, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1a52b40e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@48e3b71, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5087a219, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@6f3a8325, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@9481364, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@7bb66ba4, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@4179d972, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@3e1a1bd9, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2094b09d, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@75939b2e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@15b852c9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2b8f3daa, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@463bb32, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@7078f94e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6e6adbb6, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@785fa6e0, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@5ae917c3, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@79431665, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@5412b6db, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@4c687767, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@745ef314, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@745ef314, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@5315d74a, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@7f701a68, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@7e75a0e3, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@53e8f0d6, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@225b053, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@627d9ae8, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@33ca30b5, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@40132dfc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@4839598, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@ca67fbc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@236c89bd, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@57614ae2, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7418c18a, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@5824b44e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@6249d253, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@328ccff5, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@7316ec3, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@7203e887, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@48f1dd32, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@4368fe5a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@16bf47b0, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2fb814f6, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1950021034], 0, 1): success
test SubList.testListIteratorSet([1830274121], 0, 1): success
test SubList.testListIteratorSet([1021836059], 0, 1): success
test SubList.testListIteratorSet([472771286], 0, 1): success
test SubList.testListIteratorSet([792790300], 0, 1): success
test SubList.testListIteratorSet([2103562286], 0, 1): success
test SubList.testListIteratorSet([1259565430], 0, 1): success
test SubList.testListIteratorSet([-1284875492], 0, 1): success
test SubList.testListIteratorSet([454643578], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@2a9078, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@400a8e24, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@588075ac, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@3cb288c7, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@7316cbe, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6d3047bc, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@7b59ffd, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@4d45bd09, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@71d1250, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7d77578d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@5ff4ff24, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@55e9f24e, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1381564363], 0, 1): success
test SubList.testListIteratorSetPrevious([-37235076], 0, 1): success
test SubList.testListIteratorSetPrevious([-206265851], 0, 1): success
test SubList.testListIteratorSetPrevious([1851726689], 0, 1): success
test SubList.testListIteratorSetPrevious([984141115], 0, 1): success
test SubList.testListIteratorSetPrevious([-511742298], 0, 1): success
test SubList.testListIteratorSetPrevious([29376010], 0, 1): success
test SubList.testListIteratorSetPrevious([-1287233188], 0, 1): success
test SubList.testListIteratorSetPrevious([-2103814258], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@a11d245, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@94c154d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@528e9358, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@41c39e21, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@7e6082ee, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@6b0ba301, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@5fedac19, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@7f312847, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@69a72d63, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7295e8ac, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@3ff7461f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@62b10698, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@6aa6bbd, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@156411b9, 2, 5): success
test SubList.testModAdd(java.util.Vector@41590c30, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@134302a3, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@55127200, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@13f3c71, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@5f30367, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@64a05759, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@5c51497, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5ee02e3a, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@6d244a31, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@6fcc11ea, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@600b19a2, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@372cb60b, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@61a06190, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@2a1fe231, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@640be9ee, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@458bd31f, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@553870ca, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@5bdf6558, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@1ee0bdad, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@44b3eb83, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@1636b255, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1c8a5ac1, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@1b464c2, 2, 5): success
test SubList.testModClear(java.util.LinkedList@41063268, 2, 5): success
test SubList.testModClear(java.util.Vector@6a614bcd, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@2ede9816, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@b364283, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@546a5569, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@4c218b59, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@37211075, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@556b2ac3, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6dc625f7, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@74b16355, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@23ffcb0c, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@2b55a2b9, 2, 5): success
test SubList.testModGet(java.util.LinkedList@64314904, 2, 5): success
test SubList.testModGet(java.util.Vector@706ca354, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@23750b04, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@1424fdc0, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@42abbeb5, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@4ced7cf0, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@7788d995, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@dcdbda7, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@18b44009, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@504b813d, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4820a67d, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@3a2e1d6f, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@4045d0ba, 2, 5): success
test SubList.testModHashCode(java.util.Vector@482ed46d, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@7e50ee51, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@496ab26e, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@51c9ff8e, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@7624cd2a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@55d5e1dd, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@6032a980, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@2341cd97, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@1d572a10, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@694dd642, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@512059f2, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@31c19a56, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@4326ce94, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@347c0a62, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@6d36bdf, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4af39c9a, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@60c27b1, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@bcf1c86, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@16ab1f1a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4a35b06d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@19b16ce7, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@2a5e024f, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@2080eb2b, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@6760f61c, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@2e582353, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@6f298b5e, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@3bdea492, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5d37bc53, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@5d01d0a6, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@7e4d786f, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@16f7719e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5918f8ca, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@31403c65, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@782ded00, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@2f1a6f78, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@be9aab6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@10a0ea5, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@737c13f3, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@61f8749a, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@72114e55, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@51609b6a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@412200f1, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@14bb42bc, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3090f1a1, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@161c6697, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@629699bf, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@cb1c107, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@6395e35e, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@652a1685, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@24f25bb6, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@7cf1b123, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2c68ade1, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@4467f068, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@3c3e1c82, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@3b14bc8, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1f84a0fa, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@1e445380, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@644f0646, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@7443cc6c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@7ad0b2a4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@1435cfef, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@49728a65, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@771e3382, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5e8221d8, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@63e8ad1c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@5ab01134, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@79ffb0c8, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2d14c9c9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@3d975eea, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7b0149f7, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@7df604af, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@4b3aa60, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@73bfd3da, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@3b95fe4c, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@3f33672, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@50adc5f6, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@3c755c07, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@37878a5e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@7a802145, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@23d064e6, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@2a3d6aa2, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@54ccecd1, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@1d50a1fc, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@100294da, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@64430cc2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@3fdefbbd, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@1f30c7ef, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1c2cae0b, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@29ed729f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@39e76f92, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@15ef18d5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@41092af5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@5ce0c18e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@15d0b429, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@1d84b947, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@5d0f4bbe, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@2d63c860, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@37819622, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@3992f10b, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3137f9d6, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1d470cdf, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@7b158a17, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@7084505c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4331fcdd, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@404a8964, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4b1caa4, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@2e14520e, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@3aabe175, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@6c05481f, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@4db1881c, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@4211211, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4ecfdba4, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@17fa18db, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@52cbb2a2, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@37d47c2d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@10f98655, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@80a6ed3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@8249c76, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@6bf65745, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@3356c384, 2, 5): success
test SubList.testModRemove(java.util.Vector@686b9b62, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@18a4813e, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@16f8e6f9, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@66f99053, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@73157e64, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@410e13b8, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@679afb3e, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@469bb7e4, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@6bf63bc6, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4803d46d, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@66de0abf, 2, 5): success
test SubList.testModSet(java.util.LinkedList@696a525c, 2, 5): success
test SubList.testModSet(java.util.Vector@74e006e1, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@1f114fb7, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@62d90efd, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4348466a, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@2958ff93, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@70f430ae, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@783ba3d6, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@2a094862, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@12728966, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@42f63d1e, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@5e0d7c7c, 2, 5): success
test SubList.testRemove(java.util.LinkedList@3b114334, 2, 5): success
test SubList.testRemove(java.util.Vector@53a29fd2, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@6fc6a672, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@390ff1a4, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@6c6d72a2, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@47d4a7e9, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@63f385ab, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@7c920d1, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-821250598], 0, 1): success
test SubList.testSet([-1742801911], 0, 1): success
test SubList.testSet([1476322813], 0, 1): success
test SubList.testSet([198827269], 0, 1): success
test SubList.testSet([1714580424], 0, 1): success
test SubList.testSet([-65482392], 0, 1): success
test SubList.testSet([1949769148], 0, 1): success
test SubList.testSet([744795019], 0, 1): success
test SubList.testSet([-1206327443], 0, 1): success
test SubList.testSet(java.util.ArrayList@73aa0bf2, 2, 5): success
test SubList.testSet(java.util.LinkedList@1031a37e, 2, 5): success
test SubList.testSet(java.util.Vector@57aca55, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@41b21512, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@51a11459, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@77a52287, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@7e043a5e, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@7318ea21, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@7c965a64, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5fabe009, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@48729574, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@11632894, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@184e4651, 2, 5): success
test SubList.testSubList(java.util.LinkedList@74286de7, 2, 5): success
test SubList.testSubList(java.util.Vector@74fcfaa6, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@1b30e608, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@44f35264, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@738d5965, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@373f6df0, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@4e807cfb, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@60e918bc, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@b9f8b9, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@29c890b4, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@322ed571, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@551ed7c8, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@64ed0ef8, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@50b6d395, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@6283bcf2, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@32bed90d, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@2d41e113, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@2d41e113, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@4f27adf, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@591e4cf9, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@362d60da, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@715bca1a, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@17dc7ead, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@d2ca974, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@15015d48, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@4b0e94c4, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@21c5e19b, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@db7dd6b, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@db7dd6b, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@4a3b6a, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@32da6a3c, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@5c8ec94b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@2149e07f, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@41ce8a10, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5ab706ce, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6dd8472, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@74ed09ad, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1522abab, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@5f5e52d9, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@5f5e52d9, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@65f5cae5, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@333cd7c2, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@aa39ece, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@13883618, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@1c10d347, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7132bd9a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@631e3b1a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@6a30da21, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@52b983b, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@26111c7, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@26111c7, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@187bb6fa, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2ba91a5a, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@7266d1d8, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@709951d4, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@25cb19d6, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@68cbfdaa, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@469bba04, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@3f56baef, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2bdc936a, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5d8f6993, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5d8f6993, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@629cd34b, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@3d0c06b, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@9dd50b5, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7122572, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@6d331d4f, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@25806b37, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@54ac8a51, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@8347d12, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@e7d0d97, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@5e1bfa2, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@5e1bfa2, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@450be10c, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@3d463f0d, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@14ac201b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2fe3df54, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@7263c686, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@2e98f670, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@df94e15, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@33f14b31, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@2c5240d6, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@51a54c60, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@51a54c60, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@57d0cfb5, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@15ec34d8, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@3a6d8149, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@883769b, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@72e18fd3, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@711439ea, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2a5cb047, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@1f52a5ff, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@726c35b6, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@9daaec4, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@9daaec4, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1246116, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@6b7b3147, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4d903919, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@e3125a, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@2bf36275, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@a6a45d, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6c0a7f59, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@5383b4d5, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@68c9dc63, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@6d76b5ce, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@47a88413, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@63115950, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@4c81b630, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@7ecf71d2, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@3d5cb02a, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@10b2e59f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@465d5e33, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@61a0c85f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@3bb39be9, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@163c4620, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@163c4620, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@192058df, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@279e1ae4, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@36c56d5a, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@4423af5e, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
