#Test Results (version 2)
#Fri Apr 12 13:15:58 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=207 0\:00\:00.207
end=Fri Apr 12 13\:15\:58 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.13
javatestOS=Mac OS X 14.4.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Apr 12 13\:15\:58 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.4.1,family\:mac,simple_arch\:aarch64,simple_version\:14.4,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.4.1
totalTime=207
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Apr 12 13:15:58 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Apr 12 13:15:58 UTC 2024
elapsed time (seconds): 0.015
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:15:58 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Apr 12 13:15:58 UTC 2024
elapsed time (seconds): 0.014
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Apr 12 13:15:58 UTC 2024
Test directory:
  compile: SubList
finished: Fri Apr 12 13:15:58 UTC 2024
elapsed time (seconds): 0.039
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:15:58 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Apr 12 13:15:58 UTC 2024
elapsed time (seconds): 0.038
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Apr 12 13:15:58 UTC 2024
Mode: agentvm
Agent id: 3
finished: Fri Apr 12 13:15:58 UTC 2024
elapsed time (seconds): 0.153
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91956)----------
Seed from RandomFactory = 5321671174689336759L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1855393415], 0, 1): success
test SubList.testAdd([42, -1493845995], 0, 1): success
test SubList.testAdd([42, 1707481410], 0, 1): success
test SubList.testAdd([42, -1906931928], 0, 1): success
test SubList.testAdd([42, 330011098], 0, 1): success
test SubList.testAdd([42, 1733317842], 0, 1): success
test SubList.testAdd([42, 690625878], 0, 1): success
test SubList.testAdd([42, 170584195], 0, 1): success
test SubList.testAdd([42, 1103569617], 0, 1): success
test SubList.testAdd(java.util.ArrayList@766c47ad, 2, 5): success
test SubList.testAdd(java.util.LinkedList@ea4ccb2, 2, 5): success
test SubList.testAdd(java.util.Vector@5d9503a3, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@31fa1a69, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@e3d4cb1, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@6ac63da5, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@73c4354e, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@51fc0a87, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@5134969d, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@b612322, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@38b53767, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@45be132e, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 285240573], 0, 1): success
test SubList.testAddAtPos([42, -73467698], 0, 1): success
test SubList.testAddAtPos([-1544578122, 42], 0, 1): success
test SubList.testAddAtPos([73311677, 42], 0, 1): success
test SubList.testAddAtPos([-1600674669, 42], 0, 1): success
test SubList.testAddAtPos([1281133488, 42], 0, 1): success
test SubList.testAddAtPos([-1252893915, 42], 0, 1): success
test SubList.testAddAtPos([1892787970, 42], 0, 1): success
test SubList.testAddAtPos([42, 594818943], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@47a28ea7, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@3c87d141, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@3bc1e149, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@5aab094b, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@2abfc16b, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@56308295, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1989d667, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@6a142e6, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@53b6dcaa, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@31833af2, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@8f7283c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@520e4e04, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@29ba1d26, 2, 5): success
test SubList.testClear(java.util.LinkedList@1c23bd8f, 2, 5): success
test SubList.testClear(java.util.Vector@36042a46, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@160b6e06, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@5dae3736, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@6e2fc34b, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@bb8cc2, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@7cf8d70c, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@c9add3c, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@2915bd19, 2, 5): success
test SubList.testEquals(java.util.LinkedList@6e032de4, 2, 5): success
test SubList.testEquals(java.util.Vector@39f2d44f, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@3cd226a6, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@741dcaea, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@58ee7da5, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@87db86d, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@7235df8a, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6e686b65, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@747fe54, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@395c7ec8, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4f542c52, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@1c5fb049, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@147a0c9, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@722e879c, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@6e1576c3, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@54ecd0f0, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@532f98d3, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@532f98d3, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@2465a2f8, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@131426c5, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@218dab04, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@2d23c36, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@66fe2586, 2, 5): success
test SubList.testGet(java.util.LinkedList@8e9166e, 2, 5): success
test SubList.testGet(java.util.Vector@6ddab469, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@7b5a1657, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@42e0cde0, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5330b0e9, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@67132b37, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@56aeca5a, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@4849d970, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@148cc0e4, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@4c9b93da, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@b86ef9c, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@1600d11a, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@42cf6391, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@74ef08cf, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@63c53879, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@24c47ca, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@656638b9, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@656638b9, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@599d04f1, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@816467d, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@2601683e, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@434ff298, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@9ddd618, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@4e35f150, 2, 5): success
test SubList.testIndexOf(java.util.Vector@5f6fa677, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@5b8a4210, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@6f54c6aa, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7856d102, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@282659de, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@3b917006, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@356f9189, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7bba8c2d, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@73e426f3, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@493e2403, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@5e549265, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@44f7a6d1, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@47559252, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@60dd4a62, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@634f07e6, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@7c724692, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@7c724692, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@7e159790, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6ce7cd78, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@69e6b4e6, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@43bdef2d, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@50777eae, 2, 5): success
test SubList.testIterator(java.util.LinkedList@5352a144, 2, 5): success
test SubList.testIterator(java.util.Vector@2f5f7ff8, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@2fdd3210, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@832d0e1, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@383b5b70, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4c9de812, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@550cafd4, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@10d9bc61, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@63c2313d, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@35f2059a, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@162edfa2, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@5790277d, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5a4a4bd7, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4144745d, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@338c894f, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@642b2752, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@14e10bf9, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@14e10bf9, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@c80fec9, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@7399c91c, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1c00bf63, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@25d9ec29, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@2060cd61, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@12697c54, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@3901581a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@57f3548f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@1f7c5964, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@54d70fd8, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@75644290, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@6b243a62, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@40bd08f2, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@7884596, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@6dc0c74c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@49fee5bd, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@4e822932, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7cc6eca2, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@58719c35, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@2c8ed81c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4fa23c58, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4e909841, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4e909841, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@4ea5c08f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@6eaa7548, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@216cc9ac, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@70dcdb91, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@b594aee, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@65dad293, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@59d39441, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@6753220a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@7648a301, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@14a24ea9, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@24873e31, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@33cc94cd, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1f49726f, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@534af001, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@210458ee, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@7b5d1419, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@8ed86c3, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@7d3e597a, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@79af322e, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1b437557, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@55550d3, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@59009cfe, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2aabbbd1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@63f6bafd, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2c181fc2, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@71c4aa00, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@17fd7c50, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@20986705, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@2f507c0a, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6587d31f, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@32952483, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@32952483, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@15776e39, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@310b57f0, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@e8b065f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4e11cc7, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@23a730f7, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@75a4bb01, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@69a44628, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@7958fab1, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@2d69c7f5, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@5f06a31, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@5f06a31, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@599e2fb6, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@177ff859, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@519248ab, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@2dd013c1, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@69b65ab6, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@5c89ebb, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@19237c3e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@688368d2, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@77acb289, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5504cc06, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@554436ec, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@177f006c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@53c5c24f, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@1cbe5e09, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@55fa64f7, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@220dbdfe, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@c4e5512, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@600efcf4, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3e08f8d6, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1cd593a7, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@232cce28, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@41964071, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@48a6c59, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@736c181d, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@702bbd6d, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@46874188, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@212de361, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@732b21f4, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@29a2c400, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@d16c17a, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@f54e5ec, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@f54e5ec, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@17702fc0, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@5c1d7a97, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@123b1de3, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4ddc039, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@1433cfdb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@4c903e2a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@30a62785, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1a48c2b5, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@28239095, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@5fa77863, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@41da29cc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@1433fcb5, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@3c00d106, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@75c6bdd5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@4dc86e98, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@28e4f174, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@255b0395, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@5047a5c1, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4c30c9e2, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@443f0d68, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@6e7ff9fb, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@25baf0cc, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1543137051], 0, 1): success
test SubList.testListIteratorSet([-642491868], 0, 1): success
test SubList.testListIteratorSet([509641394], 0, 1): success
test SubList.testListIteratorSet([34041342], 0, 1): success
test SubList.testListIteratorSet([-1054400088], 0, 1): success
test SubList.testListIteratorSet([1167578113], 0, 1): success
test SubList.testListIteratorSet([892784042], 0, 1): success
test SubList.testListIteratorSet([-534726635], 0, 1): success
test SubList.testListIteratorSet([932372508], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@6641e0d5, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@5b11c920, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@9cf3ff4, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@2b052ad3, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@32ae9e64, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@b6bbbe0, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@7ee75333, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@7339cbc2, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@6a1da168, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2ce608e7, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@3dcce1dc, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@558f9a23, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([505995981], 0, 1): success
test SubList.testListIteratorSetPrevious([-1507307610], 0, 1): success
test SubList.testListIteratorSetPrevious([1528797181], 0, 1): success
test SubList.testListIteratorSetPrevious([1512046133], 0, 1): success
test SubList.testListIteratorSetPrevious([-523578630], 0, 1): success
test SubList.testListIteratorSetPrevious([106757616], 0, 1): success
test SubList.testListIteratorSetPrevious([-974942809], 0, 1): success
test SubList.testListIteratorSetPrevious([1520870600], 0, 1): success
test SubList.testListIteratorSetPrevious([2097850095], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@43418ee3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@70cb1e7d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@7477c284, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@5d215fef, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@5f629061, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@71dd3642, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@77ecf345, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@6f956f3b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@77544128, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@553d01ff, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@707513fe, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@76964884, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@790f581f, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@153c33b3, 2, 5): success
test SubList.testModAdd(java.util.Vector@648114d2, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@5b3106c9, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@3b8702d3, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@67f1866c, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@5646d756, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@271bafdc, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3415b544, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@16f6a29a, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@12e3a18d, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@11c75558, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@14ab5a9d, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@2210ccb3, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@f29e34a, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@29b9ad84, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@696001b8, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@449eab2b, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@189f3d8d, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@76205bc4, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@3afa2ad5, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3aed8f48, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@4ae27681, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6aab05b7, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@26d0ef96, 2, 5): success
test SubList.testModClear(java.util.LinkedList@630d64a0, 2, 5): success
test SubList.testModClear(java.util.Vector@e2a653c, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@2f38d2fb, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@61ca722d, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6ba17f1f, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@42df628f, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@1e68c36e, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@66800cbb, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@489de0ee, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@67935a26, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@612869c7, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@1dabdc2a, 2, 5): success
test SubList.testModGet(java.util.LinkedList@4467ac19, 2, 5): success
test SubList.testModGet(java.util.Vector@77581c7e, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@703054a2, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@7d35eb6f, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@77d34ae9, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@227cd638, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@6e5d7e00, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@5bcb0014, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@7ab7276d, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@70f281f2, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@337d6943, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@1a689121, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1d3384a3, 2, 5): success
test SubList.testModHashCode(java.util.Vector@181c36f4, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@7a7c3e70, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@5fe51995, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@62e5b590, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@a12a058, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@30cbe3bd, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@33aafdd2, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@4f4af0f6, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@2b0cc743, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@a59bdc2, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@1a7e2c31, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@394357f1, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@69cf7087, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@66d8e011, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@283c7a6f, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@72e52dce, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@28c2ce71, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@44079be3, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@28475452, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@75e1a606, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@3400898f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4e8c6519, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@5c222e76, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@5797b27b, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@91f4a71, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@3f559ed6, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@1459b52f, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@d8bbb11, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@229e6e5, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@157f4946, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@572f959, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4e7eaa4e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@1d37996c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@209013a1, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@2c7dfdd8, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@7a91cadd, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@2f028c76, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@118ae80f, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@5707e791, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3c1522d3, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@55a036f6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@7126b7ad, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@31d3971, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2304514b, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@6bd399ce, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@55769522, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@4015d998, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@2c90eb10, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@7e74a021, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@3543ecf6, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@6530441e, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5360f9e2, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@7e3116f6, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@275a6a0c, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@7dcb9325, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@73fd94b3, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@4f3eed2, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@e2473, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@606c85c7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@4091b6ba, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@42a69da9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@1d8f4d3c, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@2e4779e3, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@296f12fe, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@33e31862, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@5e9d2e16, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2490467e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3dffee89, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@4f4ad2e7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2b620875, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@533bd697, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@2513a72b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@676ce2cb, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@4d13fd8c, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@576e5524, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@79896832, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@2ff18a80, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@165ed2d0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@26941111, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@452f8d79, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@57468ba0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@733bdf3c, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@1ae4edec, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@70cbc30c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@341880b3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@44ad6775, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@49ac43bb, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@c7b19c6, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@149a7ca0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@71286095, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@b26be4e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@53dd386c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@54b037f1, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1128a533, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@7370021a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@6f111992, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@787ae628, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@6d2d64ee, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@34d79e0, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3668e251, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@3e447a72, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@58699bc8, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@67b6eedf, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4ebc6750, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@6e62dd, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@ff8083d, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@5384a540, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@3894b07f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@6508ca33, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@41f9b87e, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@775b4f2b, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@38bbe4f4, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@4b3db3f9, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7491e788, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@2005d049, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1991c77e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@19dfc1bd, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@52f11166, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@69691c6e, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@6874d435, 2, 5): success
test SubList.testModRemove(java.util.Vector@66690768, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@18e4662c, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@298a1299, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2fbce126, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@61a0b805, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@2c8e1a5e, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@6b945cf9, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@48895dc3, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@b450aa3, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@52bd3c69, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@2a320336, 2, 5): success
test SubList.testModSet(java.util.LinkedList@6cb97d68, 2, 5): success
test SubList.testModSet(java.util.Vector@5fab6520, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@5c92c501, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@6a946767, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@66ecb3a7, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@550daca2, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@1c265dac, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@6223f598, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@768b175e, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@489ffaad, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@49176bde, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@18feba29, 2, 5): success
test SubList.testRemove(java.util.LinkedList@4b6641de, 2, 5): success
test SubList.testRemove(java.util.Vector@437ed0, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@26b4a021, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@66a4cf8d, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@34e32b82, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@626bd79e, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@51352a27, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@527525fd, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([670287589], 0, 1): success
test SubList.testSet([-84610172], 0, 1): success
test SubList.testSet([-997628868], 0, 1): success
test SubList.testSet([786017882], 0, 1): success
test SubList.testSet([1379705343], 0, 1): success
test SubList.testSet([-1271982014], 0, 1): success
test SubList.testSet([739820501], 0, 1): success
test SubList.testSet([1662123938], 0, 1): success
test SubList.testSet([1115852492], 0, 1): success
test SubList.testSet(java.util.ArrayList@2bcc7f5a, 2, 5): success
test SubList.testSet(java.util.LinkedList@7ea8735c, 2, 5): success
test SubList.testSet(java.util.Vector@41cf2bbf, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@2afa1b47, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@167eb301, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@562899ca, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3c4d73a4, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@168a5f1e, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@5ff425cc, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@6c4f7cfe, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@73434e6, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@75b57357, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@652f5cc6, 2, 5): success
test SubList.testSubList(java.util.LinkedList@5175a4c1, 2, 5): success
test SubList.testSubList(java.util.Vector@39ef5876, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@1fea13df, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@359d1ad8, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3629ff07, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@ba9940f, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@18811269, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@71a0fcc2, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@48e6b43d, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@7801784a, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7a1857ba, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@3b4c9d88, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@6646d486, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@7163994e, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@19947dbc, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@b55ff1, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@2ae3008a, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@2ae3008a, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@4e02da79, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@3b1df52b, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6a45b811, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7916b17e, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@19f09e6a, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@7e363c1e, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@14699e50, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@796da6bb, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@551e208, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@33c637b2, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@33c637b2, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@6d79b584, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@6a69fb4d, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@60ece6e3, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@29b77e1e, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@45c0e0fb, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6399f2e7, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@23bc8af4, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@280aebe3, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@2ef19de9, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@1ffd9861, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@1ffd9861, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@26c2dcdb, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@523d325, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@346553b7, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@15259bf, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@34cc40c4, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7d718e87, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@470cebe2, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@1d4833e8, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7f486161, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@1715f2ee, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@1715f2ee, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@3686db77, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@53acdd97, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@2cade196, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@71620e3d, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@1cb7e03a, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@75ba7dfd, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@270140b6, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@300cc83b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@3409d9fd, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@62034790, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@62034790, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@57ca1f3, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@2d97740a, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@741dc43d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@45e831f3, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@7502ff77, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7a71dc4b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6774d33, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@2e519bf3, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@593b1f9c, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@79f48e3a, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@79f48e3a, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@58e72f3d, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@2ac88dee, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7a560fc4, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6ea0c802, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@13296040, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1982611b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1f1974ad, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@6f739cba, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@73ea7d7f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@34a6928a, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@34a6928a, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3ad97c19, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@582f84b5, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1e421f81, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@5cb94d03, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@47c7f43, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2ff9019, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@49372758, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@11e66869, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7718e405, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@19ac6c1, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@19ac6c1, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@6d893043, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@22c330e8, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1752769a, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@488ed5c, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@2dae6ab5, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1603ad2d, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@51afbb90, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@7f63b0ab, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2f52a351, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@35ec70ab, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@74ae49ff, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@32ebe740, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@16f307b7, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@51c34ce6, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@62f445f, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1cbd0599, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@37b77f87, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@44831a50, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4d32aa1c, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@15a1cf57, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@15a1cf57, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@b11e3bf, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@2e46693c, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@4dae28ac, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@4a803d15, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
