#Test Results (version 2)
#Tue Mar 05 01:23:29 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=194 0\:00\:00.194
end=Tue Mar 05 01\:23\:29 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Tue Mar 05 01\:23\:29 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=194
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Tue Mar 05 01:23:29 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Tue Mar 05 01:23:29 UTC 2024
elapsed time (seconds): 0.012
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:23:29 UTC 2024
Mode: agentvm
Agent id: 1
finished: Tue Mar 05 01:23:29 UTC 2024
elapsed time (seconds): 0.012
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Tue Mar 05 01:23:29 UTC 2024
Test directory:
  compile: SubList
finished: Tue Mar 05 01:23:29 UTC 2024
elapsed time (seconds): 0.037
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:23:29 UTC 2024
Mode: agentvm
Agent id: 1
finished: Tue Mar 05 01:23:29 UTC 2024
elapsed time (seconds): 0.037
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Tue Mar 05 01:23:29 UTC 2024
Mode: agentvm
Agent id: 6
finished: Tue Mar 05 01:23:29 UTC 2024
elapsed time (seconds): 0.143
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91954)----------
Seed from RandomFactory = 7325412514524971907L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -810053755], 0, 1): success
test SubList.testAdd([42, -754918538], 0, 1): success
test SubList.testAdd([42, -1383941137], 0, 1): success
test SubList.testAdd([42, -2069353199], 0, 1): success
test SubList.testAdd([42, -1963316737], 0, 1): success
test SubList.testAdd([42, 1803169669], 0, 1): success
test SubList.testAdd([42, 378747175], 0, 1): success
test SubList.testAdd([42, 593169585], 0, 1): success
test SubList.testAdd([42, -1038806691], 0, 1): success
test SubList.testAdd(java.util.ArrayList@69f85de0, 2, 5): success
test SubList.testAdd(java.util.LinkedList@7f5fc5fc, 2, 5): success
test SubList.testAdd(java.util.Vector@75713fab, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@51dbb5d0, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@18a5e5e4, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@13a155e8, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@6810d1f8, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@2e379833, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@7371e1e5, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@52af4d5e, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@3056108d, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@5762820, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-457658517, 42], 0, 1): success
test SubList.testAddAtPos([42, 32773563], 0, 1): success
test SubList.testAddAtPos([42, -705437058], 0, 1): success
test SubList.testAddAtPos([42, 2078215840], 0, 1): success
test SubList.testAddAtPos([42, -1155243349], 0, 1): success
test SubList.testAddAtPos([-1938260214, 42], 0, 1): success
test SubList.testAddAtPos([454411465, 42], 0, 1): success
test SubList.testAddAtPos([874929468, 42], 0, 1): success
test SubList.testAddAtPos([-167114431, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@f51a270, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@2708d066, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@6811a004, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@6a5c7ce, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@78c5ee0, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@356f93da, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@74b4d85c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@45c835b9, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@517e608f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5d52da9a, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@2df6226c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2504437a, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@1d758e8c, 2, 5): success
test SubList.testClear(java.util.LinkedList@72e712a0, 2, 5): success
test SubList.testClear(java.util.Vector@5e7bfbfd, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@5d7946b6, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@570333a2, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@97a051f, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@18194fcf, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@52444328, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@19e55d25, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@680255ef, 2, 5): success
test SubList.testEquals(java.util.LinkedList@324abb7f, 2, 5): success
test SubList.testEquals(java.util.Vector@240dc270, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@135e596f, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@551784b6, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4d5059d, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6c17a0eb, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@2860f66d, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@193b4e0b, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1dcd0d28, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@43da5686, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@e368357, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@4a8c912e, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@7ea66b2a, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@2d360bd9, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@58a5161e, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@79603eab, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@4db21fcd, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@4db21fcd, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@2054856b, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@40eae818, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7bfaa4fe, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3c84cd7f, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@6856f0b, 2, 5): success
test SubList.testGet(java.util.LinkedList@5a42753a, 2, 5): success
test SubList.testGet(java.util.Vector@3e8c171a, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@6e57a942, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@45eed5df, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1e4477f0, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@17a20717, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@31a05dc8, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@19b0d9f8, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1417217d, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@7ad74f7a, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@234a92d0, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@1da3b056, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1ac3bac5, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@70760260, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@62307b9a, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@2c3f7926, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@5f19ef67, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@5f19ef67, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@7875202c, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@46093b67, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@47e6c7d5, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1cbcd5a9, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@41e23070, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@6515345d, 2, 5): success
test SubList.testIndexOf(java.util.Vector@684858d3, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@65b33392, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@3bea04ec, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2cf3a913, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@24be7c48, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@443cba72, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1ac7f6cf, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7f0c64ef, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@73c5a590, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@24a85835, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@689144b5, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2a652b52, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5f656b8a, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@3c07ad2c, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1b187afe, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1c81cb2e, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1c81cb2e, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6fe1e16c, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1b7f2309, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3fb80c6b, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7ccff085, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@71a5c57b, 2, 5): success
test SubList.testIterator(java.util.LinkedList@7d27dff2, 2, 5): success
test SubList.testIterator(java.util.Vector@790019bc, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@66c632a2, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@35f9bcb8, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2ae5058e, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@72e78603, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@6e663f8, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5d554808, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@222216d, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@6e00206, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@519e4f44, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@27f1102e, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@382ec522, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@7100fcac, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@38a17472, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5749f69e, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@6aae375, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@6aae375, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@4f72ca4c, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@27a873c6, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@795d5bc7, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@12de38ed, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@76431c1c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@205ee2c2, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@14dc70a9, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@6e724f2b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@6abed9a5, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4063f1a8, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@4458a7eb, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@b67555, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@6073d5ba, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@35b05312, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@42a9fa, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4daa0a76, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@4030cd27, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@2b8ca137, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3988578c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@1dcc2697, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@13a1c4a4, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@5d657043, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@5d657043, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@5319fe3f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@3779d2f5, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1fbfc297, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@9d5a6a, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@5cf3ffad, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@253e2504, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@72613b05, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@15903d28, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@222970e, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@2f9ad7f8, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@67243c96, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@1b2c035c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6e4b846f, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@1a7e4f00, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@3f2ea505, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@e0ea486, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@25bb805b, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@3f631334, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@11324096, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@67a1293d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@197f9209, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@54e3d663, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@79d2fef6, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@26fe214e, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@12f2f4b8, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@3afb79a5, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@24d77e88, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3efc75c7, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@5372fd14, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4b5728e0, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@23d3cc56, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@23d3cc56, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@a25ee28, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@26cd7c0c, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@789321e2, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4b36a66e, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@3e507ccc, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@64209a86, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6a5281e5, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@38306c39, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@465ee902, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@9ec2155, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@9ec2155, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@3ef0e9db, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@21967c8, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@4a60c51d, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@215cf828, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@4e60235, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@4f1615d1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6ebbe882, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3064b00e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1ebf807a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@585bc4cc, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@19402812, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@5464443, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@10973a08, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@48fc3541, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@15f48f07, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@3b36846d, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@63579215, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@3133ee5e, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@69590584, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@31e9bdd5, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@2936bec0, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7de8edb8, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7eb20ecc, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@5afa7362, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2548d608, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@16c4af56, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@5af154d7, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@6b22b6d1, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@2093d00, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@72e7e201, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@299ee2d2, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@299ee2d2, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@7b43c9ae, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@2bfabc3a, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@39e553c, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7181c98f, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@118b2608, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@3f2079ec, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@4bf2f3be, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7ce64b3a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@46769c4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2bbdcf5f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@31f23894, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@7684e1ba, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7a949192, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@4e31c0f5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@5401dbf6, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@45e387b2, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4c75c38e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@74d7f133, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@21dd8693, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@324b67d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@3f81db60, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@5d047ae4, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1357434159], 0, 1): success
test SubList.testListIteratorSet([1177400914], 0, 1): success
test SubList.testListIteratorSet([2119934444], 0, 1): success
test SubList.testListIteratorSet([538548271], 0, 1): success
test SubList.testListIteratorSet([-1216364309], 0, 1): success
test SubList.testListIteratorSet([-891193869], 0, 1): success
test SubList.testListIteratorSet([-912983719], 0, 1): success
test SubList.testListIteratorSet([2105030455], 0, 1): success
test SubList.testListIteratorSet([-1462409774], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@29bd5982, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@22a524c8, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@63f2ae5a, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@1685d2ea, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@44032603, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@8678c8b, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@4913025a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@25e60ebd, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@8d89d8d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@24e6ff7, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@550ce929, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7311bf87, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([567150422], 0, 1): success
test SubList.testListIteratorSetPrevious([248717556], 0, 1): success
test SubList.testListIteratorSetPrevious([230509091], 0, 1): success
test SubList.testListIteratorSetPrevious([2109116511], 0, 1): success
test SubList.testListIteratorSetPrevious([-1746630876], 0, 1): success
test SubList.testListIteratorSetPrevious([-415623341], 0, 1): success
test SubList.testListIteratorSetPrevious([-1046287062], 0, 1): success
test SubList.testListIteratorSetPrevious([1060024388], 0, 1): success
test SubList.testListIteratorSetPrevious([255938572], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@2e2d70d9, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@57ba33f7, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@6dba4c96, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@7a67f1eb, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@4f0ff38f, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5438d5a9, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@620c4318, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@4d952118, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@650c0fc2, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@4fbf3cfe, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@6bd6be3e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@444c7970, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@395d551c, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@595d027c, 2, 5): success
test SubList.testModAdd(java.util.Vector@447a6d26, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@3ee8f1ec, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@5f3d89a6, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@13e546bf, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@266f4e2d, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@28a6f400, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@5157f1f, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@77efd627, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@3a792a47, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@6a4f78ae, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@506c9e21, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@ac06f3a, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@70549684, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@34035c91, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@484f3a75, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@41ff8eb0, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@3710b248, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@50cb3390, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@94e7cd8, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@8b013dc, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@390f5b2b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@478f3f65, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@6ace419d, 2, 5): success
test SubList.testModClear(java.util.LinkedList@390b6ccc, 2, 5): success
test SubList.testModClear(java.util.Vector@4759e988, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@12691a9e, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@59fe0e7b, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@409678c9, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@255e0217, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@45f852c9, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@4e86f6ed, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@26fc8f4b, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@2c53b36e, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6071b4bb, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@d55c186, 2, 5): success
test SubList.testModGet(java.util.LinkedList@795add79, 2, 5): success
test SubList.testModGet(java.util.Vector@c864bca, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@745bcad9, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@2bb28bc, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@58074f24, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@504b0507, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@4272d9e5, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@309d34c3, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@32292dfb, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@60596754, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@7e282491, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@7fe19c8, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@44b8a00b, 2, 5): success
test SubList.testModHashCode(java.util.Vector@5b66cfa0, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@1a29bcfb, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@56c2db99, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1d2ca6dd, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@461940b2, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@5c04305f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@6c801e82, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@688d64b, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@c11992b, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@2b42f8be, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@2315b207, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@38d133b8, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@2f4e38eb, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@7a10bc2d, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@2c90c8b1, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@70000662, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@118899a0, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@1fa8dc00, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4915cd00, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@207bac66, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@734550dc, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@26de08b1, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@15fbd4ba, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@51d27d55, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@77410ff6, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@7185e48a, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@10187698, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5a8591d, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@76fff5a6, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@50545a7d, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@7b74bbc2, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2b0d435, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@57776ecc, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@c874d64, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@769fb1e2, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@4c48dfc, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@61b4f609, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@3eaedccf, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@688329c8, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@16dc633b, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@45b69949, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@a445446, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1efdd762, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@68b0f6cd, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@7422f5bf, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@28611e05, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@2b86ce09, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@1ff5f3e5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@402ce61a, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@1d2d753d, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@5b598860, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3ec2d0a9, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@40aa6e90, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@263b2049, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@5d8d98a2, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@b4313fe, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@71b91331, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3ccf7410, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@2124ac2f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@2b788526, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@3c0c352, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@f48998, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@8b508e9, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1058c3a4, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@69bb3a56, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@2a5ea18e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1fe534bd, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@54f33239, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@2be47d80, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@18cbfcf2, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@43d45cd3, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@16282faf, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@39782e01, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@7ad778cd, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@4122ef4, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@436d11f4, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@3ae91828, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@7b748829, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@69e2361f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@8006b45, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@2963f920, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@21f9b482, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@1fc3da5d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@38f8ec99, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@22ee2122, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@60d8a237, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@60703763, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@22b7d34, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@77e9c0ca, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@34f8ee31, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@250b79c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3d88abd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@945b401, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@2d1131c8, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@490d5669, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@4a3b730f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@79af4c6b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@13620829, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@5de87613, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@599cce7f, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@24331bb2, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@2452f572, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@fb2059e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@360a17eb, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@19ed9269, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7e25d981, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@464f66da, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@765b975c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@c79272c, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@2e91308b, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@3584b483, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@430cc692, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@2e2f561a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@1aa22c1d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@ed9308c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@40438d64, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@4c92ab31, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@f6553a6, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@22f40dd5, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@7ea71e8c, 2, 5): success
test SubList.testModRemove(java.util.Vector@35e8fc1, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@40008ab7, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@6f968cba, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@3346c31d, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@79f9e025, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@366cb282, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@28071961, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@7698bae4, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@3188743a, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@385ed297, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@330983b7, 2, 5): success
test SubList.testModSet(java.util.LinkedList@6176ac31, 2, 5): success
test SubList.testModSet(java.util.Vector@162c7753, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@177c36dd, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@31a4c01c, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@7cf16428, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1275506b, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@4f50fd0, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@fe93a9a, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@47d598b5, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@8905355, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1c6a2385, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@116795a6, 2, 5): success
test SubList.testRemove(java.util.LinkedList@276eee14, 2, 5): success
test SubList.testRemove(java.util.Vector@4c9e9311, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@360c9947, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@2fab4fd1, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@43d26f1d, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@324b54cc, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@4300ffb1, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@36824938, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-86035954], 0, 1): success
test SubList.testSet([1037410076], 0, 1): success
test SubList.testSet([901046943], 0, 1): success
test SubList.testSet([1195570649], 0, 1): success
test SubList.testSet([-905145617], 0, 1): success
test SubList.testSet([1334558848], 0, 1): success
test SubList.testSet([166223088], 0, 1): success
test SubList.testSet([1203405161], 0, 1): success
test SubList.testSet([2052382870], 0, 1): success
test SubList.testSet(java.util.ArrayList@2d12ab6e, 2, 5): success
test SubList.testSet(java.util.LinkedList@17871622, 2, 5): success
test SubList.testSet(java.util.Vector@6773ddb4, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@70419c0a, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@444e1fc3, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@22ef0800, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@64ed46a8, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@7397d4ff, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@62ec4836, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@157fa95d, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@2d886ae4, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@86eaf9f, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@6e094fc1, 2, 5): success
test SubList.testSubList(java.util.LinkedList@249086a9, 2, 5): success
test SubList.testSubList(java.util.Vector@4b143a0d, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@21898bd1, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@1c0cf407, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@17d87c57, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@9acdaa8, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@32719a7b, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@7292e24f, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@51cdffc5, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@9879a92, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@50ac01d0, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@2f0e3ff9, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@58e6d0a1, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@321901df, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@5cf3c121, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@6ef2d7fc, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@7b83a906, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@7b83a906, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@3991315b, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@295aa0f, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@d5e242, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1398bd29, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@267cb8ee, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@289a5fc2, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@7c711066, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@40c51a31, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4e147b5b, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@be3b4c6, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@be3b4c6, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@391ae448, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@7ca72c9c, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@735f0c24, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@50e72de0, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@27665f6a, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@4e0d42fe, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@42dd57ba, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@4bcb0c16, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@163933df, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@7b5979a9, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@7b5979a9, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@292d6723, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@2d7b4eb0, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@5b7f4ce3, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7be484d8, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@708f198e, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7ab66465, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@2b821dd0, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@495fffb8, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@6a630fcd, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@53485228, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@53485228, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@56cb51ab, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@feac692, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@1fca6369, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@1d17b14e, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@508e67b6, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@18af959b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@34742e86, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@29b3ac81, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@78ca18f1, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@343efb3e, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@343efb3e, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@6173641c, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@4d19bbd8, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@39c622c7, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@27e85612, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@43873129, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@5dec1911, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@5836fdba, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@17766784, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1c91aff0, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@7059a76e, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@7059a76e, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@c07a464, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@56ef513f, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6f40128f, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@32a16189, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@48ce6d17, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@19e8352, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@5637df4d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@30248c1f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@7d228c0a, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@52273c5d, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@52273c5d, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@58b28d48, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@4dca05c4, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@6b4e342e, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@2142e2c9, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@4ae62518, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1248785e, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@5bb8ed3, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@72ce86ae, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@282b2eee, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@30d6442f, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@30d6442f, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@5ee497c2, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@38b188d, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@13bcf961, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1e574a61, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@5e86f80b, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3f47552d, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@26c8ce28, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@58d09ebc, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2bd1b4db, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@25051748, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1f40fe5f, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1abfd5f1, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@690c097c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@fa5ce76, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@5dc2dfb1, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@6a25485, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@5543a1e0, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@5b70515d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@6fbb84b6, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@445e3e4a, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@445e3e4a, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@1aca787e, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@244840cb, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@1cd16ba4, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@48d00180, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
