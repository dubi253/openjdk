#Test Results (version 2)
#Sat Apr 13 18:05:09 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
author=Mike Duigou
keywords=bug8010122 bug8004518 bug8024331 bug8024688 testng
run=USER_SPECIFIED testng Defaults\n
source=Defaults.java
title=Test Map default methods

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
elapsed=361 0\:00\:00.361
end=Sat Apr 13 18\:05\:09 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.13
javatestOS=Mac OS X 14.4.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Sat Apr 13 18\:05\:08 UTC 2024
test=java/util/Map/Defaults.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.4.1,family\:mac,simple_arch\:aarch64,simple_version\:14.4,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.4.1
totalTime=362
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Map

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f, mixed mode, sharing)

#section:build
----------messages:(7/206)----------
command: build Defaults
reason: Named class compiled on demand
started: Sat Apr 13 18:05:08 UTC 2024
Test directory:
  compile: Defaults
finished: Sat Apr 13 18:05:08 UTC 2024
elapsed time (seconds): 0.158
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:05:08 UTC 2024
Mode: agentvm
Agent id: 2
finished: Sat Apr 13 18:05:08 UTC 2024
elapsed time (seconds): 0.157
----------configuration:(13/951)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3399)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Map/Defaults.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
----------direct:(12/1026)----------
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:624: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(0L), map.compute(new Long(3L), fun));
                                                   ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:625: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(3L), map.compute(new Long(3L), fun));
                                                   ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:626: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(6L), map.compute(new Long(3L), fun));
                                                   ^
Note: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 warnings
result: Passed. Compilation successful

#section:testng
----------messages:(7/210)----------
command: testng Defaults
reason: User specified action: run testng Defaults 
started: Sat Apr 13 18:05:08 UTC 2024
Mode: agentvm
Agent id: 6
finished: Sat Apr 13 18:05:09 UTC 2024
elapsed time (seconds): 0.203
----------configuration:(13/943)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map

----------rerun:(26/2973)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Map/Defaults.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/Map/Defaults.java false Defaults
----------System.out:(518/56901)----------
test Defaults.testCompute("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@31cccb90): success
test Defaults.testCompute("Hashtable", java.util.Hashtable@c674dd2): success
test Defaults.testCompute("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@65c51865): success
test Defaults.testCompute("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7dc3bdd8): success
test Defaults.testCompute("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1c5eccce): success
test Defaults.testCompute("HashMap", java.util.HashMap@4ce06f9f): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@8d2fbea): success
test Defaults.testCompute("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7b509ad0): success
test Defaults.testCompute("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@70e72a3): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@c8fb669): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@24f8125e): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@2b8ab57b): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4db2bc52): success
test Defaults.testCompute("HashMap", java.util.HashMap@151631b9): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@7c35b454): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@1765acc0): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@44d7ed11): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2d9d431d): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5a2533a6): success
test Defaults.testCompute("EnumMap", java.util.EnumMap@32568d77): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@dcaef38): success
test Defaults.testCompute("TreeMap", java.util.TreeMap@30ded8a0): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@50e21703): success
test Defaults.testCompute("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@29d31a31): success
test Defaults.testCompute("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@3cfeb7e3): success
test Defaults.testComputeIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@34cbfb7e): success
test Defaults.testComputeIfAbsent("Hashtable", java.util.Hashtable@bf3ec2b): success
test Defaults.testComputeIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4f8954ed): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@29df14a2): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@331a686b): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@2a0068d7): success
test Defaults.testComputeIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@55db549a): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@6464b50): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@12ba095f): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@6f68feb9): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@4cff9385): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@73a82cf7): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@eb45ed6): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@f2bb741): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@3ff0932c): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@68ac02c3): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6e9ba199): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6b3d62ec): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4d20d035): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@68e21e99): success
test Defaults.testComputeIfAbsent("TreeMap", java.util.TreeMap@5a1c4ba7): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@5fcbcf6f): success
test Defaults.testComputeIfAbsent("EnumMap", java.util.EnumMap@33c1ff87): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@14e65ea1): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@6ad53bb3): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@459d819): success
test Defaults.testComputeIfAbsentNullFunction("Hashtable", java.util.Hashtable@2acd5e9b): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1d6a6315): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@59245b0f): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@7bd47ca5): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@b527185): success
test Defaults.testComputeIfAbsentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@2f615f67): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@5ccc5dbe): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@4ce163d9): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@401e63ca): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1b2d5614): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@12369f1): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5c57692e): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@4ae2a1d4): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@6dc1951a): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@432a40d9): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@42e29f4f): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4eac9f9f): success
test Defaults.testComputeIfAbsentNullFunction("EnumMap", java.util.EnumMap@3a03a4e9): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@30682cba): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3c789661): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@18195134): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@3ae9769e): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@4a6f7bbe): success
test Defaults.testComputeIfAbsentNullFunction("TreeMap", java.util.TreeMap@5cbf23fd): success
test Defaults.testComputeIfAbsentNulls("HashMap", java.util.HashMap@319bf3a7): success
test Defaults.testComputeIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@48b409ea): success
test Defaults.testComputeIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@5ebf7a10): success
test Defaults.testComputeIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@5efa6cc6): success
test Defaults.testComputeIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3b7efa79): success
test Defaults.testComputeIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@15d4743): success
test Defaults.testComputeIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@11681293): success
test Defaults.testComputeIfPresent("Hashtable", java.util.Hashtable@510b8c7d): success
test Defaults.testComputeIfPresent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@7cc32810): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@221cb806): success
test Defaults.testComputeIfPresent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@510b4ea8): success
test Defaults.testComputeIfPresent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@7d78102b): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@294713fa): success
test Defaults.testComputeIfPresent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7ca5421): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@697a8698): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@597bf33c): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@52588f4c): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6321b23d): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3dfe222b): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@528817b3): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@3c451a10): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@687a19c1): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@6010b9f9): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@13658577): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@d330449): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@10364493): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@c899ee9): success
test Defaults.testComputeIfPresent("EnumMap", java.util.EnumMap@46f75e1a): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@30e4d72): success
test Defaults.testComputeIfPresent("TreeMap", java.util.TreeMap@59d8f4a6): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@31247332): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@28478ca3): success
test Defaults.testComputeIfPresentNullFunction("Hashtable", java.util.Hashtable@22d1a7d9): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1e019fc6): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@58a0d491): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7460ee65): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@af23753): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1cb38ebd): success
test Defaults.testComputeIfPresentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@9f7f4af): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@45a57f75): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@3c8a65b6): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@6ebaec81): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@179e930): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5f3c95fd): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@199ddeaa): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@6ea90956): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@4bcf3d68): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@284ea5e3): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@3f136ab2): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7a4e568a): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@79b221e5): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@47f9a441): success
test Defaults.testComputeIfPresentNullFunction("EnumMap", java.util.EnumMap@2be0c227): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@3b5d3108): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@355de45e): success
test Defaults.testComputeIfPresentNullFunction("TreeMap", java.util.TreeMap@75547f7f): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2f69cd64): success
test Defaults.testComputeIfPresentNulls("HashMap", java.util.HashMap@13c53f3a): success
test Defaults.testComputeIfPresentNulls("IdentityHashMap", java.util.IdentityHashMap@5c3231cf): success
test Defaults.testComputeIfPresentNulls("LinkedHashMap", java.util.LinkedHashMap@1e3d90f7): success
test Defaults.testComputeIfPresentNulls("WeakHashMap", java.util.WeakHashMap@31777556): success
test Defaults.testComputeIfPresentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6f45aa7e): success
test Defaults.testComputeIfPresentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5a3166ff): success
test Defaults.testComputeIfPresentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@49ca58d7): success
test Defaults.testComputeNullFunction("Hashtable", java.util.Hashtable@89d2733): success
test Defaults.testComputeNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1981345d): success
test Defaults.testComputeNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@23738bf1): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@4b26a53): success
test Defaults.testComputeNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@420cd3a6): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3ed2dbdb): success
test Defaults.testComputeNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@43b3a5a9): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@3dcfab8d): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@79a3cb12): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@1820f6c5): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@389ec129): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@624e81ca): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@58bc3e66): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@458f6068): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@692e25e6): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@7fefd1e0): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@28eaf92): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@65b0f2e0): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@331d99d): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@591dfcfe): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@96c9878): success
test Defaults.testComputeNullFunction("EnumMap", java.util.EnumMap@53e64210): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2617e85): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@7cf2a1b6): success
test Defaults.testComputeNullFunction("TreeMap", java.util.TreeMap@7480c586): success
test Defaults.testComputeNulls("IdentityHashMap", java.util.IdentityHashMap@2649de77): success
test Defaults.testComputeNulls("HashMap", java.util.HashMap@30cb23d4): success
test Defaults.testComputeNulls("LinkedHashMap", java.util.LinkedHashMap@4a516131): success
test Defaults.testComputeNulls("WeakHashMap", java.util.WeakHashMap@47179a59): success
test Defaults.testComputeNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@443d90bc): success
test Defaults.testComputeNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4a4d4220): success
test Defaults.testComputeNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3fce94f5): success
test Defaults.testConcurrentMap_computeIfAbsent_racy(): success
test Defaults.testConcurrentMap_computeIfPresent_racy(): success
test Defaults.testConcurrentMap_compute_racy(): success
test Defaults.testConcurrentMap_compute_simple(): success
test Defaults.testConcurrentMap_merge_racy(): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@22bff45b): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@59a96c6b): success
test Defaults.testForEach("Hashtable", java.util.Hashtable@fa11e8e): success
test Defaults.testForEach("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@69b0cec2): success
test Defaults.testForEach("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@75df9fde): success
test Defaults.testForEach("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@51bafd35): success
test Defaults.testForEach("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6e00c787): success
test Defaults.testForEach("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@78784cd9): success
test Defaults.testForEach("HashMap", java.util.HashMap@72a95e61): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@73970b73): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@47995c6b): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@4e9c14b5): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@288dc4f9): success
test Defaults.testForEach("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7e3c79db): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@34e295e5): success
test Defaults.testForEach("HashMap", java.util.HashMap@2f3dcdbc): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@394546e2): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@3394545a): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1087f70e): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3f25da92): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@b50f01b): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7173778a): success
test Defaults.testForEach("EnumMap", java.util.EnumMap@3f0173e0): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@196f8eac): success
test Defaults.testForEach("TreeMap", java.util.TreeMap@59c2495): success
test Defaults.testForEach("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@48a23bb6): success
test Defaults.testForEach("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1ed82040): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@50a9a62e): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@21904606): success
test Defaults.testGetOrDefault("Hashtable", java.util.Hashtable@5b35a13): success
test Defaults.testGetOrDefault("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@147c047b): success
test Defaults.testGetOrDefault("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7bc5bad9): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7225805): success
test Defaults.testGetOrDefault("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6030daf2): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@52b0b036): success
test Defaults.testGetOrDefault("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@2b214f76): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@3dc331e8): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@1194ac15): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@60ad4c3d): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@20cf5e3e): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@51076ec9): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@448e5028): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@71bb535a): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@7580f5f7): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@46c3d069): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@82b372): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@6a1c454d): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@24a1af67): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@55410e40): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3af8b0e2): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@461f523e): success
test Defaults.testGetOrDefault("EnumMap", java.util.EnumMap@210dd0c9): success
test Defaults.testGetOrDefault("TreeMap", java.util.TreeMap@138dba0d): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@7cfe3bd3): success
test Defaults.testGetOrDefaultNulls("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@542891a3): success
test Defaults.testGetOrDefaultNulls("HashMap", java.util.HashMap@4ef72a09): success
test Defaults.testGetOrDefaultNulls("IdentityHashMap", java.util.IdentityHashMap@19fab8c1): success
test Defaults.testGetOrDefaultNulls("LinkedHashMap", java.util.LinkedHashMap@724e2b2): success
test Defaults.testGetOrDefaultNulls("WeakHashMap", java.util.WeakHashMap@470d2611): success
test Defaults.testGetOrDefaultNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@52da4b6b): success
test Defaults.testGetOrDefaultNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6f9634e2): success
test Defaults.testGetOrDefaultNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4f6c8053): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@beed1d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@63991c16, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@3aff783c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@74708ac9, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1015048f, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@3d050d65, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@4d7a03ee, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@54546e10, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@20c4411b, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@3d0b5d06, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@22a4162d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7bc27207, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@134c778a, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@24f48723, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@428be962, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5c816c0f, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7ff12d7e, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@35f533bd, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@7c38075e, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@46c5d740, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@47856436, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@3001bbd8, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@354d80f2, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@4af3acb9, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@4d8ebc67, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@c4709d5, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2d829b7f, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@1569642b, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@61f94b20, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@4cdd7dea, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@443f9057, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@4b21720, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@1bed8d48, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@1c17f811, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@3d01259b, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4d6c9bf9, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@50522c97, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@748ba044, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@1d6b46f, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@5b4a8a9d, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@7116c5cf, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@630fce3b, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@24b6f73d, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@35ca48fe, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@598c908, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@1d1c5305, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@75469b64, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@79334531, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@1cf81372, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@55627fbd, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@503c3daa, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@40b79804, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@12a72513, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@516f2a0, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7be623f0, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@512c466e, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@22630ac5, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@3d38bae4, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@71088293, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2710ce65, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@5321af93, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@2d14a27d, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@f90e46e, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@269f4d7, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@1fa37214, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@34917901, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@33b9082f, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6c68f69a, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4c31bda8, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@185980af, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@3993df1c, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@f57080f, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@fbf6492, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@dbda526, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@34278bd1, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMergeNullMerger("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@322155): success
test Defaults.testMergeNullMerger("Hashtable", java.util.Hashtable@47baeac): success
test Defaults.testMergeNullMerger("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@10514494): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5366ad55): success
test Defaults.testMergeNullMerger("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5a43bcdc): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7cf0f415): success
test Defaults.testMergeNullMerger("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@28523152): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@626d7a0d): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@566ba364): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@5a15844c): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@516c4eaf): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@1b288e77): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@60771c8e): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@2af952cb): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3143b1e0): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7b077138): success
test Defaults.testMergeNullMerger("EnumMap", java.util.EnumMap@57bb3e83): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@3ffc229): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@1df35ed6): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5144a091): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@125ba76e): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@1b7eb6e7): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3dcdfe2e): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@350d6c12): success
test Defaults.testMergeNullMerger("TreeMap", java.util.TreeMap@696f3b69): success
test Defaults.testPutIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@22495364): success
test Defaults.testPutIfAbsent("Hashtable", java.util.Hashtable@177332bd): success
test Defaults.testPutIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5baa650c): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@71d48df): success
test Defaults.testPutIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@18f33728): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@718a6804): success
test Defaults.testPutIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@d9f743e): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@41cabb1d): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@6a719b0c): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@2ad1c3ed): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@6374595f): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@564e3886): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1a976f37): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@462042e4): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@59ce3d13): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@30b7623f): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@4ca27e05): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@7d2477c1): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2b4c9137): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6becc9d6): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@52ddb97f): success
test Defaults.testPutIfAbsent("TreeMap", java.util.TreeMap@67d2cfe3): success
test Defaults.testPutIfAbsent("EnumMap", java.util.EnumMap@1a2d99e6): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@35ba610): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5acd21f7): success
test Defaults.testPutIfAbsentNulls("HashMap", java.util.HashMap@47647231): success
test Defaults.testPutIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@31bd801a): success
test Defaults.testPutIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@265cbfb8): success
test Defaults.testPutIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2a93667f): success
test Defaults.testPutIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@70ff88e2): success
test Defaults.testPutIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7eebd22d): success
test Defaults.testPutIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@61b8d4d5): success
test Defaults.testRemove("Hashtable", java.util.Hashtable@2440f488): success
test Defaults.testRemove("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@2ed33f0d): success
test Defaults.testRemove("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2c07e187): success
test Defaults.testRemove("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@61c1c63): success
test Defaults.testRemove("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1a3c7791): success
test Defaults.testRemove("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@189505fc): success
test Defaults.testRemove("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@5c2e2bad): success
test Defaults.testRemove("HashMap", java.util.HashMap@12a7756a): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@1f100576): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@6bfd92fe): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@657dfeb3): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6fee3536): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6d3aebbc): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@47211658): success
test Defaults.testRemove("HashMap", java.util.HashMap@5b017daa): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@59a80fc7): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@1d132196): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@539a7f51): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5e2d0f4d): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2ac098c5): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@54d21935): success
test Defaults.testRemove("EnumMap", java.util.EnumMap@5e4b5bf9): success
test Defaults.testRemove("TreeMap", java.util.TreeMap@5c1dc379): success
test Defaults.testRemove("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@76ac9776): success
test Defaults.testRemove("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@6a1040dc): success
test Defaults.testRemoveNulls("HashMap", java.util.HashMap@2b81c2ea): success
test Defaults.testRemoveNulls("IdentityHashMap", java.util.IdentityHashMap@4c770579): success
test Defaults.testRemoveNulls("LinkedHashMap", java.util.LinkedHashMap@4b52a70f): success
test Defaults.testRemoveNulls("WeakHashMap", java.util.WeakHashMap@3559c071): success
test Defaults.testRemoveNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6ece29a3): success
test Defaults.testRemoveNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@14a2af97): success
test Defaults.testRemoveNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@66cdbf38): success
test Defaults.testReplaceAll("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@ae37fd2): success
test Defaults.testReplaceAll("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6eadc1eb): success
test Defaults.testReplaceAll("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@12734ba1): success
test Defaults.testReplaceAll("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@35c989b0): success
test Defaults.testReplaceAll("Hashtable", java.util.Hashtable@4a50557e): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@6fd22ad0): success
test Defaults.testReplaceAll("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@4a16cd63): success
test Defaults.testReplaceAll("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@282466c3): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@2780a176): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@28dabc3): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@226f7d4b): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@62ff9b8b): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@15fb10ba): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4369aef): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@2eef20eb): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@337ce99e): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@1f0b0e38): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7b16e6a0): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4ec0dfa4): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@55e676ff): success
test Defaults.testReplaceAll("EnumMap", java.util.EnumMap@5f14c63a): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@513b7ad5): success
test Defaults.testReplaceAll("TreeMap", java.util.TreeMap@480b998c): success
test Defaults.testReplaceAll("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@44013539): success
test Defaults.testReplaceAll("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@618728ed): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@35441d96): success
test Defaults.testReplaceAllNoNullReplacement("Hashtable", java.util.Hashtable@27663f4): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@3247a78b): success
test Defaults.testReplaceAllNoNullReplacement("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@31250f86): success
test Defaults.testReplaceAllNoNullReplacement("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1db60c45): success
test Defaults.testReplaceAllNoNullReplacement("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@69ae293c): success
test Defaults.testReplaceAllNoNullReplacement("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@508951d2): success
test Defaults.testReplaceKV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4a5370f9): success
test Defaults.testReplaceKV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@df4a128): success
test Defaults.testReplaceKV("Hashtable", java.util.Hashtable@3ae1ba44): success
test Defaults.testReplaceKV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@e58d84b): success
test Defaults.testReplaceKV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@63bfc40): success
test Defaults.testReplaceKV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@66ec1e2a): success
test Defaults.testReplaceKV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@97c01d6): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@2ba2180d): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@4c65a872): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@b6e7ac2): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7bdcb07f): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@3a2f70de): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4f65d270): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@4a6de815): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@2b91f49b): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4706f67b): success
test Defaults.testReplaceKV("EnumMap", java.util.EnumMap@27d11411): success
test Defaults.testReplaceKV("TreeMap", java.util.TreeMap@760bd082): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4cc9ab13): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@6b41858d): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@7ee01fdf): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1bf34f30): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6aacfea0): success
test Defaults.testReplaceKV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@163c15d1): success
test Defaults.testReplaceKV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@48410bed): success
test Defaults.testReplaceKVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@6e6180c3): success
test Defaults.testReplaceKVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@18ac7cb0): success
test Defaults.testReplaceKVNoNulls("Hashtable", java.util.Hashtable@4c93b1f7): success
test Defaults.testReplaceKVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5d0c1502): success
test Defaults.testReplaceKVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@3161ef41): success
test Defaults.testReplaceKVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3383ab19): success
test Defaults.testReplaceKVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@5e4f33cb): success
test Defaults.testReplaceKVNulls("HashMap", java.util.HashMap@45d5f737): success
test Defaults.testReplaceKVNulls("IdentityHashMap", java.util.IdentityHashMap@50fa361): success
test Defaults.testReplaceKVNulls("LinkedHashMap", java.util.LinkedHashMap@3a1c17a9): success
test Defaults.testReplaceKVNulls("WeakHashMap", java.util.WeakHashMap@b6f31f6): success
test Defaults.testReplaceKVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@32903c43): success
test Defaults.testReplaceKVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@40eef744): success
test Defaults.testReplaceKVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5a2a159b): success
test Defaults.testReplaceKVV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@607f04d1): success
test Defaults.testReplaceKVV("Hashtable", java.util.Hashtable@10ad1f4c): success
test Defaults.testReplaceKVV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3efcde86): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@4d1b769d): success
test Defaults.testReplaceKVV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@75a37f65): success
test Defaults.testReplaceKVV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@3f1fd7dc): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@77d762e9): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@65dbb962): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@10787dbd): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@21420eea): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@3c8287c): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@51901577): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@42f52247): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@c267ca6): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@7e22dde7): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@349e755e): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@36ea68d2): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@24e6b359): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@51457786): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@10a98ab3): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@15089619): success
test Defaults.testReplaceKVV("EnumMap", java.util.EnumMap@608ba3e9): success
test Defaults.testReplaceKVV("TreeMap", java.util.TreeMap@73fde289): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@31bfea38): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@44c94c16): success
test Defaults.testReplaceKVVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@34c1c2e8): success
test Defaults.testReplaceKVVNoNulls("Hashtable", java.util.Hashtable@6c4318d6): success
test Defaults.testReplaceKVVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@240eac86): success
test Defaults.testReplaceKVVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5dd157b6): success
test Defaults.testReplaceKVVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@368c38e1): success
test Defaults.testReplaceKVVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@5df5a68d): success
test Defaults.testReplaceKVVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7ae78648): success
test Defaults.testReplaceKVVNulls("HashMap", java.util.HashMap@ba6ab29): success
test Defaults.testReplaceKVVNulls("IdentityHashMap", java.util.IdentityHashMap@24afd2c7): success
test Defaults.testReplaceKVVNulls("LinkedHashMap", java.util.LinkedHashMap@4f8c8ba8): success
test Defaults.testReplaceKVVNulls("WeakHashMap", java.util.WeakHashMap@3ac104e9): success
test Defaults.testReplaceKVVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@56ff9c93): success
test Defaults.testReplaceKVVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@72b5288a): success
test Defaults.testReplaceKVVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@53c690ca): success

===============================================
java/util/Map/Defaults.java
Total tests run: 512, Passes: 512, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
