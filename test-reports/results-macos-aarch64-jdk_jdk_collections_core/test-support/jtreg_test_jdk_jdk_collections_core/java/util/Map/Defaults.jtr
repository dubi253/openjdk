#Test Results (version 2)
#Fri Mar 01 16:27:44 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
author=Mike Duigou
keywords=bug8010122 bug8004518 bug8024331 bug8024688 testng
run=USER_SPECIFIED testng Defaults\n
source=Defaults.java
title=Test Map default methods

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
elapsed=380 0\:00\:00.380
end=Fri Mar 01 16\:27\:44 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Fri Mar 01 16\:27\:44 UTC 2024
test=java/util/Map/Defaults.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=382
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Map

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b, mixed mode, sharing)

#section:build
----------messages:(7/206)----------
command: build Defaults
reason: Named class compiled on demand
started: Fri Mar 01 16:27:44 UTC 2024
Test directory:
  compile: Defaults
finished: Fri Mar 01 16:27:44 UTC 2024
elapsed time (seconds): 0.158
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
reason: .class file out of date or does not exist
started: Fri Mar 01 16:27:44 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 16:27:44 UTC 2024
elapsed time (seconds): 0.157
----------configuration:(13/951)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3399)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Map/Defaults.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
----------direct:(12/1026)----------
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:624: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(0L), map.compute(new Long(3L), fun));
                                                   ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:625: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(3L), map.compute(new Long(3L), fun));
                                                   ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:626: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(6L), map.compute(new Long(3L), fun));
                                                   ^
Note: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 warnings
result: Passed. Compilation successful

#section:testng
----------messages:(7/209)----------
command: testng Defaults
reason: User specified action: run testng Defaults 
started: Fri Mar 01 16:27:44 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 01 16:27:44 UTC 2024
elapsed time (seconds): 0.22
----------configuration:(13/943)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map

----------rerun:(26/2973)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Map/Defaults.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/Map/Defaults.java false Defaults
----------System.out:(518/56884)----------
test Defaults.testCompute("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2bf9680f): success
test Defaults.testCompute("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1eaa22d0): success
test Defaults.testCompute("Hashtable", java.util.Hashtable@b1f64fc): success
test Defaults.testCompute("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@355f5179): success
test Defaults.testCompute("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1b8999c): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@31b73e77): success
test Defaults.testCompute("HashMap", java.util.HashMap@143f3f2b): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@55023510): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@641d052c): success
test Defaults.testCompute("HashMap", java.util.HashMap@53a8a6c2): success
test Defaults.testCompute("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@201e072): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@71e02cc7): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@33498492): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@622e1f3d): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@48ac8afa): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@708a344c): success
test Defaults.testCompute("EnumMap", java.util.EnumMap@41b0a1f5): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@65817a12): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@5310972f): success
test Defaults.testCompute("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@122d9d14): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@352dca5f): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1066b28b): success
test Defaults.testCompute("TreeMap", java.util.TreeMap@10a5cb03): success
test Defaults.testCompute("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@32434363): success
test Defaults.testCompute("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7745e0b4): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@59eeac94): success
test Defaults.testComputeIfAbsent("Hashtable", java.util.Hashtable@fe82f4e): success
test Defaults.testComputeIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@6f94ef3c): success
test Defaults.testComputeIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@50fbc4f): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@520f3c10): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@9c485b2): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@70c7571b): success
test Defaults.testComputeIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1c5199df): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@c32c672): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@7561302d): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@345c3a16): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@4d0fcc49): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5a2ad7f): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@5473c559): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7c08e18a): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@2d203306): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@7920e453): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@11ca53d): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2bfb735): success
test Defaults.testComputeIfAbsent("EnumMap", java.util.EnumMap@1a18ecef): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6d24836c): success
test Defaults.testComputeIfAbsent("TreeMap", java.util.TreeMap@774d8c3): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@296eea8f): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@4d4c5590): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@68f70d81): success
test Defaults.testComputeIfAbsentNullFunction("Hashtable", java.util.Hashtable@55f5f29d): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6de8002d): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@20994d3a): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2619b55e): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5034a397): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@576dd108): success
test Defaults.testComputeIfAbsentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@714b11d8): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@33844113): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@6fc71ab): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@66144f5c): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@23864745): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2cd50a16): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@61a44701): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@508fe5ef): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@1109a9ac): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@18bb84e): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@6724bf65): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@38ff25b6): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@20d25e17): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@56891be3): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5c5456c): success
test Defaults.testComputeIfAbsentNullFunction("EnumMap", java.util.EnumMap@712656e3): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@53e0fb49): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@6d2e16dc): success
test Defaults.testComputeIfAbsentNullFunction("TreeMap", java.util.TreeMap@70b402a): success
test Defaults.testComputeIfAbsentNulls("HashMap", java.util.HashMap@59ad80d8): success
test Defaults.testComputeIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@3699a0a7): success
test Defaults.testComputeIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@66c982ca): success
test Defaults.testComputeIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@44956c44): success
test Defaults.testComputeIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@40ed17e1): success
test Defaults.testComputeIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2f2bc81d): success
test Defaults.testComputeIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6a8dd60d): success
test Defaults.testComputeIfPresent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@4c8db667): success
test Defaults.testComputeIfPresent("Hashtable", java.util.Hashtable@1c3e4d71): success
test Defaults.testComputeIfPresent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@53eb5160): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@db227d5): success
test Defaults.testComputeIfPresent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@73964e7c): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@635599c1): success
test Defaults.testComputeIfPresent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@6970ad7d): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@21dcbda): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@206fb372): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@70c6902c): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@31fb9a17): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@802f69): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@12d65b5b): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4c8f2dee): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@226893fa): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@32ab4447): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@284da746): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@192fada0): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6152b949): success
test Defaults.testComputeIfPresent("EnumMap", java.util.EnumMap@48625809): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7d8b185c): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2ca24928): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4320c1e1): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1e477592): success
test Defaults.testComputeIfPresent("TreeMap", java.util.TreeMap@50f97daf): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@f604423): success
test Defaults.testComputeIfPresentNullFunction("Hashtable", java.util.Hashtable@41ad04e2): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@3907a97f): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2bcd96e): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@2ca7abf7): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@393a77d8): success
test Defaults.testComputeIfPresentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@6806c977): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@5b3daea9): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@7354d9a7): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@3558fbbb): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@ec49703): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6466544b): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@783aa344): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4381d355): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@49089ecb): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@7208f61e): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@18155c0b): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@23ae2c1a): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5c3d1d92): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@59a73a12): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1c5ba0b7): success
test Defaults.testComputeIfPresentNullFunction("EnumMap", java.util.EnumMap@27e0731d): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@7f29bec0): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@4c64261f): success
test Defaults.testComputeIfPresentNullFunction("TreeMap", java.util.TreeMap@8ad5483): success
test Defaults.testComputeIfPresentNulls("LinkedHashMap", java.util.LinkedHashMap@5d1d0745): success
test Defaults.testComputeIfPresentNulls("WeakHashMap", java.util.WeakHashMap@362a16ce): success
test Defaults.testComputeIfPresentNulls("IdentityHashMap", java.util.IdentityHashMap@4e7cff58): success
test Defaults.testComputeIfPresentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@47f513d0): success
test Defaults.testComputeIfPresentNulls("HashMap", java.util.HashMap@3b94f35f): success
test Defaults.testComputeIfPresentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@252f2b31): success
test Defaults.testComputeIfPresentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@d145d0): success
test Defaults.testComputeNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7664c4f): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@1032949d): success
test Defaults.testComputeNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@2b4dafaa): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@29a8951f): success
test Defaults.testComputeNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@44e2d597): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@bc8708e): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@100415d6): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@3e3fb26b): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@1e931233): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@510f9ea6): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6a70a591): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@68959f24): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@5dfdfac): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@59379522): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@34907ab5): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@8ba606b): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@65f020e3): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@e0e6dc8): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@56a6b22b): success
test Defaults.testComputeNullFunction("EnumMap", java.util.EnumMap@cf41c60): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@310497fa): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@7ef437a1): success
test Defaults.testComputeNullFunction("TreeMap", java.util.TreeMap@61beb9a2): success
test Defaults.testComputeNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@4722fc5e): success
test Defaults.testComputeNullFunction("Hashtable", java.util.Hashtable@71b83fb1): success
test Defaults.testComputeNulls("IdentityHashMap", java.util.IdentityHashMap@392ad33f): success
test Defaults.testComputeNulls("HashMap", java.util.HashMap@2f38c838): success
test Defaults.testComputeNulls("LinkedHashMap", java.util.LinkedHashMap@4e21c0f2): success
test Defaults.testComputeNulls("WeakHashMap", java.util.WeakHashMap@46f84434): success
test Defaults.testComputeNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@79e7983): success
test Defaults.testComputeNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@76850821): success
test Defaults.testComputeNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5580924): success
test Defaults.testConcurrentMap_computeIfAbsent_racy(): success
test Defaults.testConcurrentMap_computeIfPresent_racy(): success
test Defaults.testConcurrentMap_compute_racy(): success
test Defaults.testConcurrentMap_compute_simple(): success
test Defaults.testConcurrentMap_merge_racy(): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@172ce0): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@3b14cb0c): success
test Defaults.testForEach("Hashtable", java.util.Hashtable@31cebeb4): success
test Defaults.testForEach("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@105af50): success
test Defaults.testForEach("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7002bd88): success
test Defaults.testForEach("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@444bd044): success
test Defaults.testForEach("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1813c841): success
test Defaults.testForEach("HashMap", java.util.HashMap@636ec0a7): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@2253ca9c): success
test Defaults.testForEach("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@74c33836): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@13bb4c00): success
test Defaults.testForEach("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@2138a3f9): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@427c35d3): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6005a9c2): success
test Defaults.testForEach("HashMap", java.util.HashMap@23fff96d): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@51af2b73): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@46320b16): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@2a568d): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@35b6be73): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1b2d5b3b): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7e467c46): success
test Defaults.testForEach("EnumMap", java.util.EnumMap@33ea78f1): success
test Defaults.testForEach("TreeMap", java.util.TreeMap@4642a0e): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4dd34777): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@35fe320d): success
test Defaults.testForEach("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2af3787b): success
test Defaults.testForEach("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@4e1a5b3a): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@50260682): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@2a555c5d): success
test Defaults.testGetOrDefault("Hashtable", java.util.Hashtable@4b4a0de): success
test Defaults.testGetOrDefault("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@318f2a75): success
test Defaults.testGetOrDefault("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2d0cf6d7): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@9141274): success
test Defaults.testGetOrDefault("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6278eb37): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1405bd15): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@111b0cb9): success
test Defaults.testGetOrDefault("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@3b838d64): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@2eb2e1cc): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@20c0f9a5): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6f8febf7): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6b685666): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@5eaa6497): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7134f3f6): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@7abe875f): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@fa014b8): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@1526301): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4b0ebc60): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1fb86e52): success
test Defaults.testGetOrDefault("EnumMap", java.util.EnumMap@1a917810): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@757aee63): success
test Defaults.testGetOrDefault("TreeMap", java.util.TreeMap@beeefb1): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@5ac9ba4c): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@4e41db0): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@47c1b971): success
test Defaults.testGetOrDefaultNulls("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@25395a20): success
test Defaults.testGetOrDefaultNulls("HashMap", java.util.HashMap@4cb47ee9): success
test Defaults.testGetOrDefaultNulls("IdentityHashMap", java.util.IdentityHashMap@4dfc51ac): success
test Defaults.testGetOrDefaultNulls("LinkedHashMap", java.util.LinkedHashMap@191c9136): success
test Defaults.testGetOrDefaultNulls("WeakHashMap", java.util.WeakHashMap@a49ae89): success
test Defaults.testGetOrDefaultNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4b061b30): success
test Defaults.testGetOrDefaultNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1f8f4d34): success
test Defaults.testGetOrDefaultNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6f632c0): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@598da292, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7205a055, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@4e2d1dfd, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@6e79842e, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1411a712, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@cbe8e6d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@13f46304, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@210526b, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@47007f2e, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@63d7515, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@37f1b154, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@66128a5a, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@6a9037e5, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4d46cf18, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@2bad3dde, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@625c90f9, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@1accd442, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@538931c2, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@122fb99e, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3199bfb6, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@632e17e9, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@9d1a21e, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@9332fbd, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@f7968e7, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@566dea96, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@7a93617d, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@451cd18e, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5cdda7f8, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@408730e5, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@74787984, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@24236bd6, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@63f81f88, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4b82c291, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@5911afa4, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@17a1061, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@74115c75, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4fcc7dba, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5c3ad8f0, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@269e3ce3, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@458db3ef, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@563723c7, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@d5d6b40, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@48aaaf7b, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@37da9f7c, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@7f1b8c6b, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@6210138, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1f6e6dc, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1932df4, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@5fe8313b, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@27f0b580, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@25228008, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2e600ded, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@59cc804a, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@591dc1e1, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@2606d00e, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3360db3d, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@3b018418, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@21d5f7de, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@73c42c24, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6e186a38, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1abffdda, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@4b3cc704, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@3fe04980, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@2f448e15, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@aa2fbdf, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1ea102cb, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@381ab0e9, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2c7135c3, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@4f6b715a, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@417c21fd, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@11a63194, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@56c52bda, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1e681713, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@5280dc28, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1497768, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMergeNullMerger("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@2c50ba0): success
test Defaults.testMergeNullMerger("Hashtable", java.util.Hashtable@301e1070): success
test Defaults.testMergeNullMerger("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@59187eab): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7f4ac184): success
test Defaults.testMergeNullMerger("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@300e5787): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@606fc6e5): success
test Defaults.testMergeNullMerger("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7d8e017d): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@67365aeb): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@241f5654): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5c786fb5): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@799b358c): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@477c655c): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@899dbac): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7cabd3cf): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@18257490): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@49a4d197): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@47e9be0): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@29f7aed3): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7827dbfa): success
test Defaults.testMergeNullMerger("EnumMap", java.util.EnumMap@37a4eb9a): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@298b2ed8): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@3b1473f): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1f7a33da): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@230e9915): success
test Defaults.testMergeNullMerger("TreeMap", java.util.TreeMap@780a8bdf): success
test Defaults.testPutIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6c5a2c43): success
test Defaults.testPutIfAbsent("Hashtable", java.util.Hashtable@2f39c070): success
test Defaults.testPutIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7b87f99d): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5ce7cf8f): success
test Defaults.testPutIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@56a854d4): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@69b783e0): success
test Defaults.testPutIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@42605239): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@268b3196): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@2d672678): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@7b8b335a): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1c808b2d): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@659898bd): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4d48d937): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@24a59286): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@581aaff2): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@3abaf3a6): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@15cb74b4): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3ab63961): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@b4a8ce1): success
test Defaults.testPutIfAbsent("TreeMap", java.util.TreeMap@bc6c2f8): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@6e04ca4b): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4906e0de): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1ddac5b4): success
test Defaults.testPutIfAbsent("EnumMap", java.util.EnumMap@448a6dc9): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5a950ce9): success
test Defaults.testPutIfAbsentNulls("HashMap", java.util.HashMap@54f4fd74): success
test Defaults.testPutIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@461873c0): success
test Defaults.testPutIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@3f3989f4): success
test Defaults.testPutIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@6082debe): success
test Defaults.testPutIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@169b2e21): success
test Defaults.testPutIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5818748f): success
test Defaults.testPutIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3a3d41dc): success
test Defaults.testRemove("Hashtable", java.util.Hashtable@2474a59b): success
test Defaults.testRemove("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@56f8259d): success
test Defaults.testRemove("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@34d4698c): success
test Defaults.testRemove("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@40f4d0b9): success
test Defaults.testRemove("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1350f7d8): success
test Defaults.testRemove("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7ac4e9b9): success
test Defaults.testRemove("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@60b8b386): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@137d7fdb): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@524075e0): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@635800de): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6549afa0): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@326f8aaf): success
test Defaults.testRemove("HashMap", java.util.HashMap@5466ec43): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@130d2e13): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@56650ef): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@36215479): success
test Defaults.testRemove("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2185b9bd): success
test Defaults.testRemove("EnumMap", java.util.EnumMap@1c9da82): success
test Defaults.testRemove("HashMap", java.util.HashMap@7f45459b): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4d8d4178): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@5654fa08): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@17c52fa6): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@75e963b7): success
test Defaults.testRemove("TreeMap", java.util.TreeMap@526dfde3): success
test Defaults.testRemove("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@3bf9e382): success
test Defaults.testRemoveNulls("IdentityHashMap", java.util.IdentityHashMap@421c6908): success
test Defaults.testRemoveNulls("HashMap", java.util.HashMap@6e19d21): success
test Defaults.testRemoveNulls("LinkedHashMap", java.util.LinkedHashMap@748a0931): success
test Defaults.testRemoveNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@261bb331): success
test Defaults.testRemoveNulls("WeakHashMap", java.util.WeakHashMap@6558c3dc): success
test Defaults.testRemoveNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@e21239c): success
test Defaults.testRemoveNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@422e33c0): success
test Defaults.testReplaceAll("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@20ffa706): success
test Defaults.testReplaceAll("Hashtable", java.util.Hashtable@4d80a228): success
test Defaults.testReplaceAll("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@383f0984): success
test Defaults.testReplaceAll("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@439f8b43): success
test Defaults.testReplaceAll("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7b4d12d1): success
test Defaults.testReplaceAll("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7a9ae9bb): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@67fcbd52): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@26f8e6b4): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@624b4116): success
test Defaults.testReplaceAll("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7c978d1e): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@61c2ad3d): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@790203bf): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@9b11fbd): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@3a7018ea): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@3ba7e380): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2a28178): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@b80a584): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@67c5ec8f): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4d21910a): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@23764b2d): success
test Defaults.testReplaceAll("EnumMap", java.util.EnumMap@48b19fa0): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@50e9695f): success
test Defaults.testReplaceAll("TreeMap", java.util.TreeMap@7119aca9): success
test Defaults.testReplaceAll("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@ad618c2): success
test Defaults.testReplaceAll("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@69607cec): success
test Defaults.testReplaceAllNoNullReplacement("Hashtable", java.util.Hashtable@2dab19f1): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1cfd8c80): success
test Defaults.testReplaceAllNoNullReplacement("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@4cf43515): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@3964b3cd): success
test Defaults.testReplaceAllNoNullReplacement("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@6ee4a4de): success
test Defaults.testReplaceAllNoNullReplacement("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@7a86bfa5): success
test Defaults.testReplaceAllNoNullReplacement("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1e926cbd): success
test Defaults.testReplaceKV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7848b2a1): success
test Defaults.testReplaceKV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@56f29556): success
test Defaults.testReplaceKV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1ce6eaad): success
test Defaults.testReplaceKV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5420b53e): success
test Defaults.testReplaceKV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@794ddf2e): success
test Defaults.testReplaceKV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@5d4a7f0b): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@5be52169): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@1bde6974): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@17cf9f6d): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@7bee8d54): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5ddbe096): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@3ad3876f): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@6c4c99af): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@26922836): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@3df41fd9): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@3975b89a): success
test Defaults.testReplaceKV("EnumMap", java.util.EnumMap@3870d515): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@151dbf05): success
test Defaults.testReplaceKV("TreeMap", java.util.TreeMap@902eaa6): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@b23993d): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@57c8444b): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@77e06022): success
test Defaults.testReplaceKV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@8068341): success
test Defaults.testReplaceKV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@24c248ac): success
test Defaults.testReplaceKV("Hashtable", java.util.Hashtable@12cf524b): success
test Defaults.testReplaceKVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@47910ead): success
test Defaults.testReplaceKVNoNulls("Hashtable", java.util.Hashtable@34e6cb9f): success
test Defaults.testReplaceKVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@3df2151): success
test Defaults.testReplaceKVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@20b877f): success
test Defaults.testReplaceKVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@4b1e5cd6): success
test Defaults.testReplaceKVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@598f3693): success
test Defaults.testReplaceKVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@2aa8dfba): success
test Defaults.testReplaceKVNulls("HashMap", java.util.HashMap@62c9a4d8): success
test Defaults.testReplaceKVNulls("LinkedHashMap", java.util.LinkedHashMap@2611f944): success
test Defaults.testReplaceKVNulls("WeakHashMap", java.util.WeakHashMap@111d97fd): success
test Defaults.testReplaceKVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@60f80c93): success
test Defaults.testReplaceKVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1be2fd38): success
test Defaults.testReplaceKVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@76bc2d69): success
test Defaults.testReplaceKVNulls("IdentityHashMap", java.util.IdentityHashMap@5fbdf4ae): success
test Defaults.testReplaceKVV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@17f81985): success
test Defaults.testReplaceKVV("Hashtable", java.util.Hashtable@5fd437cf): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5a06aa7): success
test Defaults.testReplaceKVV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@28cb8b43): success
test Defaults.testReplaceKVV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1157e9a9): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@56304e73): success
test Defaults.testReplaceKVV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4f377e4d): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@75c94703): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@2497355d): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@48a36173): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@99e6b48): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@65aa3f66): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@38dd83a5): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@69b19407): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@54051fe6): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@60a42f65): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6dff090f): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1af0ca78): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@585c029): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5aa13d00): success
test Defaults.testReplaceKVV("EnumMap", java.util.EnumMap@1ff2689a): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@56c513be): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1cbb90d): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@34f44d38): success
test Defaults.testReplaceKVV("TreeMap", java.util.TreeMap@6d9015c5): success
test Defaults.testReplaceKVVNoNulls("Hashtable", java.util.Hashtable@3dd7a91): success
test Defaults.testReplaceKVVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@4a197113): success
test Defaults.testReplaceKVVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@6fbc1d27): success
test Defaults.testReplaceKVVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@4d413d74): success
test Defaults.testReplaceKVVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@56cd7d78): success
test Defaults.testReplaceKVVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@5b0f054d): success
test Defaults.testReplaceKVVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@351c60d5): success
test Defaults.testReplaceKVVNulls("HashMap", java.util.HashMap@4ae5c06a): success
test Defaults.testReplaceKVVNulls("IdentityHashMap", java.util.IdentityHashMap@634d5b6): success
test Defaults.testReplaceKVVNulls("LinkedHashMap", java.util.LinkedHashMap@3280563c): success
test Defaults.testReplaceKVVNulls("WeakHashMap", java.util.WeakHashMap@54438c8c): success
test Defaults.testReplaceKVVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@472a5bd1): success
test Defaults.testReplaceKVVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@29eed4bb): success
test Defaults.testReplaceKVVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@623612fe): success

===============================================
java/util/Map/Defaults.java
Total tests run: 512, Passes: 512, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
