#Test Results (version 2)
#Sun Mar 17 17:40:58 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=179 0\:00\:00.179
end=Sun Mar 17 17\:40\:58 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.23
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Sun Mar 17 17\:40\:58 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=180
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Collection

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc, mixed mode, sharing)

#section:build
----------messages:(7/234)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Sun Mar 17 17:40:58 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Sun Mar 17 17:40:58 UTC 2024
elapsed time (seconds): 0.103
result: Passed. Build successful

#section:compile
----------messages:(7/293)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Sun Mar 17 17:40:58 UTC 2024
Mode: agentvm
Agent id: 2
finished: Sun Mar 17 17:40:58 UTC 2024
elapsed time (seconds): 0.103
----------configuration:(10/723)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d

----------rerun:(33/3384)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
----------direct:(7/587)----------
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/292)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Sun Mar 17 17:40:58 UTC 2024
Mode: agentvm
Agent id: 4
finished: Sun Mar 17 17:40:58 UTC 2024
elapsed time (seconds): 0.075
----------configuration:(13/971)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection

----------rerun:(26/2874)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34428)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0  8.269
ArrayList spliterator().tryAdvance()                               0  4.309
ArrayList spliterator().forEachRemaining()                         0  3.973
ArrayList contains                                                 0  7.807
ArrayList containsAll                                              0  1.671
ArrayList forEach                                                  0  4.860
ArrayList toArray()                                                0  0.229
ArrayList toArray(a)                                               0  0.272
ArrayList toArray(empty)                                           0  0.216
ArrayList stream().forEach                                         0  4.173
ArrayList stream().mapToInt                                        0 29.139
ArrayList stream().collect                                         0 23.734
ArrayList stream()::iterator                                       0  7.940
ArrayList parallelStream().forEach                                 0 14.684
ArrayList parallelStream().mapToInt                                0 19.159
ArrayList parallelStream().collect                                 0 11.844
ArrayList parallelStream()::iterator                               0  5.947
ArrayList removeIf                                                 0  4.568
ArrayList remove(Object)                                           0  0.515
ArrayList listIterator forward loop                                0  1.764
ArrayList listIterator backward loop                               0  0.429
ArrayList indexOf                                                  0  0.395
ArrayList lastIndexOf                                              0  0.249
ArrayList equals                                                   0  0.492
ArrayList hashCode                                                 0  0.648
ArrayList replaceAll                                               0  4.608
ArrayList$SubList iterate for loop                                 0  0.701
ArrayList$SubList iterator().forEachRemaining()                    0  0.405
ArrayList$SubList spliterator().tryAdvance()                       0  6.222
ArrayList$SubList spliterator().forEachRemaining()                 0  0.183
ArrayList$SubList contains                                         0  0.189
ArrayList$SubList containsAll                                      0  0.206
ArrayList$SubList forEach                                          0  0.502
ArrayList$SubList toArray()                                        0  0.130
ArrayList$SubList toArray(a)                                       0  0.229
ArrayList$SubList toArray(empty)                                   0  0.296
ArrayList$SubList stream().forEach                                 0  0.279
ArrayList$SubList stream().mapToInt                                0  0.588
ArrayList$SubList stream().collect                                 0  0.412
ArrayList$SubList stream()::iterator                               0  0.329
ArrayList$SubList parallelStream().forEach                         0  3.036
ArrayList$SubList parallelStream().mapToInt                        0  2.545
ArrayList$SubList parallelStream().collect                         0  3.149
ArrayList$SubList parallelStream()::iterator                       0  0.369
ArrayList$SubList removeIf                                         0  0.173
ArrayList$SubList remove(Object)                                   0  0.282
ArrayList$SubList listIterator forward loop                        0  0.143
ArrayList$SubList listIterator backward loop                       0  0.146
ArrayList$SubList indexOf                                          0  0.093
ArrayList$SubList lastIndexOf                                      0  0.173
ArrayList$SubList equals                                           0  0.708
ArrayList$SubList hashCode                                         0  0.140
ArrayList$SubList replaceAll                                       0  0.193
Vector iterate for loop                                            0  0.342
Vector iterator().forEachRemaining()                               0  0.213
Vector spliterator().tryAdvance()                                  0  0.282
Vector spliterator().forEachRemaining()                            0  0.116
Vector contains                                                    0  1.804
Vector containsAll                                                 0  0.475
Vector forEach                                                     0  0.133
Vector toArray()                                                   0  0.076
Vector toArray(a)                                                  0  0.209
Vector toArray(empty)                                              0  0.090
Vector stream().forEach                                            0  0.203
Vector stream().mapToInt                                           0  0.924
Vector stream().collect                                            0  0.339
Vector stream()::iterator                                          0  0.289
Vector parallelStream().forEach                                    0  2.505
Vector parallelStream().mapToInt                                   0  1.751
Vector parallelStream().collect                                    0  2.625
Vector parallelStream()::iterator                                  0  0.312
Vector removeIf                                                    0  0.136
Vector remove(Object)                                              0  0.917
Vector listIterator forward loop                                   0  0.262
Vector listIterator backward loop                                  0  0.213
Vector indexOf                                                     0  0.369
Vector lastIndexOf                                                 0  0.156
Vector equals                                                      0  0.761
Vector hashCode                                                    0  0.316
Vector replaceAll                                                  0  0.239
SynchronizedRandomAccessList iterate for loop                      0  0.442
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.226
SynchronizedRandomAccessList spliterator().tryAdvance()            0  6.023
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.289
SynchronizedRandomAccessList contains                              0  0.575
SynchronizedRandomAccessList containsAll                           0  0.282
SynchronizedRandomAccessList forEach                               0  0.588
SynchronizedRandomAccessList toArray()                             0  0.249
SynchronizedRandomAccessList toArray(a)                            0  0.269
SynchronizedRandomAccessList toArray(empty)                        0  0.262
SynchronizedRandomAccessList stream().forEach                      0  0.292
SynchronizedRandomAccessList stream().mapToInt                     0  0.465
SynchronizedRandomAccessList stream().collect                      0  0.392
SynchronizedRandomAccessList stream()::iterator                    0  0.379
SynchronizedRandomAccessList parallelStream().forEach              0  3.757
SynchronizedRandomAccessList parallelStream().mapToInt             0  3.193
SynchronizedRandomAccessList parallelStream().collect              0  3.286
SynchronizedRandomAccessList parallelStream()::iterator            0  0.475
SynchronizedRandomAccessList removeIf                              0  0.581
SynchronizedRandomAccessList remove(Object)                        0  0.292
SynchronizedRandomAccessList listIterator forward loop             0  0.226
SynchronizedRandomAccessList listIterator backward loop            0  0.336
SynchronizedRandomAccessList indexOf                               0  0.309
SynchronizedRandomAccessList lastIndexOf                           0  0.389
SynchronizedRandomAccessList equals                                0  0.635
SynchronizedRandomAccessList hashCode                              0  0.326
SynchronizedRandomAccessList replaceAll                            0  0.734
LinkedList iterate for loop                                        0  0.296
LinkedList iterator().forEachRemaining()                           0  0.242
LinkedList spliterator().tryAdvance()                              0  3.970
LinkedList spliterator().forEachRemaining()                        0  0.149
LinkedList contains                                                0  0.512
LinkedList containsAll                                             0  0.110
LinkedList forEach                                                 0  0.156
LinkedList toArray()                                               0  0.103
LinkedList toArray(a)                                              0  0.113
LinkedList toArray(empty)                                          0  0.073
LinkedList stream().forEach                                        0  0.173
LinkedList stream().mapToInt                                       0  0.379
LinkedList stream().collect                                        0  0.289
LinkedList stream()::iterator                                      0  0.262
LinkedList parallelStream().forEach                                0  2.631
LinkedList parallelStream().mapToInt                               0  3.987
LinkedList parallelStream().collect                                0  2.395
LinkedList parallelStream()::iterator                              0  0.362
LinkedList removeIf                                                0  0.213
LinkedList remove(Object)                                          0  0.123
LinkedList descendingIterator() loop                               0  3.588
LinkedList descendingIterator().forEachRemaining()                 0  7.262
LinkedList listIterator forward loop                               0  0.159
LinkedList listIterator backward loop                              0  0.130
LinkedList indexOf                                                 0  0.080
LinkedList lastIndexOf                                             0  0.096
LinkedList equals                                                  0  0.462
LinkedList hashCode                                                0  0.169
LinkedList replaceAll                                              0  0.232
AbstractList$SubList iterate for loop                              0  0.664
AbstractList$SubList iterator().forEachRemaining()                 0  0.209
AbstractList$SubList spliterator().tryAdvance()                    0  0.429
AbstractList$SubList spliterator().forEachRemaining()              0  0.223
AbstractList$SubList contains                                      0  0.176
AbstractList$SubList containsAll                                   0  0.259
AbstractList$SubList forEach                                       0  0.176
AbstractList$SubList toArray()                                     0  0.233
AbstractList$SubList toArray(a)                                    0  0.186
AbstractList$SubList toArray(empty)                                0  0.189
AbstractList$SubList stream().forEach                              0  0.319
AbstractList$SubList stream().mapToInt                             0  0.465
AbstractList$SubList stream().collect                              0  0.409
AbstractList$SubList stream()::iterator                            0  0.405
AbstractList$SubList parallelStream().forEach                      0  3.847
AbstractList$SubList parallelStream().mapToInt                     0  3.515
AbstractList$SubList parallelStream().collect                      0  4.910
AbstractList$SubList parallelStream()::iterator                    0  0.462
AbstractList$SubList removeIf                                      0  0.133
AbstractList$SubList remove(Object)                                0  0.140
AbstractList$SubList listIterator forward loop                     0  0.096
AbstractList$SubList listIterator backward loop                    0  0.322
AbstractList$SubList indexOf                                       0  0.126
AbstractList$SubList lastIndexOf                                   0  0.289
AbstractList$SubList equals                                        0  0.458
AbstractList$SubList hashCode                                      0  0.173
AbstractList$SubList replaceAll                                    0  0.226
CopyOnWriteArrayList iterate for loop                              0  0.259
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.365
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.196
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.083
CopyOnWriteArrayList contains                                      0  0.831
CopyOnWriteArrayList containsAll                                   0  0.661
CopyOnWriteArrayList forEach                                       0  0.113
CopyOnWriteArrayList toArray()                                     0  0.080
CopyOnWriteArrayList toArray(a)                                    0  0.110
CopyOnWriteArrayList toArray(empty)                                0  0.073
CopyOnWriteArrayList stream().forEach                              0  0.133
CopyOnWriteArrayList stream().mapToInt                             0  0.302
CopyOnWriteArrayList stream().collect                              0  0.253
CopyOnWriteArrayList stream()::iterator                            0  0.229
CopyOnWriteArrayList parallelStream().forEach                      0  1.827
CopyOnWriteArrayList parallelStream().mapToInt                     0  1.774
CopyOnWriteArrayList parallelStream().collect                      0  1.824
CopyOnWriteArrayList parallelStream()::iterator                    0  0.246
CopyOnWriteArrayList removeIf                                      0  0.159
CopyOnWriteArrayList remove(Object)                                0  0.698
CopyOnWriteArrayList listIterator forward loop                     0  0.140
CopyOnWriteArrayList listIterator backward loop                    0  0.199
CopyOnWriteArrayList indexOf                                       0  0.236
CopyOnWriteArrayList lastIndexOf                                   0  0.103
CopyOnWriteArrayList equals                                        0  0.356
CopyOnWriteArrayList hashCode                                      0  0.169
CopyOnWriteArrayList replaceAll                                    0  0.262
COWSubList iterate for loop                                        0  4.186
COWSubList iterator().forEachRemaining()                           0  0.342
COWSubList spliterator().tryAdvance()                              0  0.296
COWSubList spliterator().forEachRemaining()                        0  0.100
COWSubList contains                                                0  0.203
COWSubList containsAll                                             0  0.209
COWSubList forEach                                                 0  0.173
COWSubList toArray()                                               0  0.166
COWSubList toArray(a)                                              0  0.223
COWSubList toArray(empty)                                          0  0.136
COWSubList stream().forEach                                        0  0.140
COWSubList stream().mapToInt                                       0  0.306
COWSubList stream().collect                                        0  0.249
COWSubList stream()::iterator                                      0  0.269
COWSubList parallelStream().forEach                                0  2.169
COWSubList parallelStream().mapToInt                               0  2.030
COWSubList parallelStream().collect                                0  2.741
COWSubList parallelStream()::iterator                              0  0.336
COWSubList removeIf                                                0  0.316
COWSubList remove(Object)                                          0  0.149
COWSubList listIterator forward loop                               0  0.336
COWSubList listIterator backward loop                              0  0.399
COWSubList indexOf                                                 0  0.076
COWSubList lastIndexOf                                             0  0.116
COWSubList equals                                                  0  0.422
COWSubList hashCode                                                0  0.156
COWSubList replaceAll                                              0  0.226
ArrayDeque iterate for loop                                        0  0.289
ArrayDeque iterator().forEachRemaining()                           0  0.189
ArrayDeque spliterator().tryAdvance()                              0  0.272
ArrayDeque spliterator().forEachRemaining()                        0  0.146
ArrayDeque contains                                                0  0.103
ArrayDeque containsAll                                             0  0.116
ArrayDeque forEach                                                 0  0.113
ArrayDeque toArray()                                               0  0.140
ArrayDeque toArray(a)                                              0  0.166
ArrayDeque toArray(empty)                                          0  0.086
ArrayDeque stream().forEach                                        0  0.189
ArrayDeque stream().mapToInt                                       0  0.422
ArrayDeque stream().collect                                        0  0.306
ArrayDeque stream()::iterator                                      0  0.276
ArrayDeque parallelStream().forEach                                0  3.571
ArrayDeque parallelStream().mapToInt                               0  2.983
ArrayDeque parallelStream().collect                                0  2.870
ArrayDeque parallelStream()::iterator                              0  0.329
ArrayDeque removeIf                                                0  0.136
ArrayDeque remove(Object)                                          0  0.086
ArrayDeque descendingIterator() loop                               0  0.213
ArrayDeque descendingIterator().forEachRemaining()                 0  0.203
PriorityQueue iterate for loop                                     0  0.216
PriorityQueue iterator().forEachRemaining()                        0  0.156
PriorityQueue spliterator().tryAdvance()                           0  3.751
PriorityQueue spliterator().forEachRemaining()                     0  0.140
PriorityQueue contains                                             0  0.159
PriorityQueue containsAll                                          0  0.110
PriorityQueue forEach                                              0  0.169
PriorityQueue toArray()                                            0  0.063
PriorityQueue toArray(a)                                           0  0.143
PriorityQueue toArray(empty)                                       0  0.100
PriorityQueue stream().forEach                                     0  0.173
PriorityQueue stream().mapToInt                                    0  0.492
PriorityQueue stream().collect                                     0  0.286
PriorityQueue stream()::iterator                                   0  0.239
PriorityQueue parallelStream().forEach                             0  2.442
PriorityQueue parallelStream().mapToInt                            0  2.668
PriorityQueue parallelStream().collect                             0  2.146
PriorityQueue parallelStream()::iterator                           0  0.282
PriorityQueue removeIf                                             0  0.253
PriorityQueue remove(Object)                                       0  0.086
ConcurrentLinkedQueue iterate for loop                             0  0.322
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.219
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  3.880
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.399
ConcurrentLinkedQueue contains                                     0  0.199
ConcurrentLinkedQueue containsAll                                  0  0.106
ConcurrentLinkedQueue forEach                                      0  0.093
ConcurrentLinkedQueue toArray()                                    0  0.176
ConcurrentLinkedQueue toArray(a)                                   0  0.159
ConcurrentLinkedQueue toArray(empty)                               0  0.086
ConcurrentLinkedQueue stream().forEach                             0  0.169
ConcurrentLinkedQueue stream().mapToInt                            0  0.282
ConcurrentLinkedQueue stream().collect                             0  0.279
ConcurrentLinkedQueue stream()::iterator                           0  0.289
ConcurrentLinkedQueue parallelStream().forEach                     0  1.987
ConcurrentLinkedQueue parallelStream().mapToInt                    0  2.292
ConcurrentLinkedQueue parallelStream().collect                     0  2.106
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.379
ConcurrentLinkedQueue removeIf                                     0  0.156
ConcurrentLinkedQueue remove(Object)                               0  0.086
ConcurrentLinkedDeque iterate for loop                             0  0.292
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.156
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  5.425
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.169
ConcurrentLinkedDeque contains                                     0  0.183
ConcurrentLinkedDeque containsAll                                  0  0.133
ConcurrentLinkedDeque forEach                                      0  0.130
ConcurrentLinkedDeque toArray()                                    0  0.163
ConcurrentLinkedDeque toArray(a)                                   0  0.159
ConcurrentLinkedDeque toArray(empty)                               0  0.086
ConcurrentLinkedDeque stream().forEach                             0  0.189
ConcurrentLinkedDeque stream().mapToInt                            0  0.309
ConcurrentLinkedDeque stream().collect                             0  0.395
ConcurrentLinkedDeque stream()::iterator                           0  0.286
ConcurrentLinkedDeque parallelStream().forEach                     0  3.349
ConcurrentLinkedDeque parallelStream().mapToInt                    0  3.555
ConcurrentLinkedDeque parallelStream().collect                     0  1.940
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.349
ConcurrentLinkedDeque removeIf                                     0  0.153
ConcurrentLinkedDeque remove(Object)                               0  0.096
ConcurrentLinkedDeque descendingIterator() loop                    0  2.930
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.213
ArrayBlockingQueue iterate for loop                                0  0.801
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.455
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.442
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.223
ArrayBlockingQueue contains                                        0  0.910
ArrayBlockingQueue containsAll                                     0  0.103
ArrayBlockingQueue forEach                                         0  0.113
ArrayBlockingQueue toArray()                                       0  0.130
ArrayBlockingQueue toArray(a)                                      0  0.123
ArrayBlockingQueue toArray(empty)                                  0  0.090
ArrayBlockingQueue stream().forEach                                0  0.253
ArrayBlockingQueue stream().mapToInt                               0  0.322
ArrayBlockingQueue stream().collect                                0  0.342
ArrayBlockingQueue stream()::iterator                              0  0.435
ArrayBlockingQueue parallelStream().forEach                        0  2.598
ArrayBlockingQueue parallelStream().mapToInt                       0  2.625
ArrayBlockingQueue parallelStream().collect                        0  2.425
ArrayBlockingQueue parallelStream()::iterator                      0  0.482
ArrayBlockingQueue removeIf                                        0  0.143
ArrayBlockingQueue remove(Object)                                  0  0.080
LinkedBlockingQueue iterate for loop                               0  0.365
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.472
LinkedBlockingQueue spliterator().tryAdvance()                     0  5.385
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.266
LinkedBlockingQueue contains                                       0  1.116
LinkedBlockingQueue containsAll                                    0  0.093
LinkedBlockingQueue forEach                                        0  0.163
LinkedBlockingQueue toArray()                                      0  0.093
LinkedBlockingQueue toArray(a)                                     0  0.093
LinkedBlockingQueue toArray(empty)                                 0  0.116
LinkedBlockingQueue stream().forEach                               0  0.226
LinkedBlockingQueue stream().mapToInt                              0  0.309
LinkedBlockingQueue stream().collect                               0  0.316
LinkedBlockingQueue stream()::iterator                             0  0.316
LinkedBlockingQueue parallelStream().forEach                       0 12.946
LinkedBlockingQueue parallelStream().mapToInt                      0  2.904
LinkedBlockingQueue parallelStream().collect                       0  2.850
LinkedBlockingQueue parallelStream()::iterator                     0  0.442
LinkedBlockingQueue removeIf                                       0  0.226
LinkedBlockingQueue remove(Object)                                 0  0.090
LinkedBlockingDeque iterate for loop                               0  0.691
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.462
LinkedBlockingDeque spliterator().tryAdvance()                     0  4.199
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.269
LinkedBlockingDeque contains                                       0  0.681
LinkedBlockingDeque containsAll                                    0  0.096
LinkedBlockingDeque forEach                                        0  0.156
LinkedBlockingDeque toArray()                                      0  0.086
LinkedBlockingDeque toArray(a)                                     0  0.103
LinkedBlockingDeque toArray(empty)                                 0  0.093
LinkedBlockingDeque stream().forEach                               0  0.262
LinkedBlockingDeque stream().mapToInt                              0  0.312
LinkedBlockingDeque stream().collect                               0  0.588
LinkedBlockingDeque stream()::iterator                             0  0.312
LinkedBlockingDeque parallelStream().forEach                       0  2.442
LinkedBlockingDeque parallelStream().mapToInt                      0  2.149
LinkedBlockingDeque parallelStream().collect                       0  2.120
LinkedBlockingDeque parallelStream()::iterator                     0  0.336
LinkedBlockingDeque removeIf                                       0  0.196
LinkedBlockingDeque remove(Object)                                 0  0.103
LinkedBlockingDeque descendingIterator() loop                      0  2.259
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.309
LinkedTransferQueue iterate for loop                               0  0.226
LinkedTransferQueue iterator().forEachRemaining()                  0  0.239
LinkedTransferQueue spliterator().tryAdvance()                     0  3.116
LinkedTransferQueue spliterator().forEachRemaining()               0  0.203
LinkedTransferQueue contains                                       0  0.256
LinkedTransferQueue containsAll                                    0  0.090
LinkedTransferQueue forEach                                        0  0.120
LinkedTransferQueue toArray()                                      0  0.153
LinkedTransferQueue toArray(a)                                     0  0.329
LinkedTransferQueue toArray(empty)                                 0  0.080
LinkedTransferQueue stream().forEach                               0  0.209
LinkedTransferQueue stream().mapToInt                              0  0.289
LinkedTransferQueue stream().collect                               0  0.425
LinkedTransferQueue stream()::iterator                             0  0.342
LinkedTransferQueue parallelStream().forEach                       0  1.860
LinkedTransferQueue parallelStream().mapToInt                      0  1.515
LinkedTransferQueue parallelStream().collect                       0  1.518
LinkedTransferQueue parallelStream()::iterator                     0  0.312
LinkedTransferQueue removeIf                                       0  0.183
LinkedTransferQueue remove(Object)                                 0  0.080
PriorityBlockingQueue iterate for loop                             0  3.120
PriorityBlockingQueue iterator().forEachRemaining()                0  0.199
PriorityBlockingQueue spliterator().tryAdvance()                   0  2.498
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.130
PriorityBlockingQueue contains                                     0  0.189
PriorityBlockingQueue containsAll                                  0  0.120
PriorityBlockingQueue forEach                                      0  0.149
PriorityBlockingQueue toArray()                                    0  0.050
PriorityBlockingQueue toArray(a)                                   0  0.176
PriorityBlockingQueue toArray(empty)                               0  0.113
PriorityBlockingQueue stream().forEach                             0  0.166
PriorityBlockingQueue stream().mapToInt                            0  0.242
PriorityBlockingQueue stream().collect                             0  0.236
PriorityBlockingQueue stream()::iterator                           0  0.249
PriorityBlockingQueue parallelStream().forEach                     0  3.262
PriorityBlockingQueue parallelStream().mapToInt                    0  2.415
PriorityBlockingQueue parallelStream().collect                     0  2.223
PriorityBlockingQueue parallelStream()::iterator                   0  0.379
PriorityBlockingQueue removeIf                                     0  0.299
PriorityBlockingQueue remove(Object)                               0  0.103
ListN iterate for loop                                             0  0.282
ListN iterator().forEachRemaining()                                0  0.149
ListN spliterator().tryAdvance()                                   0  0.292
ListN spliterator().forEachRemaining()                             0  0.140
ListN contains                                                     0  0.243
ListN containsAll                                                  0  0.110
ListN forEach                                                      0  0.136
ListN toArray()                                                    0  0.063
ListN toArray(a)                                                   0  0.096
ListN toArray(empty)                                               0  0.073
ListN stream().forEach                                             0  0.166
ListN stream().mapToInt                                            0  0.269
ListN stream().collect                                             0  0.276
ListN stream()::iterator                                           0  0.309
ListN parallelStream().forEach                                     0  2.252
ListN parallelStream().mapToInt                                    0  2.528
ListN parallelStream().collect                                     0  2.591
ListN parallelStream()::iterator                                   0  0.369
ListN listIterator forward loop                                    0  0.236
ListN listIterator backward loop                                   0  0.166
ListN indexOf                                                      0  0.093
ListN lastIndexOf                                                  0  0.056
ListN equals                                                       0  0.365
ListN hashCode                                                     0  0.136
ImmutableCollections$SubList iterate for loop                      0  0.448
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.193
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.286
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.156
ImmutableCollections$SubList contains                              0  0.253
ImmutableCollections$SubList containsAll                           0  0.149
ImmutableCollections$SubList forEach                               0  0.163
ImmutableCollections$SubList toArray()                             0  0.136
ImmutableCollections$SubList toArray(a)                            0  0.130
ImmutableCollections$SubList toArray(empty)                        0  0.336
ImmutableCollections$SubList stream().forEach                      0  0.196
ImmutableCollections$SubList stream().mapToInt                     0  0.282
ImmutableCollections$SubList stream().collect                      0  0.299
ImmutableCollections$SubList stream()::iterator                    0  0.302
ImmutableCollections$SubList parallelStream().forEach              0  2.007
ImmutableCollections$SubList parallelStream().mapToInt             0  1.731
ImmutableCollections$SubList parallelStream().collect              0  1.880
ImmutableCollections$SubList parallelStream()::iterator            0  0.415
ImmutableCollections$SubList listIterator forward loop             0  0.292
ImmutableCollections$SubList listIterator backward loop            0  0.169
ImmutableCollections$SubList indexOf                               0  0.133
ImmutableCollections$SubList lastIndexOf                           0  0.106
ImmutableCollections$SubList equals                                0  0.405
ImmutableCollections$SubList hashCode                              0  0.189
----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
