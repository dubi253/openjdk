#Test Results (version 2)
#Tue Mar 05 01:23:03 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=194 0\:00\:00.194
end=Tue Mar 05 01\:23\:03 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Tue Mar 05 01\:23\:03 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=195
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Collection

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733, mixed mode, sharing)

#section:build
----------messages:(7/234)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Tue Mar 05 01:23:03 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Tue Mar 05 01:23:03 UTC 2024
elapsed time (seconds): 0.097
result: Passed. Build successful

#section:compile
----------messages:(7/293)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:23:03 UTC 2024
Mode: agentvm
Agent id: 2
finished: Tue Mar 05 01:23:03 UTC 2024
elapsed time (seconds): 0.097
----------configuration:(10/723)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d

----------rerun:(33/3384)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
----------direct:(7/587)----------
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/292)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Tue Mar 05 01:23:03 UTC 2024
Mode: agentvm
Agent id: 4
finished: Tue Mar 05 01:23:03 UTC 2024
elapsed time (seconds): 0.095
----------configuration:(13/971)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection

----------rerun:(26/2874)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34428)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0  8.904
ArrayList spliterator().tryAdvance()                               0 27.279
ArrayList spliterator().forEachRemaining()                         0  7.601
ArrayList contains                                                 0  9.421
ArrayList containsAll                                              0  0.895
ArrayList forEach                                                  0  4.502
ArrayList toArray()                                                0  0.245
ArrayList toArray(a)                                               0  0.245
ArrayList toArray(empty)                                           0  0.183
ArrayList stream().forEach                                         0  3.892
ArrayList stream().mapToInt                                        0 21.614
ArrayList stream().collect                                         0 23.843
ArrayList stream()::iterator                                       0  7.112
ArrayList parallelStream().forEach                                 0  9.623
ArrayList parallelStream().mapToInt                                0 15.152
ArrayList parallelStream().collect                                 0  7.954
ArrayList parallelStream()::iterator                               0  3.879
ArrayList removeIf                                                 0  4.421
ArrayList remove(Object)                                           0  0.449
ArrayList listIterator forward loop                                0  0.851
ArrayList listIterator backward loop                               0  0.347
ArrayList indexOf                                                  0  0.341
ArrayList lastIndexOf                                              0  0.251
ArrayList equals                                                   0  0.402
ArrayList hashCode                                                 0  0.502
ArrayList replaceAll                                               0 14.725
ArrayList$SubList iterate for loop                                 0  0.752
ArrayList$SubList iterator().forEachRemaining()                    0  0.378
ArrayList$SubList spliterator().tryAdvance()                       0  5.883
ArrayList$SubList spliterator().forEachRemaining()                 0  0.170
ArrayList$SubList contains                                         0  0.207
ArrayList$SubList containsAll                                      0  0.161
ArrayList$SubList forEach                                          0  0.740
ArrayList$SubList toArray()                                        0  0.102
ArrayList$SubList toArray(a)                                       0  0.167
ArrayList$SubList toArray(empty)                                   0  0.229
ArrayList$SubList stream().forEach                                 0  0.232
ArrayList$SubList stream().mapToInt                                0  0.502
ArrayList$SubList stream().collect                                 0  0.356
ArrayList$SubList stream()::iterator                               0  0.291
ArrayList$SubList parallelStream().forEach                         0  2.978
ArrayList$SubList parallelStream().mapToInt                        0  2.000
ArrayList$SubList parallelStream().collect                         0  2.180
ArrayList$SubList parallelStream()::iterator                       0  0.288
ArrayList$SubList removeIf                                         0  0.142
ArrayList$SubList remove(Object)                                   0  0.263
ArrayList$SubList listIterator forward loop                        0  0.142
ArrayList$SubList listIterator backward loop                       0  0.133
ArrayList$SubList indexOf                                          0  0.080
ArrayList$SubList lastIndexOf                                      0  0.145
ArrayList$SubList equals                                           0  0.947
ArrayList$SubList hashCode                                         0  0.130
ArrayList$SubList replaceAll                                       0  0.173
Vector iterate for loop                                            0  0.313
Vector iterator().forEachRemaining()                               0  0.198
Vector spliterator().tryAdvance()                                  0  0.260
Vector spliterator().forEachRemaining()                            0  0.105
Vector contains                                                    0  1.170
Vector containsAll                                                 0  0.499
Vector forEach                                                     0  0.111
Vector toArray()                                                   0  0.074
Vector toArray(a)                                                  0  0.155
Vector toArray(empty)                                              0  0.077
Vector stream().forEach                                            0  0.176
Vector stream().mapToInt                                           0  0.536
Vector stream().collect                                            0  0.229
Vector stream()::iterator                                          0  0.251
Vector parallelStream().forEach                                    0  2.412
Vector parallelStream().mapToInt                                   0  1.889
Vector parallelStream().collect                                    0  1.749
Vector parallelStream()::iterator                                  0  0.241
Vector removeIf                                                    0  0.142
Vector remove(Object)                                              0  0.740
Vector listIterator forward loop                                   0  0.214
Vector listIterator backward loop                                  0  0.198
Vector indexOf                                                     0  0.359
Vector lastIndexOf                                                 0  0.145
Vector equals                                                      0  0.499
Vector hashCode                                                    0  0.607
Vector replaceAll                                                  0  0.238
SynchronizedRandomAccessList iterate for loop                      0  0.681
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.211
SynchronizedRandomAccessList spliterator().tryAdvance()            0  5.257
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.266
SynchronizedRandomAccessList contains                              0  0.471
SynchronizedRandomAccessList containsAll                           0  0.260
SynchronizedRandomAccessList forEach                               0  0.325
SynchronizedRandomAccessList toArray()                             0  0.232
SynchronizedRandomAccessList toArray(a)                            0  0.238
SynchronizedRandomAccessList toArray(empty)                        0  0.229
SynchronizedRandomAccessList stream().forEach                      0  0.257
SynchronizedRandomAccessList stream().mapToInt                     0  0.387
SynchronizedRandomAccessList stream().collect                      0  0.322
SynchronizedRandomAccessList stream()::iterator                    0  0.341
SynchronizedRandomAccessList parallelStream().forEach              0  2.520
SynchronizedRandomAccessList parallelStream().mapToInt             0  2.105
SynchronizedRandomAccessList parallelStream().collect              0  3.811
SynchronizedRandomAccessList parallelStream()::iterator            0  0.455
SynchronizedRandomAccessList removeIf                              0  0.406
SynchronizedRandomAccessList remove(Object)                        0  0.266
SynchronizedRandomAccessList listIterator forward loop             0  0.241
SynchronizedRandomAccessList listIterator backward loop            0  0.387
SynchronizedRandomAccessList indexOf                               0  0.316
SynchronizedRandomAccessList lastIndexOf                           0  0.424
SynchronizedRandomAccessList equals                                0  0.616
SynchronizedRandomAccessList hashCode                              0  0.375
SynchronizedRandomAccessList replaceAll                            0  0.771
LinkedList iterate for loop                                        0  0.276
LinkedList iterator().forEachRemaining()                           0  0.211
LinkedList spliterator().tryAdvance()                              0  4.223
LinkedList spliterator().forEachRemaining()                        0  0.145
LinkedList contains                                                0  0.288
LinkedList containsAll                                             0  0.115
LinkedList forEach                                                 0  0.133
LinkedList toArray()                                               0  0.096
LinkedList toArray(a)                                              0  0.096
LinkedList toArray(empty)                                          0  0.115
LinkedList stream().forEach                                        0  0.155
LinkedList stream().mapToInt                                       0  0.297
LinkedList stream().collect                                        0  0.220
LinkedList stream()::iterator                                      0  0.232
LinkedList parallelStream().forEach                                0  2.613
LinkedList parallelStream().mapToInt                               0  2.756
LinkedList parallelStream().collect                                0  2.443
LinkedList parallelStream()::iterator                              0  0.257
LinkedList removeIf                                                0  0.180
LinkedList remove(Object)                                          0  0.118
LinkedList descendingIterator() loop                               0  3.331
LinkedList descendingIterator().forEachRemaining()                 0  7.136
LinkedList listIterator forward loop                               0  0.149
LinkedList listIterator backward loop                              0  0.121
LinkedList indexOf                                                 0  0.081
LinkedList lastIndexOf                                             0  0.115
LinkedList equals                                                  0  0.365
LinkedList hashCode                                                0  0.149
LinkedList replaceAll                                              0  0.214
AbstractList$SubList iterate for loop                              0  0.260
AbstractList$SubList iterator().forEachRemaining()                 0  0.189
AbstractList$SubList spliterator().tryAdvance()                    0  0.381
AbstractList$SubList spliterator().forEachRemaining()              0  0.622
AbstractList$SubList contains                                      0  0.145
AbstractList$SubList containsAll                                   0  0.217
AbstractList$SubList forEach                                       0  0.158
AbstractList$SubList toArray()                                     0  0.217
AbstractList$SubList toArray(a)                                    0  0.192
AbstractList$SubList toArray(empty)                                0  0.170
AbstractList$SubList stream().forEach                              0  0.266
AbstractList$SubList stream().mapToInt                             0  0.396
AbstractList$SubList stream().collect                              0  0.337
AbstractList$SubList stream()::iterator                            0  0.344
AbstractList$SubList parallelStream().forEach                      0  2.731
AbstractList$SubList parallelStream().mapToInt                     0  2.378
AbstractList$SubList parallelStream().collect                      0  2.675
AbstractList$SubList parallelStream()::iterator                    0  0.359
AbstractList$SubList removeIf                                      0  0.195
AbstractList$SubList remove(Object)                                0  0.211
AbstractList$SubList listIterator forward loop                     0  0.136
AbstractList$SubList listIterator backward loop                    0  0.285
AbstractList$SubList indexOf                                       0  0.164
AbstractList$SubList lastIndexOf                                   0  0.266
AbstractList$SubList equals                                        0  0.480
AbstractList$SubList hashCode                                      0  0.313
AbstractList$SubList replaceAll                                    0  0.241
CopyOnWriteArrayList iterate for loop                              0  0.214
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.356
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.189
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.102
CopyOnWriteArrayList contains                                      0  0.610
CopyOnWriteArrayList containsAll                                   0  0.272
CopyOnWriteArrayList forEach                                       0  0.105
CopyOnWriteArrayList toArray()                                     0  0.059
CopyOnWriteArrayList toArray(a)                                    0  0.111
CopyOnWriteArrayList toArray(empty)                                0  0.059
CopyOnWriteArrayList stream().forEach                              0  0.142
CopyOnWriteArrayList stream().mapToInt                             0  0.430
CopyOnWriteArrayList stream().collect                              0  0.214
CopyOnWriteArrayList stream()::iterator                            0  0.198
CopyOnWriteArrayList parallelStream().forEach                      0  1.489
CopyOnWriteArrayList parallelStream().mapToInt                     0  1.697
CopyOnWriteArrayList parallelStream().collect                      0  1.548
CopyOnWriteArrayList parallelStream()::iterator                    0  0.211
CopyOnWriteArrayList removeIf                                      0  0.130
CopyOnWriteArrayList remove(Object)                                0  0.477
CopyOnWriteArrayList listIterator forward loop                     0  0.115
CopyOnWriteArrayList listIterator backward loop                    0  0.183
CopyOnWriteArrayList indexOf                                       0  0.080
CopyOnWriteArrayList lastIndexOf                                   0  0.108
CopyOnWriteArrayList equals                                        0  0.325
CopyOnWriteArrayList hashCode                                      0  0.155
CopyOnWriteArrayList replaceAll                                    0  0.245
COWSubList iterate for loop                                        0  3.731
COWSubList iterator().forEachRemaining()                           0  0.307
COWSubList spliterator().tryAdvance()                              0  0.291
COWSubList spliterator().forEachRemaining()                        0  0.115
COWSubList contains                                                0  0.207
COWSubList containsAll                                             0  0.229
COWSubList forEach                                                 0  0.170
COWSubList toArray()                                               0  0.142
COWSubList toArray(a)                                              0  0.232
COWSubList toArray(empty)                                          0  0.124
COWSubList stream().forEach                                        0  0.152
COWSubList stream().mapToInt                                       0  0.282
COWSubList stream().collect                                        0  0.211
COWSubList stream()::iterator                                      0  0.248
COWSubList parallelStream().forEach                                0  3.338
COWSubList parallelStream().mapToInt                               0  2.260
COWSubList parallelStream().collect                                0  3.093
COWSubList parallelStream()::iterator                              0  0.443
COWSubList removeIf                                                0  0.328
COWSubList remove(Object)                                          0  0.158
COWSubList listIterator forward loop                               0  0.310
COWSubList listIterator backward loop                              0  0.396
COWSubList indexOf                                                 0  0.096
COWSubList lastIndexOf                                             0  0.133
COWSubList equals                                                  0  0.458
COWSubList hashCode                                                0  0.155
COWSubList replaceAll                                              0  0.229
ArrayDeque iterate for loop                                        0  0.331
ArrayDeque iterator().forEachRemaining()                           0  0.204
ArrayDeque spliterator().tryAdvance()                              0  0.245
ArrayDeque spliterator().forEachRemaining()                        0  0.133
ArrayDeque contains                                                0  0.303
ArrayDeque containsAll                                             0  0.111
ArrayDeque forEach                                                 0  0.105
ArrayDeque toArray()                                               0  0.133
ArrayDeque toArray(a)                                              0  0.149
ArrayDeque toArray(empty)                                          0  0.077
ArrayDeque stream().forEach                                        0  0.180
ArrayDeque stream().mapToInt                                       0  0.443
ArrayDeque stream().collect                                        0  0.263
ArrayDeque stream()::iterator                                      0  0.718
ArrayDeque parallelStream().forEach                                0  2.579
ArrayDeque parallelStream().mapToInt                               0  4.675
ArrayDeque parallelStream().collect                                0  1.994
ArrayDeque parallelStream()::iterator                              0  0.276
ArrayDeque removeIf                                                0  0.124
ArrayDeque remove(Object)                                          0  0.127
ArrayDeque descendingIterator() loop                               0  0.217
ArrayDeque descendingIterator().forEachRemaining()                 0  0.164
PriorityQueue iterate for loop                                     0  0.214
PriorityQueue iterator().forEachRemaining()                        0  0.142
PriorityQueue spliterator().tryAdvance()                           0  3.944
PriorityQueue spliterator().forEachRemaining()                     0  0.142
PriorityQueue contains                                             0  0.186
PriorityQueue containsAll                                          0  0.124
PriorityQueue forEach                                              0  0.152
PriorityQueue toArray()                                            0  0.105
PriorityQueue toArray(a)                                           0  0.155
PriorityQueue toArray(empty)                                       0  0.096
PriorityQueue stream().forEach                                     0  0.155
PriorityQueue stream().mapToInt                                    0  0.337
PriorityQueue stream().collect                                     0  0.226
PriorityQueue stream()::iterator                                   0  0.229
PriorityQueue parallelStream().forEach                             0  2.310
PriorityQueue parallelStream().mapToInt                            0  1.752
PriorityQueue parallelStream().collect                             0  1.551
PriorityQueue parallelStream()::iterator                           0  0.235
PriorityQueue removeIf                                             0  0.229
PriorityQueue remove(Object)                                       0  0.093
ConcurrentLinkedQueue iterate for loop                             0  0.288
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.229
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  3.790
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.201
ConcurrentLinkedQueue contains                                     0  0.399
ConcurrentLinkedQueue containsAll                                  0  0.251
ConcurrentLinkedQueue forEach                                      0  0.093
ConcurrentLinkedQueue toArray()                                    0  0.173
ConcurrentLinkedQueue toArray(a)                                   0  0.155
ConcurrentLinkedQueue toArray(empty)                               0  0.074
ConcurrentLinkedQueue stream().forEach                             0  0.158
ConcurrentLinkedQueue stream().mapToInt                            0  0.307
ConcurrentLinkedQueue stream().collect                             0  0.214
ConcurrentLinkedQueue stream()::iterator                           0  0.263
ConcurrentLinkedQueue parallelStream().forEach                     0  1.433
ConcurrentLinkedQueue parallelStream().mapToInt                    0  1.245
ConcurrentLinkedQueue parallelStream().collect                     0  1.765
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.334
ConcurrentLinkedQueue removeIf                                     0  0.142
ConcurrentLinkedQueue remove(Object)                               0  0.096
ConcurrentLinkedDeque iterate for loop                             0  0.285
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.139
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  2.932
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.130
ConcurrentLinkedDeque contains                                     0  0.313
ConcurrentLinkedDeque containsAll                                  0  0.214
ConcurrentLinkedDeque forEach                                      0  0.124
ConcurrentLinkedDeque toArray()                                    0  0.124
ConcurrentLinkedDeque toArray(a)                                   0  0.136
ConcurrentLinkedDeque toArray(empty)                               0  0.071
ConcurrentLinkedDeque stream().forEach                             0  0.145
ConcurrentLinkedDeque stream().mapToInt                            0  0.331
ConcurrentLinkedDeque stream().collect                             0  0.207
ConcurrentLinkedDeque stream()::iterator                           0  0.263
ConcurrentLinkedDeque parallelStream().forEach                     0  1.449
ConcurrentLinkedDeque parallelStream().mapToInt                    0  1.529
ConcurrentLinkedDeque parallelStream().collect                     0  1.186
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.269
ConcurrentLinkedDeque removeIf                                     0  0.121
ConcurrentLinkedDeque remove(Object)                               0  0.121
ConcurrentLinkedDeque descendingIterator() loop                    0  3.557
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.201
ArrayBlockingQueue iterate for loop                                0  0.743
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.356
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.461
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.214
ArrayBlockingQueue contains                                        0  0.721
ArrayBlockingQueue containsAll                                     0  0.084
ArrayBlockingQueue forEach                                         0  0.105
ArrayBlockingQueue toArray()                                       0  0.102
ArrayBlockingQueue toArray(a)                                      0  0.111
ArrayBlockingQueue toArray(empty)                                  0  0.087
ArrayBlockingQueue stream().forEach                                0  0.226
ArrayBlockingQueue stream().mapToInt                               0  0.347
ArrayBlockingQueue stream().collect                                0  0.285
ArrayBlockingQueue stream()::iterator                              0  0.406
ArrayBlockingQueue parallelStream().forEach                        0  8.892
ArrayBlockingQueue parallelStream().mapToInt                       0  3.904
ArrayBlockingQueue parallelStream().collect                        0  2.108
ArrayBlockingQueue parallelStream()::iterator                      0  0.644
ArrayBlockingQueue removeIf                                        0  0.152
ArrayBlockingQueue remove(Object)                                  0  0.081
LinkedBlockingQueue iterate for loop                               0  0.300
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.480
LinkedBlockingQueue spliterator().tryAdvance()                     0  3.653
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.257
LinkedBlockingQueue contains                                       0  0.882
LinkedBlockingQueue containsAll                                    0  0.096
LinkedBlockingQueue forEach                                        0  0.139
LinkedBlockingQueue toArray()                                      0  0.576
LinkedBlockingQueue toArray(a)                                     0  0.093
LinkedBlockingQueue toArray(empty)                                 0  0.090
LinkedBlockingQueue stream().forEach                               0  0.235
LinkedBlockingQueue stream().mapToInt                              0  0.347
LinkedBlockingQueue stream().collect                               0  0.263
LinkedBlockingQueue stream()::iterator                             0  2.090
LinkedBlockingQueue parallelStream().forEach                       0  1.904
LinkedBlockingQueue parallelStream().mapToInt                      0  2.328
LinkedBlockingQueue parallelStream().collect                       0  2.025
LinkedBlockingQueue parallelStream()::iterator                     0  0.285
LinkedBlockingQueue removeIf                                       0  0.195
LinkedBlockingQueue remove(Object)                                 0  0.084
LinkedBlockingDeque iterate for loop                               0  0.678
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.393
LinkedBlockingDeque spliterator().tryAdvance()                     0  3.406
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.272
LinkedBlockingDeque contains                                       0  0.505
LinkedBlockingDeque containsAll                                    0  0.087
LinkedBlockingDeque forEach                                        0  0.152
LinkedBlockingDeque toArray()                                      0  0.080
LinkedBlockingDeque toArray(a)                                     0  0.090
LinkedBlockingDeque toArray(empty)                                 0  0.077
LinkedBlockingDeque stream().forEach                               0  0.201
LinkedBlockingDeque stream().mapToInt                              0  0.334
LinkedBlockingDeque stream().collect                               0  0.251
LinkedBlockingDeque stream()::iterator                             0  0.263
LinkedBlockingDeque parallelStream().forEach                       0  2.053
LinkedBlockingDeque parallelStream().mapToInt                      0  1.833
LinkedBlockingDeque parallelStream().collect                       0  1.629
LinkedBlockingDeque parallelStream()::iterator                     0  0.263
LinkedBlockingDeque removeIf                                       0  0.198
LinkedBlockingDeque remove(Object)                                 0  0.080
LinkedBlockingDeque descendingIterator() loop                      0  2.768
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.279
LinkedTransferQueue iterate for loop                               0  0.211
LinkedTransferQueue iterator().forEachRemaining()                  0  0.217
LinkedTransferQueue spliterator().tryAdvance()                     0  2.879
LinkedTransferQueue spliterator().forEachRemaining()               0  0.263
LinkedTransferQueue contains                                       0  0.254
LinkedTransferQueue containsAll                                    0  0.090
LinkedTransferQueue forEach                                        0  0.105
LinkedTransferQueue toArray()                                      0  0.145
LinkedTransferQueue toArray(a)                                     0  0.297
LinkedTransferQueue toArray(empty)                                 0  0.077
LinkedTransferQueue stream().forEach                               0  0.186
LinkedTransferQueue stream().mapToInt                              0  0.322
LinkedTransferQueue stream().collect                               0  0.248
LinkedTransferQueue stream()::iterator                             0  0.294
LinkedTransferQueue parallelStream().forEach                       0  1.331
LinkedTransferQueue parallelStream().mapToInt                      0  1.266
LinkedTransferQueue parallelStream().collect                       0  1.130
LinkedTransferQueue parallelStream()::iterator                     0  0.257
LinkedTransferQueue removeIf                                       0  0.170
LinkedTransferQueue remove(Object)                                 0  0.080
PriorityBlockingQueue iterate for loop                             0 34.289
PriorityBlockingQueue iterator().forEachRemaining()                0  0.325
PriorityBlockingQueue spliterator().tryAdvance()                   0 15.059
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.189
PriorityBlockingQueue contains                                     0  0.257
PriorityBlockingQueue containsAll                                  0  0.161
PriorityBlockingQueue forEach                                      0  0.180
PriorityBlockingQueue toArray()                                    0  0.056
PriorityBlockingQueue toArray(a)                                   0  0.235
PriorityBlockingQueue toArray(empty)                               0  0.164
PriorityBlockingQueue stream().forEach                             0  0.248
PriorityBlockingQueue stream().mapToInt                            0  0.585
PriorityBlockingQueue stream().collect                             0  0.362
PriorityBlockingQueue stream()::iterator                           0  0.297
PriorityBlockingQueue parallelStream().forEach                     0  2.588
PriorityBlockingQueue parallelStream().mapToInt                    0  2.214
PriorityBlockingQueue parallelStream().collect                     0  2.025
PriorityBlockingQueue parallelStream()::iterator                   0  0.254
PriorityBlockingQueue removeIf                                     0  0.279
PriorityBlockingQueue remove(Object)                               0  0.099
ListN iterate for loop                                             0  0.272
ListN iterator().forEachRemaining()                                0  0.161
ListN spliterator().tryAdvance()                                   0  0.300
ListN spliterator().forEachRemaining()                             0  0.127
ListN contains                                                     0  0.406
ListN containsAll                                                  0  0.115
ListN forEach                                                      0  0.142
ListN toArray()                                                    0  0.056
ListN toArray(a)                                                   0  0.087
ListN toArray(empty)                                               0  0.065
ListN stream().forEach                                             0  0.170
ListN stream().mapToInt                                            0  0.282
ListN stream().collect                                             0  0.223
ListN stream()::iterator                                           0  0.269
ListN parallelStream().forEach                                     0  1.347
ListN parallelStream().mapToInt                                    0  1.362
ListN parallelStream().collect                                     0  1.254
ListN parallelStream()::iterator                                   0  0.226
ListN listIterator forward loop                                    0  0.226
ListN listIterator backward loop                                   0  0.155
ListN indexOf                                                      0  0.077
ListN lastIndexOf                                                  0  0.059
ListN equals                                                       0  0.430
ListN hashCode                                                     0  0.146
ImmutableCollections$SubList iterate for loop                      0  0.406
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.183
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.245
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.139
ImmutableCollections$SubList contains                              0  0.251
ImmutableCollections$SubList containsAll                           0  0.136
ImmutableCollections$SubList forEach                               0  0.149
ImmutableCollections$SubList toArray()                             0  0.130
ImmutableCollections$SubList toArray(a)                            0  0.124
ImmutableCollections$SubList toArray(empty)                        0  0.464
ImmutableCollections$SubList stream().forEach                      0  0.170
ImmutableCollections$SubList stream().mapToInt                     0  0.288
ImmutableCollections$SubList stream().collect                      0  0.235
ImmutableCollections$SubList stream()::iterator                    0  0.251
ImmutableCollections$SubList parallelStream().forEach              0  1.449
ImmutableCollections$SubList parallelStream().mapToInt             0  1.474
ImmutableCollections$SubList parallelStream().collect              0  1.350
ImmutableCollections$SubList parallelStream()::iterator            0  0.248
ImmutableCollections$SubList listIterator forward loop             0  0.226
ImmutableCollections$SubList listIterator backward loop            0  0.139
ImmutableCollections$SubList indexOf                               0  0.105
ImmutableCollections$SubList lastIndexOf                           0  0.090
ImmutableCollections$SubList equals                                0  0.282
ImmutableCollections$SubList hashCode                              0  0.155
----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
