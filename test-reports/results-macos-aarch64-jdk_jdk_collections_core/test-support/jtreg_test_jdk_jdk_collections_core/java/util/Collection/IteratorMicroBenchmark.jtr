#Test Results (version 2)
#Fri Mar 01 14:20:11 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=202 0\:00\:00.202
end=Fri Mar 01 14\:20\:11 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.13
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Fri Mar 01 14\:20\:10 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=202
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Collection

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-6b97c64ba93b85bce3eebab445c80b80ad3118f9)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-6b97c64ba93b85bce3eebab445c80b80ad3118f9, mixed mode, sharing)

#section:build
----------messages:(7/234)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Fri Mar 01 14:20:10 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Fri Mar 01 14:20:10 UTC 2024
elapsed time (seconds): 0.103
result: Passed. Build successful

#section:compile
----------messages:(7/293)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Fri Mar 01 14:20:10 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 14:20:10 UTC 2024
elapsed time (seconds): 0.103
----------configuration:(10/723)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d

----------rerun:(33/3384)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
----------direct:(7/587)----------
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/292)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Fri Mar 01 14:20:10 UTC 2024
Mode: agentvm
Agent id: 3
finished: Fri Mar 01 14:20:11 UTC 2024
elapsed time (seconds): 0.098
----------configuration:(13/971)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection

----------rerun:(26/2874)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis   Ratio
ArrayList iterate for loop                                         0   1.000
ArrayList iterator().forEachRemaining()                            0  10.605
ArrayList spliterator().tryAdvance()                               0   4.245
ArrayList spliterator().forEachRemaining()                         0   3.378
ArrayList contains                                                 0   6.531
ArrayList containsAll                                              0   0.826
ArrayList forEach                                                  0   3.732
ArrayList toArray()                                                0   0.227
ArrayList toArray(a)                                               0   0.248
ArrayList toArray(empty)                                           0   0.195
ArrayList stream().forEach                                         0   3.413
ArrayList stream().mapToInt                                        0  23.944
ArrayList stream().collect                                         0  18.546
ArrayList stream()::iterator                                       0   6.404
ArrayList parallelStream().forEach                                 2 162.389
ArrayList parallelStream().mapToInt                                0  25.345
ArrayList parallelStream().collect                                 0   9.513
ArrayList parallelStream()::iterator                               0   4.935
ArrayList removeIf                                                 0   4.478
ArrayList remove(Object)                                           0   0.563
ArrayList listIterator forward loop                                0   1.156
ArrayList listIterator backward loop                               0   0.386
ArrayList indexOf                                                  0   0.215
ArrayList lastIndexOf                                              0   0.209
ArrayList equals                                                   0   0.351
ArrayList hashCode                                                 0   0.596
ArrayList replaceAll                                               0   4.941
ArrayList$SubList iterate for loop                                 0   6.398
ArrayList$SubList iterator().forEachRemaining()                    0   0.425
ArrayList$SubList spliterator().tryAdvance()                       0   2.903
ArrayList$SubList spliterator().forEachRemaining()                 0   0.177
ArrayList$SubList contains                                         0   0.174
ArrayList$SubList containsAll                                      0   0.251
ArrayList$SubList forEach                                          0   0.581
ArrayList$SubList toArray()                                        0   0.407
ArrayList$SubList toArray(a)                                       0   0.180
ArrayList$SubList toArray(empty)                                   0   0.159
ArrayList$SubList stream().forEach                                 0   0.277
ArrayList$SubList stream().mapToInt                                0   0.519
ArrayList$SubList stream().collect                                 0   0.304
ArrayList$SubList stream()::iterator                               0   0.322
ArrayList$SubList parallelStream().forEach                         0   2.109
ArrayList$SubList parallelStream().mapToInt                        0   2.021
ArrayList$SubList parallelStream().collect                         0   1.649
ArrayList$SubList parallelStream()::iterator                       0   0.260
ArrayList$SubList removeIf                                         0   0.221
ArrayList$SubList remove(Object)                                   0   0.212
ArrayList$SubList listIterator forward loop                        0   0.136
ArrayList$SubList listIterator backward loop                       0   0.174
ArrayList$SubList indexOf                                          0   0.077
ArrayList$SubList lastIndexOf                                      0   0.100
ArrayList$SubList equals                                           0   0.457
ArrayList$SubList hashCode                                         0   0.150
ArrayList$SubList replaceAll                                       0   0.162
Vector iterate for loop                                            0   0.295
Vector iterator().forEachRemaining()                               0   0.384
Vector spliterator().tryAdvance()                                  0   2.796
Vector spliterator().forEachRemaining()                            0   0.133
Vector contains                                                    0   1.286
Vector containsAll                                                 0   0.254
Vector forEach                                                     0   0.106
Vector toArray()                                                   0   0.056
Vector toArray(a)                                                  0   0.171
Vector toArray(empty)                                              0   0.083
Vector stream().forEach                                            0   0.233
Vector stream().mapToInt                                           0   0.378
Vector stream().collect                                            0   0.236
Vector stream()::iterator                                          0   0.257
Vector parallelStream().forEach                                    0   1.655
Vector parallelStream().mapToInt                                   0   1.891
Vector parallelStream().collect                                    0   1.643
Vector parallelStream()::iterator                                  0   0.224
Vector removeIf                                                    0   0.127
Vector remove(Object)                                              0   0.667
Vector listIterator forward loop                                   0   0.221
Vector listIterator backward loop                                  0   0.195
Vector indexOf                                                     0   0.351
Vector lastIndexOf                                                 0   0.130
Vector equals                                                      0   0.342
Vector hashCode                                                    0   0.348
Vector replaceAll                                                  0   0.180
SynchronizedRandomAccessList iterate for loop                      0   0.976
SynchronizedRandomAccessList iterator().forEachRemaining()         0   0.221
SynchronizedRandomAccessList spliterator().tryAdvance()            0   0.637
SynchronizedRandomAccessList spliterator().forEachRemaining()      0   0.198
SynchronizedRandomAccessList contains                              0   0.410
SynchronizedRandomAccessList containsAll                           0   0.233
SynchronizedRandomAccessList forEach                               0   0.177
SynchronizedRandomAccessList toArray()                             0   0.233
SynchronizedRandomAccessList toArray(a)                            0   0.239
SynchronizedRandomAccessList toArray(empty)                        0   0.277
SynchronizedRandomAccessList stream().forEach                      0   0.224
SynchronizedRandomAccessList stream().mapToInt                     0   0.563
SynchronizedRandomAccessList stream().collect                      0   0.298
SynchronizedRandomAccessList stream()::iterator                    0   0.322
SynchronizedRandomAccessList parallelStream().forEach              0   1.897
SynchronizedRandomAccessList parallelStream().mapToInt             0   2.083
SynchronizedRandomAccessList parallelStream().collect              0   1.796
SynchronizedRandomAccessList parallelStream()::iterator            0   0.333
SynchronizedRandomAccessList removeIf                              0   0.286
SynchronizedRandomAccessList remove(Object)                        0   0.239
SynchronizedRandomAccessList listIterator forward loop             0   0.248
SynchronizedRandomAccessList listIterator backward loop            0   0.398
SynchronizedRandomAccessList indexOf                               0   0.263
SynchronizedRandomAccessList lastIndexOf                           0   0.316
SynchronizedRandomAccessList equals                                0   0.481
SynchronizedRandomAccessList hashCode                              0   0.357
SynchronizedRandomAccessList replaceAll                            0   0.673
LinkedList iterate for loop                                        0   0.268
LinkedList iterator().forEachRemaining()                           0   0.206
LinkedList spliterator().tryAdvance()                              0   5.056
LinkedList spliterator().forEachRemaining()                        0   0.127
LinkedList contains                                                0   0.283
LinkedList containsAll                                             0   0.115
LinkedList forEach                                                 0   0.139
LinkedList toArray()                                               0   0.112
LinkedList toArray(a)                                              0   0.103
LinkedList toArray(empty)                                          0   0.091
LinkedList stream().forEach                                        0   0.159
LinkedList stream().mapToInt                                       0   0.366
LinkedList stream().collect                                        0   0.224
LinkedList stream()::iterator                                      0   0.221
LinkedList parallelStream().forEach                                0   2.142
LinkedList parallelStream().mapToInt                               0   2.313
LinkedList parallelStream().collect                                0   1.814
LinkedList parallelStream()::iterator                              0   0.236
LinkedList removeIf                                                0   0.133
LinkedList remove(Object)                                          0   0.127
LinkedList descendingIterator() loop                               0   2.543
LinkedList descendingIterator().forEachRemaining()                 0   5.711
LinkedList listIterator forward loop                               0   0.118
LinkedList listIterator backward loop                              0   0.118
LinkedList indexOf                                                 0   0.068
LinkedList lastIndexOf                                             0   0.097
LinkedList equals                                                  0   0.295
LinkedList hashCode                                                0   0.189
LinkedList replaceAll                                              0   0.209
AbstractList$SubList iterate for loop                              0   0.242
AbstractList$SubList iterator().forEachRemaining()                 0   0.180
AbstractList$SubList spliterator().tryAdvance()                    0   0.386
AbstractList$SubList spliterator().forEachRemaining()              0   0.195
AbstractList$SubList contains                                      0   0.142
AbstractList$SubList containsAll                                   0   0.245
AbstractList$SubList forEach                                       0   0.165
AbstractList$SubList toArray()                                     0   0.212
AbstractList$SubList toArray(a)                                    0   0.198
AbstractList$SubList toArray(empty)                                0   0.177
AbstractList$SubList stream().forEach                              0   0.286
AbstractList$SubList stream().mapToInt                             0   0.472
AbstractList$SubList stream().collect                              0   0.319
AbstractList$SubList stream()::iterator                            0   0.319
AbstractList$SubList parallelStream().forEach                      0   2.115
AbstractList$SubList parallelStream().mapToInt                     0   2.342
AbstractList$SubList parallelStream().collect                      0   2.044
AbstractList$SubList parallelStream()::iterator                    0   0.333
AbstractList$SubList removeIf                                      0   0.171
AbstractList$SubList remove(Object)                                0   0.171
AbstractList$SubList listIterator forward loop                     0   0.139
AbstractList$SubList listIterator backward loop                    0   0.271
AbstractList$SubList indexOf                                       0   0.192
AbstractList$SubList lastIndexOf                                   0   0.254
AbstractList$SubList equals                                        0   0.398
AbstractList$SubList hashCode                                      0   0.292
AbstractList$SubList replaceAll                                    0   0.239
CopyOnWriteArrayList iterate for loop                              0   0.268
CopyOnWriteArrayList iterator().forEachRemaining()                 0   0.357
CopyOnWriteArrayList spliterator().tryAdvance()                    0   0.198
CopyOnWriteArrayList spliterator().forEachRemaining()              0   0.094
CopyOnWriteArrayList contains                                      0   0.965
CopyOnWriteArrayList containsAll                                   0   0.268
CopyOnWriteArrayList forEach                                       0   0.106
CopyOnWriteArrayList toArray()                                     0   0.065
CopyOnWriteArrayList toArray(a)                                    0   0.100
CopyOnWriteArrayList toArray(empty)                                0   0.065
CopyOnWriteArrayList stream().forEach                              0   0.130
CopyOnWriteArrayList stream().mapToInt                             0   0.307
CopyOnWriteArrayList stream().collect                              0   0.198
CopyOnWriteArrayList stream()::iterator                            0   0.198
CopyOnWriteArrayList parallelStream().forEach                      0   1.466
CopyOnWriteArrayList parallelStream().mapToInt                     0   1.876
CopyOnWriteArrayList parallelStream().collect                      0   1.560
CopyOnWriteArrayList parallelStream()::iterator                    0   0.204
CopyOnWriteArrayList removeIf                                      0   0.127
CopyOnWriteArrayList remove(Object)                                0   0.381
CopyOnWriteArrayList listIterator forward loop                     0   0.100
CopyOnWriteArrayList listIterator backward loop                    0   0.165
CopyOnWriteArrayList indexOf                                       0   0.165
CopyOnWriteArrayList lastIndexOf                                   0   0.109
CopyOnWriteArrayList equals                                        0   0.268
CopyOnWriteArrayList hashCode                                      0   0.150
CopyOnWriteArrayList replaceAll                                    0   0.224
COWSubList iterate for loop                                        0   3.345
COWSubList iterator().forEachRemaining()                           0   0.301
COWSubList spliterator().tryAdvance()                              0   0.265
COWSubList spliterator().forEachRemaining()                        0   0.109
COWSubList contains                                                0   0.215
COWSubList containsAll                                             0   0.204
COWSubList forEach                                                 0   0.162
COWSubList toArray()                                               0   0.145
COWSubList toArray(a)                                              0   0.383
COWSubList toArray(empty)                                          0   0.209
COWSubList stream().forEach                                        0   0.221
COWSubList stream().mapToInt                                       0   0.404
COWSubList stream().collect                                        0   0.245
COWSubList stream()::iterator                                      0   0.268
COWSubList parallelStream().forEach                                0   2.558
COWSubList parallelStream().mapToInt                               0   1.850
COWSubList parallelStream().collect                                0   1.655
COWSubList parallelStream()::iterator                              0   0.221
COWSubList removeIf                                                0   0.274
COWSubList remove(Object)                                          0   0.130
COWSubList listIterator forward loop                               0   0.260
COWSubList listIterator backward loop                              0   0.345
COWSubList indexOf                                                 0   0.080
COWSubList lastIndexOf                                             0   0.112
COWSubList equals                                                  0   0.292
COWSubList hashCode                                                0   0.136
COWSubList replaceAll                                              0   0.209
ArrayDeque iterate for loop                                        0   0.321
ArrayDeque iterator().forEachRemaining()                           0   0.327
ArrayDeque spliterator().tryAdvance()                              0   3.970
ArrayDeque spliterator().forEachRemaining()                        0   0.209
ArrayDeque contains                                                0   0.091
ArrayDeque containsAll                                             0   0.139
ArrayDeque forEach                                                 0   0.097
ArrayDeque toArray()                                               0   0.097
ArrayDeque toArray(a)                                              0   0.139
ArrayDeque toArray(empty)                                          0   0.083
ArrayDeque stream().forEach                                        0   0.171
ArrayDeque stream().mapToInt                                       0   0.389
ArrayDeque stream().collect                                        0   0.230
ArrayDeque stream()::iterator                                      0   0.239
ArrayDeque parallelStream().forEach                                0   1.873
ArrayDeque parallelStream().mapToInt                               0   2.159
ArrayDeque parallelStream().collect                                0   1.920
ArrayDeque parallelStream()::iterator                              0   0.239
ArrayDeque removeIf                                                0   0.130
ArrayDeque remove(Object)                                          0   0.097
ArrayDeque descendingIterator() loop                               0   2.366
ArrayDeque descendingIterator().forEachRemaining()                 0   0.257
PriorityQueue iterate for loop                                     0   0.227
PriorityQueue iterator().forEachRemaining()                        0   0.139
PriorityQueue spliterator().tryAdvance()                           0   2.386
PriorityQueue spliterator().forEachRemaining()                     0   0.118
PriorityQueue contains                                             0   0.204
PriorityQueue containsAll                                          0   0.118
PriorityQueue forEach                                              0   0.142
PriorityQueue toArray()                                            0   0.180
PriorityQueue toArray(a)                                           0   0.127
PriorityQueue toArray(empty)                                       0   0.088
PriorityQueue stream().forEach                                     0   0.162
PriorityQueue stream().mapToInt                                    0   0.360
PriorityQueue stream().collect                                     0   0.230
PriorityQueue stream()::iterator                                   0   0.195
PriorityQueue parallelStream().forEach                             0   2.304
PriorityQueue parallelStream().mapToInt                            0   1.988
PriorityQueue parallelStream().collect                             0  11.496
PriorityQueue parallelStream()::iterator                           0   0.392
PriorityQueue removeIf                                             0   0.381
PriorityQueue remove(Object)                                       0   0.106
ConcurrentLinkedQueue iterate for loop                             0   0.333
ConcurrentLinkedQueue iterator().forEachRemaining()                0   0.156
ConcurrentLinkedQueue spliterator().tryAdvance()                   0   4.510
ConcurrentLinkedQueue spliterator().forEachRemaining()             0   0.186
ConcurrentLinkedQueue contains                                     0   0.100
ConcurrentLinkedQueue containsAll                                  0   0.248
ConcurrentLinkedQueue forEach                                      0   0.086
ConcurrentLinkedQueue toArray()                                    0   0.168
ConcurrentLinkedQueue toArray(a)                                   0   0.150
ConcurrentLinkedQueue toArray(empty)                               0   0.077
ConcurrentLinkedQueue stream().forEach                             0   0.192
ConcurrentLinkedQueue stream().mapToInt                            0   0.811
ConcurrentLinkedQueue stream().collect                             0   0.274
ConcurrentLinkedQueue stream()::iterator                           0   0.274
ConcurrentLinkedQueue parallelStream().forEach                     0   2.386
ConcurrentLinkedQueue parallelStream().mapToInt                    0   1.590
ConcurrentLinkedQueue parallelStream().collect                     0   1.560
ConcurrentLinkedQueue parallelStream()::iterator                   0   0.277
ConcurrentLinkedQueue removeIf                                     0   0.133
ConcurrentLinkedQueue remove(Object)                               0   0.100
ConcurrentLinkedDeque iterate for loop                             0   0.286
ConcurrentLinkedDeque iterator().forEachRemaining()                0   0.136
ConcurrentLinkedDeque spliterator().tryAdvance()                   0   3.277
ConcurrentLinkedDeque spliterator().forEachRemaining()             0   0.133
ConcurrentLinkedDeque contains                                     0   0.192
ConcurrentLinkedDeque containsAll                                  0   0.121
ConcurrentLinkedDeque forEach                                      0   0.115
ConcurrentLinkedDeque toArray()                                    0   0.121
ConcurrentLinkedDeque toArray(a)                                   0   0.124
ConcurrentLinkedDeque toArray(empty)                               0   0.068
ConcurrentLinkedDeque stream().forEach                             0   0.142
ConcurrentLinkedDeque stream().mapToInt                            0   0.378
ConcurrentLinkedDeque stream().collect                             0   0.212
ConcurrentLinkedDeque stream()::iterator                           0   0.251
ConcurrentLinkedDeque parallelStream().forEach                     0   1.384
ConcurrentLinkedDeque parallelStream().mapToInt                    0   1.345
ConcurrentLinkedDeque parallelStream().collect                     0   1.445
ConcurrentLinkedDeque parallelStream()::iterator                   0   0.263
ConcurrentLinkedDeque removeIf                                     0   0.118
ConcurrentLinkedDeque remove(Object)                               0   0.106
ConcurrentLinkedDeque descendingIterator() loop                    0   2.366
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0   0.189
ArrayBlockingQueue iterate for loop                                0   0.755
ArrayBlockingQueue iterator().forEachRemaining()                   0   0.363
ArrayBlockingQueue spliterator().tryAdvance()                      0   0.442
ArrayBlockingQueue spliterator().forEachRemaining()                0   0.204
ArrayBlockingQueue contains                                        0   0.864
ArrayBlockingQueue containsAll                                     0   0.109
ArrayBlockingQueue forEach                                         0   0.118
ArrayBlockingQueue toArray()                                       0   0.109
ArrayBlockingQueue toArray(a)                                      0   0.106
ArrayBlockingQueue toArray(empty)                                  0   0.112
ArrayBlockingQueue stream().forEach                                0   0.224
ArrayBlockingQueue stream().mapToInt                               0   0.392
ArrayBlockingQueue stream().collect                                0   0.271
ArrayBlockingQueue stream()::iterator                              0   0.372
ArrayBlockingQueue parallelStream().forEach                        0   1.912
ArrayBlockingQueue parallelStream().mapToInt                       0   2.655
ArrayBlockingQueue parallelStream().collect                        0   2.360
ArrayBlockingQueue parallelStream()::iterator                      0   0.410
ArrayBlockingQueue removeIf                                        0   0.133
ArrayBlockingQueue remove(Object)                                  0   0.094
LinkedBlockingQueue iterate for loop                               0   0.313
LinkedBlockingQueue iterator().forEachRemaining()                  0   0.431
LinkedBlockingQueue spliterator().tryAdvance()                     0   3.555
LinkedBlockingQueue spliterator().forEachRemaining()               0   0.251
LinkedBlockingQueue contains                                       0   0.844
LinkedBlockingQueue containsAll                                    0   0.106
LinkedBlockingQueue forEach                                        0   0.133
LinkedBlockingQueue toArray()                                      0   0.088
LinkedBlockingQueue toArray(a)                                     0   0.091
LinkedBlockingQueue toArray(empty)                                 0   0.106
LinkedBlockingQueue stream().forEach                               0   0.207
LinkedBlockingQueue stream().mapToInt                              0   0.384
LinkedBlockingQueue stream().collect                               0   0.260
LinkedBlockingQueue stream()::iterator                             0   0.268
LinkedBlockingQueue parallelStream().forEach                       0   1.959
LinkedBlockingQueue parallelStream().mapToInt                      0   2.139
LinkedBlockingQueue parallelStream().collect                       0   1.850
LinkedBlockingQueue parallelStream()::iterator                     0   0.280
LinkedBlockingQueue removeIf                                       0   0.183
LinkedBlockingQueue remove(Object)                                 0   0.097
LinkedBlockingDeque iterate for loop                               0   0.587
LinkedBlockingDeque iterator().forEachRemaining()                  0   0.360
LinkedBlockingDeque spliterator().tryAdvance()                     0   3.053
LinkedBlockingDeque spliterator().forEachRemaining()               0   0.236
LinkedBlockingDeque contains                                       0   0.106
LinkedBlockingDeque containsAll                                    0   0.115
LinkedBlockingDeque forEach                                        0   0.127
LinkedBlockingDeque toArray()                                      0   0.074
LinkedBlockingDeque toArray(a)                                     0   0.088
LinkedBlockingDeque toArray(empty)                                 0   0.094
LinkedBlockingDeque stream().forEach                               0   0.189
LinkedBlockingDeque stream().mapToInt                              0   0.366
LinkedBlockingDeque stream().collect                               0   0.251
LinkedBlockingDeque stream()::iterator                             0   0.260
LinkedBlockingDeque parallelStream().forEach                       0   1.888
LinkedBlockingDeque parallelStream().mapToInt                      0   2.209
LinkedBlockingDeque parallelStream().collect                       0   1.858
LinkedBlockingDeque parallelStream()::iterator                     0   0.265
LinkedBlockingDeque removeIf                                       0   0.174
LinkedBlockingDeque remove(Object)                                 0   0.100
LinkedBlockingDeque descendingIterator() loop                      0   1.873
LinkedBlockingDeque descendingIterator().forEachRemaining()        0   0.257
LinkedTransferQueue iterate for loop                               0   0.207
LinkedTransferQueue iterator().forEachRemaining()                  0   0.209
LinkedTransferQueue spliterator().tryAdvance()                     0   2.811
LinkedTransferQueue spliterator().forEachRemaining()               0   0.201
LinkedTransferQueue contains                                       0   0.227
LinkedTransferQueue containsAll                                    0   0.103
LinkedTransferQueue forEach                                        0   0.103
LinkedTransferQueue toArray()                                      0   0.130
LinkedTransferQueue toArray(a)                                     0   0.265
LinkedTransferQueue toArray(empty)                                 0   0.080
LinkedTransferQueue stream().forEach                               0   0.177
LinkedTransferQueue stream().mapToInt                              0   0.354
LinkedTransferQueue stream().collect                               0   0.245
LinkedTransferQueue stream()::iterator                             0   0.292
LinkedTransferQueue parallelStream().forEach                       0   1.528
LinkedTransferQueue parallelStream().mapToInt                      0   1.469
LinkedTransferQueue parallelStream().collect                       0   1.239
LinkedTransferQueue parallelStream()::iterator                     0   0.268
LinkedTransferQueue removeIf                                       0   0.165
LinkedTransferQueue remove(Object)                                 0   0.596
PriorityBlockingQueue iterate for loop                             0   2.363
PriorityBlockingQueue iterator().forEachRemaining()                0   0.171
PriorityBlockingQueue spliterator().tryAdvance()                   0   2.230
PriorityBlockingQueue spliterator().forEachRemaining()             0   0.112
PriorityBlockingQueue contains                                     0   0.218
PriorityBlockingQueue containsAll                                  0   0.118
PriorityBlockingQueue forEach                                      0   0.136
PriorityBlockingQueue toArray()                                    0   0.047
PriorityBlockingQueue toArray(a)                                   0   0.153
PriorityBlockingQueue toArray(empty)                               0   0.094
PriorityBlockingQueue stream().forEach                             0   0.148
PriorityBlockingQueue stream().mapToInt                            0   0.322
PriorityBlockingQueue stream().collect                             0   0.204
PriorityBlockingQueue stream()::iterator                           0   0.230
PriorityBlockingQueue parallelStream().forEach                     0   1.749
PriorityBlockingQueue parallelStream().mapToInt                    0  32.381
PriorityBlockingQueue parallelStream().collect                     0   1.864
PriorityBlockingQueue parallelStream()::iterator                   0   0.265
PriorityBlockingQueue removeIf                                     0   0.316
PriorityBlockingQueue remove(Object)                               0   0.127
ListN iterate for loop                                             0   0.254
ListN iterator().forEachRemaining()                                0   0.145
ListN spliterator().tryAdvance()                                   0   0.324
ListN spliterator().forEachRemaining()                             0   0.124
ListN contains                                                     0   0.257
ListN containsAll                                                  0   0.139
ListN forEach                                                      0   0.147
ListN toArray()                                                    0   0.053
ListN toArray(a)                                                   0   0.106
ListN toArray(empty)                                               0   0.074
ListN stream().forEach                                             0   0.174
ListN stream().mapToInt                                            0   0.372
ListN stream().collect                                             0   0.227
ListN stream()::iterator                                           0   0.242
ListN parallelStream().forEach                                     0   1.484
ListN parallelStream().mapToInt                                    0   1.799
ListN parallelStream().collect                                     0   2.543
ListN parallelStream()::iterator                                   0   0.260
ListN listIterator forward loop                                    0   0.239
ListN listIterator backward loop                                   0   0.148
ListN indexOf                                                      0   0.100
ListN lastIndexOf                                                  0   0.071
ListN equals                                                       0   0.327
ListN hashCode                                                     0   0.147
ImmutableCollections$SubList iterate for loop                      0   0.383
ImmutableCollections$SubList iterator().forEachRemaining()         0   0.177
ImmutableCollections$SubList spliterator().tryAdvance()            0   0.236
ImmutableCollections$SubList spliterator().forEachRemaining()      0   0.139
ImmutableCollections$SubList contains                              0   0.257
ImmutableCollections$SubList containsAll                           0   0.159
ImmutableCollections$SubList forEach                               0   0.150
ImmutableCollections$SubList toArray()                             0   0.136
ImmutableCollections$SubList toArray(a)                            0   0.121
ImmutableCollections$SubList toArray(empty)                        0   0.463
ImmutableCollections$SubList stream().forEach                      0   0.174
ImmutableCollections$SubList stream().mapToInt                     0   0.351
ImmutableCollections$SubList stream().collect                      0   0.245
ImmutableCollections$SubList stream()::iterator                    0   0.289
ImmutableCollections$SubList parallelStream().forEach              0   1.445
ImmutableCollections$SubList parallelStream().mapToInt             0   1.793
ImmutableCollections$SubList parallelStream().collect              0   1.997
ImmutableCollections$SubList parallelStream()::iterator            0   0.301
ImmutableCollections$SubList listIterator forward loop             0   0.215
ImmutableCollections$SubList listIterator backward loop            0   0.136
ImmutableCollections$SubList indexOf                               0   0.139
ImmutableCollections$SubList lastIndexOf                           0   0.088
ImmutableCollections$SubList equals                                0   0.207
ImmutableCollections$SubList hashCode                              0   0.159
----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
