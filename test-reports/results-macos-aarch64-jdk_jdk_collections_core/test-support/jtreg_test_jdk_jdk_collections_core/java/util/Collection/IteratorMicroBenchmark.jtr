#Test Results (version 2)
#Fri Apr 12 13:15:28 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=216 0\:00\:00.216
end=Fri Apr 12 13\:15\:28 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.13
javatestOS=Mac OS X 14.4.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Fri Apr 12 13\:15\:28 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.4.1,family\:mac,simple_arch\:aarch64,simple_version\:14.4,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.4.1
totalTime=217
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Collection

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5, mixed mode, sharing)

#section:build
----------messages:(7/234)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Fri Apr 12 13:15:28 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Fri Apr 12 13:15:28 UTC 2024
elapsed time (seconds): 0.122
result: Passed. Build successful

#section:compile
----------messages:(7/293)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:15:28 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Apr 12 13:15:28 UTC 2024
elapsed time (seconds): 0.121
----------configuration:(10/723)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d

----------rerun:(33/3384)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
----------direct:(7/587)----------
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/292)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Fri Apr 12 13:15:28 UTC 2024
Mode: agentvm
Agent id: 3
finished: Fri Apr 12 13:15:28 UTC 2024
elapsed time (seconds): 0.094
----------configuration:(13/971)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection

----------rerun:(26/2874)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34428)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0 10.750
ArrayList spliterator().tryAdvance()                               0  3.786
ArrayList spliterator().forEachRemaining()                         0  2.858
ArrayList contains                                                 0 10.270
ArrayList containsAll                                              0  0.870
ArrayList forEach                                                  0  4.049
ArrayList toArray()                                                0  0.224
ArrayList toArray(a)                                               0  0.229
ArrayList toArray(empty)                                           0  0.179
ArrayList stream().forEach                                         0  2.791
ArrayList stream().mapToInt                                        0 19.944
ArrayList stream().collect                                         0 18.755
ArrayList stream()::iterator                                       0  5.732
ArrayList parallelStream().forEach                                 0  8.273
ArrayList parallelStream().mapToInt                                1 92.284
ArrayList parallelStream().collect                                 0 16.492
ArrayList parallelStream()::iterator                               0  4.732
ArrayList removeIf                                                 0  3.609
ArrayList remove(Object)                                           0  0.550
ArrayList listIterator forward loop                                0  1.010
ArrayList listIterator backward loop                               0  0.292
ArrayList indexOf                                                  0  0.327
ArrayList lastIndexOf                                              0  0.199
ArrayList equals                                                   0  1.283
ArrayList hashCode                                                 0  0.501
ArrayList replaceAll                                               0  3.713
ArrayList$SubList iterate for loop                                 0  0.563
ArrayList$SubList iterator().forEachRemaining()                    0  0.369
ArrayList$SubList spliterator().tryAdvance()                       0  7.187
ArrayList$SubList spliterator().forEachRemaining()                 0  0.157
ArrayList$SubList contains                                         0  0.177
ArrayList$SubList containsAll                                      0  0.246
ArrayList$SubList forEach                                          0  0.477
ArrayList$SubList toArray()                                        0  0.595
ArrayList$SubList toArray(a)                                       0  0.280
ArrayList$SubList toArray(empty)                                   0  0.410
ArrayList$SubList stream().forEach                                 0  0.346
ArrayList$SubList stream().mapToInt                                0  1.049
ArrayList$SubList stream().collect                                 0  0.464
ArrayList$SubList stream()::iterator                               0  0.295
ArrayList$SubList parallelStream().forEach                         0  2.678
ArrayList$SubList parallelStream().mapToInt                        0  1.806
ArrayList$SubList parallelStream().collect                         0  1.391
ArrayList$SubList parallelStream()::iterator                       0  0.226
ArrayList$SubList removeIf                                         0  0.130
ArrayList$SubList remove(Object)                                   0  0.187
ArrayList$SubList listIterator forward loop                        0  0.113
ArrayList$SubList listIterator backward loop                       0  0.118
ArrayList$SubList indexOf                                          0  0.057
ArrayList$SubList lastIndexOf                                      0  0.120
ArrayList$SubList equals                                           0  0.727
ArrayList$SubList hashCode                                         0  0.116
ArrayList$SubList replaceAll                                       0  0.145
Vector iterate for loop                                            0  0.253
Vector iterator().forEachRemaining()                               0  0.147
Vector spliterator().tryAdvance()                                  0  0.206
Vector spliterator().forEachRemaining()                            0  0.084
Vector contains                                                    0  1.113
Vector containsAll                                                 0  0.356
Vector forEach                                                     0  0.093
Vector toArray()                                                   0  0.071
Vector toArray(a)                                                  0  0.167
Vector toArray(empty)                                              0  0.052
Vector stream().forEach                                            0  0.143
Vector stream().mapToInt                                           0  0.256
Vector stream().collect                                            0  0.192
Vector stream()::iterator                                          0  0.197
Vector parallelStream().forEach                                    0  1.440
Vector parallelStream().mapToInt                                   0  1.511
Vector parallelStream().collect                                    0  1.405
Vector parallelStream()::iterator                                  0  0.199
Vector removeIf                                                    0  0.103
Vector remove(Object)                                              0  0.948
Vector listIterator forward loop                                   0  0.209
Vector listIterator backward loop                                  0  0.167
Vector indexOf                                                     0  0.516
Vector lastIndexOf                                                 0  0.115
Vector equals                                                      0  0.661
Vector hashCode                                                    0  1.366
Vector replaceAll                                                  0  0.219
SynchronizedRandomAccessList iterate for loop                      0  0.602
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.179
SynchronizedRandomAccessList spliterator().tryAdvance()            0  6.504
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.233
SynchronizedRandomAccessList contains                              0  1.034
SynchronizedRandomAccessList containsAll                           0  0.229
SynchronizedRandomAccessList forEach                               0  0.233
SynchronizedRandomAccessList toArray()                             0  0.182
SynchronizedRandomAccessList toArray(a)                            0  0.214
SynchronizedRandomAccessList toArray(empty)                        0  0.226
SynchronizedRandomAccessList stream().forEach                      0  0.287
SynchronizedRandomAccessList stream().mapToInt                     0  0.398
SynchronizedRandomAccessList stream().collect                      0  0.290
SynchronizedRandomAccessList stream()::iterator                    0  0.290
SynchronizedRandomAccessList parallelStream().forEach              0  1.717
SynchronizedRandomAccessList parallelStream().mapToInt             0  1.666
SynchronizedRandomAccessList parallelStream().collect              0  1.518
SynchronizedRandomAccessList parallelStream()::iterator            0  0.283
SynchronizedRandomAccessList removeIf                              0  0.450
SynchronizedRandomAccessList remove(Object)                        0  0.214
SynchronizedRandomAccessList listIterator forward loop             0  0.206
SynchronizedRandomAccessList listIterator backward loop            0  0.229
SynchronizedRandomAccessList indexOf                               0  0.285
SynchronizedRandomAccessList lastIndexOf                           0  0.278
SynchronizedRandomAccessList equals                                0  1.256
SynchronizedRandomAccessList hashCode                              0  0.329
SynchronizedRandomAccessList replaceAll                            0  0.602
LinkedList iterate for loop                                        0  0.246
LinkedList iterator().forEachRemaining()                           0  0.192
LinkedList spliterator().tryAdvance()                              0  4.093
LinkedList spliterator().forEachRemaining()                        0  0.128
LinkedList contains                                                0  0.408
LinkedList containsAll                                             0  0.096
LinkedList forEach                                                 0  0.111
LinkedList toArray()                                               0  0.084
LinkedList toArray(a)                                              0  0.079
LinkedList toArray(empty)                                          0  0.056
LinkedList stream().forEach                                        0  0.135
LinkedList stream().mapToInt                                       0  0.275
LinkedList stream().collect                                        0  0.199
LinkedList stream()::iterator                                      0  0.197
LinkedList parallelStream().forEach                                0  1.806
LinkedList parallelStream().mapToInt                               0  1.853
LinkedList parallelStream().collect                                0  1.482
LinkedList parallelStream()::iterator                              0  0.221
LinkedList removeIf                                                0  0.125
LinkedList remove(Object)                                          0  0.081
LinkedList descendingIterator() loop                               0  2.617
LinkedList descendingIterator().forEachRemaining()                 0 10.641
LinkedList listIterator forward loop                               0  0.192
LinkedList listIterator backward loop                              0  0.108
LinkedList indexOf                                                 0  0.064
LinkedList lastIndexOf                                             0  0.088
LinkedList equals                                                  0  0.447
LinkedList hashCode                                                0  0.108
LinkedList replaceAll                                              0  0.197
AbstractList$SubList iterate for loop                              0  0.229
AbstractList$SubList iterator().forEachRemaining()                 0  0.165
AbstractList$SubList spliterator().tryAdvance()                    0  0.371
AbstractList$SubList spliterator().forEachRemaining()              0  0.167
AbstractList$SubList contains                                      0  0.260
AbstractList$SubList containsAll                                   0  0.165
AbstractList$SubList forEach                                       0  0.147
AbstractList$SubList toArray()                                     0  0.170
AbstractList$SubList toArray(a)                                    0  0.145
AbstractList$SubList toArray(empty)                                0  0.123
AbstractList$SubList stream().forEach                              0  0.233
AbstractList$SubList stream().mapToInt                             0  0.391
AbstractList$SubList stream().collect                              0  0.319
AbstractList$SubList stream()::iterator                            0  0.268
AbstractList$SubList parallelStream().forEach                      0  1.875
AbstractList$SubList parallelStream().mapToInt                     0  1.877
AbstractList$SubList parallelStream().collect                      0  1.585
AbstractList$SubList parallelStream()::iterator                    0  0.283
AbstractList$SubList removeIf                                      0  0.143
AbstractList$SubList remove(Object)                                0  0.140
AbstractList$SubList listIterator forward loop                     0  0.111
AbstractList$SubList listIterator backward loop                    0  0.221
AbstractList$SubList indexOf                                       0  0.133
AbstractList$SubList lastIndexOf                                   0  0.211
AbstractList$SubList equals                                        0  0.418
AbstractList$SubList hashCode                                      0  0.206
AbstractList$SubList replaceAll                                    0  0.194
CopyOnWriteArrayList iterate for loop                              0  0.182
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.290
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.152
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.081
CopyOnWriteArrayList contains                                      0  1.108
CopyOnWriteArrayList containsAll                                   0  0.238
CopyOnWriteArrayList forEach                                       0  0.079
CopyOnWriteArrayList toArray()                                     0  0.056
CopyOnWriteArrayList toArray(a)                                    0  0.118
CopyOnWriteArrayList toArray(empty)                                0  0.054
CopyOnWriteArrayList stream().forEach                              0  0.103
CopyOnWriteArrayList stream().mapToInt                             0  0.211
CopyOnWriteArrayList stream().collect                              0  0.172
CopyOnWriteArrayList stream()::iterator                            0  0.167
CopyOnWriteArrayList parallelStream().forEach                      0  1.201
CopyOnWriteArrayList parallelStream().mapToInt                     0  1.541
CopyOnWriteArrayList parallelStream().collect                      0  1.273
CopyOnWriteArrayList parallelStream()::iterator                    0  0.201
CopyOnWriteArrayList removeIf                                      0  0.130
CopyOnWriteArrayList remove(Object)                                0  0.464
CopyOnWriteArrayList listIterator forward loop                     0  0.096
CopyOnWriteArrayList listIterator backward loop                    0  0.150
CopyOnWriteArrayList indexOf                                       0  0.157
CopyOnWriteArrayList lastIndexOf                                   0  0.086
CopyOnWriteArrayList equals                                        0  0.452
CopyOnWriteArrayList hashCode                                      0  0.128
CopyOnWriteArrayList replaceAll                                    0  0.231
COWSubList iterate for loop                                        0  4.322
COWSubList iterator().forEachRemaining()                           0  0.275
COWSubList spliterator().tryAdvance()                              0  0.238
COWSubList spliterator().forEachRemaining()                        0  0.091
COWSubList contains                                                0  0.165
COWSubList containsAll                                             0  0.209
COWSubList forEach                                                 0  0.133
COWSubList toArray()                                               0  0.246
COWSubList toArray(a)                                              0  0.187
COWSubList toArray(empty)                                          0  0.106
COWSubList stream().forEach                                        0  0.123
COWSubList stream().mapToInt                                       0  0.256
COWSubList stream().collect                                        0  0.197
COWSubList stream()::iterator                                      0  0.160
COWSubList parallelStream().forEach                                0  1.246
COWSubList parallelStream().mapToInt                               0  1.435
COWSubList parallelStream().collect                                0  1.361
COWSubList parallelStream()::iterator                              0  0.167
COWSubList removeIf                                                0  0.219
COWSubList remove(Object)                                          0  0.101
COWSubList listIterator forward loop                               0  0.224
COWSubList listIterator backward loop                              0  0.290
COWSubList indexOf                                                 0  0.064
COWSubList lastIndexOf                                             0  0.088
COWSubList equals                                                  0  0.290
COWSubList hashCode                                                0  0.125
COWSubList replaceAll                                              0  0.150
ArrayDeque iterate for loop                                        0  0.273
ArrayDeque iterator().forEachRemaining()                           0  0.135
ArrayDeque spliterator().tryAdvance()                              0  0.189
ArrayDeque spliterator().forEachRemaining()                        0  0.106
ArrayDeque contains                                                0  0.287
ArrayDeque containsAll                                             0  0.096
ArrayDeque forEach                                                 0  0.081
ArrayDeque toArray()                                               0  0.098
ArrayDeque toArray(a)                                              0  0.108
ArrayDeque toArray(empty)                                          0  0.057
ArrayDeque stream().forEach                                        0  0.130
ArrayDeque stream().mapToInt                                       0  0.278
ArrayDeque stream().collect                                        0  0.182
ArrayDeque stream()::iterator                                      0  0.189
ArrayDeque parallelStream().forEach                                0  1.614
ArrayDeque parallelStream().mapToInt                               0  1.717
ArrayDeque parallelStream().collect                                0  1.550
ArrayDeque parallelStream()::iterator                              0  0.199
ArrayDeque removeIf                                                0  0.101
ArrayDeque remove(Object)                                          0  0.074
ArrayDeque descendingIterator() loop                               0  0.174
ArrayDeque descendingIterator().forEachRemaining()                 0  0.128
PriorityQueue iterate for loop                                     0  0.170
PriorityQueue iterator().forEachRemaining()                        0  0.111
PriorityQueue spliterator().tryAdvance()                           0  3.143
PriorityQueue spliterator().forEachRemaining()                     0  0.101
PriorityQueue contains                                             0  0.135
PriorityQueue containsAll                                          0  0.098
PriorityQueue forEach                                              0  0.115
PriorityQueue toArray()                                            0  0.057
PriorityQueue toArray(a)                                           0  0.120
PriorityQueue toArray(empty)                                       0  0.074
PriorityQueue stream().forEach                                     0  0.123
PriorityQueue stream().mapToInt                                    0  0.263
PriorityQueue stream().collect                                     0  0.184
PriorityQueue stream()::iterator                                   0  0.160
PriorityQueue parallelStream().forEach                             0  1.405
PriorityQueue parallelStream().mapToInt                            0  1.504
PriorityQueue parallelStream().collect                             0  1.538
PriorityQueue parallelStream()::iterator                           0  0.174
PriorityQueue removeIf                                             0  0.238
PriorityQueue remove(Object)                                       0  0.079
ConcurrentLinkedQueue iterate for loop                             0  0.300
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.125
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  3.698
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.165
ConcurrentLinkedQueue contains                                     0  0.251
ConcurrentLinkedQueue containsAll                                  0  0.103
ConcurrentLinkedQueue forEach                                      0  0.071
ConcurrentLinkedQueue toArray()                                    0  0.123
ConcurrentLinkedQueue toArray(a)                                   0  0.125
ConcurrentLinkedQueue toArray(empty)                               0  0.064
ConcurrentLinkedQueue stream().forEach                             0  0.125
ConcurrentLinkedQueue stream().mapToInt                            0  0.263
ConcurrentLinkedQueue stream().collect                             0  0.182
ConcurrentLinkedQueue stream()::iterator                           0  0.199
ConcurrentLinkedQueue parallelStream().forEach                     0  1.381
ConcurrentLinkedQueue parallelStream().mapToInt                    0  1.120
ConcurrentLinkedQueue parallelStream().collect                     0  1.410
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.229
ConcurrentLinkedQueue removeIf                                     0  0.118
ConcurrentLinkedQueue remove(Object)                               0  0.081
ConcurrentLinkedDeque iterate for loop                             0  0.256
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.113
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  2.229
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.101
ConcurrentLinkedDeque contains                                     0  0.283
ConcurrentLinkedDeque containsAll                                  0  0.170
ConcurrentLinkedDeque forEach                                      0  0.098
ConcurrentLinkedDeque toArray()                                    0  0.096
ConcurrentLinkedDeque toArray(a)                                   0  0.123
ConcurrentLinkedDeque toArray(empty)                               0  0.056
ConcurrentLinkedDeque stream().forEach                             0  0.113
ConcurrentLinkedDeque stream().mapToInt                            0  0.263
ConcurrentLinkedDeque stream().collect                             0  0.172
ConcurrentLinkedDeque stream()::iterator                           0  0.197
ConcurrentLinkedDeque parallelStream().forEach                     0  2.150
ConcurrentLinkedDeque parallelStream().mapToInt                    0  1.317
ConcurrentLinkedDeque parallelStream().collect                     0  0.983
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.219
ConcurrentLinkedDeque removeIf                                     0  0.106
ConcurrentLinkedDeque remove(Object)                               0  0.088
ConcurrentLinkedDeque descendingIterator() loop                    0  1.934
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.147
ArrayBlockingQueue iterate for loop                                0  0.604
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.351
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.376
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.162
ArrayBlockingQueue contains                                        0  0.727
ArrayBlockingQueue containsAll                                     0  0.088
ArrayBlockingQueue forEach                                         0  0.086
ArrayBlockingQueue toArray()                                       0  0.101
ArrayBlockingQueue toArray(a)                                      0  0.088
ArrayBlockingQueue toArray(empty)                                  0  0.071
ArrayBlockingQueue stream().forEach                                0  0.182
ArrayBlockingQueue stream().mapToInt                               0  0.273
ArrayBlockingQueue stream().collect                                0  0.224
ArrayBlockingQueue stream()::iterator                              0  0.283
ArrayBlockingQueue parallelStream().forEach                        0  1.565
ArrayBlockingQueue parallelStream().mapToInt                       0  2.310
ArrayBlockingQueue parallelStream().collect                        0  1.644
ArrayBlockingQueue parallelStream()::iterator                      0  0.310
ArrayBlockingQueue removeIf                                        0  0.106
ArrayBlockingQueue remove(Object)                                  0  0.081
LinkedBlockingQueue iterate for loop                               0  0.229
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.356
LinkedBlockingQueue spliterator().tryAdvance()                     1 63.333
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.275
LinkedBlockingQueue contains                                       0  1.172
LinkedBlockingQueue containsAll                                    0  0.216
LinkedBlockingQueue forEach                                        0  0.150
LinkedBlockingQueue toArray()                                      0  0.079
LinkedBlockingQueue toArray(a)                                     0  0.093
LinkedBlockingQueue toArray(empty)                                 0  0.150
LinkedBlockingQueue stream().forEach                               0  0.305
LinkedBlockingQueue stream().mapToInt                              0  0.656
LinkedBlockingQueue stream().collect                               0  0.459
LinkedBlockingQueue stream()::iterator                             0  0.307
LinkedBlockingQueue parallelStream().forEach                       0  3.718
LinkedBlockingQueue parallelStream().mapToInt                      0  2.349
LinkedBlockingQueue parallelStream().collect                       0  1.703
LinkedBlockingQueue parallelStream()::iterator                     0  0.285
LinkedBlockingQueue removeIf                                       0  0.209
LinkedBlockingQueue remove(Object)                                 0  0.103
LinkedBlockingDeque iterate for loop                               0  0.285
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.364
LinkedBlockingDeque spliterator().tryAdvance()                     0  7.425
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.194
LinkedBlockingDeque contains                                       0  0.496
LinkedBlockingDeque containsAll                                    0  0.123
LinkedBlockingDeque forEach                                        0  0.123
LinkedBlockingDeque toArray()                                      0  0.069
LinkedBlockingDeque toArray(a)                                     0  0.071
LinkedBlockingDeque toArray(empty)                                 0  0.086
LinkedBlockingDeque stream().forEach                               0  0.189
LinkedBlockingDeque stream().mapToInt                              0  0.246
LinkedBlockingDeque stream().collect                               0  0.233
LinkedBlockingDeque stream()::iterator                             0  0.229
LinkedBlockingDeque parallelStream().forEach                       0  1.826
LinkedBlockingDeque parallelStream().mapToInt                      0  1.769
LinkedBlockingDeque parallelStream().collect                       1 72.500
LinkedBlockingDeque parallelStream()::iterator                     0  0.870
LinkedBlockingDeque removeIf                                       0  0.256
LinkedBlockingDeque remove(Object)                                 0  0.115
LinkedBlockingDeque descendingIterator() loop                      0  6.194
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.302
LinkedTransferQueue iterate for loop                               0  0.260
LinkedTransferQueue iterator().forEachRemaining()                  0  0.428
LinkedTransferQueue spliterator().tryAdvance()                     0  3.953
LinkedTransferQueue spliterator().forEachRemaining()               0  0.201
LinkedTransferQueue contains                                       0  0.275
LinkedTransferQueue containsAll                                    0  0.201
LinkedTransferQueue forEach                                        0  0.147
LinkedTransferQueue toArray()                                      0  0.155
LinkedTransferQueue toArray(a)                                     0  0.260
LinkedTransferQueue toArray(empty)                                 0  0.076
LinkedTransferQueue stream().forEach                               0  0.297
LinkedTransferQueue stream().mapToInt                              0  0.762
LinkedTransferQueue stream().collect                               0  0.437
LinkedTransferQueue stream()::iterator                             0  0.246
LinkedTransferQueue parallelStream().forEach                       0  3.066
LinkedTransferQueue parallelStream().mapToInt                      0  1.833
LinkedTransferQueue parallelStream().collect                       0  1.469
LinkedTransferQueue parallelStream()::iterator                     0  0.238
LinkedTransferQueue removeIf                                       0  0.170
LinkedTransferQueue remove(Object)                                 0  0.337
PriorityBlockingQueue iterate for loop                             0  2.862
PriorityBlockingQueue iterator().forEachRemaining()                0  0.174
PriorityBlockingQueue spliterator().tryAdvance()                   0  2.184
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.295
PriorityBlockingQueue contains                                     0  0.209
PriorityBlockingQueue containsAll                                  0  0.098
PriorityBlockingQueue forEach                                      0  0.115
PriorityBlockingQueue toArray()                                    0  0.047
PriorityBlockingQueue toArray(a)                                   0  0.319
PriorityBlockingQueue toArray(empty)                               0  0.174
PriorityBlockingQueue stream().forEach                             0  0.128
PriorityBlockingQueue stream().mapToInt                            0  0.209
PriorityBlockingQueue stream().collect                             0  0.187
PriorityBlockingQueue stream()::iterator                           0  0.182
PriorityBlockingQueue parallelStream().forEach                     0  1.305
PriorityBlockingQueue parallelStream().mapToInt                    0  2.268
PriorityBlockingQueue parallelStream().collect                     0  1.511
PriorityBlockingQueue parallelStream()::iterator                   0  0.273
PriorityBlockingQueue removeIf                                     0  0.256
PriorityBlockingQueue remove(Object)                               0  0.064
ListN iterate for loop                                             0  0.229
ListN iterator().forEachRemaining()                                0  0.111
ListN spliterator().tryAdvance()                                   0  0.278
ListN spliterator().forEachRemaining()                             0  0.106
ListN contains                                                     0  0.241
ListN containsAll                                                  0  0.086
ListN forEach                                                      0  0.096
ListN toArray()                                                    0  0.052
ListN toArray(a)                                                   0  0.069
ListN toArray(empty)                                               0  0.044
ListN stream().forEach                                             0  0.120
ListN stream().mapToInt                                            0  0.174
ListN stream().collect                                             0  0.356
ListN stream()::iterator                                           0  0.270
ListN parallelStream().forEach                                     0  1.113
ListN parallelStream().mapToInt                                    0  1.388
ListN parallelStream().collect                                     0  1.698
ListN parallelStream()::iterator                                   0  0.209
ListN listIterator forward loop                                    0  0.199
ListN listIterator backward loop                                   0  0.123
ListN indexOf                                                      0  0.076
ListN lastIndexOf                                                  0  0.069
ListN equals                                                       0  0.511
ListN hashCode                                                     0  0.147
ImmutableCollections$SubList iterate for loop                      0  0.386
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.135
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.197
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.113
ImmutableCollections$SubList contains                              0  0.187
ImmutableCollections$SubList containsAll                           0  0.115
ImmutableCollections$SubList forEach                               0  0.108
ImmutableCollections$SubList toArray()                             0  0.101
ImmutableCollections$SubList toArray(a)                            0  0.098
ImmutableCollections$SubList toArray(empty)                        0  0.415
ImmutableCollections$SubList stream().forEach                      0  0.145
ImmutableCollections$SubList stream().mapToInt                     0  0.206
ImmutableCollections$SubList stream().collect                      0  0.197
ImmutableCollections$SubList stream()::iterator                    0  0.214
ImmutableCollections$SubList parallelStream().forEach              0  1.140
ImmutableCollections$SubList parallelStream().mapToInt             0  1.398
ImmutableCollections$SubList parallelStream().collect              0  1.278
ImmutableCollections$SubList parallelStream()::iterator            0  0.214
ImmutableCollections$SubList listIterator forward loop             0  0.165
ImmutableCollections$SubList listIterator backward loop            0  0.113
ImmutableCollections$SubList indexOf                               0  0.086
ImmutableCollections$SubList lastIndexOf                           0  0.069
ImmutableCollections$SubList equals                                0  0.238
ImmutableCollections$SubList hashCode                              0  0.125
----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
