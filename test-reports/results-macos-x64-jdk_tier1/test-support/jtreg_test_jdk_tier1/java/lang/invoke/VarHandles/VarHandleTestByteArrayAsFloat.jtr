#Test Results (version 2)
#Mon Apr 29 00:49:37 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8154556 othervm testng
maxTimeout=360
run=USER_SPECIFIED testng/othervm/timeout\=360 -Diters\=2000 -XX\:CompileThresholdScaling\=0.1 -XX\:TieredStopAtLevel\=1 VarHandleTestByteArrayAsFloat\nUSER_SPECIFIED testng/othervm/timeout\=360 -Diters\=2000 -XX\:CompileThresholdScaling\=0.1                         VarHandleTestByteArrayAsFloat\nUSER_SPECIFIED testng/othervm/timeout\=360 -Diters\=2000 -XX\:CompileThresholdScaling\=0.1 -XX\:-TieredCompilation  VarHandleTestByteArrayAsFloat\n
source=VarHandleTestByteArrayAsFloat.java
title=\ 

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java
elapsed=11100 0\:00\:11.100
end=Mon Apr 29 00\:49\:37 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.6 (x86_64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng build testng build testng
start=Mon Apr 29 00\:49\:26 UTC 2024
test=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.6,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.6
totalTime=11109
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/VarHandles

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/248)----------
command: build VarHandleTestByteArrayAsFloat
reason: Named class compiled on demand
started: Mon Apr 29 00:49:31 UTC 2024
Test directory:
  compile: VarHandleTestByteArrayAsFloat
finished: Mon Apr 29 00:49:31 UTC 2024
elapsed time (seconds): 0.152
result: Passed. Build successful

#section:compile
----------messages:(7/307)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:49:31 UTC 2024
Mode: agentvm
Agent id: 2
finished: Mon Apr 29 00:49:31 UTC 2024
elapsed time (seconds): 0.152
----------configuration:(13/984)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3614)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java
result: Passed. Compilation successful

#section:testng
----------messages:(6/419)----------
command: testng -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:TieredStopAtLevel=1 VarHandleTestByteArrayAsFloat
reason: User specified action: run testng/othervm/timeout=360 -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:TieredStopAtLevel=1 VarHandleTestByteArrayAsFloat 
started: Mon Apr 29 00:49:31 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 00:49:32 UTC 2024
elapsed time (seconds): 1.098
----------configuration:(0/0)----------
----------System.out:(132/32673)----------
config VarHandleBaseByteArrayTest.setup(): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@129d42dc): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2f22394b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@257a5ab3): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7f859098): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4b814292): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1bbdffef): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@36fd5c1e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@77a83e07): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@568e5c34): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@634bff1): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6256ecbe): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a5df140): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@17a19c38): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@733174c5): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5e2bc83c): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1afe5456): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@594075a2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5f97a6aa): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@40ed0863): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@262ddf02): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@460d0e97): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@458ceba6): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@588a55cd): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@78ece093): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@68a43a34): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5264a5dd): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@289d3d99): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@b83cb15): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@258d55cb): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a6f0939): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7fdd3f49): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1f9fb4a2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@319b214c): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@547863b8): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@48f376e1): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6e4be602): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@48348507): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@498e818c): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@23bcb84e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@46048cc0): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2fdf0b5f): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@69c67c7a): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6aa0f82d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f3c49aa): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4b22e76b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6d60799d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@67cde10d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@699aacab): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18a362b9): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@67f15239): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@52ae19b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@214c72d7): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@ab4223a): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@822153b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7a010b60): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@78d103ab): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@21697235): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@23af82ae): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@64cf5a68): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73fae8fc): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@775b530d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3002d069): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@536582a5): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6b4b562e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@31c04c36): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2ffb1cf4): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2eeb6811): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@41316176): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@730ea0d9): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@8dc3edf): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@786cf0a5): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@fed39bb): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7a6d460f): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@cde015d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@22684381): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@721ef407): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@9035c5e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@34752c19): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7537c755): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2bf537aa): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2a8fd446): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@70e41997): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@82adc74): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5bbffb70): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@414d09d6): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@55e3cded): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3620daed): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@124d77ce): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6ed75182): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1c716ef4): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1648e099): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@382ff619): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1418a8fd): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@d7e69d2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@37b9fd4e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@35a05917): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@14941c84): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1cd02741): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a47f7ac): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7137f25f): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@670e52d2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@449d17e3): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a1737af): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@299fcd22): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5692e782): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@bab4fc2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@47345aec): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1948a9bd): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2251b979): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@57bc87e8): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4e026f8): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@12031207): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@12453aa9): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@23c4955b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@371d9e8a): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7023f38a): success
test VarHandleTestByteArrayAsFloat.testEquals(): success
test VarHandleTestByteArrayAsFloat.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@443031fa): success
test VarHandleTestByteArrayAsFloat.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@29fd75c5): success
test VarHandleTestByteArrayAsFloat.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@66081090): success
test VarHandleTestByteArrayAsFloat.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@665f2f31): success
test VarHandleTestByteArrayAsFloat.testTypes(java.lang.invoke.VarHandleByteArrayAsFloats$ArrayHandle@1796cf04, [class [B, int]): success
test VarHandleTestByteArrayAsFloat.testTypes(java.lang.invoke.VarHandleByteArrayAsFloats$ByteBufferHandle@94ddc37, java.util.Arrays$ArrayList@6aad5c9f): success
test VarHandleTestByteArrayAsFloat.testTypes(java.lang.invoke.VarHandleByteArrayAsFloats$ArrayHandle@5c2950, [class [B, int]): success
test VarHandleTestByteArrayAsFloat.testTypes(java.lang.invoke.VarHandleByteArrayAsFloats$ByteBufferHandle@675e10d1, java.util.Arrays$ArrayList@6aad5c9f): success

===============================================
java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java
Total tests run: 125, Passes: 125, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(37/3870)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
CLASSPATH=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Diters=2000 \\
        -XX:CompileThresholdScaling=0.1 \\
        -XX:TieredStopAtLevel=1 \\
        com.sun.javatest.regtest.agent.MainWrapper /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d/testng.0.jta java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java false VarHandleTestByteArrayAsFloat
result: Passed. Execution successful

#section:build
----------messages:(5/189)----------
command: build VarHandleTestByteArrayAsFloat
reason: Named class compiled on demand
started: Mon Apr 29 00:49:32 UTC 2024
finished: Mon Apr 29 00:49:32 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:testng
----------messages:(6/371)----------
command: testng -Diters=2000 -XX:CompileThresholdScaling=0.1 VarHandleTestByteArrayAsFloat
reason: User specified action: run testng/othervm/timeout=360 -Diters=2000 -XX:CompileThresholdScaling=0.1 VarHandleTestByteArrayAsFloat 
started: Mon Apr 29 00:49:32 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 00:49:34 UTC 2024
elapsed time (seconds): 2.474
----------configuration:(0/0)----------
----------System.out:(132/32673)----------
config VarHandleBaseByteArrayTest.setup(): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@129d42dc): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2f22394b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@257a5ab3): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7f859098): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4b814292): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1bbdffef): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@36fd5c1e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@77a83e07): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@568e5c34): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@634bff1): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6256ecbe): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a5df140): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@17a19c38): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@733174c5): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5e2bc83c): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1afe5456): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@594075a2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5f97a6aa): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@40ed0863): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@262ddf02): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@460d0e97): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@458ceba6): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@588a55cd): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@78ece093): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@68a43a34): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5264a5dd): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@289d3d99): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@b83cb15): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@258d55cb): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a6f0939): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7fdd3f49): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1f9fb4a2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@319b214c): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@547863b8): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@48f376e1): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6e4be602): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@48348507): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@498e818c): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@23bcb84e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@46048cc0): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2fdf0b5f): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@69c67c7a): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6aa0f82d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f3c49aa): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4b22e76b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6d60799d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@67cde10d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@699aacab): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18a362b9): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@67f15239): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@52ae19b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@214c72d7): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@ab4223a): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@822153b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7a010b60): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@78d103ab): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@21697235): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@23af82ae): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@64cf5a68): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73fae8fc): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@775b530d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3002d069): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@536582a5): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6b4b562e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@31c04c36): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2ffb1cf4): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2eeb6811): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@41316176): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@730ea0d9): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@8dc3edf): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@786cf0a5): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@fed39bb): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7a6d460f): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@cde015d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@22684381): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@721ef407): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@9035c5e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@34752c19): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7537c755): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2bf537aa): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2a8fd446): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@70e41997): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@82adc74): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5bbffb70): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@414d09d6): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@55e3cded): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3620daed): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@124d77ce): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6ed75182): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1c716ef4): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1648e099): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@382ff619): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1418a8fd): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@d7e69d2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@37b9fd4e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@35a05917): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@14941c84): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1cd02741): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a47f7ac): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7137f25f): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@670e52d2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@449d17e3): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a1737af): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@299fcd22): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5692e782): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@bab4fc2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@47345aec): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1948a9bd): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2251b979): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@57bc87e8): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4e026f8): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@12031207): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@12453aa9): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@23c4955b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@371d9e8a): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7023f38a): success
test VarHandleTestByteArrayAsFloat.testEquals(): success
test VarHandleTestByteArrayAsFloat.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@443031fa): success
test VarHandleTestByteArrayAsFloat.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@29fd75c5): success
test VarHandleTestByteArrayAsFloat.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@66081090): success
test VarHandleTestByteArrayAsFloat.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@665f2f31): success
test VarHandleTestByteArrayAsFloat.testTypes(java.lang.invoke.VarHandleByteArrayAsFloats$ArrayHandle@7b530a13, [class [B, int]): success
test VarHandleTestByteArrayAsFloat.testTypes(java.lang.invoke.VarHandleByteArrayAsFloats$ByteBufferHandle@1d94598, java.util.Arrays$ArrayList@94ddc37): success
test VarHandleTestByteArrayAsFloat.testTypes(java.lang.invoke.VarHandleByteArrayAsFloats$ArrayHandle@4b625021, [class [B, int]): success
test VarHandleTestByteArrayAsFloat.testTypes(java.lang.invoke.VarHandleByteArrayAsFloats$ByteBufferHandle@6717f108, java.util.Arrays$ArrayList@94ddc37): success

===============================================
java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java
Total tests run: 125, Passes: 125, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(36/3835)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
CLASSPATH=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Diters=2000 \\
        -XX:CompileThresholdScaling=0.1 \\
        com.sun.javatest.regtest.agent.MainWrapper /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d/testng.1.jta java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java false VarHandleTestByteArrayAsFloat
result: Passed. Execution successful

#section:build
----------messages:(5/189)----------
command: build VarHandleTestByteArrayAsFloat
reason: Named class compiled on demand
started: Mon Apr 29 00:49:34 UTC 2024
finished: Mon Apr 29 00:49:34 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:testng
----------messages:(6/417)----------
command: testng -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:-TieredCompilation VarHandleTestByteArrayAsFloat
reason: User specified action: run testng/othervm/timeout=360 -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:-TieredCompilation VarHandleTestByteArrayAsFloat 
started: Mon Apr 29 00:49:34 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 00:49:37 UTC 2024
elapsed time (seconds): 2.368
----------configuration:(0/0)----------
----------System.out:(132/32673)----------
config VarHandleBaseByteArrayTest.setup(): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@129d42dc): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2f22394b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@257a5ab3): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7f859098): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4b814292): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1bbdffef): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@36fd5c1e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@77a83e07): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@568e5c34): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@634bff1): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6256ecbe): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a5df140): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@17a19c38): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@733174c5): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5e2bc83c): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1afe5456): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@594075a2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5f97a6aa): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@40ed0863): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@262ddf02): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@460d0e97): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@458ceba6): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@588a55cd): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@78ece093): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@68a43a34): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5264a5dd): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@289d3d99): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@b83cb15): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@258d55cb): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a6f0939): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7fdd3f49): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1f9fb4a2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@319b214c): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@547863b8): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@48f376e1): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6e4be602): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@48348507): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@498e818c): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@23bcb84e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@46048cc0): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2fdf0b5f): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@69c67c7a): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6aa0f82d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f3c49aa): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4b22e76b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6d60799d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@67cde10d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@699aacab): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18a362b9): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@67f15239): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@52ae19b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@214c72d7): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@ab4223a): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@822153b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7a010b60): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@78d103ab): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@21697235): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@23af82ae): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@64cf5a68): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73fae8fc): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@775b530d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3002d069): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@536582a5): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6b4b562e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@31c04c36): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2ffb1cf4): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2eeb6811): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@41316176): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@730ea0d9): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@8dc3edf): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@786cf0a5): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@fed39bb): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7a6d460f): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@cde015d): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@22684381): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@721ef407): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@9035c5e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@34752c19): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7537c755): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2bf537aa): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2a8fd446): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@70e41997): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@82adc74): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5bbffb70): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@414d09d6): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@55e3cded): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3620daed): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@124d77ce): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6ed75182): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1c716ef4): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1648e099): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@382ff619): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1418a8fd): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@d7e69d2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@37b9fd4e): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@35a05917): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@14941c84): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1cd02741): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a47f7ac): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7137f25f): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@670e52d2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@449d17e3): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a1737af): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@299fcd22): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5692e782): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@bab4fc2): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@47345aec): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1948a9bd): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2251b979): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@57bc87e8): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4e026f8): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@12031207): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@12453aa9): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@23c4955b): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@371d9e8a): success
test VarHandleTestByteArrayAsFloat.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7023f38a): success
test VarHandleTestByteArrayAsFloat.testEquals(): success
test VarHandleTestByteArrayAsFloat.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@443031fa): success
test VarHandleTestByteArrayAsFloat.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@29fd75c5): success
test VarHandleTestByteArrayAsFloat.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@66081090): success
test VarHandleTestByteArrayAsFloat.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@665f2f31): success
test VarHandleTestByteArrayAsFloat.testTypes(java.lang.invoke.VarHandleByteArrayAsFloats$ArrayHandle@1796cf04, [class [B, int]): success
test VarHandleTestByteArrayAsFloat.testTypes(java.lang.invoke.VarHandleByteArrayAsFloats$ByteBufferHandle@94ddc37, java.util.Arrays$ArrayList@6aad5c9f): success
test VarHandleTestByteArrayAsFloat.testTypes(java.lang.invoke.VarHandleByteArrayAsFloats$ArrayHandle@5c2950, [class [B, int]): success
test VarHandleTestByteArrayAsFloat.testTypes(java.lang.invoke.VarHandleByteArrayAsFloats$ByteBufferHandle@675e10d1, java.util.Arrays$ArrayList@6aad5c9f): success

===============================================
java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java
Total tests run: 125, Passes: 125, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(37/3869)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
CLASSPATH=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Diters=2000 \\
        -XX:CompileThresholdScaling=0.1 \\
        -XX:-TieredCompilation \\
        com.sun.javatest.regtest.agent.MainWrapper /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.d/testng.2.jta java/lang/invoke/VarHandles/VarHandleTestByteArrayAsFloat.java false VarHandleTestByteArrayAsFloat
result: Passed. Execution successful


test result: Passed. Execution successful
