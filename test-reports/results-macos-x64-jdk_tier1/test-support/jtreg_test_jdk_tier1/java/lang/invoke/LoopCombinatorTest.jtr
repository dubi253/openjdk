#Test Results (version 2)
#Mon Apr 29 00:51:22 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/LoopCombinatorTest.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8139885 bug8150635 bug8150956 bug8150957 bug8151179 bug8152667 bug8153637 bug8154751 bug8154754 bug8167974 othervm testng
run=USER_SPECIFIED testng/othervm -ea -esa test.java.lang.invoke.LoopCombinatorTest\n
source=LoopCombinatorTest.java
title=\ 

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/LoopCombinatorTest.java
elapsed=1170 0\:00\:01.170
end=Mon Apr 29 00\:51\:22 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.6 (x86_64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Mon Apr 29 00\:51\:21 UTC 2024
test=java/lang/invoke/LoopCombinatorTest.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.6,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.6
totalTime=1172
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/270)----------
command: build test.java.lang.invoke.LoopCombinatorTest
reason: Named class compiled on demand
started: Mon Apr 29 00:51:21 UTC 2024
Test directory:
  compile: test.java.lang.invoke.LoopCombinatorTest
finished: Mon Apr 29 00:51:21 UTC 2024
elapsed time (seconds): 0.067
result: Passed. Build successful

#section:compile
----------messages:(7/285)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/LoopCombinatorTest.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:51:21 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:51:21 UTC 2024
elapsed time (seconds): 0.066
----------configuration:(13/940)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/LoopCombinatorTest.d
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3383)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/lang/invoke/LoopCombinatorTest.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/LoopCombinatorTest.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/LoopCombinatorTest.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/LoopCombinatorTest.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/LoopCombinatorTest.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/LoopCombinatorTest.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/LoopCombinatorTest.d:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/LoopCombinatorTest.java
result: Passed. Compilation successful

#section:testng
----------messages:(6/309)----------
command: testng -ea -esa test.java.lang.invoke.LoopCombinatorTest
reason: User specified action: run testng/othervm -ea -esa test.java.lang.invoke.LoopCombinatorTest 
started: Mon Apr 29 00:51:21 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 00:51:22 UTC 2024
elapsed time (seconds): 1.103
----------configuration:(0/0)----------
----------System.out:(195/23033)----------
test test.java.lang.invoke.LoopCombinatorTest.testCountedArrayLoop(): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoop(): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopArgsDefinedByIterations(): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParameters(()int, ()String, (String,int)String): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParameters(()int, ()String, (String,int,List)String): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParameters((List)int, ()String, (String,int,List)String): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParameters(()int, (List)String, (String,int,List)String): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParameters(()int, ()void, (int)void): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParameters(()int, ()void, (int,List)void): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParameters((List)int, ()void, (int,List)void): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParameters(()int, (List)void, (int,List)void): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParameters((List)int, ()String, (String,int)String): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParameters((List)int, (List)String, (String,int)String): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParameters((List)int, ()void, (int)void): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParameters((List)int, (List)void, (int)void): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParametersNullInit(()int, ()String, (String,int)String): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParametersNullInit(()int, ()String, (String,int,List)String): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParametersNullInit((List)int, ()String, (String,int,List)String): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParametersNullInit(()int, (List)String, (String,int,List)String): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParametersNullInit(()int, ()void, (int)void): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParametersNullInit(()int, ()void, (int,List)void): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParametersNullInit((List)int, ()void, (int,List)void): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParametersNullInit(()int, (List)void, (int,List)void): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParametersNullInit((List)int, ()String, (String,int)String): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParametersNullInit((List)int, (List)String, (String,int)String): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParametersNullInit((List)int, ()void, (int)void): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopBodyParametersNullInit((List)int, (List)void, (int)void): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopCounterInit(): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopEmpty(): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopNegative(MethodHandle()void, MethodHandle()int, MethodHandle()void, MethodHandle()void, "start/end must return int MethodHandle()void, MethodHandle()int"): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopNegative(MethodHandle()int, MethodHandle()void, MethodHandle()void, MethodHandle()void, "start/end must return int MethodHandle()int, MethodHandle()void"): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopNegative(MethodHandle(String)int, MethodHandle(double)int, MethodHandle()void, MethodHandle()void, "start and end parameter types must match: (String)int != (double)int"): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopNegative(MethodHandle(String)int, MethodHandle(String)int, MethodHandle()void, MethodHandle()void, "start/end and init parameter types must match: (String)int != ()void"): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopNegative(MethodHandle()int, MethodHandle()int, null, MethodHandle()void, "actual and expected body signatures must match: ()void != (int)void"): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopNullBody(): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopNullInitAndBody(): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopNullIterations(): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedLoopStateInitializedToNull(): success
testCountedLoopVoidInit i=0 : [MethodHandle()int, MethodHandle()void, MethodHandle(int)void]
hellohellohellohellohellotestCountedLoopVoidInit i=1 : [MethodHandle()int, null, MethodHandle(int)void]
hellohellohellohellohellotestCountedLoopVoidInit i=2 : [MethodHandle(int)int, MethodHandle()void, MethodHandle(int)void]
hellohellohellohellohellotestCountedLoopVoidInit i=3 : [MethodHandle(int)int, null, MethodHandle(int)void]
hellohellohellohellohellotestCountedLoopVoidInit i=4 : [MethodHandle()int, MethodHandle()void, MethodHandle(int,int)void]
hellohellohellohellohellotestCountedLoopVoidInit i=5 : [MethodHandle()int, null, MethodHandle(int,int)void]
hellohellohellohellohellotestCountedLoopVoidInit i=6 : [MethodHandle(int)int, MethodHandle()void, MethodHandle(int,int)void]
hellohellohellohellohellotestCountedLoopVoidInit i=7 : [MethodHandle(int)int, null, MethodHandle(int,int)void]
hellohellohellohellohellotest test.java.lang.invoke.LoopCombinatorTest.testCountedLoopVoidInit(): success
hellohellohellohellohellotest test.java.lang.invoke.LoopCombinatorTest.testCountedPrintingLoop(): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedRangeLoop(): success
test test.java.lang.invoke.LoopCombinatorTest.testCountedRangeLoopEmpty(): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileBadInit(): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle(int)int, MethodHandle(int,int)boolean, MethodHandle(int,int)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle()int, MethodHandle(int,int)boolean, MethodHandle(int,int)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(null, MethodHandle(int,int)boolean, MethodHandle(int,int)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle(int,byte)int, java.lang.invoke.BoundMethodHandle$Species_L@45264e2b, MethodHandle(int,int,byte)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle(int)int, java.lang.invoke.BoundMethodHandle$Species_L@45264e2b, MethodHandle(int,int,byte)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(null, java.lang.invoke.BoundMethodHandle$Species_L@45264e2b, MethodHandle(int,int,byte)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle(int,byte)int, MethodHandle(int,int)boolean, MethodHandle(int,int,byte)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle()int, MethodHandle(int,int)boolean, MethodHandle(int,int,byte)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(null, MethodHandle(int,int)boolean, MethodHandle(int,int,byte)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle(int)int, MethodHandle(int,int)boolean, MethodHandle(int)int, "loop predicate must match: (int,int)boolean != (int)boolean"): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle(int,byte)int, MethodHandle(int)boolean, MethodHandle(int)int, "loop initializer must match: (int,byte)int != ()int"): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle(int)int, MethodHandle(int,int)boolean, MethodHandle(int,int)char, "body function must match: (int,int)char != (char,int,int)char"): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle(int)int, MethodHandle(int,int)boolean, MethodHandle(char,int)int, "body function must match: (char,int)int != (int,char,int)int"): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle(int)int, MethodHandle(int,int)char, MethodHandle(int,int)int, "loop predicate must match: (int,int)char != (int,int)boolean"): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle(int)int, MethodHandle(char,int)boolean, MethodHandle(int,int)int, "loop predicate must match: (char,int)boolean != (int,int)boolean"): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle(int)char, MethodHandle(int,int)boolean, MethodHandle(int,int)int, "loop initializer must match: (int)char != (int)int"): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileLoop(MethodHandle(char)int, MethodHandle(int,int)boolean, MethodHandle(int,int)int, "loop initializer must match: (char)int != (int)int"): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileNullArgs(null, MethodHandle()int): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileNullArgs(MethodHandle()int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testDoWhileVoidInit(): success
testIterateLength.init = MethodHandle(List)int
testIterateLength.init = MethodHandle()int
testIterateLength.init = null
test test.java.lang.invoke.LoopCombinatorTest.testIterateLength(MethodHandle(List)ListIterator): success
testIterateLength.init = MethodHandle(Iterable)int
testIterateLength.init = MethodHandle()int
testIterateLength.init = null
test test.java.lang.invoke.LoopCombinatorTest.testIterateLength(MethodHandle(Iterable)Iterator): success
testIterateLength.init = MethodHandle(List)int
testIterateLength.init = MethodHandle()int
testIterateLength.init = null
test test.java.lang.invoke.LoopCombinatorTest.testIterateLength(null): success
testIterateMap.init = MethodHandle(List)List
testIterateMap.init = MethodHandle()List
test test.java.lang.invoke.LoopCombinatorTest.testIterateMap(MethodHandle(List)ListIterator): success
testIterateMap.init = MethodHandle(Iterable)List
testIterateMap.init = MethodHandle()List
test test.java.lang.invoke.LoopCombinatorTest.testIterateMap(MethodHandle(Iterable)Iterator): success
testIterateMap.init = MethodHandle(List)List
testIterateMap.init = MethodHandle()List
test test.java.lang.invoke.LoopCombinatorTest.testIterateMap(null): success
test test.java.lang.invoke.LoopCombinatorTest.testIterateNullBody(): success
test test.java.lang.invoke.LoopCombinatorTest.testIterateParameters((List)Iterator, null, (String,List)void, ""): success
test test.java.lang.invoke.LoopCombinatorTest.testIterateParameters((List)Iterator, (List)int, (int,String,List)int, ""): success
test test.java.lang.invoke.LoopCombinatorTest.testIterateParameters((List)Iterator, null, (String,List)void, ""): success
test test.java.lang.invoke.LoopCombinatorTest.testIterateParameters((List,int)Iterator, (List,int)int, (int,String,List,int)int, ""): success
test test.java.lang.invoke.LoopCombinatorTest.testIterateParameters(null, null, (String,int,List)void, "inferred first loop argument must inherit from Iterable: int"): success
test test.java.lang.invoke.LoopCombinatorTest.testIterateParameters((int,List)Iterator, null, (String,int,List)void, ""): success
test test.java.lang.invoke.LoopCombinatorTest.testIterateParameters((List,int)Iterator, null, (String,List,int)void, ""): success
test test.java.lang.invoke.LoopCombinatorTest.testIterateParameters((String,List)void, null, (String,List)void, "iteratedLoop first argument must have Iterator return type"): success
*** iterator parameters must match: (List,int)Iterator != (List)Iterator
 != iterator and init parameter lists must match: (List,int)Iterator != (List)Iterator
test test.java.lang.invoke.LoopCombinatorTest.testIterateParameters((List,int)Iterator, (List)Iterator, (String,List)void, "iterator and init parameter lists must match: (List,int)Iterator != (List)Iterator"): success
*** iterator parameters must match: (List,int)Iterator != (List)Iterator
 != body types (regard parameter types after index 0, and result type) must match: (int,String,List)int != (String,List,int)int
test test.java.lang.invoke.LoopCombinatorTest.testIterateParameters((List,int)Iterator, (List,int)int, (int,String,List)int, "body types (regard parameter types after index 0, and result type) must match: (int,String,List)int != (String,List,int)int"): success
helloworldtest test.java.lang.invoke.LoopCombinatorTest.testIteratePrint(MethodHandle(List)ListIterator): success
helloworldtest test.java.lang.invoke.LoopCombinatorTest.testIteratePrint(MethodHandle(Iterable)Iterator): success
helloworldtest test.java.lang.invoke.LoopCombinatorTest.testIteratePrint(null): success
testIterateReverse i=0 : [MethodHandle(List)ListIterator, MethodHandle(List)List, MethodHandle(List,String,List)List]
testIterateReverse i=1 : [MethodHandle(List)ListIterator, MethodHandle()List, MethodHandle(List,String,List)List]
testIterateReverse i=2 : [MethodHandle(List)ListIterator, MethodHandle(List)List, MethodHandle(List,String)List]
testIterateReverse i=3 : [MethodHandle(List)ListIterator, MethodHandle()List, MethodHandle(List,String)List]
test test.java.lang.invoke.LoopCombinatorTest.testIterateReverse(MethodHandle(List)ListIterator): success
testIterateReverse i=0 : [MethodHandle(List)Iterator, MethodHandle(List)List, MethodHandle(List,String,List)List]
testIterateReverse i=1 : [MethodHandle(List)Iterator, MethodHandle()List, MethodHandle(List,String,List)List]
testIterateReverse i=2 : [MethodHandle(List)Iterator, MethodHandle(List)List, MethodHandle(List,String)List]
testIterateReverse i=3 : [MethodHandle(List)Iterator, MethodHandle()List, MethodHandle(List,String)List]
test test.java.lang.invoke.LoopCombinatorTest.testIterateReverse(MethodHandle(Iterable)Iterator): success
testIterateReverse i=0 : [null, MethodHandle(List)List, MethodHandle(List,String,List)List]
testIterateReverse i=1 : [null, MethodHandle()List, MethodHandle(List,String,List)List]
testIterateReverse i=2 : [null, MethodHandle(Iterable)List, MethodHandle(List,String)List]
testIterateReverse i=3 : [null, MethodHandle()List, MethodHandle(List,String)List]
test test.java.lang.invoke.LoopCombinatorTest.testIterateReverse(null): success
test test.java.lang.invoke.LoopCombinatorTest.testIterateSum(): success
helloworldtest test.java.lang.invoke.LoopCombinatorTest.testIterateVoidInit(MethodHandle(List)ListIterator): success
helloworldtest test.java.lang.invoke.LoopCombinatorTest.testIterateVoidInit(MethodHandle(Iterable)Iterator): success
helloworldtest test.java.lang.invoke.LoopCombinatorTest.testIterateVoidInit(null): success
*** body function must match: ()void != (Object)void
 != iteratedLoop first argument must have Iterator return type
test test.java.lang.invoke.LoopCombinatorTest.testIterateVoidIterator(void): success
*** body function must match: ()Object != (Object)Object
 != iteratedLoop first argument must have Iterator return type
test test.java.lang.invoke.LoopCombinatorTest.testIterateVoidIterator(class java.lang.Object): success
*** body function must match: ()Iterable != (Iterable)Iterable
 != iteratedLoop first argument must have Iterator return type
test test.java.lang.invoke.LoopCombinatorTest.testIterateVoidIterator(interface java.lang.Iterable): success
test test.java.lang.invoke.LoopCombinatorTest.testIteratorSubclass(): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopFac(): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopFacNullInit(): success
....test test.java.lang.invoke.LoopCombinatorTest.testLoopFacWithVoidState(): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopNegative(null, "null or no clauses passed"): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopNegative([[Ljava.lang.invoke.MethodHandle;@739b458f, "null or no clauses passed"): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopNegative([[Ljava.lang.invoke.MethodHandle;@45a54c01, "All loop clauses must be represented as MethodHandle arrays with at most 4 elements."): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopNegative([[Ljava.lang.invoke.MethodHandle;@600f546, "null clauses are not allowed"): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopNegative([[Ljava.lang.invoke.MethodHandle;@6786d1, "clause 0: init and step return types must match: int != void"): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopNegative([[Ljava.lang.invoke.MethodHandle;@1f5b96bb, "found non-effectively identical init parameter type lists: [MethodHandle(int,int)int, MethodHandle(int,double)int, MethodHandle(int,int,int)int] (common suffix: [int, int, int])"): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopNegative([[Ljava.lang.invoke.MethodHandle;@4f7689f8, "found non-identical finalizer return types: [MethodHandle(int,int,int)int, MethodHandle(int,int,int)int, MethodHandle(String,int)String] (return type: int)"): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopNegative([[Ljava.lang.invoke.MethodHandle;@35252c4, "no predicate found: [null, null, null]"): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopNegative([[Ljava.lang.invoke.MethodHandle;@65f02486, "predicates must have boolean return type: [null, MethodHandle(int,int,int)int, null]"): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopNegative([[Ljava.lang.invoke.MethodHandle;@4bb4a176, "found non-effectively identical parameter type lists:
step: [MethodHandle(int,int,int)int, MethodHandle(int,int,double)int, MethodHandle(int,int,int)void]
pred: [null, MethodHandle(int,int,int)boolean, null]
fini: [null, MethodHandle(int,int,int)int, null] (common parameter sequence: [int, int, int])"): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopNegative([[Ljava.lang.invoke.MethodHandle;@2385a25a, "found non-effectively identical parameter type lists:
step: [MethodHandle(LoopWithVirtuals,int,int,int)int, MethodHandle(LoopWithVirtuals,int,int,int)int]
pred: [null, MethodHandle(LoopWithVirtuals,int,int,int)boolean]
fini: [null, MethodHandle(LoopWithVirtuals,int,int,int)int] (common parameter sequence: [int, int, int, int])"): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopNullInit(): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopOmitPred(): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopVoid1(): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopVoid2(): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopVoid3(): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopVoidInt(): success
test test.java.lang.invoke.LoopCombinatorTest.testLoopWithVirtuals(): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileBadInit(): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle(int)int, MethodHandle(int,int)boolean, MethodHandle(int,int)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle()int, MethodHandle(int,int)boolean, MethodHandle(int,int)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(null, MethodHandle(int,int)boolean, MethodHandle(int,int)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle(int,byte)int, java.lang.invoke.BoundMethodHandle$Species_L@f7622cf, MethodHandle(int,int,byte)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle(int)int, java.lang.invoke.BoundMethodHandle$Species_L@f7622cf, MethodHandle(int,int,byte)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(null, java.lang.invoke.BoundMethodHandle$Species_L@f7622cf, MethodHandle(int,int,byte)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle(int,byte)int, MethodHandle(int,int)boolean, MethodHandle(int,int,byte)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle()int, MethodHandle(int,int)boolean, MethodHandle(int,int,byte)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(null, MethodHandle(int,int)boolean, MethodHandle(int,int,byte)int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle(int)int, MethodHandle(int,int)boolean, MethodHandle(int)int, "loop predicate must match: (int,int)boolean != (int)boolean"): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle(int,byte)int, MethodHandle(int)boolean, MethodHandle(int)int, "loop initializer must match: (int,byte)int != ()int"): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle(int)int, MethodHandle(int,int)boolean, MethodHandle(int,int)char, "body function must match: (int,int)char != (char,int,int)char"): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle(int)int, MethodHandle(int,int)boolean, MethodHandle(char,int)int, "body function must match: (char,int)int != (int,char,int)int"): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle(int)int, MethodHandle(int,int)char, MethodHandle(int,int)int, "loop predicate must match: (int,int)char != (int,int)boolean"): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle(int)int, MethodHandle(char,int)boolean, MethodHandle(int,int)int, "loop predicate must match: (char,int)boolean != (int,int)boolean"): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle(int)char, MethodHandle(int,int)boolean, MethodHandle(int,int)int, "loop initializer must match: (int)char != (int)int"): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoop(MethodHandle(char)int, MethodHandle(int,int)boolean, MethodHandle(int,int)int, "loop initializer must match: (char)int != (int)int"): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileLoopNoIteration(): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileNullArgs(null, MethodHandle()int): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileNullArgs(MethodHandle()int, null): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileVoidInit(): success
test test.java.lang.invoke.LoopCombinatorTest.testWhileZip(): success

===============================================
java/lang/invoke/LoopCombinatorTest.java
Total tests run: 138, Passes: 138, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(36/3590)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
CLASSPATH=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/LoopCombinatorTest.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/lang/invoke/LoopCombinatorTest.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/LoopCombinatorTest.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/LoopCombinatorTest.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/LoopCombinatorTest.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/LoopCombinatorTest.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -ea \\
        -esa \\
        com.sun.javatest.regtest.agent.MainWrapper /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/LoopCombinatorTest.d/testng.0.jta java/lang/invoke/LoopCombinatorTest.java false test.java.lang.invoke.LoopCombinatorTest
result: Passed. Execution successful


test result: Passed. Execution successful
