#Test Results (version 2)
#Mon Apr 29 00:41:27 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=testng
modules=java.base/jdk.internal.foreign
run=USER_SPECIFIED testng TestStringEncoding\n
source=TestStringEncoding.java
title=\ 

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java
elapsed=1922 0\:00\:01.922
end=Mon Apr 29 00\:41\:27 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.6 (x86_64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
modules=java.base/jdk.internal.foreign
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Mon Apr 29 00\:41\:25 UTC 2024
test=java/foreign/TestStringEncoding.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.6,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.6
totalTime=1922
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/foreign

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/226)----------
command: build TestStringEncoding
reason: Named class compiled on demand
started: Mon Apr 29 00:41:25 UTC 2024
Test directory:
  compile: TestStringEncoding
finished: Mon Apr 29 00:41:26 UTC 2024
elapsed time (seconds): 0.113
result: Passed. Build successful

#section:compile
----------messages:(8/396)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:41:25 UTC 2024
Additional options from @modules: --add-modules java.base --add-exports java.base/jdk.internal.foreign=ALL-UNNAMED
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:41:26 UTC 2024
elapsed time (seconds): 0.113
----------configuration:(15/1039)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  add modules: java.base                      
  add exports: java.base/jdk.internal.foreign ALL-UNNAMED
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign 
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign 
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/foreign/TestStringEncoding.d 
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 

----------rerun:(36/3493)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/foreign/TestStringEncoding.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/foreign/TestStringEncoding.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/foreign/TestStringEncoding.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/foreign/TestStringEncoding.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -J-Dtest.modules=java.base/jdk.internal.foreign \\
        --add-modules java.base \\
        --add-exports java.base/jdk.internal.foreign=ALL-UNNAMED \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/foreign/TestStringEncoding.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/foreign/TestStringEncoding.d:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java
result: Passed. Compilation successful

#section:testng
----------messages:(8/314)----------
command: testng TestStringEncoding
reason: User specified action: run testng TestStringEncoding 
started: Mon Apr 29 00:41:26 UTC 2024
Mode: agentvm
Agent id: 9
Additional exports to unnamed modules from @modules: java.base/jdk.internal.foreign
finished: Mon Apr 29 00:41:27 UTC 2024
elapsed time (seconds): 1.805
----------configuration:(14/983)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

Test Layer
  add exports: java.base/jdk.internal.foreign ALL-UNNAMED
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/foreign/TestStringEncoding.d 
               /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign 

----------rerun:(27/2994)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/foreign/TestStringEncoding.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/foreign/TestStringEncoding.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/foreign/TestStringEncoding.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/foreign/TestStringEncoding.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -Dtest.modules=java.base/jdk.internal.foreign \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/foreign/TestStringEncoding.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/foreign/TestStringEncoding.java false TestStringEncoding
----------System.out:(319/32463)*----------
test TestStringEncoding.chunked_strlen_byte(): success
test TestStringEncoding.chunked_strlen_short(): success
test TestStringEncoding.expandedSegment("testing"): success
test TestStringEncoding.expandedSegment(""): success
test TestStringEncoding.expandedSegment("X"): success
test TestStringEncoding.expandedSegment("12345"): success
test TestStringEncoding.expandedSegment("yen \u00a5"): success
test TestStringEncoding.expandedSegment("snowman \u26c4"): success
test TestStringEncoding.expandedSegment("rainbow \ud83c\udf08"): success
test TestStringEncoding.expandedSegment("0"): success
test TestStringEncoding.expandedSegment("01"): success
test TestStringEncoding.expandedSegment("012"): success
test TestStringEncoding.expandedSegment("0123"): success
test TestStringEncoding.expandedSegment("01234"): success
test TestStringEncoding.expandedSegment("012345"): success
test TestStringEncoding.expandedSegment("0123456"): success
test TestStringEncoding.expandedSegment("01234567"): success
test TestStringEncoding.expandedSegment("012345678"): success
test TestStringEncoding.expandedSegment("0123456789"): success
test TestStringEncoding.nativeSegFromNativeCall("testing"): success
test TestStringEncoding.nativeSegFromNativeCall(""): success
test TestStringEncoding.nativeSegFromNativeCall("X"): success
test TestStringEncoding.nativeSegFromNativeCall("12345"): success
test TestStringEncoding.nativeSegFromNativeCall("yen \u00a5"): success
test TestStringEncoding.nativeSegFromNativeCall("snowman \u26c4"): success
test TestStringEncoding.nativeSegFromNativeCall("rainbow \ud83c\udf08"): success
test TestStringEncoding.nativeSegFromNativeCall("0"): success
test TestStringEncoding.nativeSegFromNativeCall("01"): success
test TestStringEncoding.nativeSegFromNativeCall("012"): success
test TestStringEncoding.nativeSegFromNativeCall("0123"): success
test TestStringEncoding.nativeSegFromNativeCall("01234"): success
test TestStringEncoding.nativeSegFromNativeCall("012345"): success
test TestStringEncoding.nativeSegFromNativeCall("0123456"): success
test TestStringEncoding.nativeSegFromNativeCall("01234567"): success
test TestStringEncoding.nativeSegFromNativeCall("012345678"): success
test TestStringEncoding.nativeSegFromNativeCall("0123456789"): success
test TestStringEncoding.segmentationFault(): success
test TestStringEncoding.strlen_int(): success
test TestStringEncoding.testOffset("testing"): success
test TestStringEncoding.testOffset(""): success
test TestStringEncoding.testOffset("X"): success
test TestStringEncoding.testOffset("12345"): success
test TestStringEncoding.testOffset("yen \u00a5"): success
test TestStringEncoding.testOffset("snowman \u26c4"): success
test TestStringEncoding.testOffset("rainbow \ud83c\udf08"): success
test TestStringEncoding.testOffset("0"): success
test TestStringEncoding.testOffset("01"): success
test TestStringEncoding.testOffset("012"): success
test TestStringEncoding.testOffset("0123"): success
test TestStringEncoding.testOffset("01234"): success
test TestStringEncoding.testOffset("012345"): success
test TestStringEncoding.testOffset("0123456"): success
test TestStringEncoding.testOffset("01234567"): success
test TestStringEncoding.testOffset("012345678"): success
test TestStringEncoding.testOffset("0123456789"): success
test TestStringEncoding.testPeculiarContentSingleByte(): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@6c20c329): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@15103625): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@1d6c75dd): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1220305a): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@589c449): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@71716eb3): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@7ee4254e): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@168c7169): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@2409d7e2): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@767ede6d): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@4b989fea): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@2642f250): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@194e485c): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@a0466e): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@335bb0fa): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@7371296e): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@739356f6): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@404eb376): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@5a41d71a): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@a9b6bf0): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@3a0cc2d2): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@32196f45): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@4fd2ab10): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@5d1d185b): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@329eee78): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1c2c3820): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@3cdc1820): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@2ce70e1e): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@67d1110c): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@2692048c): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@11775c4c): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@52ef7362): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@7bd1f87a): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@bdec5a9): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@2b451050): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@28d49617): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@3238f459): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@435ce9c4): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@433063c1): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@c7c3b50): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@6c220bfc): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@5c332d97): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@4e1e3de0): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@27c40695): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@109a40de): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@73d6fac6): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@7262d504): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@600691a0): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@3bac79ba): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@39e0343c): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@78d7c7b7): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@361a4e05): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@219b75f7): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@421de54d): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@3d963a94): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@4b16b86e): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@71985dc7): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@43ddb036): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@576f69d8): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@4cf0184b): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@4176d246): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@37363b59): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@2cb023cf): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@7914e2dd): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@1d174db6): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@4ddd6daa): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@4272b628): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@5cce6a44): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@5b5209cc): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@47e531e4): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@48130619): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@2e2cd50c): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@2bfde6df): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1731957d): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@533b8418): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@4471bb2b): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@31e0314): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@6950bd8): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@242b0d01): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@6a01b424): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@4c14c25f): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@149b3d11): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@3e6c4996): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@269a0d9e): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@4e91e207): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@4c412f02): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@1838e7f3): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@74648eb7): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@4417463d): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@2daf7d71): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@32f8d99e): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@7d769db): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@52a35650): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@276319d8): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@78821465): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@5f142017): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@3feb6dce): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@7c81f288): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@778f9a38): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@1b8146be): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@242e2dcb): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@225d2316): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1ebb8bc6): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@572fa4b9): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@606fcabe): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@40950f03): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@57276612): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@528d894e): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@35884717): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@50b1b1d2): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@4824eb30): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@5ed41dfd): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@1f270afd): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@54c46e28): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@53bad8d3): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@3f175bec): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@3f81f35): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@7bc62044): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@6ee743b8): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@4b6aff29): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@2e82014b): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@5f3a4c16): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@7c67fd46): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1ec022d2): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@2d9a68c5): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@53267ef0): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@648c4118): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@2797a58e): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@5e83c4ef): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1807d693): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@2113105c): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@13757df8): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@32097ce0): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@6341a157): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@2b94adeb): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@34829f56): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1579bbbb): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@16b93f15): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@3035b32c): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@13d6abe0): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@4e45a83a): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@48ea09de): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@3e40a499): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@431ec0d1): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@742de19d): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@728c40a9): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@36c00c2f): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@2057ce4b): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@3400eff9): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@9247656): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@5b3379cf): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@718d244c): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@3cf5db27): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1bfc7a78): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@282a0e78): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@335dafe5): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@15c9120c): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@54a36ef2): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1cc0db8d): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@5993516d): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@12ff75af): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@621a270e): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@75407cb2): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@22e20633): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@60129f96): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@3745a88b): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@288f1c2e): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@a00ffaf): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@2e128602): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@2a064c50): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@fad2431): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@6f022c6e): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@47de4fe1): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@25c4cd92): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@160a9b04): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@3660645d): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@ab8e7db): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@5ae8c75d): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@9cdb8a4): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@dab6291): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@639579af): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@62af73d1): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@377f2b71): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@1526534a): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@674138d8): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@c59b5bd): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@59535ace): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@26beacc7): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@657795fc): success
test TestStringEncoding.testStrings("testing"): success
test TestStringEncoding.testStrings(""): success
test TestStringEncoding.testStrings("X"): success
test TestStringEncoding.testStrings("12345"): success
test TestStringEncoding.testStrings("yen \u00a5"): success
test TestStringEncoding.testStrings("snowman \u26c4"): success
test TestStringEncoding.testStrings("rainbow \ud83c\udf08"): success
test TestStringEncoding.testStrings("0"): success
test TestStringEncoding.testStrings("01"): success
test TestStringEncoding.testStrings("012"): success
test TestStringEncoding.testStrings("0123"): success
test TestStringEncoding.testStrings("01234"): success
test TestStringEncoding.testStrings("012345"): success
test TestStringEncoding.testStrings("0123456"): success
test TestStringEncoding.testStrings("01234567"): success
test TestStringEncoding.testStrings("012345678"): success
test TestStringEncoding.testStrings("0123456789"): success
test TestStringEncoding.testStringsHeap("testing"): success
test TestStringEncoding.testStringsHeap(""): success
test TestStringEncoding.testStringsHeap("X"): success
test TestStringEncoding.testStringsHeap("12345"): success
test TestStringEncoding.testStringsHeap("yen \u00a5"): success
test TestStringEncoding.testStringsHeap("snowman \u26c4"): success
test TestStringEncoding.testStringsHeap("rainbow \ud83c\udf08"): success
test TestStringEncoding.testStringsHeap("0"): success
test TestStringEncoding.testStringsHeap("01"): success
test TestStringEncoding.testStringsHeap("012"): success
test TestStringEncoding.testStringsHeap("0123"): success
test TestStringEncoding.testStringsHeap("01234"): success
test TestStringEncoding.testStringsHeap("012345"): success
test TestStringEncoding.testStringsHeap("0123456"): success
test TestStringEncoding.testStringsHeap("01234567"): success
test TestStringEncoding.testStringsHeap("012345678"): success
test TestStringEncoding.testStringsHeap("0123456789"): success
test TestStringEncoding.unalignedSegmentSingleByte("testing"): success
test TestStringEncoding.unalignedSegmentSingleByte(""): success
test TestStringEncoding.unalignedSegmentSingleByte("X"): success
test TestStringEncoding.unalignedSegmentSingleByte("12345"): success
test TestStringEncoding.unalignedSegmentSingleByte("yen \u00a5"): success
test TestStringEncoding.unalignedSegmentSingleByte("snowman \u26c4"): success
test TestStringEncoding.unalignedSegmentSingleByte("rainbow \ud83c\udf08"): success
test TestStringEncoding.unalignedSegmentSingleByte("0"): success
test TestStringEncoding.unalignedSegmentSingleByte("01"): success
test TestStringEncoding.unalignedSegmentSingleByte("012"): success
test TestStringEncoding.unalignedSegmentSingleByte("0123"): success
test TestStringEncoding.unalignedSegmentSingleByte("01234"): success
test TestStringEncoding.unalignedSegmentSingleByte("012345"): success
test TestStringEncoding.unalignedSegmentSingleByte("0123456"): success
test TestStringEncoding.unalignedSegmentSingleByte("01234567"): success
test TestStringEncoding.unalignedSegmentSingleByte("012345678"): success
test TestStringEncoding.unalignedSegmentSingleByte("0123456789"): success
test TestStringEncoding.unboundedSegment("testing"): success
test TestStringEncoding.unboundedSegment(""): success
test TestStringEncoding.unboundedSegment("X"): success
test TestStringEncoding.unboundedSegment("12345"): success
test TestStringEncoding.unboundedSegment("yen \u00a5"): success
test TestStringEncoding.unboundedSegment("snowman \u26c4"): success
test TestStringEncoding.unboundedSegment("rainbow \ud83c\udf08"): success
test TestStringEncoding.unboundedSegment("0"): success
test TestStringEncoding.unboundedSegment("01"): success
test TestStringEncoding.unboundedSegment("012"): success
test TestStringEncoding.unboundedSegment("0123"): success
test TestStringEncoding.unboundedSegment("01234"): success
test TestStringEncoding.unboundedSegment("012345"): success
test TestStringEncoding.unboundedSegment("0123456"): success
test TestStringEncoding.unboundedSegment("01234567"): success
test TestStringEncoding.unboundedSegment("012345678"): success
test TestStringEncoding.unboundedSegment("0123456789"): success

===============================================
java/foreign/TestStringEncoding.java
Total tests run: 313, Passes: 313, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
