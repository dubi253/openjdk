#Test Results (version 2)
#Mon Apr 29 01:28:17 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex/PatternStreamTest.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8016846 bug8024341 bug8071479 bug8145006 othervm testng
library=/lib/testlibrary/bootlib
run=USER_SPECIFIED build java.base/java.util.stream.OpTestCase\nUSER_SPECIFIED testng/othervm PatternStreamTest\n
source=PatternStreamTest.java
title=Unit tests stream and lambda-based methods on Pattern and Matcher

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex/PatternStreamTest.java
elapsed=6133 0\:00\:06.133
end=Mon Apr 29 01\:28\:17 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.6 (x86_64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build build compile testng
start=Mon Apr 29 01\:28\:11 UTC 2024
test=java/util/regex/PatternStreamTest.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.6,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.6
totalTime=6133
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/util/regex

#section:script_messages
----------messages:(7/639)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)
Library /lib/testlibrary/bootlib; kind: system module patches
   source directory: /Users/runner/work/openjdk/openjdk/test/jdk/lib/testlibrary/bootlib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/lib/testlibrary/bootlib

#section:build
----------messages:(5/238)----------
command: build java.base/java.util.stream.OpTestCase
reason: User specified action: run build java.base/java.util.stream.OpTestCase 
started: Mon Apr 29 01:28:16 UTC 2024
finished: Mon Apr 29 01:28:16 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:build
----------messages:(7/223)----------
command: build PatternStreamTest
reason: Named class compiled on demand
started: Mon Apr 29 01:28:16 UTC 2024
Test directory:
  compile: PatternStreamTest
finished: Mon Apr 29 01:28:16 UTC 2024
elapsed time (seconds): 0.06
result: Passed. Build successful

#section:compile
----------messages:(7/282)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex/PatternStreamTest.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:28:16 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 01:28:16 UTC 2024
elapsed time (seconds): 0.06
----------configuration:(15/1141)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  add reads:   java.base ALL-UNNAMED
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex 
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex 
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/regex/PatternStreamTest.d 
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:       java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/lib/testlibrary/bootlib/java.base

----------rerun:(36/3738)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/regex/PatternStreamTest.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex/PatternStreamTest.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/regex/PatternStreamTest.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/regex/PatternStreamTest.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/regex/PatternStreamTest.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex \\
        -J-Dtest.patch.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/lib/testlibrary/bootlib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/regex/PatternStreamTest.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/regex/PatternStreamTest.d:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar \\
        --patch-module java.base=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/lib/testlibrary/bootlib/java.base \\
        --add-reads java.base=ALL-UNNAMED /Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex/PatternStreamTest.java
result: Passed. Compilation successful

#section:testng
----------messages:(6/288)----------
command: testng PatternStreamTest
reason: User specified action: run testng/othervm PatternStreamTest 
started: Mon Apr 29 01:28:16 UTC 2024
Mode: othervm [/othervm specified, test or library overrides a system module]
finished: Mon Apr 29 01:28:17 UTC 2024
elapsed time (seconds): 1.067
----------configuration:(4/207)----------
Boot Layer
  add reads: java.base ALL-UNNAMED
  patch:     java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/lib/testlibrary/bootlib/java.base

----------System.out:(195/15666)----------
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testFailfastMatchResults(): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@132777b0): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testFailfastReplace(): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5378decc): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testLateBinding(): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5c805ceb): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("All matches", "XXXXXX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@48827632): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Bounded every other match", "XYXYXYYXYX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@56c5fec0): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Every other match", "YXYXYXYYXYXY", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@37c66c77): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("", "awgqwefg1fefw4vssv1vvv1", 4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2287d4b5): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("", "afbfq?abgwgb?awngnwggw?a?ahjrnhneerh", ?a): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@796422f2): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("", "awgqwefg1fefw4vssv1vvv1", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1aed6360): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("", "a?fg1fefw?4?vssv?1v??vv", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2818c21e): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("", "1?23?456?7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4ff1955c): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("", "1?23????456???7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6f2d7db): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Empty input", "", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3ccc37c): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Empty input with empty pattern", "", ): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@742707a7): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Multiple separators", "This is,testing: with	different separators.", [ 	,:.]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@af908db): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Repeated separators within and at end", "boo:and:foo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5956097b): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Many repeated separators within and at end", "booooo:and:fooooo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@228f2c4b): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Many repeated separators before last match", "fooooo:", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@74b121ad): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("All matches", "XXXXXX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@28dea504): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Bounded every other match", "XYXYXYYXYX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@43fb500f): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Every other match", "YXYXYXYYXYXY", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@11e715fc): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("", "awgqwefg1fefw4vssv1vvv1", 4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@67c44cdd): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("", "afbfq?abgwgb?awngnwggw?a?ahjrnhneerh", ?a): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@54c5ae03): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("", "awgqwefg1fefw4vssv1vvv1", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@31b82bb7): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("", "a?fg1fefw?4?vssv?1v??vv", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@434ee4cd): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("", "1?23?456?7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3b903a8d): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("", "1?23????456???7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@20353df): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Empty input", "", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@57d51382): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Empty input with empty pattern", "", ): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@63685e2b): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Multiple separators", "This is,testing: with	different separators.", [ 	,:.]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@62fa3807): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Repeated separators within and at end", "boo:and:foo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3a7bc217): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Many repeated separators within and at end", "booooo:and:fooooo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@404bcdd1): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Many repeated separators before last match", "fooooo:", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@aff9974): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("All matches", "XXXXXX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3519a02): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Bounded every other match", "XYXYXYYXYX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3ec4a823): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Every other match", "YXYXYXYYXYXY", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4970a418): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("", "awgqwefg1fefw4vssv1vvv1", 4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3625dc46): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("", "afbfq?abgwgb?awngnwggw?a?ahjrnhneerh", ?a): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7442d0e2): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("", "awgqwefg1fefw4vssv1vvv1", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@26f858a9): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("", "a?fg1fefw?4?vssv?1v??vv", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2fa48c04): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("", "1?23?456?7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4a39489c): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("", "1?23????456???7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@24965d0b): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Empty input", "", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4f25445c): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Empty input with empty pattern", "", ): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@455e4607): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Multiple separators", "This is,testing: with	different separators.", [ 	,:.]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6f0ee74c): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Repeated separators within and at end", "boo:and:foo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2f392943): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Many repeated separators within and at end", "booooo:and:fooooo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7c4f0a08): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Many repeated separators before last match", "fooooo:", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4f02f4cc): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("All matches", "XXXXXX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6a3f5c30): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Bounded every other match", "XYXYXYYXYX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@88d741c): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Every other match", "YXYXYXYYXYXY", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6bfcb9e4): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("", "awgqwefg1fefw4vssv1vvv1", 4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@697a9b4a): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("", "afbfq?abgwgb?awngnwggw?a?ahjrnhneerh", ?a): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@18d3964a): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("", "awgqwefg1fefw4vssv1vvv1", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2f9d9fd3): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("", "a?fg1fefw?4?vssv?1v??vv", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3f6f931b): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("", "1?23?456?7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@78ffc23e): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("", "1?23????456???7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2f9ba2f7): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Empty input", "", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@431996c6): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Empty input with empty pattern", "", ): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@50c3d731): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Multiple separators", "This is,testing: with	different separators.", [ 	,:.]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@21b4821d): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Repeated separators within and at end", "boo:and:foo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1f5a69f): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Many repeated separators within and at end", "booooo:and:fooooo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@43120c45): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Many repeated separators before last match", "fooooo:", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1ebd475): success

===============================================
java/util/regex/PatternStreamTest.java
Total tests run: 63, Passes: 63, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(38/3919)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
CLASSPATH=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/regex/PatternStreamTest.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/regex/PatternStreamTest.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex/PatternStreamTest.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/regex/PatternStreamTest.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/regex/PatternStreamTest.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/regex/PatternStreamTest.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/regex \\
        -Dtest.patch.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/lib/testlibrary/bootlib \\
        -Xbootclasspath/a:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar \\
        --patch-module java.base=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/lib/testlibrary/bootlib/java.base \\
        --add-reads java.base=ALL-UNNAMED \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        com.sun.javatest.regtest.agent.MainWrapper /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/util/regex/PatternStreamTest.d/testng.0.jta java/util/regex/PatternStreamTest.java false PatternStreamTest
result: Passed. Execution successful


test result: Passed. Execution successful
