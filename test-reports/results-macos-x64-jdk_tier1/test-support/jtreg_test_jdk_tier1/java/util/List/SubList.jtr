#Test Results (version 2)
#Mon Apr 29 01:19:33 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=1028 0\:00\:01.028
end=Mon Apr 29 01\:19\:33 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.6 (x86_64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build build compile testng
start=Mon Apr 29 01\:19\:32 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.6,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.6
totalTime=1028
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/util/List

#section:script_messages
----------messages:(7/572)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib

#section:build
----------messages:(5/216)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Mon Apr 29 01:19:32 UTC 2024
finished: Mon Apr 29 01:19:32 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:build
----------messages:(7/203)----------
command: build SubList
reason: Named class compiled on demand
started: Mon Apr 29 01:19:32 UTC 2024
Test directory:
  compile: SubList
finished: Mon Apr 29 01:19:32 UTC 2024
elapsed time (seconds): 0.16
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:19:32 UTC 2024
Mode: agentvm
Agent id: 40
finished: Mon Apr 29 01:19:32 UTC 2024
elapsed time (seconds): 0.16
----------configuration:(15/1109)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3693)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/209)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Mon Apr 29 01:19:32 UTC 2024
Mode: agentvm
Agent id: 53
finished: Mon Apr 29 01:19:33 UTC 2024
elapsed time (seconds): 0.866
----------configuration:(15/1098)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3295)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91950)----------
Seed from RandomFactory = 8972507153350546777L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 187226416], 0, 1): success
test SubList.testAdd([42, 664015362], 0, 1): success
test SubList.testAdd([42, -1451376575], 0, 1): success
test SubList.testAdd([42, -325518790], 0, 1): success
test SubList.testAdd([42, 568115059], 0, 1): success
test SubList.testAdd([42, -1256608085], 0, 1): success
test SubList.testAdd([42, -210810385], 0, 1): success
test SubList.testAdd([42, 1703541464], 0, 1): success
test SubList.testAdd([42, -798742801], 0, 1): success
test SubList.testAdd(java.util.ArrayList@31398310, 2, 5): success
test SubList.testAdd(java.util.LinkedList@25c4ba7c, 2, 5): success
test SubList.testAdd(java.util.Vector@3244ac78, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@3b713e18, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@276e0726, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1d9159ef, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@8dc2c8c, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@21162224, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@751d515e, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@29c09803, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@4f4dc3d5, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@67e2369b, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -133960545], 0, 1): success
test SubList.testAddAtPos([42, -1496019981], 0, 1): success
test SubList.testAddAtPos([42, 1905968111], 0, 1): success
test SubList.testAddAtPos([42, -1370807658], 0, 1): success
test SubList.testAddAtPos([42, -2112358522], 0, 1): success
test SubList.testAddAtPos([42, -13536855], 0, 1): success
test SubList.testAddAtPos([454491085, 42], 0, 1): success
test SubList.testAddAtPos([1246747187, 42], 0, 1): success
test SubList.testAddAtPos([42, 275217288], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@5363aa85, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@3040b6b1, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@639c46fd, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@6d00dcad, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@6effc8a4, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5d88ffd4, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@cb6480f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@151f6731, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@57f9f5c2, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2c2d4884, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@54c5c71a, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7c295f81, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@384b995c, 2, 5): success
test SubList.testClear(java.util.LinkedList@52111eee, 2, 5): success
test SubList.testClear(java.util.Vector@3a0d96cf, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@61a71e38, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@1c69630f, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1855976e, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@ceb5b6b, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@29c7a8e0, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@4d8e8ac1, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@6696a1af, 2, 5): success
test SubList.testEquals(java.util.LinkedList@72a8bac0, 2, 5): success
test SubList.testEquals(java.util.Vector@527fb276, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@c8aaffc, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@1d41202f, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6469a66e, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@54dbe89e, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@6823cb41, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5c403b69, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@69a26092, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@46f2ecd1, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4dbda795, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@dfa79c4, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6c2e2f4, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@4ac7ab85, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@71323f11, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1a976638, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@bd6f0f5, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@bd6f0f5, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@29a8c1bc, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@b0fd821, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5d6fc04f, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@13c30805, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@267b6248, 2, 5): success
test SubList.testGet(java.util.LinkedList@2900c368, 2, 5): success
test SubList.testGet(java.util.Vector@756e913b, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@41801073, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@1e98aeab, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@158e5721, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@21b00598, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@742c5bb2, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1fd1b88b, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7b354438, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@30b7d856, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1f41317c, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@6a40d603, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6d169d04, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@64c672a9, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@2a828f9c, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@29abe307, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@4c217a2, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@4c217a2, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@26d8357, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@5c2ad9b8, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@498fb73c, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6298850e, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@59f2d3c3, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@502928d5, 2, 5): success
test SubList.testIndexOf(java.util.Vector@51db4526, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@63f76505, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@3120e77b, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1ff857ed, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@5846f097, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@3c7017a7, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@634e115d, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@6dfda6f6, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@6e09c022, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5d8e52d2, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@7ea6a5d0, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@10fa1951, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@848d1f6, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@f90b1cd, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5783774c, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3dc80f4e, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3dc80f4e, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@308abfbd, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@5eb90ea6, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@5b0a85f2, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2b5706bb, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@74556b0b, 2, 5): success
test SubList.testIterator(java.util.LinkedList@5aea2fe8, 2, 5): success
test SubList.testIterator(java.util.Vector@3fbf9a0b, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@6d2d8e60, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@23a0d67b, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5ff01bf5, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@79f458aa, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@60d5913, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1319afdf, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@4809ad1e, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@426c8879, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@66e317b2, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@129a2e53, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@68498574, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@60934c22, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@40a474ce, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@7478d83, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@45bef407, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@45bef407, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@2c6d7b8c, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@7885cbc6, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@6b292ae1, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2e10d38c, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@16f0a395, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@48b2deef, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@76525907, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@7d84147f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@114e8071, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@106d0ef7, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@3ae350f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@8ce8a94, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@2f0c640a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@42111463, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@1232dc2e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5ba6a684, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@d8dbcb5, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@23d883aa, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4282dedb, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@2be49a8c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3b0b80c3, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6a71f631, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6a71f631, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@290637f8, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@7e037fe, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@34822e6e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@62cc4fe6, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@3aa3f079, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@2ff636f9, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@8bbb422, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@785d3b95, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@63af1155, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@58a43d9b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@23bde49a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@3265abbc, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5debb5c0, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@741485f1, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@5185c0a7, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@23b7c538, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@1a34543, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@88578c0, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@cc27f79, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@d0cc540, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@a48413, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@221588cf, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@9f13be4, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@deda888, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2d00c490, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@57859317, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5ccf19fe, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2807be1b, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@60a370bf, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1ba49bb9, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@f30a684, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@f30a684, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@7439df99, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4428a613, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@35704d05, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7082ef1a, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@65f82938, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@5aca83d4, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@299b6a82, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@5c1f57f8, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@2eff9f77, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@7fbb7ff6, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@7fbb7ff6, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@170e2988, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@318cc1f8, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@3e0ce60d, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@2ff23051, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@2b9f07b1, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@20e0aabf, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7249418a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7b00514a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@216395e1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3306bbe, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@51a2a1fd, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@3414e259, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@335863a, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@6cb2d1b2, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@6732da6c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@5d81c07e, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@280403a0, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@79c0b4cb, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@aa44cb1, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5413e63f, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@5455876d, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7c1ed780, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1cc06071, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1efd0cfe, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@524f2546, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@2289f7f8, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@ab0395e, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@68ff0ee8, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@b4ea078, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@254dc5cb, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1289c121, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1289c121, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@41e2d4be, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@33387ec, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@430899ff, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@35673f74, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@6013053, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@1b16eb41, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@147c0a5b, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@655d75a5, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@1a43f491, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@57f3bf9d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1745596c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@6cf67975, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7d48829c, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@72882fcb, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@36ff67d9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@bdb9320, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@17790ace, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@9a13782, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@541e958a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@38ff60, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@5d33ba06, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@3492c5c1, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([275214471], 0, 1): success
test SubList.testListIteratorSet([964891031], 0, 1): success
test SubList.testListIteratorSet([-796924421], 0, 1): success
test SubList.testListIteratorSet([-290073214], 0, 1): success
test SubList.testListIteratorSet([13298230], 0, 1): success
test SubList.testListIteratorSet([-1654195791], 0, 1): success
test SubList.testListIteratorSet([1081037372], 0, 1): success
test SubList.testListIteratorSet([1129489494], 0, 1): success
test SubList.testListIteratorSet([-516316222], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@48163723, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@759cf855, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@302950aa, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@204ca891, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@6d9eb0d3, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1f6218c0, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@500900c8, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@7cf755d5, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@65a1f36e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@374d75f9, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@15794a7b, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2e0d23ba, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-1180389041], 0, 1): success
test SubList.testListIteratorSetPrevious([-1367558037], 0, 1): success
test SubList.testListIteratorSetPrevious([-716780504], 0, 1): success
test SubList.testListIteratorSetPrevious([-606737850], 0, 1): success
test SubList.testListIteratorSetPrevious([-379756210], 0, 1): success
test SubList.testListIteratorSetPrevious([-1741811686], 0, 1): success
test SubList.testListIteratorSetPrevious([-25246330], 0, 1): success
test SubList.testListIteratorSetPrevious([-555948860], 0, 1): success
test SubList.testListIteratorSetPrevious([-1266400325], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@503b5bfa, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@351b11c3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@3a270f25, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@1bcf3b78, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@629338d9, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@4b52bbd1, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@2a47e130, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@7f3191a1, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@71694bca, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3aae0bce, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@76a74be2, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7c026079, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@33344dbe, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@6b359b4f, 2, 5): success
test SubList.testModAdd(java.util.Vector@b223e8b, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@74ff8979, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@22db65bd, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@25a23029, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@5aae9c49, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@35f91712, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@370e380b, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@39cc4133, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@349ea99, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@189e280d, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@7eb1837f, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@39d7923d, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@5f07ff63, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@d88205d, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@39416bc4, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@25748549, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@25ed62c8, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@5b28915f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@3eee388, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7e8aaed1, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@1e5d5342, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6f298a41, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@22a928d0, 2, 5): success
test SubList.testModClear(java.util.LinkedList@31696b67, 2, 5): success
test SubList.testModClear(java.util.Vector@73db24ab, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@7705147c, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@3e6bf334, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@79ebbe0, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@9467049, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@1c66b0c6, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@606a1c21, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@d8874ca, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@408243b0, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@228f3de7, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@21f26e07, 2, 5): success
test SubList.testModGet(java.util.LinkedList@27e064fa, 2, 5): success
test SubList.testModGet(java.util.Vector@6d1f266e, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@5c6a9f65, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@689329b6, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@57adaa99, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@ef26e4, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@41de4423, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@4a32dc9c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6c73fdf1, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@1b61d5da, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4dbfa18c, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@42e077d0, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@6f793d60, 2, 5): success
test SubList.testModHashCode(java.util.Vector@3cc0b71b, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@48d753c4, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@74402e24, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@77e32abc, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@46652bce, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@6d25822b, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@39ff42dd, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@146a537c, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@58a03e2a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@3619080d, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@57324160, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@38ebd224, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@7e6ddf5b, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@2205eea, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@2400a99a, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@26bc8b8a, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@a21cd8e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@3421e9b6, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@7c8069c1, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@2f5dd76c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@64264e70, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@6648edb0, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@16454f69, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@36d0904b, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@52e4a340, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@1c8f1cb6, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@318594f0, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7a9eb05, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@3a340af6, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@28fb666c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@4cb0dca5, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4dfe53eb, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@19cfce50, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3494e3fb, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@72b354f3, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@6f90b258, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@60dbfc34, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@3ebdf0da, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@30064257, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@19129a82, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@dbf06fa, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@cc3d0b3, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@399a1b40, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6e67bd58, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@71b8a4e1, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@43d58ec3, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@7eb67e34, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@6e5bb7a7, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@3ec31e45, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@2b662201, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@32c99c6a, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2ad59200, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@34f373a3, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@4c366b65, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1544b1be, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@d69a6ab, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@2a1bb310, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@44645fdd, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@10b4a14e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@2d106e7b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@578c6515, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@682d8c88, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@6d68901, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4633f140, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7168f211, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@19a594fa, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4b64dc54, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@105a3ca4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@52b8e466, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5d1010f5, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@4490fb11, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@27922407, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@1a2e0634, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@68f936e, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@1c1c1434, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@f4b2571, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@48c32218, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@45693f73, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@31a48dd5, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@510fac13, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@11a2868e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6c32ff5c, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@4b820525, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@7c38e9fd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@100b4ed4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@69a403e3, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@36702d9f, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6e0172fa, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1825a475, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@44ab75c8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2d0c24e5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5180e0cc, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@7c557d7d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@32c87493, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@1c0d81a6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@4f7e01ac, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@4fa708d5, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@281cd6ee, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@5dae5f19, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@23ca828, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@474ed68f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@216b1977, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@40171265, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@73d69445, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@18a61734, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@294afcd0, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@e847d8a, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@403f98c7, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@51e8665c, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@e16a0e9, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@985ec2a, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1f2ff280, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@4fca8e30, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@23e03c5a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@173b3b6f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2dd2928a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@33c951fd, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@16b6b70a, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@6345fb76, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@13cd0878, 2, 5): success
test SubList.testModRemove(java.util.Vector@76457568, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@4bdf3ec2, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@1144c5e2, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@40e551d8, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@303a046, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@693ff763, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@3b742f0d, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5ec16b5d, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@3c979d73, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@3914d3ae, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@467d59aa, 2, 5): success
test SubList.testModSet(java.util.LinkedList@b65e839, 2, 5): success
test SubList.testModSet(java.util.Vector@4f797861, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@6d678988, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@241c7fb2, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@51bd04, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@726d9344, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@74d26319, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@3c4276a, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@2f814431, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@7b86ce6f, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@77e273b4, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@486b145c, 2, 5): success
test SubList.testRemove(java.util.LinkedList@372a53bc, 2, 5): success
test SubList.testRemove(java.util.Vector@4bcc8141, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@13c4c4d2, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@1bfbe242, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@23e056a9, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@77ac7df0, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@7fd12925, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@53bef06f, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1479183911], 0, 1): success
test SubList.testSet([1555874585], 0, 1): success
test SubList.testSet([-1545929599], 0, 1): success
test SubList.testSet([27312225], 0, 1): success
test SubList.testSet([-1344728406], 0, 1): success
test SubList.testSet([-100497065], 0, 1): success
test SubList.testSet([1044397701], 0, 1): success
test SubList.testSet([-45826483], 0, 1): success
test SubList.testSet([384961914], 0, 1): success
test SubList.testSet(java.util.ArrayList@5b5b63b8, 2, 5): success
test SubList.testSet(java.util.LinkedList@575a629c, 2, 5): success
test SubList.testSet(java.util.Vector@787f9cc3, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@4e177604, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@79b6fce5, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@2b046521, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@4762e91e, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@25864874, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@178b9fd0, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@35239602, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@3487595b, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@329de9d4, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@1c2cf55f, 2, 5): success
test SubList.testSubList(java.util.LinkedList@74623be, 2, 5): success
test SubList.testSubList(java.util.Vector@5678517, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@6269863c, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@75a74666, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@2f87d8eb, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@25a6901f, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@3abc1aac, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@2a0d3cd4, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@35eb381d, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@1e3f934b, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5cbfb248, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@6eaa6fd7, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4e8c04c5, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4bcfd3da, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@81ee564, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@66b4976e, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@5369f064, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@5369f064, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@177ee063, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@66c5873f, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@59f1e78e, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5ec3bc5e, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@3bfa2541, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@21b54337, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4bb7f623, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@7c662fa, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@455e0245, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@83c7b28, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@83c7b28, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@23a356, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@66d93e8b, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@5eb76751, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@71720e90, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@7b4193b6, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@7ec0e9fa, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@182d2216, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@4f98c2eb, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6fa37057, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@e9d953b, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@e9d953b, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@747b7f5a, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@6de636fc, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@7225abc6, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@50bedb8d, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@502ee596, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@739782c8, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@29da3241, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@b26d7b2, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@313dd7e6, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@7c78d322, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@7c78d322, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@3794a951, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@5b0c186, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@5680f63f, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@24eb1dad, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@1fe742c1, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1c730a18, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2d37cc54, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@1bf50bc9, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@c00cf30, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@61d30857, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@61d30857, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@685e61f7, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@1c49d7d6, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@9796700, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@78a1b840, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@4b64855f, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@766b4153, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@4830f5bd, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@63a0f090, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@66974a4c, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@1af70a09, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@1af70a09, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@7692f192, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@13f1afca, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4e0a64f7, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3cb00c1e, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@4da8ab04, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@24c3c329, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@7100bf9, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@6accae6b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1c2f3a06, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6a811f80, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6a811f80, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@2a929e04, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@48486abd, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@318eb869, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1d7cc1d2, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@20ca3e3d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1a68cdfb, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@42f4bdf1, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@2d034c0d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@30bd9e17, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@27a4b29a, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@27a4b29a, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@209423d3, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@51b6ed4b, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@93ae081, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7e9ea9d8, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@7deb6ee5, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@48666721, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@379f769c, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@5043c52, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@4210ac7c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@670426a2, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@5b81ae4b, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@14454e4, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@5b4aebaf, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@50415043, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@5a66eef, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@16ed89d3, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@20ea5845, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@4a956cbd, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4ad023d8, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@37dd7a56, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@37dd7a56, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@1bc7713b, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@350fcb06, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@6f40cb29, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@46948e1d, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
