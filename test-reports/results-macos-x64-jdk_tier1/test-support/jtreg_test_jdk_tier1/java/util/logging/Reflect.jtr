#Test Results (version 2)
#Mon Apr 29 01:21:35 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging/Reflect.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8004931
modules=java.logging
run=ASSUMED_ACTION main Reflect\n
source=Reflect.java
title=Invoke getDeclaredMethods on LogManager to ensure that all types referenced in the method signatures is present.

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging/Reflect.java
elapsed=40 0\:00\:00.040
end=Mon Apr 29 01\:21\:35 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 13.6.6 (x86_64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
modules=java.logging
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Mon Apr 29 01\:21\:35 UTC 2024
test=java/util/logging/Reflect.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:x86_64,version\:13.6.6,family\:mac,simple_arch\:x64,simple_version\:13.6,processors\:4,maxMemory\:15032385536,maxSwap\:0]
testJDK_os.arch=x86_64
testJDK_os.name=Mac OS X
testJDK_os.version=13.6.6
totalTime=42
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/util/logging

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/204)----------
command: build Reflect
reason: Named class compiled on demand
started: Mon Apr 29 01:21:35 UTC 2024
Test directory:
  compile: Reflect
finished: Mon Apr 29 01:21:35 UTC 2024
elapsed time (seconds): 0.027
result: Passed. Build successful

#section:compile
----------messages:(8/336)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging/Reflect.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:21:35 UTC 2024
Additional options from @modules: --add-modules java.logging
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 01:21:35 UTC 2024
elapsed time (seconds): 0.027
----------configuration:(11/697)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  add modules: java.logging
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/logging/Reflect.d

----------rerun:(35/3169)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/logging/Reflect.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging/Reflect.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/logging/Reflect.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/logging/Reflect.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/logging/Reflect.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging \\
        -J-Dtest.modules=java.logging \\
        --add-modules java.logging \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/logging/Reflect.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/logging/Reflect.d /Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging/Reflect.java
result: Passed. Compilation successful

#section:main
----------messages:(7/217)----------
command: main Reflect
reason: Assumed action based on file name: run main Reflect 
started: Mon Apr 29 01:21:35 UTC 2024
Mode: agentvm
Agent id: 54
finished: Mon Apr 29 01:21:35 UTC 2024
elapsed time (seconds): 0.012
----------configuration:(13/920)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/logging/Reflect.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging

----------rerun:(27/2644)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/logging/Reflect.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging/Reflect.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/logging/Reflect.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/logging/Reflect.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/logging/Reflect.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging \\
        -Dtest.modules=java.logging \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/logging/Reflect.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/logging:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        Reflect
----------System.out:(110/11256)----------
class java.util.logging.LogManager
    public java.util.logging.LogManager java.util.logging.LogManager.addConfigurationListener(java.lang.Runnable)
    public void java.util.logging.LogManager.reset() throws java.lang.SecurityException
    public java.lang.String java.util.logging.LogManager.getProperty(java.lang.String)
    private static java.lang.String java.util.logging.LogManager.trim(java.lang.String)
    void java.util.logging.LogManager.checkPermission()
    public java.util.logging.Logger java.util.logging.LogManager.getLogger(java.lang.String)
    public void java.util.logging.LogManager.checkAccess() throws java.lang.SecurityException
    private java.util.logging.LogManager$LoggerContext java.util.logging.LogManager.getUserContext()
    public boolean java.util.logging.LogManager.addLogger(java.util.logging.Logger)
    boolean java.util.logging.LogManager.getBooleanProperty(java.lang.String,boolean)
    private java.lang.String[] java.util.logging.LogManager.parseClassNames(java.lang.String)
    private boolean java.util.logging.LogManager.forceLoadHandlers(java.util.logging.Logger)
    private void java.util.logging.LogManager.loadLoggerHandlers(java.util.logging.Logger,java.lang.String,java.lang.String)
    public java.util.Enumeration java.util.logging.LogManager.getLoggerNames()
    java.lang.String java.util.logging.LogManager.getConfigurationFileName() throws java.io.IOException
    private java.util.List java.util.logging.LogManager.contexts()
    private void java.util.logging.LogManager.resetLoggerContext(java.util.logging.LogManager$LoggerContext)
    private void java.util.logging.LogManager.resetLogger(java.util.logging.Logger)
    private void java.util.logging.LogManager.closeHandlers(java.util.logging.Logger)
    private void java.util.logging.LogManager.setLevelsOnExistingLoggers()
    private void java.util.logging.LogManager.invokeConfigurationListeners()
    public void java.util.logging.LogManager.updateConfiguration(java.util.function.Function) throws java.io.IOException
    public void java.util.logging.LogManager.updateConfiguration(java.io.InputStream,java.util.function.Function) throws java.io.IOException
    private java.util.List java.util.logging.LogManager.createLoggerHandlers(java.lang.String,java.lang.String)
    private void java.util.logging.LogManager.setLoggerHandlers(java.util.logging.Logger,java.lang.String,java.lang.String,java.util.List)
    private static void java.util.logging.LogManager.initStatic()
    private static void java.util.logging.LogManager.doSetLevel(java.util.logging.Logger,java.util.logging.Level)
    int java.util.logging.LogManager.getIntProperty(java.lang.String,int)
    long java.util.logging.LogManager.getLongProperty(java.lang.String,long)
    private void java.util.logging.LogManager.initializeGlobalHandlers()
    public static synchronized java.util.logging.LoggingMXBean java.util.logging.LogManager.getLoggingMXBean()
    public void java.util.logging.LogManager.removeConfigurationListener(java.lang.Runnable)
    private static void java.util.logging.LogManager.lambda$addConfigurationListener$4(java.security.PrivilegedAction,java.security.AccessControlContext)
    private static java.lang.Void java.util.logging.LogManager.lambda$addConfigurationListener$3(java.lang.Runnable)
    private static boolean java.util.logging.LogManager.lambda$updateConfiguration$2(java.util.logging.Logger,java.util.logging.LogManager$CloseOnReset)
    private static boolean java.util.logging.LogManager.lambda$updateConfiguration$1(java.util.Properties,java.util.Properties,java.lang.String)
    private static void java.util.logging.LogManager.lambda$updateConfiguration$0(java.util.Properties,java.util.Properties,java.util.function.Function,java.lang.String)
    java.util.logging.Logger java.util.logging.LogManager.demandSystemLogger(java.lang.String,java.lang.String,java.lang.Class)
    java.util.logging.Logger java.util.logging.LogManager.demandSystemLogger(java.lang.String,java.lang.String,java.lang.Module)
    java.util.logging.Logger java.util.logging.LogManager.demandLogger(java.lang.String,java.lang.String,java.lang.Class)
    java.util.logging.Logger java.util.logging.LogManager.demandLogger(java.lang.String,java.lang.String,java.lang.Module)
    final void java.util.logging.LogManager.drainLoggerRefQueueBounded()
    private static void java.util.logging.LogManager.doSetParent(java.util.logging.Logger,java.util.logging.Logger)
    java.util.logging.Level java.util.logging.LogManager.getLevelProperty(java.lang.String,java.util.logging.Level)
    java.util.logging.Filter java.util.logging.LogManager.getFilterProperty(java.lang.String,java.util.logging.Filter)
    java.util.logging.Formatter java.util.logging.LogManager.getFormatterProperty(java.lang.String,java.util.logging.Formatter)
    java.lang.String java.util.logging.LogManager.getStringProperty(java.lang.String,java.lang.String)
    private static java.lang.Void java.util.logging.LogManager.checkSubclassPermissions()
    final void java.util.logging.LogManager.ensureLogManagerInitialized()
    private void java.util.logging.LogManager.readPrimordialConfiguration()
    public void java.util.logging.LogManager.readConfiguration(java.io.InputStream) throws java.io.IOException,java.lang.SecurityException
    public void java.util.logging.LogManager.readConfiguration() throws java.io.IOException,java.lang.SecurityException
    final java.util.logging.LogManager$LoggerContext java.util.logging.LogManager.getSystemContext()
    public static java.util.logging.LogManager java.util.logging.LogManager.getLogManager()
class java.util.logging.LogManager
    public java.util.logging.LogManager java.util.logging.LogManager.addConfigurationListener(java.lang.Runnable)
    public void java.util.logging.LogManager.reset() throws java.lang.SecurityException
    public java.lang.String java.util.logging.LogManager.getProperty(java.lang.String)
    private static java.lang.String java.util.logging.LogManager.trim(java.lang.String)
    void java.util.logging.LogManager.checkPermission()
    public java.util.logging.Logger java.util.logging.LogManager.getLogger(java.lang.String)
    public void java.util.logging.LogManager.checkAccess() throws java.lang.SecurityException
    private java.util.logging.LogManager$LoggerContext java.util.logging.LogManager.getUserContext()
    public boolean java.util.logging.LogManager.addLogger(java.util.logging.Logger)
    boolean java.util.logging.LogManager.getBooleanProperty(java.lang.String,boolean)
    private java.lang.String[] java.util.logging.LogManager.parseClassNames(java.lang.String)
    private boolean java.util.logging.LogManager.forceLoadHandlers(java.util.logging.Logger)
    private void java.util.logging.LogManager.loadLoggerHandlers(java.util.logging.Logger,java.lang.String,java.lang.String)
    public java.util.Enumeration java.util.logging.LogManager.getLoggerNames()
    java.lang.String java.util.logging.LogManager.getConfigurationFileName() throws java.io.IOException
    private java.util.List java.util.logging.LogManager.contexts()
    private void java.util.logging.LogManager.resetLoggerContext(java.util.logging.LogManager$LoggerContext)
    private void java.util.logging.LogManager.resetLogger(java.util.logging.Logger)
    private void java.util.logging.LogManager.closeHandlers(java.util.logging.Logger)
    private void java.util.logging.LogManager.setLevelsOnExistingLoggers()
    private void java.util.logging.LogManager.invokeConfigurationListeners()
    public void java.util.logging.LogManager.updateConfiguration(java.util.function.Function) throws java.io.IOException
    public void java.util.logging.LogManager.updateConfiguration(java.io.InputStream,java.util.function.Function) throws java.io.IOException
    private java.util.List java.util.logging.LogManager.createLoggerHandlers(java.lang.String,java.lang.String)
    private void java.util.logging.LogManager.setLoggerHandlers(java.util.logging.Logger,java.lang.String,java.lang.String,java.util.List)
    private static void java.util.logging.LogManager.initStatic()
    private static void java.util.logging.LogManager.doSetLevel(java.util.logging.Logger,java.util.logging.Level)
    int java.util.logging.LogManager.getIntProperty(java.lang.String,int)
    long java.util.logging.LogManager.getLongProperty(java.lang.String,long)
    private void java.util.logging.LogManager.initializeGlobalHandlers()
    public static synchronized java.util.logging.LoggingMXBean java.util.logging.LogManager.getLoggingMXBean()
    public void java.util.logging.LogManager.removeConfigurationListener(java.lang.Runnable)
    private static void java.util.logging.LogManager.lambda$addConfigurationListener$4(java.security.PrivilegedAction,java.security.AccessControlContext)
    private static java.lang.Void java.util.logging.LogManager.lambda$addConfigurationListener$3(java.lang.Runnable)
    private static boolean java.util.logging.LogManager.lambda$updateConfiguration$2(java.util.logging.Logger,java.util.logging.LogManager$CloseOnReset)
    private static boolean java.util.logging.LogManager.lambda$updateConfiguration$1(java.util.Properties,java.util.Properties,java.lang.String)
    private static void java.util.logging.LogManager.lambda$updateConfiguration$0(java.util.Properties,java.util.Properties,java.util.function.Function,java.lang.String)
    java.util.logging.Logger java.util.logging.LogManager.demandSystemLogger(java.lang.String,java.lang.String,java.lang.Class)
    java.util.logging.Logger java.util.logging.LogManager.demandSystemLogger(java.lang.String,java.lang.String,java.lang.Module)
    java.util.logging.Logger java.util.logging.LogManager.demandLogger(java.lang.String,java.lang.String,java.lang.Class)
    java.util.logging.Logger java.util.logging.LogManager.demandLogger(java.lang.String,java.lang.String,java.lang.Module)
    final void java.util.logging.LogManager.drainLoggerRefQueueBounded()
    private static void java.util.logging.LogManager.doSetParent(java.util.logging.Logger,java.util.logging.Logger)
    java.util.logging.Level java.util.logging.LogManager.getLevelProperty(java.lang.String,java.util.logging.Level)
    java.util.logging.Filter java.util.logging.LogManager.getFilterProperty(java.lang.String,java.util.logging.Filter)
    java.util.logging.Formatter java.util.logging.LogManager.getFormatterProperty(java.lang.String,java.util.logging.Formatter)
    java.lang.String java.util.logging.LogManager.getStringProperty(java.lang.String,java.lang.String)
    private static java.lang.Void java.util.logging.LogManager.checkSubclassPermissions()
    final void java.util.logging.LogManager.ensureLogManagerInitialized()
    private void java.util.logging.LogManager.readPrimordialConfiguration()
    public void java.util.logging.LogManager.readConfiguration(java.io.InputStream) throws java.io.IOException,java.lang.SecurityException
    public void java.util.logging.LogManager.readConfiguration() throws java.io.IOException,java.lang.SecurityException
    final java.util.logging.LogManager$LoggerContext java.util.logging.LogManager.getSystemContext()
    public static java.util.logging.LogManager java.util.logging.LogManager.getLogManager()
----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
