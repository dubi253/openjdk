#Test Results (version 2)
#Mon Apr 29 01:09:45 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/stream/test/org/openjdk/tests/java/util/stream/StreamSpliteratorTest.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8148838 testng
library=/lib/testlibrary/bootlib
packageRoot=java/util/stream/test/
run=ASSUMED_ACTION testng org.openjdk.tests.java.util.stream.StreamSpliteratorTest\n
source=StreamSpliteratorTest.java
testngClass=org.openjdk.tests.java.util.stream.StreamSpliteratorTest
title=\ 

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/stream/test/org/openjdk/tests/java/util/stream/StreamSpliteratorTest.java
elapsed=19334 0\:00\:19.334
end=Mon Apr 29 01\:09\:45 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1153-853.j2xen23xrnaetdgy434mngmvif.cx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1018-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build testng
start=Mon Apr 29 01\:09\:26 UTC 2024
test=java/util/stream/test/org/openjdk/tests/java/util/stream/StreamSpliteratorTest.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1018-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757346304,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1018-azure
totalTime=19334
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/util/stream/test/org/openjdk/tests/java/util/stream

#section:script_messages
----------messages:(7/611)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)
Library /lib/testlibrary/bootlib; kind: system module patches
   source directory: /home/runner/work/openjdk/openjdk/test/jdk/lib/testlibrary/bootlib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/lib/testlibrary/bootlib

#section:build
----------messages:(5/2933)----------
command: build java.base/* org.openjdk.tests.java.util.stream.SortedOpTest org.openjdk.tests.java.util.stream.MapOpTest org.openjdk.tests.java.util.stream.FindFirstOpTest org.openjdk.tests.java.util.stream.SequentialOpTest org.openjdk.tests.java.util.stream.SpliteratorTest org.openjdk.tests.java.util.stream.IntReduceTest org.openjdk.tests.java.util.stream.IntUniqOpTest org.openjdk.tests.java.util.stream.StreamCloseTest org.openjdk.tests.java.util.stream.CollectorToUnmodListTest org.openjdk.tests.java.util.stream.RangeTest org.openjdk.tests.java.util.stream.StreamBuilderTest org.openjdk.tests.java.util.stream.FindAnyOpTest org.openjdk.tests.java.util.stream.MinMaxTest org.openjdk.tests.java.util.stream.ReduceByOpTest org.openjdk.tests.java.util.stream.ReduceTest org.openjdk.tests.java.util.stream.CountLargeTest org.openjdk.tests.java.util.stream.mapMultiOpTest org.openjdk.tests.java.util.stream.SliceOpTest org.openjdk.tests.java.util.stream.PrimitiveAverageOpTest org.openjdk.tests.java.util.stream.StreamParSeqTest org.openjdk.tests.java.util.stream.ForEachOpTest org.openjdk.tests.java.util.stream.IntPrimitiveOpsTests org.openjdk.tests.java.util.stream.PrimitiveSumTest org.openjdk.tests.java.util.stream.FilterOpTest org.openjdk.tests.java.util.stream.ToListOpTest org.openjdk.tests.java.util.stream.MatchOpTest org.openjdk.tests.java.util.stream.DoublePrimitiveOpsTests org.openjdk.tests.java.util.stream.StreamSpliteratorTest org.openjdk.tests.java.util.stream.FlatMapOpTest org.openjdk.tests.java.util.stream.CountTest org.openjdk.tests.java.util.stream.CollectorExample org.openjdk.tests.java.util.stream.CollectorsTest org.openjdk.tests.java.util.stream.WhileOpStatefulTest org.openjdk.tests.java.util.stream.WhileOpTest org.openjdk.tests.java.util.stream.TeeOpTest org.openjdk.tests.java.util.stream.InfiniteStreamWithLimitOpTest org.openjdk.tests.java.util.stream.StreamLinkTest org.openjdk.tests.java.util.stream.ToArrayOpTest org.openjdk.tests.java.util.stream.IntSliceOpTest org.openjdk.tests.java.util.stream.LongPrimitiveOpsTests org.openjdk.tests.java.util.stream.GroupByOpTest org.openjdk.tests.java.util.stream.SegmentTestDataProvider org.openjdk.tests.java.util.stream.DistinctOpTest org.openjdk.tests.java.util.stream.CollectAndSummaryStatisticsTest org.openjdk.tests.java.util.stream.IterateTest org.openjdk.tests.java.util.stream.ConcatTest org.openjdk.tests.java.util.stream.ConcatOpTest org.openjdk.tests.java.util.stream.CollectionAndMapModifyStreamTest org.openjdk.tests.java.util.SplittableRandomTest org.openjdk.tests.java.util.MapTest org.openjdk.tests.java.util.FillableStringTest org.openjdk.tests.java.lang.invoke.MHProxiesTest org.openjdk.tests.java.lang.invoke.SerializedLambdaTest org.openjdk.tests.java.lang.invoke.DeserializeMethodTest
reason: Named class compiled on demand
started: Mon Apr 29 01:09:26 UTC 2024
finished: Mon Apr 29 01:09:26 UTC 2024
elapsed time (seconds): 0.002
result: Passed. All files up to date

#section:testng
----------messages:(6/350)----------
command: testng org.openjdk.tests.java.util.stream.StreamSpliteratorTest
reason: Assumed action based on file name: run testng org.openjdk.tests.java.util.stream.StreamSpliteratorTest 
started: Mon Apr 29 01:09:26 UTC 2024
Mode: othervm [test or library overrides a system module]
finished: Mon Apr 29 01:09:45 UTC 2024
elapsed time (seconds): 19.33
----------configuration:(4/206)----------
Boot Layer
  add reads: java.base ALL-UNNAMED
  patch:     java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/lib/testlibrary/bootlib/java.base

----------System.out:(1458/156799)----------
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("array:empty", DoubleTestData[array:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6ce815): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("SpinedList:empty", java.util.stream.TestData$AbstractTestData$DoubleTestData@1f791eb): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@fc98f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("array:0..1", DoubleTestData[array:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@b76583): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("SpinedList:0..1", java.util.stream.TestData$AbstractTestData$DoubleTestData@fdbae6): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1474407): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("array:0..10", DoubleTestData[array:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a41d8): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("SpinedList:0..10", java.util.stream.TestData$AbstractTestData$DoubleTestData@51113e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8785ad): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("array:0..100", DoubleTestData[array:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@173af28): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("SpinedList:0..100", java.util.stream.TestData$AbstractTestData$DoubleTestData@1282c38): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1dcc31a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("array:100x[1]", DoubleTestData[array:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1b1ee1a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("SpinedList:100x[1]", java.util.stream.TestData$AbstractTestData$DoubleTestData@87c503): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@123a77): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("array:2x[0..100]", java.util.stream.TestData$AbstractTestData$DoubleTestData@1201b2a): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ab9a2d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("SpinedList:2x[0..100]", java.util.stream.TestData$AbstractTestData$DoubleTestData@1c3fd2b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@125754c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("array:reverse 0..100", java.util.stream.TestData$AbstractTestData$DoubleTestData@1ab7a5f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@196eeb3): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("SpinedList:reverse 0..100", java.util.stream.TestData$AbstractTestData$DoubleTestData@f9c4b7): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6a542d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("array:pseudorandom", java.util.stream.TestData$AbstractTestData$DoubleTestData@17f8df9): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1bc7187): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleParSpliterators("SpinedList:pseudorandom", java.util.stream.TestData$AbstractTestData$DoubleTestData@1054ed5): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@18523bb): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("array:empty", DoubleTestData[array:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@f7c2b4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("SpinedList:empty", java.util.stream.TestData$AbstractTestData$DoubleTestData@1f791eb): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e195fa): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("array:0..1", DoubleTestData[array:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1cfd192): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("SpinedList:0..1", java.util.stream.TestData$AbstractTestData$DoubleTestData@fdbae6): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8a8448): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("array:0..10", DoubleTestData[array:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1d34e7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("SpinedList:0..10", java.util.stream.TestData$AbstractTestData$DoubleTestData@51113e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4f9edb): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("array:0..100", DoubleTestData[array:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@fae8b4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("SpinedList:0..100", java.util.stream.TestData$AbstractTestData$DoubleTestData@1282c38): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1ee5cc3): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("array:100x[1]", DoubleTestData[array:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@19a261): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("SpinedList:100x[1]", java.util.stream.TestData$AbstractTestData$DoubleTestData@87c503): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8d8d27): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("array:2x[0..100]", java.util.stream.TestData$AbstractTestData$DoubleTestData@1201b2a): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1818c32): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("SpinedList:2x[0..100]", java.util.stream.TestData$AbstractTestData$DoubleTestData@1c3fd2b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@c5a96d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("array:reverse 0..100", java.util.stream.TestData$AbstractTestData$DoubleTestData@1ab7a5f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2424cc): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("SpinedList:reverse 0..100", java.util.stream.TestData$AbstractTestData$DoubleTestData@f9c4b7): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@15b32b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("array:pseudorandom", java.util.stream.TestData$AbstractTestData$DoubleTestData@17f8df9): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@15e43dc): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSpliterators("SpinedList:pseudorandom", java.util.stream.TestData$AbstractTestData$DoubleTestData@1054ed5): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a774b5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleSplitting(): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1b9ad39): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("array:empty", DoubleTestData[array:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3c8b54): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("SpinedList:empty", java.util.stream.TestData$AbstractTestData$DoubleTestData@1f791eb): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@15c2836): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("array:0..1", DoubleTestData[array:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1716af0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("SpinedList:0..1", java.util.stream.TestData$AbstractTestData$DoubleTestData@fdbae6): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@476af3): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("array:0..10", DoubleTestData[array:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@bbd81c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("SpinedList:0..10", java.util.stream.TestData$AbstractTestData$DoubleTestData@51113e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@aaa669): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("array:0..100", DoubleTestData[array:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ed6deb): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("SpinedList:0..100", java.util.stream.TestData$AbstractTestData$DoubleTestData@1282c38): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@13839f5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("array:100x[1]", DoubleTestData[array:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1d2253d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("SpinedList:100x[1]", java.util.stream.TestData$AbstractTestData$DoubleTestData@87c503): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@eedb45): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("array:2x[0..100]", java.util.stream.TestData$AbstractTestData$DoubleTestData@1201b2a): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@13f2711): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("SpinedList:2x[0..100]", java.util.stream.TestData$AbstractTestData$DoubleTestData@1c3fd2b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@173ef62): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("array:reverse 0..100", java.util.stream.TestData$AbstractTestData$DoubleTestData@1ab7a5f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@b649a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("SpinedList:reverse 0..100", java.util.stream.TestData$AbstractTestData$DoubleTestData@f9c4b7): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@15febca): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("array:pseudorandom", java.util.stream.TestData$AbstractTestData$DoubleTestData@17f8df9): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e8a821): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testDoubleStreamSpliterators("SpinedList:pseudorandom", java.util.stream.TestData$AbstractTestData$DoubleTestData@1054ed5): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@13c0cbd): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("array:empty", IntTestData[array:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7bc3ca): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("SpinedList:empty", IntTestData[SpinedList:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@12ba152): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.intRange(0,l): 0", java.util.stream.TestData$AbstractTestData$IntTestData@a9101e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6206a8): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.rangeClosed(0,l): 0", java.util.stream.TestData$AbstractTestData$IntTestData@1240e03): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1bf1689): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("array:0..1", IntTestData[array:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@161c086): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("SpinedList:0..1", IntTestData[SpinedList:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3876b4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.intRange(0,l): 1", java.util.stream.TestData$AbstractTestData$IntTestData@16119e5): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6f4c6b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.rangeClosed(0,l): 1", java.util.stream.TestData$AbstractTestData$IntTestData@8f15e2): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e1b8bd): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("array:0..10", IntTestData[array:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ddc093): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("SpinedList:0..10", IntTestData[SpinedList:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1fd197f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.intRange(0,l): 10", java.util.stream.TestData$AbstractTestData$IntTestData@6b20b0): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@12ef5e3): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.rangeClosed(0,l): 10", java.util.stream.TestData$AbstractTestData$IntTestData@139329e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1aa47b7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("array:0..100", IntTestData[array:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@14862e0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("SpinedList:0..100", IntTestData[SpinedList:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@c36103): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.intRange(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@80ed5b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1c046f1): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.rangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@550e22): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e52bd7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("array:100x[1]", IntTestData[array:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@990d9a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("SpinedList:100x[1]", java.util.stream.TestData$AbstractTestData$IntTestData@137f95e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@178d77f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.intRange(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@16b061d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e7ed20): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.rangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@30f35c): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1f59f57): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("array:2x[0..100]", IntTestData[array:2x[0..100]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@911ee2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("SpinedList:2x[0..100]", java.util.stream.TestData$AbstractTestData$IntTestData@4e17bf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ce62da): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.intRange(0,l): 200", java.util.stream.TestData$AbstractTestData$IntTestData@d7fc06): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1769d34): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.rangeClosed(0,l): 200", java.util.stream.TestData$AbstractTestData$IntTestData@20b3f1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1281c3c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("array:reverse 0..100", java.util.stream.TestData$AbstractTestData$IntTestData@1858d4a): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@f5b77a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("SpinedList:reverse 0..100", java.util.stream.TestData$AbstractTestData$IntTestData@3f73a3): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@11a4a79): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.intRange(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@bd0a50): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1cbd57c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.rangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@187377d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@207104): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("array:pseudorandom", java.util.stream.TestData$AbstractTestData$IntTestData@1a9ede1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5c1a01): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("SpinedList:pseudorandom", java.util.stream.TestData$AbstractTestData$IntTestData@5d38ac): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@19b974): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.intRange(0,l): 404", java.util.stream.TestData$AbstractTestData$IntTestData@1b67f04): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@9fb05f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntParSpliterators("IntStream.rangeClosed(0,l): 404", java.util.stream.TestData$AbstractTestData$IntTestData@7d0154): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@147508c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("array:empty", IntTestData[array:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@552c03): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("SpinedList:empty", IntTestData[SpinedList:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2937f7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.intRange(0,l): 0", java.util.stream.TestData$AbstractTestData$IntTestData@a9101e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1512cba): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.rangeClosed(0,l): 0", java.util.stream.TestData$AbstractTestData$IntTestData@1240e03): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@173ff69): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("array:0..1", IntTestData[array:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@166dfad): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("SpinedList:0..1", IntTestData[SpinedList:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1b1c4e0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.intRange(0,l): 1", java.util.stream.TestData$AbstractTestData$IntTestData@16119e5): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1b157e9): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.rangeClosed(0,l): 1", java.util.stream.TestData$AbstractTestData$IntTestData@8f15e2): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1a5a617): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("array:0..10", IntTestData[array:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@f40cb8): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("SpinedList:0..10", IntTestData[SpinedList:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@b55a38): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.intRange(0,l): 10", java.util.stream.TestData$AbstractTestData$IntTestData@6b20b0): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a9e8e9): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.rangeClosed(0,l): 10", java.util.stream.TestData$AbstractTestData$IntTestData@139329e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2beecc): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("array:0..100", IntTestData[array:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@573ae4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("SpinedList:0..100", IntTestData[SpinedList:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@b77483): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.intRange(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@80ed5b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a35e13): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.rangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@550e22): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@dd95be): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("array:100x[1]", IntTestData[array:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@c27b91): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("SpinedList:100x[1]", java.util.stream.TestData$AbstractTestData$IntTestData@137f95e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8016be): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.intRange(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@16b061d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@10f7ad0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.rangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@30f35c): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4099d7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("array:2x[0..100]", IntTestData[array:2x[0..100]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@cb6d1d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("SpinedList:2x[0..100]", java.util.stream.TestData$AbstractTestData$IntTestData@4e17bf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@467eac): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.intRange(0,l): 200", java.util.stream.TestData$AbstractTestData$IntTestData@d7fc06): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@f3078): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.rangeClosed(0,l): 200", java.util.stream.TestData$AbstractTestData$IntTestData@20b3f1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@13bc457): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("array:reverse 0..100", java.util.stream.TestData$AbstractTestData$IntTestData@1858d4a): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@11e769c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("SpinedList:reverse 0..100", java.util.stream.TestData$AbstractTestData$IntTestData@3f73a3): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1492401): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.intRange(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@bd0a50): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@9afc7c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.rangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@187377d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1ae9cf5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("array:pseudorandom", java.util.stream.TestData$AbstractTestData$IntTestData@1a9ede1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1d5001f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("SpinedList:pseudorandom", java.util.stream.TestData$AbstractTestData$IntTestData@5d38ac): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@193be66): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.intRange(0,l): 404", java.util.stream.TestData$AbstractTestData$IntTestData@1b67f04): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@148e467): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSpliterators("IntStream.rangeClosed(0,l): 404", java.util.stream.TestData$AbstractTestData$IntTestData@7d0154): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e7cc68): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntSplitting(): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@d76ece): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("array:empty", IntTestData[array:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@c20fd2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("SpinedList:empty", IntTestData[SpinedList:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1c28d43): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.intRange(0,l): 0", java.util.stream.TestData$AbstractTestData$IntTestData@a9101e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e201d5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.rangeClosed(0,l): 0", java.util.stream.TestData$AbstractTestData$IntTestData@1240e03): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5674dc): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("array:0..1", IntTestData[array:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@15912b5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("SpinedList:0..1", IntTestData[SpinedList:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1a40938): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.intRange(0,l): 1", java.util.stream.TestData$AbstractTestData$IntTestData@16119e5): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1de61d9): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.rangeClosed(0,l): 1", java.util.stream.TestData$AbstractTestData$IntTestData@8f15e2): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@878df5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("array:0..10", IntTestData[array:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8891f2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("SpinedList:0..10", IntTestData[SpinedList:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1efe2b1): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.intRange(0,l): 10", java.util.stream.TestData$AbstractTestData$IntTestData@6b20b0): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1aeb25f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.rangeClosed(0,l): 10", java.util.stream.TestData$AbstractTestData$IntTestData@139329e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1574ea0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("array:0..100", IntTestData[array:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@150ff39): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("SpinedList:0..100", IntTestData[SpinedList:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e3cdc7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.intRange(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@80ed5b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5da9c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.rangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@550e22): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@16c2287): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("array:100x[1]", IntTestData[array:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@70abb4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("SpinedList:100x[1]", java.util.stream.TestData$AbstractTestData$IntTestData@137f95e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1067c49): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.intRange(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@16b061d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ad6cdd): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.rangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@30f35c): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ec99a0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("array:2x[0..100]", IntTestData[array:2x[0..100]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@12b952): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("SpinedList:2x[0..100]", java.util.stream.TestData$AbstractTestData$IntTestData@4e17bf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1ed271e): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.intRange(0,l): 200", java.util.stream.TestData$AbstractTestData$IntTestData@d7fc06): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1bf3c93): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.rangeClosed(0,l): 200", java.util.stream.TestData$AbstractTestData$IntTestData@20b3f1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@40f442): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("array:reverse 0..100", java.util.stream.TestData$AbstractTestData$IntTestData@1858d4a): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@19dcc51): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("SpinedList:reverse 0..100", java.util.stream.TestData$AbstractTestData$IntTestData@3f73a3): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@20179c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.intRange(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@bd0a50): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5798b7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.rangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$IntTestData@187377d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@270f17): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("array:pseudorandom", java.util.stream.TestData$AbstractTestData$IntTestData@1a9ede1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@11ee85c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("SpinedList:pseudorandom", java.util.stream.TestData$AbstractTestData$IntTestData@5d38ac): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@66e041): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.intRange(0,l): 404", java.util.stream.TestData$AbstractTestData$IntTestData@1b67f04): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@d7a411): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testIntStreamSpliterators("IntStream.rangeClosed(0,l): 404", java.util.stream.TestData$AbstractTestData$IntTestData@7d0154): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7eef01): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("array:empty", LongTestData[array:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e69786): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("SpinedList:empty", LongTestData[SpinedList:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1a04d5a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRange(0,l): 0", java.util.stream.TestData$AbstractTestData$LongTestData@b5d8e6): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@16a9337): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRangeClosed(0,l): 0", java.util.stream.TestData$AbstractTestData$LongTestData@5a660c): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1773a9e): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("array:0..1", LongTestData[array:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@677b1f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("SpinedList:0..1", LongTestData[SpinedList:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@f6e2ac): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRange(0,l): 1", java.util.stream.TestData$AbstractTestData$LongTestData@1339bd4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@aff55c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRangeClosed(0,l): 1", java.util.stream.TestData$AbstractTestData$LongTestData@5ee8de): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@189aff): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("array:0..10", LongTestData[array:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@19cb74): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("SpinedList:0..10", LongTestData[SpinedList:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@160a607): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRange(0,l): 10", java.util.stream.TestData$AbstractTestData$LongTestData@211e44): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@f1cf59): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRangeClosed(0,l): 10", java.util.stream.TestData$AbstractTestData$LongTestData@5def08): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@247ddd): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("array:0..100", LongTestData[array:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@fb716): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("SpinedList:0..100", java.util.stream.TestData$AbstractTestData$LongTestData@14efa57): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5856ef): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRange(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@f236c6): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@9bfc19): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@1b56fa7): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@cf28bc): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("array:100x[1]", LongTestData[array:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@df3bab): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("SpinedList:100x[1]", java.util.stream.TestData$AbstractTestData$LongTestData@1d177b2): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@420780): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRange(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@1ddae40): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1adcd7c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@19a8567): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e96245): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("array:2x[0..100]", LongTestData[array:2x[0..100]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@191df81): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("SpinedList:2x[0..100]", java.util.stream.TestData$AbstractTestData$LongTestData@1eec6d0): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3060fb): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRange(0,l): 200", java.util.stream.TestData$AbstractTestData$LongTestData@fe9604): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@11a0a98): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRangeClosed(0,l): 200", java.util.stream.TestData$AbstractTestData$LongTestData@c7c4c7): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@11441cd): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("array:reverse 0..100", java.util.stream.TestData$AbstractTestData$LongTestData@1e58a0): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1316287): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("SpinedList:reverse 0..100", java.util.stream.TestData$AbstractTestData$LongTestData@3d7025): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e8013f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRange(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@16c6703): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@14b6568): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@cecefb): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e68fef): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("array:pseudorandom", java.util.stream.TestData$AbstractTestData$LongTestData@116d977): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1d1ae0d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("SpinedList:pseudorandom", java.util.stream.TestData$AbstractTestData$LongTestData@2d528b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@943145): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRange(0,l): 404", java.util.stream.TestData$AbstractTestData$LongTestData@e32149): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1643449): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongParSpliterators("LongStream.longRangeClosed(0,l): 404", java.util.stream.TestData$AbstractTestData$LongTestData@1f43b88): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@11881c3): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("array:empty", LongTestData[array:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@64b7e5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("SpinedList:empty", LongTestData[SpinedList:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@166891e): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRange(0,l): 0", java.util.stream.TestData$AbstractTestData$LongTestData@b5d8e6): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@143600b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRangeClosed(0,l): 0", java.util.stream.TestData$AbstractTestData$LongTestData@5a660c): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@138cb68): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("array:0..1", LongTestData[array:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@86eb01): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("SpinedList:0..1", LongTestData[SpinedList:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1c2d212): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRange(0,l): 1", java.util.stream.TestData$AbstractTestData$LongTestData@1339bd4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1382e6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRangeClosed(0,l): 1", java.util.stream.TestData$AbstractTestData$LongTestData@5ee8de): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7ecf91): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("array:0..10", LongTestData[array:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1f9db0f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("SpinedList:0..10", LongTestData[SpinedList:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ae969a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRange(0,l): 10", java.util.stream.TestData$AbstractTestData$LongTestData@211e44): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4aaec5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRangeClosed(0,l): 10", java.util.stream.TestData$AbstractTestData$LongTestData@5def08): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1d3448b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("array:0..100", LongTestData[array:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@110407): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("SpinedList:0..100", java.util.stream.TestData$AbstractTestData$LongTestData@14efa57): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@191931b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRange(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@f236c6): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@d0b8e6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@1b56fa7): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1330057): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("array:100x[1]", LongTestData[array:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1d00bd5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("SpinedList:100x[1]", java.util.stream.TestData$AbstractTestData$LongTestData@1d177b2): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6cf321): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRange(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@1ddae40): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@fc9275): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@19a8567): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@fae067): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("array:2x[0..100]", LongTestData[array:2x[0..100]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@b4dac7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("SpinedList:2x[0..100]", java.util.stream.TestData$AbstractTestData$LongTestData@1eec6d0): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3605b2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRange(0,l): 200", java.util.stream.TestData$AbstractTestData$LongTestData@fe9604): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@19c9405): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRangeClosed(0,l): 200", java.util.stream.TestData$AbstractTestData$LongTestData@c7c4c7): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@82789b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("array:reverse 0..100", java.util.stream.TestData$AbstractTestData$LongTestData@1e58a0): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1ac6fb4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("SpinedList:reverse 0..100", java.util.stream.TestData$AbstractTestData$LongTestData@3d7025): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@943c2f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRange(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@16c6703): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@12cb6c8): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@cecefb): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1c460c6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("array:pseudorandom", java.util.stream.TestData$AbstractTestData$LongTestData@116d977): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5f8642): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("SpinedList:pseudorandom", java.util.stream.TestData$AbstractTestData$LongTestData@2d528b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@69f749): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRange(0,l): 404", java.util.stream.TestData$AbstractTestData$LongTestData@e32149): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@bf7ff5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSpliterators("LongStream.longRangeClosed(0,l): 404", java.util.stream.TestData$AbstractTestData$LongTestData@1f43b88): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@509f61): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongSplitting(): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1dd54ec): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("array:empty", LongTestData[array:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1137c4c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("SpinedList:empty", LongTestData[SpinedList:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@81b53): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRange(0,l): 0", java.util.stream.TestData$AbstractTestData$LongTestData@b5d8e6): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ee6282): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRangeClosed(0,l): 0", java.util.stream.TestData$AbstractTestData$LongTestData@5a660c): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1119337): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("array:0..1", LongTestData[array:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@19cb6af): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("SpinedList:0..1", LongTestData[SpinedList:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1ef1bed): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRange(0,l): 1", java.util.stream.TestData$AbstractTestData$LongTestData@1339bd4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@15df201): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRangeClosed(0,l): 1", java.util.stream.TestData$AbstractTestData$LongTestData@5ee8de): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1f784e2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("array:0..10", LongTestData[array:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@643d91): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("SpinedList:0..10", LongTestData[SpinedList:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@13b89e2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRange(0,l): 10", java.util.stream.TestData$AbstractTestData$LongTestData@211e44): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ab0f4a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRangeClosed(0,l): 10", java.util.stream.TestData$AbstractTestData$LongTestData@5def08): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7b2961): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("array:0..100", LongTestData[array:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3b21d4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("SpinedList:0..100", java.util.stream.TestData$AbstractTestData$LongTestData@14efa57): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1d0bb51): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRange(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@f236c6): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@9709dd): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@1b56fa7): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@10df754): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("array:100x[1]", LongTestData[array:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@323e82): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("SpinedList:100x[1]", java.util.stream.TestData$AbstractTestData$LongTestData@1d177b2): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a02089): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRange(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@1ddae40): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@158ef): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@19a8567): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1a9c5c0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("array:2x[0..100]", LongTestData[array:2x[0..100]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@43c57b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("SpinedList:2x[0..100]", java.util.stream.TestData$AbstractTestData$LongTestData@1eec6d0): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@912b00): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRange(0,l): 200", java.util.stream.TestData$AbstractTestData$LongTestData@fe9604): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@139084c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRangeClosed(0,l): 200", java.util.stream.TestData$AbstractTestData$LongTestData@c7c4c7): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@44f74e): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("array:reverse 0..100", java.util.stream.TestData$AbstractTestData$LongTestData@1e58a0): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@951dd7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("SpinedList:reverse 0..100", java.util.stream.TestData$AbstractTestData$LongTestData@3d7025): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@13cae8a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRange(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@16c6703): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e169c7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRangeClosed(0,l): 100", java.util.stream.TestData$AbstractTestData$LongTestData@cecefb): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@fbca25): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("array:pseudorandom", java.util.stream.TestData$AbstractTestData$LongTestData@116d977): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e55ae2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("SpinedList:pseudorandom", java.util.stream.TestData$AbstractTestData$LongTestData@2d528b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@117882): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRange(0,l): 404", java.util.stream.TestData$AbstractTestData$LongTestData@e32149): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1ceb673): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testLongStreamSpliterators("LongStream.longRangeClosed(0,l): 404", java.util.stream.TestData$AbstractTestData$LongTestData@1f43b88): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1744133): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("array:0..100", RefTestData[array:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1f1e277): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.asList:0..100", java.util.stream.TestData$AbstractTestData$RefTestData@14c61ad): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@10adc69): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList:0..100", RefTestData[ArrayList:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1ab79a6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("DelegatingStream(ArrayList):0..100", java.util.stream.TestData$AbstractTestData$RefTestData@314a1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6d208e): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.Sublist:0..100", java.util.stream.TestData$AbstractTestData$RefTestData@84fe7d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@12c70cc): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedList:0..100", RefTestData[LinkedList:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@17bc6a0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("HashSet:0..100", RefTestData[HashSet:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ad6d45): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedHashSet:0..100", java.util.stream.TestData$AbstractTestData$RefTestData@156c798): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ea4cb2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("TreeSet:0..100", RefTestData[TreeSet:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1a78741): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("SpinedBuffer:0..100", java.util.stream.TestData$AbstractTestData$RefTestData@16a5247): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e44fe4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("array:100x[1]", RefTestData[array:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1b10367): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.asList:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@1db6ac0): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@acf7e7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList:100x[1]", RefTestData[ArrayList:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1012c21): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("DelegatingStream(ArrayList):100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@1555a85): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1930cea): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.Sublist:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@183646d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@dad7ab): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedList:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@4991db): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8e7536): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("HashSet:100x[1]", RefTestData[HashSet:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@739da1): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedHashSet:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@1bc61cf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1b46d4c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("TreeSet:100x[1]", RefTestData[TreeSet:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e3a708): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("SpinedBuffer:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@98d3b3): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@128e88f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("array:2x[0..100]", RefTestData[array:2x[0..100]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@13ffa7c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.asList:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1c328a2): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@109cdfc): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@acfa75): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@13babb1): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("DelegatingStream(ArrayList):2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@58af86): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@c2f65f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.Sublist:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1aae612): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@d38076): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedList:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1362009): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1b2d069): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("HashSet:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@143c6cf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@316d16): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedHashSet:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1be63d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@19b7eb5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("TreeSet:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1c4edcf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@14a58d4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("SpinedBuffer:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@158f9fd): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@d8b7a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("array:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@1cc4325): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@11a56fd): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.asList:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@11421e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@129415f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@82247): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@174bda0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("DelegatingStream(ArrayList):reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@13bd023): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@170fe19): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.Sublist:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@175957b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1f1357a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedList:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@d0640): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6bae9e): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("HashSet:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@926ad8): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1563dca): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedHashSet:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@90c5bf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@f4124a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("TreeSet:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@bfb7b4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@b7926b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("SpinedBuffer:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@74914): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ffa035): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("array:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@99214b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@17ad065): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.asList:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@103c816): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@9dd6b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@19b820): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e1dc0d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("DelegatingStream(ArrayList):pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@8a972f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@812ac7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.Sublist:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@1377abc): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a1a68f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedList:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@1c4b8dd): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@d2ec74): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("HashSet:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@138bce1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@62483e): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedHashSet:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@143a68f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1d638e1): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("TreeSet:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@d46a33): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ed58b8): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("SpinedBuffer:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@62e86d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@924581): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("array:empty", RefTestData[array:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1b305b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.asList:empty", java.util.stream.TestData$AbstractTestData$RefTestData@110cb7f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@9aa4ae): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList:empty", RefTestData[ArrayList:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1c9dae0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("DelegatingStream(ArrayList):empty", java.util.stream.TestData$AbstractTestData$RefTestData@1713439): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1af2ad): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.Sublist:empty", java.util.stream.TestData$AbstractTestData$RefTestData@f15eec): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1c94445): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedList:empty", RefTestData[LinkedList:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ba5069): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("HashSet:empty", RefTestData[HashSet:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e6121b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedHashSet:empty", java.util.stream.TestData$AbstractTestData$RefTestData@1236c41): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@17dd134): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("TreeSet:empty", RefTestData[TreeSet:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1265397): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("SpinedBuffer:empty", java.util.stream.TestData$AbstractTestData$RefTestData@130ecfa): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@49aae0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("array:0..1", RefTestData[array:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1242b90): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.asList:0..1", java.util.stream.TestData$AbstractTestData$RefTestData@1509d7c): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@194522d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList:0..1", RefTestData[ArrayList:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@44ff6b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("DelegatingStream(ArrayList):0..1", java.util.stream.TestData$AbstractTestData$RefTestData@a53d40): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1d733d8): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.Sublist:0..1", java.util.stream.TestData$AbstractTestData$RefTestData@133589f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1bce8d2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedList:0..1", RefTestData[LinkedList:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1cd9471): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("HashSet:0..1", RefTestData[HashSet:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@12ae3c8): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedHashSet:0..1", java.util.stream.TestData$AbstractTestData$RefTestData@12264ee): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@134f5e1): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("TreeSet:0..1", RefTestData[TreeSet:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7c773e): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("SpinedBuffer:0..1", RefTestData[SpinedBuffer:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a9629b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("array:0..10", RefTestData[array:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@163bacf): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.asList:0..10", java.util.stream.TestData$AbstractTestData$RefTestData@1df15ff): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1b66e49): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList:0..10", RefTestData[ArrayList:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@12d1098): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("DelegatingStream(ArrayList):0..10", java.util.stream.TestData$AbstractTestData$RefTestData@13da710): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@55d0bf): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("ArrayList.Sublist:0..10", java.util.stream.TestData$AbstractTestData$RefTestData@b7d5bb): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7f22fa): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedList:0..10", RefTestData[LinkedList:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8d406f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("HashSet:0..10", RefTestData[HashSet:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@c649cb): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("LinkedHashSet:0..10", java.util.stream.TestData$AbstractTestData$RefTestData@121f26c): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1956012): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("TreeSet:0..10", RefTestData[TreeSet:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@16f18de): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testParSpliterators("SpinedBuffer:0..10", java.util.stream.TestData$AbstractTestData$RefTestData@14c3e4d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@486e52): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("array:0..100", RefTestData[array:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1a95820): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.asList:0..100", java.util.stream.TestData$AbstractTestData$RefTestData@14c61ad): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@56a43e): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList:0..100", RefTestData[ArrayList:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7a7ef9): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("DelegatingStream(ArrayList):0..100", java.util.stream.TestData$AbstractTestData$RefTestData@314a1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@313c3d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.Sublist:0..100", java.util.stream.TestData$AbstractTestData$RefTestData@84fe7d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e0b0f3): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedList:0..100", RefTestData[LinkedList:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8d6057): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("HashSet:0..100", RefTestData[HashSet:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@147dda8): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedHashSet:0..100", java.util.stream.TestData$AbstractTestData$RefTestData@156c798): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a11703): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("TreeSet:0..100", RefTestData[TreeSet:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1cd70c6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("SpinedBuffer:0..100", java.util.stream.TestData$AbstractTestData$RefTestData@16a5247): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1370160): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("array:100x[1]", RefTestData[array:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1183371): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.asList:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@1db6ac0): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e40172): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList:100x[1]", RefTestData[ArrayList:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@cb8f57): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("DelegatingStream(ArrayList):100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@1555a85): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a29207): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.Sublist:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@183646d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1425854): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedList:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@4991db): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1a37153): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("HashSet:100x[1]", RefTestData[HashSet:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1dd31c2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedHashSet:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@1bc61cf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e114d1): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("TreeSet:100x[1]", RefTestData[TreeSet:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@727ca6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("SpinedBuffer:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@98d3b3): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7bb7d8): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("array:2x[0..100]", RefTestData[array:2x[0..100]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1eea225): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.asList:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1c328a2): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@11b217): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@acfa75): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@18c41ca): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("DelegatingStream(ArrayList):2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@58af86): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e24df7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.Sublist:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1aae612): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ffefdd): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedList:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1362009): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@114b933): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("HashSet:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@143c6cf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@c0a84d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedHashSet:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1be63d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1aec02d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("TreeSet:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1c4edcf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@17262f0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("SpinedBuffer:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@158f9fd): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1195674): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("array:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@1cc4325): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@dc778): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.asList:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@11421e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6a4f12): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@82247): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@27dc66): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("DelegatingStream(ArrayList):reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@13bd023): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@56ceae): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.Sublist:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@175957b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@de2a99): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedList:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@d0640): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@18a0c86): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("HashSet:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@926ad8): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1ca3b3): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedHashSet:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@90c5bf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1a85637): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("TreeSet:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@bfb7b4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@69ae6a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("SpinedBuffer:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@74914): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@145fc1): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("array:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@99214b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@c92ef2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.asList:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@103c816): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@15acbf6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@19b820): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@58bb6a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("DelegatingStream(ArrayList):pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@8a972f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@f5f6d0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.Sublist:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@1377abc): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@9a1d6a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedList:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@1c4b8dd): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@15d0909): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("HashSet:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@138bce1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@292ff6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedHashSet:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@143a68f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@dff06c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("TreeSet:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@d46a33): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@76e444): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("SpinedBuffer:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@62e86d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@16ad083): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("array:empty", RefTestData[array:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@b0e7a2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.asList:empty", java.util.stream.TestData$AbstractTestData$RefTestData@110cb7f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1683d2b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList:empty", RefTestData[ArrayList:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@dc268): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("DelegatingStream(ArrayList):empty", java.util.stream.TestData$AbstractTestData$RefTestData@1713439): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2d2d85): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.Sublist:empty", java.util.stream.TestData$AbstractTestData$RefTestData@f15eec): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1665203): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedList:empty", RefTestData[LinkedList:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@63d111): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("HashSet:empty", RefTestData[HashSet:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@13d04bc): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedHashSet:empty", java.util.stream.TestData$AbstractTestData$RefTestData@1236c41): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a307bb): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("TreeSet:empty", RefTestData[TreeSet:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@826877): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("SpinedBuffer:empty", java.util.stream.TestData$AbstractTestData$RefTestData@130ecfa): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@19d1b09): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("array:0..1", RefTestData[array:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@63ddb4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.asList:0..1", java.util.stream.TestData$AbstractTestData$RefTestData@1509d7c): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1779eb9): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList:0..1", RefTestData[ArrayList:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@128aadb): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("DelegatingStream(ArrayList):0..1", java.util.stream.TestData$AbstractTestData$RefTestData@a53d40): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@11bf4b8): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.Sublist:0..1", java.util.stream.TestData$AbstractTestData$RefTestData@133589f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ebc070): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedList:0..1", RefTestData[LinkedList:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8bd8c7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("HashSet:0..1", RefTestData[HashSet:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@590da5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedHashSet:0..1", java.util.stream.TestData$AbstractTestData$RefTestData@12264ee): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@97b42c): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("TreeSet:0..1", RefTestData[TreeSet:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1fe3bda): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("SpinedBuffer:0..1", RefTestData[SpinedBuffer:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@25e215): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("array:0..10", RefTestData[array:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@f33b0a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.asList:0..10", java.util.stream.TestData$AbstractTestData$RefTestData@1df15ff): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@94bc78): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList:0..10", RefTestData[ArrayList:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7ba863): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("DelegatingStream(ArrayList):0..10", java.util.stream.TestData$AbstractTestData$RefTestData@13da710): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1f4f8a1): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("ArrayList.Sublist:0..10", java.util.stream.TestData$AbstractTestData$RefTestData@b7d5bb): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@142bb63): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedList:0..10", RefTestData[LinkedList:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8ae954): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("HashSet:0..10", RefTestData[HashSet:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e1eb14): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("LinkedHashSet:0..10", java.util.stream.TestData$AbstractTestData$RefTestData@121f26c): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@c6175a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("TreeSet:0..10", RefTestData[TreeSet:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@11ea72b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSpliterators("SpinedBuffer:0..10", java.util.stream.TestData$AbstractTestData$RefTestData@14c3e4d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a23b8b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testSplitting(): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@bfa75a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("array:0..100", RefTestData[array:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@159a826): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.asList:0..100", java.util.stream.TestData$AbstractTestData$RefTestData@14c61ad): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1845ff2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList:0..100", RefTestData[ArrayList:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@164f717): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("DelegatingStream(ArrayList):0..100", java.util.stream.TestData$AbstractTestData$RefTestData@314a1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ad1adb): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.Sublist:0..100", java.util.stream.TestData$AbstractTestData$RefTestData@84fe7d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@335d15): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedList:0..100", RefTestData[LinkedList:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@85159e): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("HashSet:0..100", RefTestData[HashSet:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4222a2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedHashSet:0..100", java.util.stream.TestData$AbstractTestData$RefTestData@156c798): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@69a35b): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("TreeSet:0..100", RefTestData[TreeSet:0..100]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5fccf8): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("SpinedBuffer:0..100", java.util.stream.TestData$AbstractTestData$RefTestData@16a5247): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@d20ebf): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("array:100x[1]", RefTestData[array:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@163621): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.asList:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@1db6ac0): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@19e722d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList:100x[1]", RefTestData[ArrayList:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1df85a4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("DelegatingStream(ArrayList):100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@1555a85): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1607e5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.Sublist:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@183646d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@17c3a1e): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedList:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@4991db): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1acc0d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("HashSet:100x[1]", RefTestData[HashSet:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@18ba52a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedHashSet:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@1bc61cf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@17fa7fd): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("TreeSet:100x[1]", RefTestData[TreeSet:100x[1]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@10f22): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("SpinedBuffer:100x[1]", java.util.stream.TestData$AbstractTestData$RefTestData@98d3b3): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@16b63d4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("array:2x[0..100]", RefTestData[array:2x[0..100]]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8717ec): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.asList:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1c328a2): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1a996ca): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@acfa75): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1d4fb24): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("DelegatingStream(ArrayList):2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@58af86): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@776a47): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.Sublist:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1aae612): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1a871be): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedList:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1362009): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@153e218): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("HashSet:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@143c6cf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@584a16): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedHashSet:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1be63d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@b7f9ed): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("TreeSet:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@1c4edcf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1aa64d0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("SpinedBuffer:2x[0..100]", java.util.stream.TestData$AbstractTestData$RefTestData@158f9fd): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@19414fe): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("array:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@1cc4325): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1eaae4d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.asList:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@11421e): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@189f2c5): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@82247): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@13ef883): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("DelegatingStream(ArrayList):reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@13bd023): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@112b3f8): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.Sublist:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@175957b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2b58b0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedList:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@d0640): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@85b3fd): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("HashSet:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@926ad8): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@145d8a6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedHashSet:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@90c5bf): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@9554c2): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("TreeSet:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@bfb7b4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@d71624): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("SpinedBuffer:reverse 0..100", java.util.stream.TestData$AbstractTestData$RefTestData@74914): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@31a9c6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("array:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@99214b): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@bd32f3): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.asList:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@103c816): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@582f72): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@19b820): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1c75728): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("DelegatingStream(ArrayList):pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@8a972f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1a9d3e7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.Sublist:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@1377abc): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a839f1): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedList:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@1c4b8dd): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a6460a): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("HashSet:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@138bce1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@eb48f7): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedHashSet:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@143a68f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e94eb6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("TreeSet:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@d46a33): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@40c218): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("SpinedBuffer:pseudorandom", java.util.stream.TestData$AbstractTestData$RefTestData@62e86d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5f9f52): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("array:empty", RefTestData[array:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@45e001): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.asList:empty", java.util.stream.TestData$AbstractTestData$RefTestData@110cb7f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a4c8fb): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList:empty", RefTestData[ArrayList:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@169bb36): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("DelegatingStream(ArrayList):empty", java.util.stream.TestData$AbstractTestData$RefTestData@1713439): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1289c40): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.Sublist:empty", java.util.stream.TestData$AbstractTestData$RefTestData@f15eec): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a09ed6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedList:empty", RefTestData[LinkedList:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@9eda02): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("HashSet:empty", RefTestData[HashSet:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@882e15): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedHashSet:empty", java.util.stream.TestData$AbstractTestData$RefTestData@1236c41): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@18e1bbf): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("TreeSet:empty", RefTestData[TreeSet:empty]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1dcce01): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("SpinedBuffer:empty", java.util.stream.TestData$AbstractTestData$RefTestData@130ecfa): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1331a4): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("array:0..1", RefTestData[array:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@75f3fe): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.asList:0..1", java.util.stream.TestData$AbstractTestData$RefTestData@1509d7c): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1580859): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList:0..1", RefTestData[ArrayList:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8da34f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("DelegatingStream(ArrayList):0..1", java.util.stream.TestData$AbstractTestData$RefTestData@a53d40): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1dcac64): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.Sublist:0..1", java.util.stream.TestData$AbstractTestData$RefTestData@133589f): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@c7cab6): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedList:0..1", RefTestData[LinkedList:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@147a410): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("HashSet:0..1", RefTestData[HashSet:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5822f0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedHashSet:0..1", java.util.stream.TestData$AbstractTestData$RefTestData@12264ee): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@e58a6f): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("TreeSet:0..1", RefTestData[TreeSet:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1caf72e): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("SpinedBuffer:0..1", RefTestData[SpinedBuffer:0..1]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@10d2603): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("array:0..10", RefTestData[array:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4a49ad): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.asList:0..10", java.util.stream.TestData$AbstractTestData$RefTestData@1df15ff): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e2342d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList:0..10", RefTestData[ArrayList:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1fc1cfe): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("DelegatingStream(ArrayList):0..10", java.util.stream.TestData$AbstractTestData$RefTestData@13da710): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@cc70a3): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("ArrayList.Sublist:0..10", java.util.stream.TestData$AbstractTestData$RefTestData@b7d5bb): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1900522): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedList:0..10", RefTestData[LinkedList:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@168f444): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("HashSet:0..10", RefTestData[HashSet:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@198dd4d): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("LinkedHashSet:0..10", java.util.stream.TestData$AbstractTestData$RefTestData@121f26c): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@a7fdb1): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("TreeSet:0..10", RefTestData[TreeSet:0..10]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@252be0): success
config java.util.stream.LoggingTestCase.before(): success
test org.openjdk.tests.java.util.stream.StreamSpliteratorTest.testStreamSpliterators("SpinedBuffer:0..10", java.util.stream.TestData$AbstractTestData$RefTestData@14c3e4d): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1fb6852): success

===============================================
java/util/stream/test/org/openjdk/tests/java/util/stream/StreamSpliteratorTest.java
Total tests run: 484, Passes: 484, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(39/3986)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/util/stream/test/org/openjdk/tests/java/util/stream/StreamSpliteratorTest && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
CLASSPATH=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/stream/test:/home/runner/work/openjdk/openjdk/test/jdk/java/util/stream/test:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/stream/test/org/openjdk/tests/java/util/stream/StreamSpliteratorTest.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/stream/test/org/openjdk/tests/java/util/stream/StreamSpliteratorTest.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/stream/test \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/stream/test \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/stream/test \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/stream/test \\
        -Dtest.patch.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/lib/testlibrary/bootlib \\
        -Xbootclasspath/a:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar \\
        --patch-module java.base=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/lib/testlibrary/bootlib/java.base \\
        --add-reads java.base=ALL-UNNAMED \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        com.sun.javatest.regtest.agent.MainWrapper /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/util/stream/test/org/openjdk/tests/java/util/stream/StreamSpliteratorTest.d/testng.0.jta java/util/stream/test/org/openjdk/tests/java/util/stream/StreamSpliteratorTest.java false org.openjdk.tests.java.util.stream.StreamSpliteratorTest
result: Passed. Execution successful


test result: Passed. Execution successful
