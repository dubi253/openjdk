#Test Results (version 2)
#Mon Apr 29 00:56:58 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=624 0\:00\:00.624
end=Mon Apr 29 00\:56\:58 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1153-853.j2xen23xrnaetdgy434mngmvif.cx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1018-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build build compile testng
start=Mon Apr 29 00\:56\:57 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1018-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757346304,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1018-azure
totalTime=625
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/util/List

#section:script_messages
----------messages:(7/544)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib

#section:build
----------messages:(5/216)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Mon Apr 29 00:56:57 UTC 2024
finished: Mon Apr 29 00:56:57 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Mon Apr 29 00:56:57 UTC 2024
Test directory:
  compile: SubList
finished: Mon Apr 29 00:56:57 UTC 2024
elapsed time (seconds): 0.088
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:56:57 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:56:57 UTC 2024
elapsed time (seconds): 0.088
----------configuration:(15/1098)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3727)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/209)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Mon Apr 29 00:56:57 UTC 2024
Mode: agentvm
Agent id: 31
finished: Mon Apr 29 00:56:58 UTC 2024
elapsed time (seconds): 0.536
----------configuration:(15/1087)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3332)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91149)----------
Seed from RandomFactory = -6568984672187747062L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 986132180], 0, 1): success
test SubList.testAdd([42, -1030182081], 0, 1): success
test SubList.testAdd([42, 169543605], 0, 1): success
test SubList.testAdd([42, -786158218], 0, 1): success
test SubList.testAdd([42, -1945170004], 0, 1): success
test SubList.testAdd([42, -444197047], 0, 1): success
test SubList.testAdd([42, -571530127], 0, 1): success
test SubList.testAdd([42, 267079], 0, 1): success
test SubList.testAdd([42, 1156614857], 0, 1): success
test SubList.testAdd(java.util.ArrayList@1c0fa05, 2, 5): success
test SubList.testAdd(java.util.LinkedList@7815c3, 2, 5): success
test SubList.testAdd(java.util.Vector@1aff65b, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@16a997b, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@1297905, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@10001cc, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@6c3b4c, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@dd746d, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@1493070, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1727c1d, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@1ed6eeb, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1b5a362, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-1781606007, 42], 0, 1): success
test SubList.testAddAtPos([42, 472832673], 0, 1): success
test SubList.testAddAtPos([42, 884785513], 0, 1): success
test SubList.testAddAtPos([-200427911, 42], 0, 1): success
test SubList.testAddAtPos([1495826727, 42], 0, 1): success
test SubList.testAddAtPos([42, 1192032934], 0, 1): success
test SubList.testAddAtPos([1684886367, 42], 0, 1): success
test SubList.testAddAtPos([-1242740570, 42], 0, 1): success
test SubList.testAddAtPos([42, 898886647], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@b49c4f, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@f247bf, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@1e84c71, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@ec526c, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@12f68e3, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@b7900f, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@18513bd, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@1be9f59, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@15f038d, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@13c5016, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@1df0078, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@85096a, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@5b59aa, 2, 5): success
test SubList.testClear(java.util.LinkedList@702370, 2, 5): success
test SubList.testClear(java.util.Vector@ec1bce, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1d9188e, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@1d7c10d, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@23d903, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@1c84db3, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@1f441e6, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@171d65a, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@32ac79, 2, 5): success
test SubList.testEquals(java.util.LinkedList@118aeb5, 2, 5): success
test SubList.testEquals(java.util.Vector@1cfa0cd, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@f4843, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@c1fc17, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1fad5c2, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@11731f7, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1e33f39, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1556113, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1b45ca, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@d9f332, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1d0d955, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@94e2d5, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@16226f2, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1870d62, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@9cfbbb, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@8564d1, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@13a1e48, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@13a1e48, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@aae821, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1a6ae80, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@11e18f7, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1caf2c3, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@108091e, 2, 5): success
test SubList.testGet(java.util.LinkedList@747278, 2, 5): success
test SubList.testGet(java.util.Vector@f30f0, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@ec5d74, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@839168, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1519fa0, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@14d2928, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@fe711b, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@bce986, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@3722b9, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@134d750, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@e0a34c, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@1aa0818, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@108a949, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@f8b766, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@e6cfec, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1da6071, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@ee7b34, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@ee7b34, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@9cf30d, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@19a196c, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@ddb8d4, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@69fd5d, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@1060d5b, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@1794a95, 2, 5): success
test SubList.testIndexOf(java.util.Vector@184e174, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@d8f254, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@5b350, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1688af2, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1585840, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@58f29d, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@cdf18b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@dd4a81, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@1c8ac4e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@f578f6, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@1b6274a, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@11daa52, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@c9535e, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@cd7339, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@188ed89, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@11d2d2d, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@11d2d2d, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@18e1262, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@194807c, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@bc2161, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1452c34, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@14f79f5, 2, 5): success
test SubList.testIterator(java.util.LinkedList@122d20b, 2, 5): success
test SubList.testIterator(java.util.Vector@d47629, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@d153ba, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@32efb9, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@7c4bb5, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1be3fb8, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@145fd9f, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@14309d9, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@191732b, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@9a61db, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1c19b29, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@1130b07, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4ff60b, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@6a7a3a, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@7415cf, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@779d32, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@151e6b4, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@151e6b4, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@175c132, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@432221, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@c0819d, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1bb28ae, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@18dc76e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@165cecc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@17800ea, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@b2288c, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@1e0fd70, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1dc1088, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@13d581b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@1220e50, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@cd12fa, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@18b6e15, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@12c1fbf, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@bc2472, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@15ebe35, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@16e0cd, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@147f9d5, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@1ee607b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1dfcc6b, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@700c33, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@700c33, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@12fd38d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@1ceba2d, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@e540ff, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1037396, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@30517b, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@7c75b1, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@191f347, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@40a827, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@1500244, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@20bafe, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@d0545, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@10286f0, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1930b3c, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@6cb09a, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@199a920, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@17ef606, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@1d2067c, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@51a75b, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1b56361, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@18db4d9, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@7a1828, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@14c4472, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@12e592e, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@10b46b5, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@379b49, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@5b6754, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@126514c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@13f419e, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@121b59e, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1a9ec98, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1d55f1b, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1d55f1b, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@13af8b0, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@bfb5ba, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@dacbe1, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@12b4fee, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@77fc09, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@30a475, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@188cd3e, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@104d54c, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@16dc653, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@280d22, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@280d22, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@a3bd16, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@1946829, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@b8159a, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@14773c8, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@1f14e, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@120ebe2, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@14c32fc, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1046f0d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@a1e713, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@85307e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@c5a364, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1024ddf, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1a248fc, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@fa166, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@1badf1b, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@e6cf88, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@1335a32, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@51cb0d, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@13b5f68, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1b9e3d3, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@15f157f, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7f7a8c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1dc1762, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@100a9c4, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@e01016, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@d369a, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@14ef124, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@15b00bf, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@bb5959, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@dea6a2, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@136ab68, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@136ab68, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@d440d6, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@12ab88d, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1158254, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1a2e6aa, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@15e5af, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@108a7b6, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@1fe3b9b, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1575486, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@1bcd76, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@411a8, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@f855a2, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@1236a87, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1f1b580, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@f3d9aa, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@15ac389, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@793c2d, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1b478f8, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@177a85a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1157e8e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1c28f86, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@122944c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1bd7393, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1660342479], 0, 1): success
test SubList.testListIteratorSet([-226620238], 0, 1): success
test SubList.testListIteratorSet([-35448869], 0, 1): success
test SubList.testListIteratorSet([3092544], 0, 1): success
test SubList.testListIteratorSet([427251293], 0, 1): success
test SubList.testListIteratorSet([248257042], 0, 1): success
test SubList.testListIteratorSet([1691896895], 0, 1): success
test SubList.testListIteratorSet([286018373], 0, 1): success
test SubList.testListIteratorSet([-557052348], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@bc3cc9, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@1678384, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@a56829, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@1bbf306, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@1244c48, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3a147b, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@15cd8be, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@9a1041, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@130c88e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@19cf068, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@1221b0b, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1796c2e, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-897547481], 0, 1): success
test SubList.testListIteratorSetPrevious([-267070296], 0, 1): success
test SubList.testListIteratorSetPrevious([-183187709], 0, 1): success
test SubList.testListIteratorSetPrevious([-1912741857], 0, 1): success
test SubList.testListIteratorSetPrevious([1266575076], 0, 1): success
test SubList.testListIteratorSetPrevious([556489001], 0, 1): success
test SubList.testListIteratorSetPrevious([-53798619], 0, 1): success
test SubList.testListIteratorSetPrevious([64634507], 0, 1): success
test SubList.testListIteratorSetPrevious([1362255862], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@1bd7146, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@1377810, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@775dea, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@9b1f40, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@169689b, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1a7fd8f, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@17fbd7c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@8061c4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@37bd9b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@fcc566, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@13eee3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@19846f0, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@38d43, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@acde19, 2, 5): success
test SubList.testModAdd(java.util.Vector@180d18b, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@15e2bad, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@c33c18, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@2c11e6, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@173d0dc, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@11fa13a, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@d78807, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5d00b9, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@168a427, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@9972e2, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@1376785, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@aa17aa, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@19ff3b8, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@12f9068, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@12b3603, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@160df9a, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@e80e3c, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@faf7e0, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@15741e8, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@aa552f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@153beb0, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1c01d58, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@1cedabf, 2, 5): success
test SubList.testModClear(java.util.LinkedList@6b3548, 2, 5): success
test SubList.testModClear(java.util.Vector@96e170, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@51b048, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@b25634, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@507d40, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@ddd41b, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@6b4b19, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1ab0767, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@fbe708, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@18838e3, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@2e136f, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@169620a, 2, 5): success
test SubList.testModGet(java.util.LinkedList@14f3b1e, 2, 5): success
test SubList.testModGet(java.util.Vector@1c72c6, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@1217259, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@14768cf, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@15f7084, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@17fbc7, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@8cad67, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@9ff9bf, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@78be56, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@12eac55, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@148d4a3, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@1c96e58, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@13c47ac, 2, 5): success
test SubList.testModHashCode(java.util.Vector@c1a429, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@434b98, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@d52aeb, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@c8aa65, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1c774ce, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@10e3ae9, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1498f33, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@413bfb, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@138ec99, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@246efb, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@1331a31, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@13591cf, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@1232c03, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@1d31100, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@101f132, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@bbc3f4, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@1efb18e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@7fd11c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@143c45e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@18f32dd, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@c456f2, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4bf173, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@1be81c8, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@1ec019f, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@b2d14d, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@806e30, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@f06603, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@156313a, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@1db71ff, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@fa1803, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@3acd, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1c83028, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@1078832, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@270908, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@1c5fc99, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@cae582, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@aec504, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@fdf483, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@e1c2cf, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1ed16b7, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@513509, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@d86812, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@44e513, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@24bc2b, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@15d782a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1382a47, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@23857c, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@1bd8376, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@fa21e1, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@bbfff3, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@11e3699, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4591aa, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@18045a0, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@1d2e469, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1e69454, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@19647a7, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@1b32699, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1ed70fd, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@13d0cd1, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@4fcc93, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@1567dc5, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@3a8cdd, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@1f1c32e, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@572db, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@13ffb04, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@21053a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@16d8fcc, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1a71f0b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@c295ba, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@24b7cd, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@16e8e2f, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@1f4c52e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@1998c53, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@1d4afc0, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@13645ba, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1d8015c, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1089402, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@1ce75bc, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@98a270, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@56e22e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@48d100, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1b7aa60, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@f4e467, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@a15c70, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@1c09417, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@1f96c9, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@1a78290, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@170b2e9, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@7182a7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@13086d8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1cdc529, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1e379d8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@148f3fa, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6c385a, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@938b18, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@2a2194, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@4ae537, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@1b551fe, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@1a8d188, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1cf7f66, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1567a0c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@44a225, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@c5d9d1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1e925be, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@1430ce5, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@f90304, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@1b21b77, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@af2132, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@1323c61, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@1086f9, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@1d352cc, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6adab5, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@12fef6e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7ccb86, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@cb5271, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@a3373, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@7b453, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@e26654, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@141d89c, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@19e6037, 2, 5): success
test SubList.testModRemove(java.util.Vector@142a7bd, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@1e69c69, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@13578b7, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@132336e, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@9e94c3, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@1cccebc, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@8a5767, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@146fbfe, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@a90f3a, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@18eac89, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@1aea48b, 2, 5): success
test SubList.testModSet(java.util.LinkedList@b2985c, 2, 5): success
test SubList.testModSet(java.util.Vector@70a588, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@a39d59, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@1a7c6dc, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1481a85, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1fe0b75, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@16e7614, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@113e601, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1d5716b, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@fe3257, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@c936e4, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@4f32dd, 2, 5): success
test SubList.testRemove(java.util.LinkedList@c3c382, 2, 5): success
test SubList.testRemove(java.util.Vector@1050ca1, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@114b953, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@27031c, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@183220b, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@14c219c, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@d65b3, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@9c7d80, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([972940568], 0, 1): success
test SubList.testSet([-1400267504], 0, 1): success
test SubList.testSet([-1904774656], 0, 1): success
test SubList.testSet([-998284235], 0, 1): success
test SubList.testSet([-213424681], 0, 1): success
test SubList.testSet([1871538984], 0, 1): success
test SubList.testSet([-1010611975], 0, 1): success
test SubList.testSet([1906681323], 0, 1): success
test SubList.testSet([51760781], 0, 1): success
test SubList.testSet(java.util.ArrayList@ec55d7, 2, 5): success
test SubList.testSet(java.util.LinkedList@11d94f3, 2, 5): success
test SubList.testSet(java.util.Vector@966dd0, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@ea875b, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@14a51b1, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1f9d904, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@84137f, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@3460e, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@13ad2a0, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@b521c7, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@1ae5c57, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1fe0f8a, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@aac6ba, 2, 5): success
test SubList.testSubList(java.util.LinkedList@13d8c04, 2, 5): success
test SubList.testSubList(java.util.Vector@30748b, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@1e04407, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@13e500e, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@14d1816, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1d1637e, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@13305d0, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6ec56e, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@a756cb, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@38565e, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1c000d6, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@15e0d10, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1775d16, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@17e639c, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@1494ba6, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@d5fe6d, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@117dc50, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@117dc50, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@17d5718, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@13aea3a, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1ef7756, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5f2e3a, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@11de911, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@14af71b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1be8ab7, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@e64ccb, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@8061ff, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@11dccec, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@11dccec, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@a62a86, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@f2ab44, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@16e35c3, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@587bbf, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@1c7cb58, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@12cc5c2, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1b17f2a, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@dd4cc4, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@c8a584, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@d1597b, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@d1597b, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1461087, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@bd89ad, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@16e6e4a, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@b1b05b, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@14626af, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@16271a1, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@144539c, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@10279a6, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1a231b2, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@15748fc, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@15748fc, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@b88849, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@183fd22, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@1b3bc73, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@15a501e, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@8fed16, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@3f0223, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1352d12, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@72070a, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@d1d12, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@e1e396, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@e1e396, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@fb4364, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@8bb508, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@17edee1, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@c8577c, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@e047a5, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1e6d8fb, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@a69478, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@18a76bb, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1de7197, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@11e19a8, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@11e19a8, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1675cbd, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1418ca5, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@27321e, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@168a02a, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@cf614b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1aa9b6, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@14fc4c3, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@1c90d7f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1e4fb3d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1699a7f, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1699a7f, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@fdf4bf, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1d45217, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1f17b14, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@b5cbdc, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@1305431, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1b41e81, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@66b01c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@1dab9fa, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@ebed70, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@c2851a, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@c2851a, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@f1339b, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@4f105f, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@188e0a7, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@152ed19, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@185e0d8, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1e4dba6, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@75319a, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@e32eaa, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@113b18c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@140cd50, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2ba298, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1e43d8c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@927454, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@109bf33, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@1f062e6, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1b2a50a, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@d02737, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@18c9ba5, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1cccead, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@f522e9, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@f522e9, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@b72bdb, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@f737a2, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@8d4bb1, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@1564aad, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
