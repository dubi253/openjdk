#Test Results (version 2)
#Mon Apr 29 00:42:05 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8154556 othervm testng
maxTimeout=360
run=USER_SPECIFIED testng/othervm/timeout\=360 -Diters\=2000 -XX\:CompileThresholdScaling\=0.1 -XX\:TieredStopAtLevel\=1 VarHandleTestByteArrayAsInt\nUSER_SPECIFIED testng/othervm/timeout\=360 -Diters\=2000 -XX\:CompileThresholdScaling\=0.1                         VarHandleTestByteArrayAsInt\nUSER_SPECIFIED testng/othervm/timeout\=360 -Diters\=2000 -XX\:CompileThresholdScaling\=0.1 -XX\:-TieredCompilation  VarHandleTestByteArrayAsInt\n
source=VarHandleTestByteArrayAsInt.java
title=\ 

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
elapsed=11191 0\:00\:11.191
end=Mon Apr 29 00\:42\:05 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1153-853.j2xen23xrnaetdgy434mngmvif.cx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1018-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng build testng build testng
start=Mon Apr 29 00\:41\:54 UTC 2024
test=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1018-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757346304,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1018-azure
totalTime=11216
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/VarHandles

#section:script_messages
----------messages:(4/315)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/244)----------
command: build VarHandleTestByteArrayAsInt
reason: Named class compiled on demand
started: Mon Apr 29 00:41:54 UTC 2024
Test directory:
  compile: VarHandleTestByteArrayAsInt
finished: Mon Apr 29 00:41:54 UTC 2024
elapsed time (seconds): 0.251
result: Passed. Build successful

#section:compile
----------messages:(7/304)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:41:54 UTC 2024
Mode: agentvm
Agent id: 2
finished: Mon Apr 29 00:41:54 UTC 2024
elapsed time (seconds): 0.251
----------configuration:(13/973)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3637)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
result: Passed. Compilation successful

#section:testng
----------messages:(6/415)----------
command: testng -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:TieredStopAtLevel=1 VarHandleTestByteArrayAsInt
reason: User specified action: run testng/othervm/timeout=360 -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:TieredStopAtLevel=1 VarHandleTestByteArrayAsInt 
started: Mon Apr 29 00:41:54 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 00:41:57 UTC 2024
elapsed time (seconds): 2.783
----------configuration:(0/0)----------
----------System.out:(132/32230)----------
config VarHandleBaseByteArrayTest.setup(): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@16ccc89): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13553ee): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@47797): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@57ba4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@19ae43): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@ab46fe): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e18c4d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1070e23): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@19c44d0): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@12082d0): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1d800ad): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1b969a2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@fa5784): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@aa73b5): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1c76c98): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1273b15): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5a7f63): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@b1d76e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1df3e5a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@c3125f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1890dea): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1d9fbb3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18a316f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@aa8ffd): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@54aba9): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@135c057): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@12fb58d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e65323): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@90862e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18f85be): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@10c891e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5aea95): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f05876): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1ff967f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@16069e6): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@100e1b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@8ed612): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@449bdf): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1e9bafe): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@480c92): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1ea52ee): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@a6cabd): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1999625): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7ee686): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1c352c2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1549fe0): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7c66ac): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@198ac2e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@62708e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@750196): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1446eb6): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f3a114): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e22bc8): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@40253e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1936d54): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1706075): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3cd4e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@24fa50): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@130d126): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e97965): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1f106e2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13dcb82): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1bca7f1): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1705157): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@413466): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e36034): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1398998): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@43793e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4e2392): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1bcb254): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f2554f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@d6784d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5259a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1666b9f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@363059): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13ac2ce): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@674a95): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18f666a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@b5d173): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18c593a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1104c4d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1a1c36f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@d48ce7): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1e66044): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@40bc99): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1c68705): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1ad185e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@35cb48): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18c8d6b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@242d9c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1665fe9): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1031ec): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@9f5cf4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1b2a845): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@fd23f4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@105e669): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1adcb81): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3bab9b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@799417): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4f8328): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5ca391): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1751678): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e69a70): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4c9272): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@771f50): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18dbfbf): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@aae418): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@63fc55): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@41e73): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1e85fb8): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13f3d53): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f86018): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13ab068): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73720e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@19f7a95): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@ff7bff): success
test VarHandleTestByteArrayAsInt.testEquals(): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@a8ec71): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@f67e25): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@cf4b9): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@1ec747a): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle@1677f77, [class [B, int]): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle@514523, java.util.Arrays$ArrayList@90735a): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle@1d2d3d5, [class [B, int]): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle@6b5d5f, java.util.Arrays$ArrayList@90735a): success

===============================================
java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
Total tests run: 125, Passes: 125, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(39/3890)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
CLASSPATH=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Diters=2000 \\
        -XX:CompileThresholdScaling=0.1 \\
        -XX:TieredStopAtLevel=1 \\
        com.sun.javatest.regtest.agent.MainWrapper /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d/testng.0.jta java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java false VarHandleTestByteArrayAsInt
result: Passed. Execution successful

#section:build
----------messages:(5/187)----------
command: build VarHandleTestByteArrayAsInt
reason: Named class compiled on demand
started: Mon Apr 29 00:41:57 UTC 2024
finished: Mon Apr 29 00:41:57 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:testng
----------messages:(6/367)----------
command: testng -Diters=2000 -XX:CompileThresholdScaling=0.1 VarHandleTestByteArrayAsInt
reason: User specified action: run testng/othervm/timeout=360 -Diters=2000 -XX:CompileThresholdScaling=0.1 VarHandleTestByteArrayAsInt 
started: Mon Apr 29 00:41:57 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 00:42:01 UTC 2024
elapsed time (seconds): 3.704
----------configuration:(0/0)----------
----------System.out:(132/32230)----------
config VarHandleBaseByteArrayTest.setup(): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@16ccc89): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13553ee): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@47797): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@57ba4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@19ae43): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@ab46fe): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e18c4d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1070e23): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@19c44d0): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@12082d0): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1d800ad): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1b969a2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@fa5784): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@aa73b5): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1c76c98): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1273b15): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5a7f63): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@b1d76e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1df3e5a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@c3125f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1890dea): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1d9fbb3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18a316f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@aa8ffd): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@54aba9): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@135c057): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@12fb58d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e65323): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@90862e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18f85be): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@10c891e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5aea95): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f05876): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1ff967f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@16069e6): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@100e1b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@8ed612): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@449bdf): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1e9bafe): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@480c92): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1ea52ee): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@a6cabd): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1999625): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7ee686): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1c352c2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1549fe0): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7c66ac): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@198ac2e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@62708e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@750196): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1446eb6): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f3a114): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e22bc8): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@40253e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1936d54): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1706075): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3cd4e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@24fa50): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@130d126): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e97965): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1f106e2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13dcb82): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1bca7f1): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1705157): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@413466): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e36034): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1398998): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@43793e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4e2392): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1bcb254): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f2554f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@d6784d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5259a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1666b9f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@363059): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13ac2ce): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@674a95): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18f666a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@b5d173): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18c593a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1104c4d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1a1c36f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@d48ce7): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1e66044): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@40bc99): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1c68705): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1ad185e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@35cb48): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18c8d6b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@242d9c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1665fe9): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1031ec): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@9f5cf4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1b2a845): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@fd23f4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@105e669): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1adcb81): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3bab9b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@799417): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4f8328): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5ca391): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1751678): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e69a70): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4c9272): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@771f50): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18dbfbf): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@aae418): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@63fc55): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@41e73): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1e85fb8): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13f3d53): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f86018): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13ab068): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73720e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@19f7a95): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@ff7bff): success
test VarHandleTestByteArrayAsInt.testEquals(): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@a8ec71): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@f67e25): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@cf4b9): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@1ec747a): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle@1677f77, [class [B, int]): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle@514523, java.util.Arrays$ArrayList@90735a): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle@1d2d3d5, [class [B, int]): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle@6b5d5f, java.util.Arrays$ArrayList@90735a): success

===============================================
java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
Total tests run: 125, Passes: 125, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(38/3855)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
CLASSPATH=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Diters=2000 \\
        -XX:CompileThresholdScaling=0.1 \\
        com.sun.javatest.regtest.agent.MainWrapper /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d/testng.1.jta java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java false VarHandleTestByteArrayAsInt
result: Passed. Execution successful

#section:build
----------messages:(5/187)----------
command: build VarHandleTestByteArrayAsInt
reason: Named class compiled on demand
started: Mon Apr 29 00:42:01 UTC 2024
finished: Mon Apr 29 00:42:01 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:testng
----------messages:(6/413)----------
command: testng -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:-TieredCompilation VarHandleTestByteArrayAsInt
reason: User specified action: run testng/othervm/timeout=360 -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:-TieredCompilation VarHandleTestByteArrayAsInt 
started: Mon Apr 29 00:42:01 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 00:42:05 UTC 2024
elapsed time (seconds): 4.452
----------configuration:(0/0)----------
----------System.out:(132/32230)----------
config VarHandleBaseByteArrayTest.setup(): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@16ccc89): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13553ee): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@47797): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@57ba4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@19ae43): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@ab46fe): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e18c4d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1070e23): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@19c44d0): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@12082d0): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1d800ad): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1b969a2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@fa5784): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@aa73b5): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1c76c98): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1273b15): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5a7f63): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@b1d76e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1df3e5a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@c3125f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1890dea): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1d9fbb3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18a316f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@aa8ffd): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@54aba9): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@135c057): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@12fb58d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e65323): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@90862e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18f85be): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@10c891e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5aea95): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f05876): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1ff967f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@16069e6): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@100e1b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@8ed612): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@449bdf): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1e9bafe): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@480c92): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1ea52ee): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@a6cabd): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1999625): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7ee686): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1c352c2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1549fe0): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7c66ac): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@198ac2e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@62708e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@750196): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1446eb6): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f3a114): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e22bc8): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@40253e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1936d54): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1706075): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3cd4e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@24fa50): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@130d126): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e97965): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1f106e2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13dcb82): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1bca7f1): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1705157): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@413466): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e36034): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1398998): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@43793e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4e2392): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1bcb254): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f2554f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@d6784d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5259a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1666b9f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@363059): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13ac2ce): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@674a95): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18f666a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@b5d173): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18c593a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1104c4d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1a1c36f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@d48ce7): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1e66044): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@40bc99): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1c68705): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1ad185e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@35cb48): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18c8d6b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@242d9c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1665fe9): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1031ec): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@9f5cf4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1b2a845): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@fd23f4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@105e669): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1adcb81): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3bab9b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@799417): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4f8328): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5ca391): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1751678): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e69a70): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4c9272): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@771f50): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@18dbfbf): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@aae418): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@63fc55): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@41e73): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1e85fb8): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13f3d53): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f86018): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@13ab068): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73720e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@19f7a95): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@ff7bff): success
test VarHandleTestByteArrayAsInt.testEquals(): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@a8ec71): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@f67e25): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@cf4b9): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@1ec747a): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle@1677f77, [class [B, int]): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle@514523, java.util.Arrays$ArrayList@90735a): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle@1d2d3d5, [class [B, int]): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle@6b5d5f, java.util.Arrays$ArrayList@90735a): success

===============================================
java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
Total tests run: 125, Passes: 125, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(39/3889)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
CLASSPATH=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Diters=2000 \\
        -XX:CompileThresholdScaling=0.1 \\
        -XX:-TieredCompilation \\
        com.sun.javatest.regtest.agent.MainWrapper /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d/testng.2.jta java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java false VarHandleTestByteArrayAsInt
result: Passed. Execution successful


test result: Passed. Execution successful
