#Test Results (version 2)
#Mon Apr 29 00:37:35 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=testng
modules=java.base/jdk.internal.foreign
run=USER_SPECIFIED testng TestStringEncoding\n
source=TestStringEncoding.java
title=\ 

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java
elapsed=1358 0\:00\:01.358
end=Mon Apr 29 00\:37\:35 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1153-853.j2xen23xrnaetdgy434mngmvif.cx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1018-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
modules=java.base/jdk.internal.foreign
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Mon Apr 29 00\:37\:34 UTC 2024
test=java/foreign/TestStringEncoding.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1018-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757346304,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1018-azure
totalTime=1359
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/foreign

#section:script_messages
----------messages:(4/315)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/226)----------
command: build TestStringEncoding
reason: Named class compiled on demand
started: Mon Apr 29 00:37:34 UTC 2024
Test directory:
  compile: TestStringEncoding
finished: Mon Apr 29 00:37:34 UTC 2024
elapsed time (seconds): 0.098
result: Passed. Build successful

#section:compile
----------messages:(8/395)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:37:34 UTC 2024
Additional options from @modules: --add-modules java.base --add-exports java.base/jdk.internal.foreign=ALL-UNNAMED
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:37:34 UTC 2024
elapsed time (seconds): 0.098
----------configuration:(15/1030)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  add modules: java.base                      
  add exports: java.base/jdk.internal.foreign ALL-UNNAMED
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/foreign 
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/foreign 
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d 
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 

----------rerun:(38/3532)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/foreign/TestStringEncoding.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d:/home/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -J-Dtest.modules=java.base/jdk.internal.foreign \\
        --add-modules java.base \\
        --add-exports java.base/jdk.internal.foreign=ALL-UNNAMED \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/foreign:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java
result: Passed. Compilation successful

#section:testng
----------messages:(8/314)----------
command: testng TestStringEncoding
reason: User specified action: run testng TestStringEncoding 
started: Mon Apr 29 00:37:34 UTC 2024
Mode: agentvm
Agent id: 6
Additional exports to unnamed modules from @modules: java.base/jdk.internal.foreign
finished: Mon Apr 29 00:37:35 UTC 2024
elapsed time (seconds): 1.256
----------configuration:(14/974)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

Test Layer
  add exports: java.base/jdk.internal.foreign ALL-UNNAMED
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d 
               /home/runner/work/openjdk/openjdk/test/jdk/java/foreign 

----------rerun:(29/3036)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/foreign/TestStringEncoding.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d:/home/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -Dtest.modules=java.base/jdk.internal.foreign \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d:/home/runner/work/openjdk/openjdk/test/jdk/java/foreign:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/foreign/TestStringEncoding.java false TestStringEncoding
----------System.out:(319/32394)*----------
test TestStringEncoding.chunked_strlen_byte(): success
test TestStringEncoding.chunked_strlen_short(): success
test TestStringEncoding.expandedSegment("testing"): success
test TestStringEncoding.expandedSegment(""): success
test TestStringEncoding.expandedSegment("X"): success
test TestStringEncoding.expandedSegment("12345"): success
test TestStringEncoding.expandedSegment("yen \ufffd\ufffd"): success
test TestStringEncoding.expandedSegment("snowman \ufffd\ufffd\ufffd"): success
test TestStringEncoding.expandedSegment("rainbow \ufffd\ufffd\ufffd\ufffd"): success
test TestStringEncoding.expandedSegment("0"): success
test TestStringEncoding.expandedSegment("01"): success
test TestStringEncoding.expandedSegment("012"): success
test TestStringEncoding.expandedSegment("0123"): success
test TestStringEncoding.expandedSegment("01234"): success
test TestStringEncoding.expandedSegment("012345"): success
test TestStringEncoding.expandedSegment("0123456"): success
test TestStringEncoding.expandedSegment("01234567"): success
test TestStringEncoding.expandedSegment("012345678"): success
test TestStringEncoding.expandedSegment("0123456789"): success
test TestStringEncoding.nativeSegFromNativeCall("testing"): success
test TestStringEncoding.nativeSegFromNativeCall(""): success
test TestStringEncoding.nativeSegFromNativeCall("X"): success
test TestStringEncoding.nativeSegFromNativeCall("12345"): success
test TestStringEncoding.nativeSegFromNativeCall("yen \ufffd\ufffd"): success
test TestStringEncoding.nativeSegFromNativeCall("snowman \ufffd\ufffd\ufffd"): success
test TestStringEncoding.nativeSegFromNativeCall("rainbow \ufffd\ufffd\ufffd\ufffd"): success
test TestStringEncoding.nativeSegFromNativeCall("0"): success
test TestStringEncoding.nativeSegFromNativeCall("01"): success
test TestStringEncoding.nativeSegFromNativeCall("012"): success
test TestStringEncoding.nativeSegFromNativeCall("0123"): success
test TestStringEncoding.nativeSegFromNativeCall("01234"): success
test TestStringEncoding.nativeSegFromNativeCall("012345"): success
test TestStringEncoding.nativeSegFromNativeCall("0123456"): success
test TestStringEncoding.nativeSegFromNativeCall("01234567"): success
test TestStringEncoding.nativeSegFromNativeCall("012345678"): success
test TestStringEncoding.nativeSegFromNativeCall("0123456789"): success
test TestStringEncoding.segmentationFault(): success
test TestStringEncoding.strlen_int(): success
test TestStringEncoding.testOffset("testing"): success
test TestStringEncoding.testOffset(""): success
test TestStringEncoding.testOffset("X"): success
test TestStringEncoding.testOffset("12345"): success
test TestStringEncoding.testOffset("yen \ufffd\ufffd"): success
test TestStringEncoding.testOffset("snowman \ufffd\ufffd\ufffd"): success
test TestStringEncoding.testOffset("rainbow \ufffd\ufffd\ufffd\ufffd"): success
test TestStringEncoding.testOffset("0"): success
test TestStringEncoding.testOffset("01"): success
test TestStringEncoding.testOffset("012"): success
test TestStringEncoding.testOffset("0123"): success
test TestStringEncoding.testOffset("01234"): success
test TestStringEncoding.testOffset("012345"): success
test TestStringEncoding.testOffset("0123456"): success
test TestStringEncoding.testOffset("01234567"): success
test TestStringEncoding.testOffset("012345678"): success
test TestStringEncoding.testOffset("0123456789"): success
test TestStringEncoding.testPeculiarContentSingleByte(): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@1d0baf4): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@181d8e0): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@12b71b6): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1485ec9): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@61fe1b): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@666671): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1d996e4): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@15cb806): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@ba0349): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@f18bb5): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@49c817): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@25f08c): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@168c8c9): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@102c09e): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@de92d7): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@169214d): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@4532d0): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@e57ef6): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@33117f): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@1844a14): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@14becf5): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@66e755): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@5dcd18): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@37ab4f): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@e50e74): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@8d91ba): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@1a8e38b): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1c7279d): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@1ebbf1a): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@1cbb55f): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@1b8ea58): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1e834a8): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1b4b754): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@e8add0): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1b613e1): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@8e01f9): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@26561d): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@b50666): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@60b460): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1aee371): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@577939): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@bbafc0): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@4d5979): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@fd19a4): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@1b90a30): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@b7354a): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@14066fa): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@188a827): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@dce8f8): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@7b5f05): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@6c2360): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@1af4ad4): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1d08afd): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@98bd7d): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@809941): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@404dba): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@ae1d6d): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@14fe310): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@17cc2c3): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@3d4764): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@11685d6): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@437511): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@a5f8e8): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@13e7615): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@180a0ef): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@f54327): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@10bb5b2): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1cb374b): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@12972b1): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1b8f6de): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@11dad6): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@81f1d0): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@f17ee3): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@9466fd): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@12387d8): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@1348748): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@e84115): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@1533a68): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@a96297): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@15c90c3): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@b889e): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@628ad): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@598b71): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@10d7c0): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@42cfe5): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@1ba22bb): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@1e19919): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1a1290f): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1debd76): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@ae378e): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@e7cffd): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@164a906): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@3b354c): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@14043f9): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@73c048): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@26e592): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@1137f33): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@a7aa99): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@1dcccec): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@a114a7): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@16a2e14): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@2593f5): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1b76eea): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@2da574): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@6d3437): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@293dfe): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@12fd14e): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@10de3c0): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@b613ac): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1503889): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@11b7b67): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@68e8a4): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@ccd41b): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@1c0dee): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@d86426): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@cf9216): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1091355): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@7e5d1d): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@332834): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@1e64132): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@4ff81e): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@1e8a292): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@179507b): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@85354b): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@1bde6a6): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@31ec77): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@b4f1ee): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@1a1b47b): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@170670b): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1ba5854): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@712717): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@ab154a): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@16a11f4): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@1123117): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@9e25fb): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@9c976): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@fe50a3): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@d61171): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@1828811): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1438756): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@11bc9ac): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@142ae51): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@19911ef): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1376e2b): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@bc5d9): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@1d87de2): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1892b9f): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@189eb2c): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@19a580b): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@832c0e): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@9fefb7): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@8fe85f): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@66ea8): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@f56f4f): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@1f82da1): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@1f696aa): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@d36562): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@c46fdd): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@8f373e): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@19a0e81): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1f5df0c): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@8a8fdf): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@1e32030): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@14b82ab): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@bb05e5): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@d11c1): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@1f51625): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@c02bfa): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@1fbd261): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@10ad593): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@7fbc50): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@4df557): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@16110d8): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@fd48a): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@4ecc1): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@115ded9): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@22ba38): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@1fab866): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@7c88f9): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@10cdd9): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@172532f): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1577974): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@c139bb): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@11e9312): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@4032ae): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1e74ab2): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1c06ac7): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@623117): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1907bb1): success
test TestStringEncoding.testStrings("testing"): success
test TestStringEncoding.testStrings(""): success
test TestStringEncoding.testStrings("X"): success
test TestStringEncoding.testStrings("12345"): success
test TestStringEncoding.testStrings("yen \ufffd\ufffd"): success
test TestStringEncoding.testStrings("snowman \ufffd\ufffd\ufffd"): success
test TestStringEncoding.testStrings("rainbow \ufffd\ufffd\ufffd\ufffd"): success
test TestStringEncoding.testStrings("0"): success
test TestStringEncoding.testStrings("01"): success
test TestStringEncoding.testStrings("012"): success
test TestStringEncoding.testStrings("0123"): success
test TestStringEncoding.testStrings("01234"): success
test TestStringEncoding.testStrings("012345"): success
test TestStringEncoding.testStrings("0123456"): success
test TestStringEncoding.testStrings("01234567"): success
test TestStringEncoding.testStrings("012345678"): success
test TestStringEncoding.testStrings("0123456789"): success
test TestStringEncoding.testStringsHeap("testing"): success
test TestStringEncoding.testStringsHeap(""): success
test TestStringEncoding.testStringsHeap("X"): success
test TestStringEncoding.testStringsHeap("12345"): success
test TestStringEncoding.testStringsHeap("yen \ufffd\ufffd"): success
test TestStringEncoding.testStringsHeap("snowman \ufffd\ufffd\ufffd"): success
test TestStringEncoding.testStringsHeap("rainbow \ufffd\ufffd\ufffd\ufffd"): success
test TestStringEncoding.testStringsHeap("0"): success
test TestStringEncoding.testStringsHeap("01"): success
test TestStringEncoding.testStringsHeap("012"): success
test TestStringEncoding.testStringsHeap("0123"): success
test TestStringEncoding.testStringsHeap("01234"): success
test TestStringEncoding.testStringsHeap("012345"): success
test TestStringEncoding.testStringsHeap("0123456"): success
test TestStringEncoding.testStringsHeap("01234567"): success
test TestStringEncoding.testStringsHeap("012345678"): success
test TestStringEncoding.testStringsHeap("0123456789"): success
test TestStringEncoding.unalignedSegmentSingleByte("testing"): success
test TestStringEncoding.unalignedSegmentSingleByte(""): success
test TestStringEncoding.unalignedSegmentSingleByte("X"): success
test TestStringEncoding.unalignedSegmentSingleByte("12345"): success
test TestStringEncoding.unalignedSegmentSingleByte("yen \ufffd\ufffd"): success
test TestStringEncoding.unalignedSegmentSingleByte("snowman \ufffd\ufffd\ufffd"): success
test TestStringEncoding.unalignedSegmentSingleByte("rainbow \ufffd\ufffd\ufffd\ufffd"): success
test TestStringEncoding.unalignedSegmentSingleByte("0"): success
test TestStringEncoding.unalignedSegmentSingleByte("01"): success
test TestStringEncoding.unalignedSegmentSingleByte("012"): success
test TestStringEncoding.unalignedSegmentSingleByte("0123"): success
test TestStringEncoding.unalignedSegmentSingleByte("01234"): success
test TestStringEncoding.unalignedSegmentSingleByte("012345"): success
test TestStringEncoding.unalignedSegmentSingleByte("0123456"): success
test TestStringEncoding.unalignedSegmentSingleByte("01234567"): success
test TestStringEncoding.unalignedSegmentSingleByte("012345678"): success
test TestStringEncoding.unalignedSegmentSingleByte("0123456789"): success
test TestStringEncoding.unboundedSegment("testing"): success
test TestStringEncoding.unboundedSegment(""): success
test TestStringEncoding.unboundedSegment("X"): success
test TestStringEncoding.unboundedSegment("12345"): success
test TestStringEncoding.unboundedSegment("yen \ufffd\ufffd"): success
test TestStringEncoding.unboundedSegment("snowman \ufffd\ufffd\ufffd"): success
test TestStringEncoding.unboundedSegment("rainbow \ufffd\ufffd\ufffd\ufffd"): success
test TestStringEncoding.unboundedSegment("0"): success
test TestStringEncoding.unboundedSegment("01"): success
test TestStringEncoding.unboundedSegment("012"): success
test TestStringEncoding.unboundedSegment("0123"): success
test TestStringEncoding.unboundedSegment("01234"): success
test TestStringEncoding.unboundedSegment("012345"): success
test TestStringEncoding.unboundedSegment("0123456"): success
test TestStringEncoding.unboundedSegment("01234567"): success
test TestStringEncoding.unboundedSegment("012345678"): success
test TestStringEncoding.unboundedSegment("0123456789"): success

===============================================
java/foreign/TestStringEncoding.java
Total tests run: 313, Passes: 313, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
