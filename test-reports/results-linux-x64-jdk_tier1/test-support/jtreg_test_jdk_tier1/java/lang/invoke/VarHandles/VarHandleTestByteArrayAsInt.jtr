#Test Results (version 2)
#Mon Apr 29 00:41:47 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8154556 othervm testng
maxTimeout=360
run=USER_SPECIFIED testng/othervm/timeout\=360 -Diters\=2000 -XX\:CompileThresholdScaling\=0.1 -XX\:TieredStopAtLevel\=1 VarHandleTestByteArrayAsInt\nUSER_SPECIFIED testng/othervm/timeout\=360 -Diters\=2000 -XX\:CompileThresholdScaling\=0.1                         VarHandleTestByteArrayAsInt\nUSER_SPECIFIED testng/othervm/timeout\=360 -Diters\=2000 -XX\:CompileThresholdScaling\=0.1 -XX\:-TieredCompilation  VarHandleTestByteArrayAsInt\n
source=VarHandleTestByteArrayAsInt.java
title=\ 

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
elapsed=9175 0\:00\:09.175
end=Mon Apr 29 00\:41\:47 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1055-577.mrg2vkl14epehdn0xjtgmxanmg.phxx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1018-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng build testng build testng
start=Mon Apr 29 00\:41\:38 UTC 2024
test=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1018-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757346304,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1018-azure
totalTime=9176
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/VarHandles

#section:script_messages
----------messages:(4/322)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/244)----------
command: build VarHandleTestByteArrayAsInt
reason: Named class compiled on demand
started: Mon Apr 29 00:41:38 UTC 2024
Test directory:
  compile: VarHandleTestByteArrayAsInt
finished: Mon Apr 29 00:41:38 UTC 2024
elapsed time (seconds): 0.231
result: Passed. Build successful

#section:compile
----------messages:(7/303)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:41:38 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:41:38 UTC 2024
elapsed time (seconds): 0.23
----------configuration:(13/973)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3637)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
result: Passed. Compilation successful

#section:testng
----------messages:(6/415)----------
command: testng -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:TieredStopAtLevel=1 VarHandleTestByteArrayAsInt
reason: User specified action: run testng/othervm/timeout=360 -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:TieredStopAtLevel=1 VarHandleTestByteArrayAsInt 
started: Mon Apr 29 00:41:38 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 00:41:41 UTC 2024
elapsed time (seconds): 2.181
----------configuration:(0/0)----------
----------System.out:(132/32409)----------
config VarHandleBaseByteArrayTest.setup(): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3689237b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@371c2c89): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7e992164): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@15b3fe30): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e220f21): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5cc8f864): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@deddba7): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@46da6bfb): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6f14316a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1359e36d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@8f18d96): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4be8009a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@bcac8ff): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@425002f4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@57a39fa3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@65dd1815): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3db10a4f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@50d497f5): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3d330104): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3cede274): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@329332c2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@67ce85c9): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@32c3eaf1): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@c85fd97): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@56d7377b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5cd9d8c7): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3e4da692): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4cec4a94): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3f51e1da): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@42866d65): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@433cda7e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5f499180): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@14e90fb4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e1155): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73ac868b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5268ffc1): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4f4a47e5): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1e222706): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@732a6962): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7d2518f3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@202a429f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7026820): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2fab4ac2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@41b3e36e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@571518d5): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7ae0cf50): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4a46bb11): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2524e3d9): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@39bac8cb): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73e73086): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1db8027): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@435f802c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3734eb62): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3609e233): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@50962291): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@623a023e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e4d24a4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7c572567): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4623e9b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@897484f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@21a6cf87): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@56531429): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@53bd7cf3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@c51b57): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7e593433): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@55f3528d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@780aa33d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6d32d670): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a4d46b6): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@65e3ea5e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@61d1df8e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4ac4dbb3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5e3b5fdb): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@79bd7265): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2a4fb74): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@44d556b4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4a8ec406): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3bb462fc): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4f54eea6): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@55a7233e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7bbf996a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a83b14a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1d05c98f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6291e660): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@780f21e7): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2871185d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4c6585de): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5b5c794e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5256f7b8): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@68996e5c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@51cc01ab): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1d040507): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e49bd35): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6e71d421): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5bcc75d8): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6eb21f8c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@303e5f6d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@500760e4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3e0052db): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@416e4df2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3c7a8122): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@d0fa0eb): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@612bbcf3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@44e35036): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73530d80): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@44282a5e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7f6a2096): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4560a64d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f7e0e2c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@773d3231): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5e854bab): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@a10a9b3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7637e65b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@78ab1801): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6acae38c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@76173fe9): success
test VarHandleTestByteArrayAsInt.testEquals(): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@56fcd066): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@1489a219): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@59243e04): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@390f125c): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle@6c7877c9, [class [B, int]): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle@e254348, java.util.Arrays$ArrayList@2f8d658c): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle@3b79947c, [class [B, int]): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle@5b87182d, java.util.Arrays$ArrayList@2f8d658c): success

===============================================
java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
Total tests run: 125, Passes: 125, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(39/3890)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
CLASSPATH=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Diters=2000 \\
        -XX:CompileThresholdScaling=0.1 \\
        -XX:TieredStopAtLevel=1 \\
        com.sun.javatest.regtest.agent.MainWrapper /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d/testng.0.jta java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java false VarHandleTestByteArrayAsInt
result: Passed. Execution successful

#section:build
----------messages:(5/187)----------
command: build VarHandleTestByteArrayAsInt
reason: Named class compiled on demand
started: Mon Apr 29 00:41:41 UTC 2024
finished: Mon Apr 29 00:41:41 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:testng
----------messages:(6/366)----------
command: testng -Diters=2000 -XX:CompileThresholdScaling=0.1 VarHandleTestByteArrayAsInt
reason: User specified action: run testng/othervm/timeout=360 -Diters=2000 -XX:CompileThresholdScaling=0.1 VarHandleTestByteArrayAsInt 
started: Mon Apr 29 00:41:41 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 00:41:43 UTC 2024
elapsed time (seconds): 2.85
----------configuration:(0/0)----------
----------System.out:(132/32409)----------
config VarHandleBaseByteArrayTest.setup(): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3689237b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@371c2c89): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7e992164): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@15b3fe30): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e220f21): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5cc8f864): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@deddba7): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@46da6bfb): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6f14316a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1359e36d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@8f18d96): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4be8009a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@bcac8ff): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@425002f4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@57a39fa3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@65dd1815): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3db10a4f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@50d497f5): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3d330104): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3cede274): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@329332c2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@67ce85c9): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@32c3eaf1): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@c85fd97): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@56d7377b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5cd9d8c7): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3e4da692): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4cec4a94): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3f51e1da): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@42866d65): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@433cda7e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5f499180): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@14e90fb4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e1155): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73ac868b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5268ffc1): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4f4a47e5): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1e222706): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@732a6962): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7d2518f3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@202a429f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7026820): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2fab4ac2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@41b3e36e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@571518d5): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7ae0cf50): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4a46bb11): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2524e3d9): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@39bac8cb): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73e73086): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1db8027): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@435f802c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3734eb62): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3609e233): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@50962291): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@623a023e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e4d24a4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7c572567): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4623e9b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@897484f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@21a6cf87): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@56531429): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@53bd7cf3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@c51b57): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7e593433): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@55f3528d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@780aa33d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6d32d670): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a4d46b6): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@65e3ea5e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@61d1df8e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4ac4dbb3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5e3b5fdb): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@79bd7265): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2a4fb74): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@44d556b4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4a8ec406): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3bb462fc): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4f54eea6): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@55a7233e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7bbf996a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a83b14a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1d05c98f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6291e660): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@780f21e7): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2871185d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4c6585de): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5b5c794e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5256f7b8): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@68996e5c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@51cc01ab): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1d040507): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e49bd35): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6e71d421): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5bcc75d8): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6eb21f8c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@303e5f6d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@500760e4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3e0052db): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@416e4df2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3c7a8122): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@d0fa0eb): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@612bbcf3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@44e35036): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73530d80): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@44282a5e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7f6a2096): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4560a64d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f7e0e2c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@773d3231): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5e854bab): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@a10a9b3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7637e65b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@78ab1801): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6acae38c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@76173fe9): success
test VarHandleTestByteArrayAsInt.testEquals(): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@56fcd066): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@1489a219): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@59243e04): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@390f125c): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle@6c7877c9, [class [B, int]): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle@e254348, java.util.Arrays$ArrayList@2f8d658c): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle@3b79947c, [class [B, int]): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle@5b87182d, java.util.Arrays$ArrayList@2f8d658c): success

===============================================
java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
Total tests run: 125, Passes: 125, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(38/3855)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
CLASSPATH=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Diters=2000 \\
        -XX:CompileThresholdScaling=0.1 \\
        com.sun.javatest.regtest.agent.MainWrapper /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d/testng.1.jta java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java false VarHandleTestByteArrayAsInt
result: Passed. Execution successful

#section:build
----------messages:(5/187)----------
command: build VarHandleTestByteArrayAsInt
reason: Named class compiled on demand
started: Mon Apr 29 00:41:43 UTC 2024
finished: Mon Apr 29 00:41:43 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:testng
----------messages:(6/413)----------
command: testng -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:-TieredCompilation VarHandleTestByteArrayAsInt
reason: User specified action: run testng/othervm/timeout=360 -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:-TieredCompilation VarHandleTestByteArrayAsInt 
started: Mon Apr 29 00:41:43 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 00:41:47 UTC 2024
elapsed time (seconds): 3.909
----------configuration:(0/0)----------
----------System.out:(132/32409)----------
config VarHandleBaseByteArrayTest.setup(): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3689237b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@371c2c89): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7e992164): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@15b3fe30): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e220f21): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null array", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5cc8f864): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@deddba7): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> byte[] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@46da6bfb): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6f14316a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1359e36d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@8f18d96): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4be8009a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@bcac8ff): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@425002f4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@57a39fa3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@65dd1815): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3db10a4f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@50d497f5): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3d330104): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3cede274): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@329332c2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@67ce85c9): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@32c3eaf1): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@c85fd97): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@56d7377b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5cd9d8c7): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3e4da692): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4cec4a94): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3f51e1da): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@42866d65): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@433cda7e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5f499180): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@14e90fb4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e1155): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73ac868b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5268ffc1): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4f4a47e5): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1e222706): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@732a6962): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7d2518f3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@202a429f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7026820): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2fab4ac2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@41b3e36e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@571518d5): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7ae0cf50): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4a46bb11): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2524e3d9): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@39bac8cb): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73e73086): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1db8027): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@435f802c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3734eb62): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3609e233): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@50962291): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.HeapByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@623a023e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e4d24a4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7c572567): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4623e9b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@897484f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@21a6cf87): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@56531429): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@53bd7cf3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@c51b57): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7e593433): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@55f3528d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@780aa33d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6d32d670): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a4d46b6): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@65e3ea5e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@61d1df8e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4ac4dbb3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5e3b5fdb): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@79bd7265): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2a4fb74): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=32 cap=32] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@44d556b4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4a8ec406): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3bb462fc): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4f54eea6): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@55a7233e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7bbf996a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3a83b14a): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1d05c98f): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6291e660): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@780f21e7): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@2871185d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4c6585de): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5b5c794e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5256f7b8): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@68996e5c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@51cc01ab): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@1d040507): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@e49bd35): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6e71d421): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5bcc75d8): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [ALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6eb21f8c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@303e5f6d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@500760e4): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3e0052db): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@416e4df2): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@3c7a8122): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] read write", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@d0fa0eb): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@612bbcf3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@44e35036): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@73530d80): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBuffer[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_WRITE] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@44282a5e): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7f6a2096): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@4560a64d): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@f7e0e2c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@773d3231): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, BIG_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@5e854bab): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] read only", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@a10a9b3): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] null buffer", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@7637e65b): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] unsupported", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@78ab1801): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] index out of bounds", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@6acae38c): success
test VarHandleTestByteArrayAsInt.testAccess(" VarHandle [ALIGNED, LITTLE_ENDIAN, READ_WRITE] -> java.nio.DirectByteBufferR[pos=0 lim=16 cap=16] [UNALIGNED, LITTLE_ENDIAN, READ_ONLY] misaligned access", VarHandleBaseByteArrayTest$VarHandleSourceAccessTestCase@76173fe9): success
test VarHandleTestByteArrayAsInt.testEquals(): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@56fcd066): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@1489a219): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@59243e04): success
test VarHandleTestByteArrayAsInt.testIsAccessModeSupported(VarHandleBaseByteArrayTest$VarHandleSource@390f125c): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle@6c7877c9, [class [B, int]): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle@e254348, java.util.Arrays$ArrayList@2f8d658c): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle@3b79947c, [class [B, int]): success
test VarHandleTestByteArrayAsInt.testTypes(java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle@5b87182d, java.util.Arrays$ArrayList@2f8d658c): success

===============================================
java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java
Total tests run: 125, Passes: 125, Failures: 0, Skips: 0
===============================================

----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(39/3889)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
CLASSPATH=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d:/home/runner/work/openjdk/openjdk/test/jdk/java/lang/invoke/VarHandles \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=12.5 \\
        -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        -Djava.library.path=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Diters=2000 \\
        -XX:CompileThresholdScaling=0.1 \\
        -XX:-TieredCompilation \\
        com.sun.javatest.regtest.agent.MainWrapper /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.d/testng.2.jta java/lang/invoke/VarHandles/VarHandleTestByteArrayAsInt.java false VarHandleTestByteArrayAsInt
result: Passed. Execution successful


test result: Passed. Execution successful
