#Test Results (version 2)
#Mon Apr 29 00:56:10 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=616 0\:00\:00.616
end=Mon Apr 29 00\:56\:10 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1055-577.mrg2vkl14epehdn0xjtgmxanmg.phxx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1018-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build build compile testng
start=Mon Apr 29 00\:56\:09 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1018-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757346304,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1018-azure
totalTime=616
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/util/List

#section:script_messages
----------messages:(7/551)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib

#section:build
----------messages:(5/216)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Mon Apr 29 00:56:09 UTC 2024
finished: Mon Apr 29 00:56:09 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Mon Apr 29 00:56:09 UTC 2024
Test directory:
  compile: SubList
finished: Mon Apr 29 00:56:09 UTC 2024
elapsed time (seconds): 0.138
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:56:09 UTC 2024
Mode: agentvm
Agent id: 2
finished: Mon Apr 29 00:56:09 UTC 2024
elapsed time (seconds): 0.138
----------configuration:(15/1098)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3727)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/209)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Mon Apr 29 00:56:09 UTC 2024
Mode: agentvm
Agent id: 28
finished: Mon Apr 29 00:56:10 UTC 2024
elapsed time (seconds): 0.476
----------configuration:(15/1087)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3332)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91987)----------
Seed from RandomFactory = -3361330729127010832L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1839458685], 0, 1): success
test SubList.testAdd([42, -2062220], 0, 1): success
test SubList.testAdd([42, -1743491301], 0, 1): success
test SubList.testAdd([42, -1585585230], 0, 1): success
test SubList.testAdd([42, -968679507], 0, 1): success
test SubList.testAdd([42, -97244430], 0, 1): success
test SubList.testAdd([42, -337375844], 0, 1): success
test SubList.testAdd([42, -2039081003], 0, 1): success
test SubList.testAdd([42, -2106135555], 0, 1): success
test SubList.testAdd(java.util.ArrayList@2ad863a2, 2, 5): success
test SubList.testAdd(java.util.LinkedList@775366f9, 2, 5): success
test SubList.testAdd(java.util.Vector@4222be69, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@7e32afc6, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@728fa6b2, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@58edbe52, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@3e14ff16, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@6bcfa8fd, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@488c4581, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@2c970e4b, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@181d3ae4, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@781cfa39, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -1827295973], 0, 1): success
test SubList.testAddAtPos([-1011383252, 42], 0, 1): success
test SubList.testAddAtPos([-1943119520, 42], 0, 1): success
test SubList.testAddAtPos([-1984208709, 42], 0, 1): success
test SubList.testAddAtPos([42, -1194675562], 0, 1): success
test SubList.testAddAtPos([125502157, 42], 0, 1): success
test SubList.testAddAtPos([180053576, 42], 0, 1): success
test SubList.testAddAtPos([42, -2040226142], 0, 1): success
test SubList.testAddAtPos([42, -1550197498], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@614300ac, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@79d7322a, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@6faaead7, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@50c53fda, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@50da638b, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@211f70ed, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@3cda2828, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@538e2a9b, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@7fb54703, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@31b76721, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@6b13a967, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@8d8a6f4, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@66efb690, 2, 5): success
test SubList.testClear(java.util.LinkedList@7c0897ba, 2, 5): success
test SubList.testClear(java.util.Vector@329a62ed, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1ecc5913, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@67ba8716, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@56343d1a, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@55e2f307, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@6f249eb9, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@51e41e2c, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@4ca1fafa, 2, 5): success
test SubList.testEquals(java.util.LinkedList@11bb7b28, 2, 5): success
test SubList.testEquals(java.util.Vector@5481905a, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@6c1bef84, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@53653e2, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@df877a1, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@fe41f46, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@195a6301, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@596910d2, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4ef411d4, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@681e64bb, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6352bef4, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@6977c02c, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@5eba55f9, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@47b61aa2, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@5318154, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@27ae3477, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@2a76d7cf, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@2a76d7cf, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@7d0499de, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@4300cf76, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5677a18f, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@75f7704e, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@1bc4ceb8, 2, 5): success
test SubList.testGet(java.util.LinkedList@302bc2d5, 2, 5): success
test SubList.testGet(java.util.Vector@219a2841, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@4ef014c9, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@1645f072, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@627f3206, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@55c5aae6, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@5b2b0f8b, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1fcc389c, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@232c6ee8, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@bca6ee6, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@289b1cc0, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@1b8cf5d4, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@78a839f3, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@4f896932, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@4a3812af, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@783729b3, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@26a4f961, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@26a4f961, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@53b5fb9b, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@3f4c6302, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@229ff7fb, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@77bee655, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@690f0aba, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@5b27ed2c, 2, 5): success
test SubList.testIndexOf(java.util.Vector@22d7aa23, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@53686aeb, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@1ede95b3, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2cec1c34, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@7a06dbff, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@1213a036, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@334ed526, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@721c7517, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@11c390b2, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@76d552cf, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@3881a243, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@588a2d97, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@29de2730, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@2a0ac136, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7f6f3092, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@28ecb6de, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@28ecb6de, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@3e1b07fd, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6743638c, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@2e22ab5d, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@41fba027, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@11c26c7a, 2, 5): success
test SubList.testIterator(java.util.LinkedList@329aa428, 2, 5): success
test SubList.testIterator(java.util.Vector@305452a7, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@2adf25a2, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@303a1077, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@35d04374, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@3a704eb4, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@67d6abb5, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4ff36ee6, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@194db4da, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@4e0ad966, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@50c332c9, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@36f11bc5, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@463819a4, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4409fafa, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@4c34f025, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@771472cb, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@53574122, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@53574122, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@3d61c1b9, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@12705aa8, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@55bf5e8b, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@27f509e9, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@7153f160, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@4a6f83a0, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@605ce9f6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@16b91785, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@4992a096, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@586e415b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7dc4fa23, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@7acbbdad, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@729c52f3, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2f31ca93, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@acd2f4e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@22f72e8d, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@474a24be, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@552386e7, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@76cdb0b3, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@15d45f08, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1cf6218b, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@56b3d9b5, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@56b3d9b5, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@604ebc01, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@1821c165, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@3652564f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4d05c16d, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@25a8f59c, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@516269f4, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@557a312a, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@9ac11de, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@1b3ebdca, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5e26e9d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@776de331, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@40e4c7a4, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5fb5cf08, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@3695caa7, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@11dcca88, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@7efb393e, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@5ec31602, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@7b603f9, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@8fff3dc, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1d7927, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@6d233d3b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@29df7475, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6d014149, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@7a405213, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7f9c73c8, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@2e3a322a, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@13a0eb4f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@360b6460, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@9659d34, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@291a175c, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6144b81c, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6144b81c, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@3957f332, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4b206b71, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@76079a9, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@bc2643d, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@3226af79, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@3f923f79, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@112e6ec, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@60a41b4f, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@e33411e, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@275c667d, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@275c667d, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@19ee0922, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@3141bfda, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@7e88d944, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@306396db, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@1689ef95, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@102338c7, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7ff19f0d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5be6429, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@399e1fb5, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@573e4eed, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@735d43b5, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@48364f15, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@57995c24, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@1120d627, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@4539808c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@1af6adb1, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@2fdc3266, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@b8d10ab, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@24dbb471, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2eb56f60, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@6a7140cf, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5369ff14, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@20aa0383, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@78e76db3, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@229597c2, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@191f2603, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@267bbcc3, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@542b5723, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@2145c875, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@4cc7456a, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@2ad34688, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@2ad34688, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1b9d4536, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@6547fb1c, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@46307b40, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@62ff6ba2, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@7d3e186f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@2288a035, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@aa44c99, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@65f87229, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@376b62d5, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1b86b682, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1aa0f527, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@4616155c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@27282461, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@426c79ce, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@16405095, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@7218f8cf, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@7a6463e5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@3da7242a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@49071efd, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@546c50c1, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@1c130236, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@f40a624, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1425241231], 0, 1): success
test SubList.testListIteratorSet([333040086], 0, 1): success
test SubList.testListIteratorSet([-1801495348], 0, 1): success
test SubList.testListIteratorSet([187203569], 0, 1): success
test SubList.testListIteratorSet([-1516176959], 0, 1): success
test SubList.testListIteratorSet([-1274390326], 0, 1): success
test SubList.testListIteratorSet([-2113987588], 0, 1): success
test SubList.testListIteratorSet([-1791592130], 0, 1): success
test SubList.testListIteratorSet([-1208388247], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@5186c9c, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@56dec981, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@2dc486b1, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@4df5dcc9, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@5cb59b34, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6ec24a72, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@20dcd8f1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@477c522d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@551a4948, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4307c8e4, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@6fb8dfc1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@c4de1fd, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-1441112087], 0, 1): success
test SubList.testListIteratorSetPrevious([376808476], 0, 1): success
test SubList.testListIteratorSetPrevious([1159149020], 0, 1): success
test SubList.testListIteratorSetPrevious([-1559183245], 0, 1): success
test SubList.testListIteratorSetPrevious([568425661], 0, 1): success
test SubList.testListIteratorSetPrevious([501463378], 0, 1): success
test SubList.testListIteratorSetPrevious([1960121413], 0, 1): success
test SubList.testListIteratorSetPrevious([-1482192966], 0, 1): success
test SubList.testListIteratorSetPrevious([-271539371], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@288fb3f6, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@6f020a0b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@e64a116, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@7cd399ae, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@12f82f8, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@16940006, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@681204e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@11a4bfdd, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@4799ba4c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@649e8ce7, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@d2b762f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@49bd1983, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@1fceab0c, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@708cff5c, 2, 5): success
test SubList.testModAdd(java.util.Vector@230d235a, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@bb47a0f, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@3e7252b, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1fcca6cc, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3a589923, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@71585ce6, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@6ea995bd, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1539d2ea, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@1345ee89, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4626fea0, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@1e7bade1, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@601e3402, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@7b3b6b1d, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@262f7cee, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@58346c82, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@35908ffe, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@a90c714, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@79b9cc61, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@5b260e15, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1e7163ae, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@34d33ec3, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6b3d3d3c, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@1fb2918d, 2, 5): success
test SubList.testModClear(java.util.LinkedList@7513696, 2, 5): success
test SubList.testModClear(java.util.Vector@2e4733bb, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@43f3e0c7, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@66fd4e56, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@331613af, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@4dde348f, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@58e568c1, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@4f3dd3c0, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@baca322, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@6226dc7, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@73e2f7b6, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@4f8ff25b, 2, 5): success
test SubList.testModGet(java.util.LinkedList@270e5a99, 2, 5): success
test SubList.testModGet(java.util.Vector@4724451c, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@36345dc4, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@6f0c82e7, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@408f9d46, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@680937c1, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@9cfbee6, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@7388fe9, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@756132f4, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@60839b47, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@716cb678, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@70fbd0c6, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@54e570ed, 2, 5): success
test SubList.testModHashCode(java.util.Vector@72970f37, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@680ccc28, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@5a5843fe, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@4e114dec, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@26810859, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@373e056a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@501a9c06, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@46db9450, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@92b7e5, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@55955ca7, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@6642ed10, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@2ffe4fa0, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@35d25a37, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@4ebebece, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@65b13418, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4eb04a53, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4e586e07, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@69c91d00, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@6aba4d53, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@57881da4, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@719e5c2b, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@51289e4d, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@7043d49b, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@5e16d7d6, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@921d290, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@774d4606, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@565e8747, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@381267ae, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@285fa995, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@355c5ee4, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@215b5765, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2b8e3809, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@4e4d2961, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7f50e2ee, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@2f63b457, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@31210f71, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@3c7867a4, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@57e8586d, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@7b53d99b, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5c96d58b, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@73108748, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@16d8f911, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@27714d3c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@488a5eec, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@50738ef8, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@a7a7f86, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@74937966, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@2c8341da, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@7e97e705, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@5f73e9fa, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@88b0f78, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@66d53b5f, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@5446cf26, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@74920763, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@259a3fc5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6c4c4eeb, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@60dc9d8a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6923bc48, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@72569037, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@5a0e77ec, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@c827e67, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@65439208, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@2c29350b, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@40a6eb60, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2eacf72d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@7983f5f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4596ef27, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@627f6dd7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@4fd7b0d9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2c98baab, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@378d262a, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@7a2a5bc7, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@44c18cac, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@7591fb65, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@3d735875, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@71839644, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@5b7282d5, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@257afe67, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@38089c22, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@31aa8611, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@2414b8b7, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@cf9fbc1, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@21dec98, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@6e798be3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@55f5edc6, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@3d143396, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@72da2699, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@75ed2349, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@544478e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@395d207c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@727e71e1, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3291f441, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@6f3b256a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4b864549, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@3fc20dc6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@291eee42, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@23b1ac51, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@1c8cfe74, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@2f3f1548, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6590a4d4, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@24167e5e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@7edf1817, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@3fafc546, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6aa4281c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@66258bd8, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2d66a157, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@20a8d290, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@fbf64d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@58adbb4d, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@3381d0d6, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@6265b5f, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6f8bd7de, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@4f7e3299, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@214591f3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@577fc4f4, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@466d5c87, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@584d4986, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6bed6b5b, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@2aad62dd, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@478ef62d, 2, 5): success
test SubList.testModRemove(java.util.Vector@6c6fe24b, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@75391e4, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@179ec0e9, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5ae68891, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@3fd67248, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@1f1a7a14, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@3e16e832, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@35342d89, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@7ab2048b, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@6b7bfb5, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@66c1b72d, 2, 5): success
test SubList.testModSet(java.util.LinkedList@191f7e02, 2, 5): success
test SubList.testModSet(java.util.Vector@7653e480, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@1ca02d3a, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@6ae7eb6f, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@6411d764, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@798a83ba, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@453d4158, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@599b57a1, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@31f0748b, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@4a62b042, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@20389ec4, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@6fcd5e78, 2, 5): success
test SubList.testRemove(java.util.LinkedList@6e3382bf, 2, 5): success
test SubList.testRemove(java.util.Vector@1841f438, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@15aba499, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@2ab528b1, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@33cccea2, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@6206d638, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@15d23da7, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@cd99211, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-424942097], 0, 1): success
test SubList.testSet([109667780], 0, 1): success
test SubList.testSet([1203908845], 0, 1): success
test SubList.testSet([1166891102], 0, 1): success
test SubList.testSet([2095812451], 0, 1): success
test SubList.testSet([179654876], 0, 1): success
test SubList.testSet([-1057779892], 0, 1): success
test SubList.testSet([230684659], 0, 1): success
test SubList.testSet([2077221878], 0, 1): success
test SubList.testSet(java.util.ArrayList@69fa997a, 2, 5): success
test SubList.testSet(java.util.LinkedList@667c458e, 2, 5): success
test SubList.testSet(java.util.Vector@63774f5d, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@352a86d6, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@6b67164a, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@4c8885cf, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3045edd6, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@384aa543, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@5f50e80d, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@256d8068, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@19918a2f, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1ab8ed58, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@7c921fbd, 2, 5): success
test SubList.testSubList(java.util.LinkedList@44a45bc0, 2, 5): success
test SubList.testSubList(java.util.Vector@18bb2116, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@63ef992, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@76fb2487, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@710c8f93, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@210d450f, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@4c3cdd24, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6577c146, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5bc94765, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@60734f82, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@33e8c1ec, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@1474e4b0, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@72a54086, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@517ba7c4, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@51af169b, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@27030fc9, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@4ce78224, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@4ce78224, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@6eca81c3, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@555b4c7a, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@154feef3, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@628875bf, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@279df915, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@453c9747, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6535a876, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@19bbfc2a, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5078c574, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@52d93146, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@52d93146, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@6d0c00c9, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@307afe85, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@603704bc, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@53b7cc7a, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@6455ad20, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@34f59142, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@4f719d31, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@4a0ea05b, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@749a1e19, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@68bee46d, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@68bee46d, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@7a771b76, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@70709c74, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@71e4c862, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4895689c, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@530ec14f, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@11c1cb33, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@39b15823, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@2083da0f, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@243037e3, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@7e054239, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@7e054239, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@38a77, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@d804151, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@384ca4a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@40a8d1a7, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@15888406, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@6225879b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@765c5eaa, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@2413294a, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@679e9c8a, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@76bc9435, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@76bc9435, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@1cb0fe4a, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@4c5a7f0b, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@7afb813e, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@15ef37a6, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@1d575db2, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@51ad5adc, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@4904de12, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@51d62d60, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@493602d2, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@4a3090a9, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@4a3090a9, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@58f97638, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@64fcb4ea, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@a2eb159, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@d722e71, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@1dd5c080, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@5bb2d078, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@4ebd5d30, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@20b91338, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@6a25bfec, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@4994c51d, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@4994c51d, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@5c6d4258, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@5e44a4fc, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7e64b6c8, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@404000d2, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@77d60664, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3e7814cb, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6ad88c8, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@67302723, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2246b96b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@24dd5ab4, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@24dd5ab4, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@45c205bf, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@56662c53, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@3b854546, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7034a9d5, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@6ac62d7a, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@63f68385, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2e218258, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@2594825f, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@39c030de, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@582d9155, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@343c1bc8, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@50cec31, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@6acda6c6, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@74880da2, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@4b6995ad, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@6189ffe4, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@278d82b5, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@1974dfe9, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@62899714, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@4002efb1, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@4002efb1, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@39fa1370, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@db40749, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@28146daf, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@7bffc13d, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
