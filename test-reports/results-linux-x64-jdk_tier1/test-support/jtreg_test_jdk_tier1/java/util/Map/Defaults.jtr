#Test Results (version 2)
#Mon Apr 29 00:57:41 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
author=Mike Duigou
keywords=bug8010122 bug8004518 bug8024331 bug8024688 testng
run=USER_SPECIFIED testng Defaults\n
source=Defaults.java
title=Test Map default methods

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
elapsed=1026 0\:00\:01.026
end=Mon Apr 29 00\:57\:41 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1055-577.mrg2vkl14epehdn0xjtgmxanmg.phxx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1018-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Mon Apr 29 00\:57\:40 UTC 2024
test=java/util/Map/Defaults.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:amd64,version\:6.5.0-1018-azure,family\:linux,simple_arch\:x64,simple_version\:6.5,processors\:4,maxMemory\:16757346304,maxSwap\:4294963200]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1018-azure
totalTime=1027
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/util/Map

#section:script_messages
----------messages:(4/322)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/205)----------
command: build Defaults
reason: Named class compiled on demand
started: Mon Apr 29 00:57:40 UTC 2024
Test directory:
  compile: Defaults
finished: Mon Apr 29 00:57:40 UTC 2024
elapsed time (seconds): 0.14
result: Passed. Build successful

#section:compile
----------messages:(7/270)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:57:40 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:57:40 UTC 2024
elapsed time (seconds): 0.14
----------configuration:(13/912)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/Map/Defaults.d
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3303)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Map/Defaults.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/Map/Defaults.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/Map/Defaults.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/Map/Defaults.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
----------direct:(12/1022)----------
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:624: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(0L), map.compute(new Long(3L), fun));
                                                   ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:625: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(3L), map.compute(new Long(3L), fun));
                                                   ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:626: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(6L), map.compute(new Long(3L), fun));
                                                   ^
Note: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 warnings
result: Passed. Compilation successful

#section:testng
----------messages:(7/211)----------
command: testng Defaults
reason: User specified action: run testng Defaults 
started: Mon Apr 29 00:57:40 UTC 2024
Mode: agentvm
Agent id: 30
finished: Mon Apr 29 00:57:41 UTC 2024
elapsed time (seconds): 0.885
----------configuration:(13/904)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/Map/Defaults.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map

----------rerun:(28/2910)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Map/Defaults.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/Map/Defaults.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/Map/Defaults.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/Map/Defaults.java false Defaults
----------System.out:(518/56904)----------
test Defaults.testCompute("Hashtable", java.util.Hashtable@541a24db): success
test Defaults.testCompute("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@55f58d22): success
test Defaults.testCompute("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@701bd7c5): success
test Defaults.testCompute("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5f3e47ef): success
test Defaults.testCompute("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@561ef3a2): success
test Defaults.testCompute("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@2f0c9af): success
test Defaults.testCompute("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@168e7106): success
test Defaults.testCompute("HashMap", java.util.HashMap@38883cf): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@657d1c34): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@2de9812d): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3f68719e): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7433d955): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@583ce54): success
test Defaults.testCompute("HashMap", java.util.HashMap@6c309fc9): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@53c648fc): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@14c88719): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@25e49744): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2596345d): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6a70275b): success
test Defaults.testCompute("EnumMap", java.util.EnumMap@320baf69): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@74e77856): success
test Defaults.testCompute("TreeMap", java.util.TreeMap@524a872b): success
test Defaults.testCompute("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@250256cd): success
test Defaults.testCompute("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2c1711bd): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@15753b77): success
test Defaults.testComputeIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@22c77b34): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@3b08920): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@5a3b995e): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@428d831b): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@253f7376): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@413f10ef): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7305a304): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@668c19bc): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@22a27c54): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5659a8fb): success
test Defaults.testComputeIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@37cc9c9f): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@c3c48eb): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6b108c0): success
test Defaults.testComputeIfAbsent("EnumMap", java.util.EnumMap@4d0142d0): success
test Defaults.testComputeIfAbsent("TreeMap", java.util.TreeMap@57e363d0): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@7c06699b): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@5abc5452): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@fb21ef6): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@bb3b9bd): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@5cc7087b): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@26ec2257): success
test Defaults.testComputeIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4a0e364d): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@5b645495): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1cb20098): success
test Defaults.testComputeIfAbsent("Hashtable", java.util.Hashtable@66f58c3): success
test Defaults.testComputeIfAbsentNullFunction("Hashtable", java.util.Hashtable@5f735f91): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@68daf876): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2d0622a4): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@ee24218): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@43abb966): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7c00caf6): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@3077625c): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@6f5c852e): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@16d1c988): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@19b28105): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6e6b8b80): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@29e7f24d): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@714a6867): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6c3b289f): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5d9d8088): success
test Defaults.testComputeIfAbsentNullFunction("EnumMap", java.util.EnumMap@c14d7d0): success
test Defaults.testComputeIfAbsentNullFunction("TreeMap", java.util.TreeMap@588f8b3e): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@683337dc): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@4fdf4823): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@296b35d): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@3d3dc0cd): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1804db4c): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@62db2e1e): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@691db328): success
test Defaults.testComputeIfAbsentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@48998e34): success
test Defaults.testComputeIfAbsentNulls("HashMap", java.util.HashMap@34acf676): success
test Defaults.testComputeIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@29cd85ca): success
test Defaults.testComputeIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@473fc4a7): success
test Defaults.testComputeIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@26e649cc): success
test Defaults.testComputeIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@22f27e57): success
test Defaults.testComputeIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3eed8122): success
test Defaults.testComputeIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@b9a2bef): success
test Defaults.testComputeIfPresent("Hashtable", java.util.Hashtable@3357aa43): success
test Defaults.testComputeIfPresent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@191878bf): success
test Defaults.testComputeIfPresent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@3673a73f): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@4e42e4e9): success
test Defaults.testComputeIfPresent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5cecc031): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@17449507): success
test Defaults.testComputeIfPresent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7080a733): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@31096f76): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@25879110): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@2ae39b9): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5378550c): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@48cdf99): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@57366add): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@20b44990): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@774ead04): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@46f37bf0): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@f7feed2): success
test Defaults.testComputeIfPresent("EnumMap", java.util.EnumMap@1dd1ca0a): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@3e042d64): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@58257284): success
test Defaults.testComputeIfPresent("TreeMap", java.util.TreeMap@56799f3c): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1761524b): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@31bdad08): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@7034654d): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@5ee1b7c2): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@a0d01da): success
test Defaults.testComputeIfPresentNullFunction("Hashtable", java.util.Hashtable@3b69771f): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@74b58c7b): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@260d32bc): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1e60c5cc): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@644077d9): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@e1b68f8): success
test Defaults.testComputeIfPresentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@63f60baf): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@257d7de2): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@22cb0194): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@5f5dcff7): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@64841d8e): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@13230743): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6e48b277): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1c6b6cb4): success
test Defaults.testComputeIfPresentNullFunction("EnumMap", java.util.EnumMap@42e4fedb): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@6b0c61b7): success
test Defaults.testComputeIfPresentNullFunction("TreeMap", java.util.TreeMap@3f7230b8): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@a98ca1f): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@35888640): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@67303887): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@14125aff): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@570f7b2b): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@59d2402a): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@6f98cc60): success
test Defaults.testComputeIfPresentNulls("HashMap", java.util.HashMap@2ff58155): success
test Defaults.testComputeIfPresentNulls("LinkedHashMap", java.util.LinkedHashMap@5e52f8bd): success
test Defaults.testComputeIfPresentNulls("IdentityHashMap", java.util.IdentityHashMap@4af0cdf6): success
test Defaults.testComputeIfPresentNulls("WeakHashMap", java.util.WeakHashMap@7a699ff): success
test Defaults.testComputeIfPresentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@50bc59aa): success
test Defaults.testComputeIfPresentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7564f1b3): success
test Defaults.testComputeIfPresentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@54f32711): success
test Defaults.testComputeNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@7cb061e3): success
test Defaults.testComputeNullFunction("Hashtable", java.util.Hashtable@28c11585): success
test Defaults.testComputeNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@68672552): success
test Defaults.testComputeNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@4560d9d8): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@42a6fb8): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1c3e3f06): success
test Defaults.testComputeNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@53be6f76): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@10e07ca4): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@5309ac5c): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@f986926): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@77814bc7): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@15008c12): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6c852753): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@4ca255d6): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@241ca8c0): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@3eca2b33): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@2b43b1ed): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6271bb71): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7c8d2bb5): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7276fb1a): success
test Defaults.testComputeNullFunction("EnumMap", java.util.EnumMap@1409b05b): success
test Defaults.testComputeNullFunction("TreeMap", java.util.TreeMap@57d80842): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@683af2a0): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@71738c20): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@3dd49052): success
test Defaults.testComputeNulls("IdentityHashMap", java.util.IdentityHashMap@2f9acd2e): success
test Defaults.testComputeNulls("HashMap", java.util.HashMap@740a539c): success
test Defaults.testComputeNulls("LinkedHashMap", java.util.LinkedHashMap@414f2431): success
test Defaults.testComputeNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@182efb4): success
test Defaults.testComputeNulls("WeakHashMap", java.util.WeakHashMap@5a054b8d): success
test Defaults.testComputeNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@24628a1d): success
test Defaults.testComputeNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2555b6d7): success
test Defaults.testConcurrentMap_computeIfAbsent_racy(): success
test Defaults.testConcurrentMap_computeIfPresent_racy(): success
test Defaults.testConcurrentMap_compute_racy(): success
test Defaults.testConcurrentMap_compute_simple(): success
test Defaults.testConcurrentMap_merge_racy(): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@5ae90e26): success
test Defaults.testForEach("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5b1bd579): success
test Defaults.testForEach("Hashtable", java.util.Hashtable@525627db): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@13b14d3d): success
test Defaults.testForEach("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@56954b91): success
test Defaults.testForEach("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@532c7e19): success
test Defaults.testForEach("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@45fd9280): success
test Defaults.testForEach("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@2a4a9ef): success
test Defaults.testForEach("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@6c7a593d): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@448b6661): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@3c34a3ba): success
test Defaults.testForEach("HashMap", java.util.HashMap@c389274): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4d05984f): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7c8237ca): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2d2a6700): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@6063bda7): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@2730696f): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@6f9eb7e): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@1d3aa181): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@780e69d5): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@27e4a398): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@33e1c65f): success
test Defaults.testForEach("EnumMap", java.util.EnumMap@fb5739b): success
test Defaults.testForEach("HashMap", java.util.HashMap@7963b226): success
test Defaults.testForEach("TreeMap", java.util.TreeMap@58190b5c): success
test Defaults.testForEach("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@29643e8b): success
test Defaults.testForEach("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@ee727ca): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@63bd5c7): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@2684beba): success
test Defaults.testGetOrDefault("Hashtable", java.util.Hashtable@75987872): success
test Defaults.testGetOrDefault("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@22522853): success
test Defaults.testGetOrDefault("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@19fc6aeb): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@b16eb50): success
test Defaults.testGetOrDefault("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@20f277cd): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@4192f126): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@67b9b481): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@56149589): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@636f2268): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7964bce): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@52464120): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@34a57249): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@340dd27): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@4706dffc): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2d2b4574): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@70e22c6): success
test Defaults.testGetOrDefault("EnumMap", java.util.EnumMap@1f87b177): success
test Defaults.testGetOrDefault("TreeMap", java.util.TreeMap@78a807b5): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@30d339e0): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@36e36354): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@145ccbd3): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@5db8499): success
test Defaults.testGetOrDefault("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@67c2a781): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@760bf92c): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@6af82b1b): success
test Defaults.testGetOrDefaultNulls("HashMap", java.util.HashMap@3b217c4d): success
test Defaults.testGetOrDefaultNulls("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@357858cd): success
test Defaults.testGetOrDefaultNulls("IdentityHashMap", java.util.IdentityHashMap@7039f5fe): success
test Defaults.testGetOrDefaultNulls("LinkedHashMap", java.util.LinkedHashMap@5ffd8dfd): success
test Defaults.testGetOrDefaultNulls("WeakHashMap", java.util.WeakHashMap@3948a21e): success
test Defaults.testGetOrDefaultNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7e708eb8): success
test Defaults.testGetOrDefaultNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3dd000b6): success
test Defaults.testGetOrDefaultNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@61537df5): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7efd3dd6, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@2d0c357a, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5233c57d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6f3865b2, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@746cd088, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@3ff92b4d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@42696988, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@258fe438, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@659e2c6c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@3fc037ed, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@e352f0c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5fefc8a2, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6c33402c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@5ba1f3fc, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@2c651b3f, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@56fd795b, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@a52496, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@527716f, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@43230962, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2a4f6f8b, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@434c839e, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@684a7e60, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@282a10a4, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@6915aaa1, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@776c43e0, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5aa91b29, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1e49a3fc, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7da076ca, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@59ec11e4, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@5af936f7, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@21a018d1, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@1e5402ee, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@75eb4e7a, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@8451449, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@167a6f70, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@416a593e, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@56c48347, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3b53c6e, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@4ba74b0a, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@bb9fe9, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@29667e7c, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@7fb436a, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3ac9f704, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6a24235b, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@206e2e28, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@4fe94baa, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@3841de67, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@37e3facd, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@a28fd24, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6fe637f0, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@4f24af8d, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2ce795c9, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4ddb0f86, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@24e9b153, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@5936c8c1, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@610f2f83, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@74f0b0a8, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@15e3353e, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@1ff72572, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2b00682f, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@43235fb1, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3551dab3, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@78b78fc5, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@3a60be55, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@4ae493f, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@557e25fc, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@4f7f406b, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@141375bb, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@2d63269f, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@51301c2b, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@2d8bff2e, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@4fe05b04, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@7ec42176, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@25a24708, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@58d9dce7, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMergeNullMerger("Hashtable", java.util.Hashtable@5962ac67): success
test Defaults.testMergeNullMerger("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3616218a): success
test Defaults.testMergeNullMerger("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@154c811f): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@4ee70230): success
test Defaults.testMergeNullMerger("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@3f9a1643): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@39d6270a): success
test Defaults.testMergeNullMerger("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@3c0643f7): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@1947f7cb): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@617b3221): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5a909f8d): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7a7f7b77): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@26b35ae4): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@88d67e1): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@4256bc0f): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@772b2bb1): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@686d4a4d): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@461618b6): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@14437016): success
test Defaults.testMergeNullMerger("EnumMap", java.util.EnumMap@1704d4fe): success
test Defaults.testMergeNullMerger("TreeMap", java.util.TreeMap@79984f87): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@7beb674e): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@55053fa): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@366884e0): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@23f7f4f2): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@670c0964): success
test Defaults.testPutIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@51a4915a): success
test Defaults.testPutIfAbsent("Hashtable", java.util.Hashtable@4b69331c): success
test Defaults.testPutIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@697e0630): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@8951564): success
test Defaults.testPutIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@cac52ff): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7c21143a): success
test Defaults.testPutIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1d86527d): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@345a1733): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@695a804d): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@64ec56a5): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@25d15c9e): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@14bedf06): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@45fea3d1): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3af24efe): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@41b01a96): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@6c40eb4): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@308c8bea): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@71140850): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@10999b61): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2143ed68): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1e5ea228): success
test Defaults.testPutIfAbsent("EnumMap", java.util.EnumMap@70b6642e): success
test Defaults.testPutIfAbsent("TreeMap", java.util.TreeMap@f8d663): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5eef249a): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@6c181b30): success
test Defaults.testPutIfAbsentNulls("HashMap", java.util.HashMap@74335f39): success
test Defaults.testPutIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@6fa65328): success
test Defaults.testPutIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@52cf08e1): success
test Defaults.testPutIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@5a7f359e): success
test Defaults.testPutIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@20efb6a2): success
test Defaults.testPutIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@54f47b17): success
test Defaults.testPutIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@350bd228): success
test Defaults.testRemove("Hashtable", java.util.Hashtable@6fd35ffb): success
test Defaults.testRemove("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1c9eb440): success
test Defaults.testRemove("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@18043d93): success
test Defaults.testRemove("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@48686408): success
test Defaults.testRemove("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@cab2079): success
test Defaults.testRemove("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@eb71cc0): success
test Defaults.testRemove("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@3c7528f): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@2c87e0ad): success
test Defaults.testRemove("HashMap", java.util.HashMap@3f8a179b): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5da3be7b): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@9556e33): success
test Defaults.testRemove("HashMap", java.util.HashMap@6c34a77c): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@3d8c4134): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@785e1fa6): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4d962a42): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4f8a16fb): success
test Defaults.testRemove("EnumMap", java.util.EnumMap@7c9186e6): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@39c21809): success
test Defaults.testRemove("TreeMap", java.util.TreeMap@7e8fbc67): success
test Defaults.testRemove("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2db9d50d): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@2eee55c0): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@593937a8): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@3896c508): success
test Defaults.testRemove("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@428fbe73): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@2e2bf6d8): success
test Defaults.testRemoveNulls("HashMap", java.util.HashMap@6f352ed4): success
test Defaults.testRemoveNulls("IdentityHashMap", java.util.IdentityHashMap@204ffd7f): success
test Defaults.testRemoveNulls("LinkedHashMap", java.util.LinkedHashMap@77100b7): success
test Defaults.testRemoveNulls("WeakHashMap", java.util.WeakHashMap@5167b6ea): success
test Defaults.testRemoveNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6f40870c): success
test Defaults.testRemoveNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6f8a6113): success
test Defaults.testRemoveNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@60350b02): success
test Defaults.testReplaceAll("Hashtable", java.util.Hashtable@252574f1): success
test Defaults.testReplaceAll("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@585fdf64): success
test Defaults.testReplaceAll("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5b1f428f): success
test Defaults.testReplaceAll("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1bc83a0e): success
test Defaults.testReplaceAll("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5fcbd13a): success
test Defaults.testReplaceAll("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@35d38990): success
test Defaults.testReplaceAll("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@14420e81): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@6b34df8b): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@11b81927): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@1dd8e966): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@450a8bbe): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2c9e95ec): success
test Defaults.testReplaceAll("EnumMap", java.util.EnumMap@4144b21d): success
test Defaults.testReplaceAll("TreeMap", java.util.TreeMap@3aa030fa): success
test Defaults.testReplaceAll("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1a70c6bd): success
test Defaults.testReplaceAll("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@ccda001): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@5af53035): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@1ef6db01): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5ce5e35d): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1a2248b4): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@42c98cd): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@694da7f6): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@259cbfde): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2a09d5b0): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4c70877e): success
test Defaults.testReplaceAllNoNullReplacement("Hashtable", java.util.Hashtable@69a3a4ba): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@78a8cbc6): success
test Defaults.testReplaceAllNoNullReplacement("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@6d5b2aaa): success
test Defaults.testReplaceAllNoNullReplacement("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@733377ef): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4c12de38): success
test Defaults.testReplaceAllNoNullReplacement("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@63055dc6): success
test Defaults.testReplaceAllNoNullReplacement("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@6720f136): success
test Defaults.testReplaceKV("Hashtable", java.util.Hashtable@1e5b7cb0): success
test Defaults.testReplaceKV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@402a53bd): success
test Defaults.testReplaceKV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@229e218e): success
test Defaults.testReplaceKV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@29112e6e): success
test Defaults.testReplaceKV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@8600bd3): success
test Defaults.testReplaceKV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7d1132c8): success
test Defaults.testReplaceKV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@25410b29): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@17ed83ce): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@24e3ea73): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@5f66768b): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6e732891): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@27a0f462): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1175986): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@30dcb8c9): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@6138a6c9): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@5b659cb2): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6576bb48): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4f4cab86): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3c555dee): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3f4989c4): success
test Defaults.testReplaceKV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2014e9c5): success
test Defaults.testReplaceKV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@3b07523c): success
test Defaults.testReplaceKV("EnumMap", java.util.EnumMap@77b4a83f): success
test Defaults.testReplaceKV("TreeMap", java.util.TreeMap@63a32bb5): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@669dfe59): success
test Defaults.testReplaceKVNoNulls("Hashtable", java.util.Hashtable@5d06eb77): success
test Defaults.testReplaceKVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@69d515ad): success
test Defaults.testReplaceKVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@382914a8): success
test Defaults.testReplaceKVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@622fb228): success
test Defaults.testReplaceKVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5462bf74): success
test Defaults.testReplaceKVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@684eb8a5): success
test Defaults.testReplaceKVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@6167b53d): success
test Defaults.testReplaceKVNulls("HashMap", java.util.HashMap@ec843bd): success
test Defaults.testReplaceKVNulls("IdentityHashMap", java.util.IdentityHashMap@68501359): success
test Defaults.testReplaceKVNulls("LinkedHashMap", java.util.LinkedHashMap@5bb58c13): success
test Defaults.testReplaceKVNulls("WeakHashMap", java.util.WeakHashMap@62109fd9): success
test Defaults.testReplaceKVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@446c42fc): success
test Defaults.testReplaceKVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@32501c4c): success
test Defaults.testReplaceKVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1c24f5da): success
test Defaults.testReplaceKVV("Hashtable", java.util.Hashtable@7f09115f): success
test Defaults.testReplaceKVV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3e194d74): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@61eb8515): success
test Defaults.testReplaceKVV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1a72d5ed): success
test Defaults.testReplaceKVV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@55f4f426): success
test Defaults.testReplaceKVV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@245e1aa8): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@5d8ad6f2): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@3ac535df): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@40768abc): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@3e341b64): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@47a97d37): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7f24474f): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@65631093): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@694770c): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4e91fb32): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@5b4fdfd6): success
test Defaults.testReplaceKVV("EnumMap", java.util.EnumMap@6a5ea444): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1f0bb800): success
test Defaults.testReplaceKVV("TreeMap", java.util.TreeMap@3b602099): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5f8ba82a): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@3c52f2e6): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@14c9fe1d): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1cb7dcc9): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@20d68f2e): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7bf83fe4): success
test Defaults.testReplaceKVVNoNulls("Hashtable", java.util.Hashtable@5cae577f): success
test Defaults.testReplaceKVVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5bec5fac): success
test Defaults.testReplaceKVVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@8368a6): success
test Defaults.testReplaceKVVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@58a289f4): success
test Defaults.testReplaceKVVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@362641c6): success
test Defaults.testReplaceKVVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7895e5be): success
test Defaults.testReplaceKVVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7b3ad64c): success
test Defaults.testReplaceKVVNulls("HashMap", java.util.HashMap@5779cb07): success
test Defaults.testReplaceKVVNulls("IdentityHashMap", java.util.IdentityHashMap@20d85f34): success
test Defaults.testReplaceKVVNulls("LinkedHashMap", java.util.LinkedHashMap@312d7e64): success
test Defaults.testReplaceKVVNulls("WeakHashMap", java.util.WeakHashMap@3a88c729): success
test Defaults.testReplaceKVVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5a684072): success
test Defaults.testReplaceKVVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@45df2404): success
test Defaults.testReplaceKVVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@75176c4f): success

===============================================
java/util/Map/Defaults.java
Total tests run: 512, Passes: 512, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
