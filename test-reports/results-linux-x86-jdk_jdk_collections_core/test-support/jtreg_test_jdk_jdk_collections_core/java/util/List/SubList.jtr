#Test Results (version 2)
#Mon Apr 29 00:37:11 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=908 0\:00\:00.908
end=Mon Apr 29 00\:37\:11 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az714-682.22nzjvkrszmuhkvqy55p1tioig.phxx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1018-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Mon Apr 29 00\:37\:10 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1018-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1018-azure
totalTime=908
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/559)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Mon Apr 29 00:37:10 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Mon Apr 29 00:37:10 UTC 2024
elapsed time (seconds): 0.029
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:37:10 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:37:10 UTC 2024
elapsed time (seconds): 0.028
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Mon Apr 29 00:37:10 UTC 2024
Test directory:
  compile: SubList
finished: Mon Apr 29 00:37:11 UTC 2024
elapsed time (seconds): 0.143
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:37:10 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:37:11 UTC 2024
elapsed time (seconds): 0.143
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Mon Apr 29 00:37:11 UTC 2024
Mode: agentvm
Agent id: 3
finished: Mon Apr 29 00:37:11 UTC 2024
elapsed time (seconds): 0.735
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91151)----------
Seed from RandomFactory = -3963734522893253701L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1885206581], 0, 1): success
test SubList.testAdd([42, 963531910], 0, 1): success
test SubList.testAdd([42, 244996547], 0, 1): success
test SubList.testAdd([42, -149820879], 0, 1): success
test SubList.testAdd([42, 699566687], 0, 1): success
test SubList.testAdd([42, 692352077], 0, 1): success
test SubList.testAdd([42, -2048819818], 0, 1): success
test SubList.testAdd([42, 553008140], 0, 1): success
test SubList.testAdd([42, 786480873], 0, 1): success
test SubList.testAdd(java.util.ArrayList@4f3d9d, 2, 5): success
test SubList.testAdd(java.util.LinkedList@5dd7ba, 2, 5): success
test SubList.testAdd(java.util.Vector@817bd6, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@153e798, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@1e4c7ce, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@4f8f99, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@1e07335, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@192db39, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@19a770c, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@afb4d7, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@1a5ba90, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7effdb, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([506314600, 42], 0, 1): success
test SubList.testAddAtPos([42, 1705911172], 0, 1): success
test SubList.testAddAtPos([42, -856207336], 0, 1): success
test SubList.testAddAtPos([-2045244183, 42], 0, 1): success
test SubList.testAddAtPos([1206741440, 42], 0, 1): success
test SubList.testAddAtPos([1122349393, 42], 0, 1): success
test SubList.testAddAtPos([42, -122751169], 0, 1): success
test SubList.testAddAtPos([-1158180696, 42], 0, 1): success
test SubList.testAddAtPos([-1424942868, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@1c363b3, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@1a79073, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@1ea2b50, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@14b7590, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@adeb33, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@f18d55, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@ec0e5e, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@5ae4af, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1853077, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6f9ac, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@185325a, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@11b29e1, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@6f9158, 2, 5): success
test SubList.testClear(java.util.LinkedList@1bc16db, 2, 5): success
test SubList.testClear(java.util.Vector@1d23c1c, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@621db7, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@1ef1cee, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@353019, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@15c3473, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@625bd0, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@7f9dac, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@56a9fc, 2, 5): success
test SubList.testEquals(java.util.LinkedList@1a85353, 2, 5): success
test SubList.testEquals(java.util.Vector@29f5bf, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@1cc166c, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@c7178f, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@d0c0d8, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1b89696, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@b2a253, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@d73032, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@17dc76, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@e2f134, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@154569e, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@f8a78e, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@11b8483, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6732c5, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@52a46d, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@177bc52, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@115a2f8, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@115a2f8, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@a51d2d, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1d0a412, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1d9e054, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@92b1d1, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@17f448f, 2, 5): success
test SubList.testGet(java.util.LinkedList@1ddd52a, 2, 5): success
test SubList.testGet(java.util.Vector@11d13f, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@152931f, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@138efd5, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@15ad5f8, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@52c142, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@f2757d, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@20228f, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6e44fa, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@faad83, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@183b911, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@1fcca19, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@b0d587, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@f1a740, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@545854, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@159d04b, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@1feca8f, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@1feca8f, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@4f7014, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@175f2ec, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@19f8f2a, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@122c69d, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@163d444, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@15c2b13, 2, 5): success
test SubList.testIndexOf(java.util.Vector@1d32970, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@20e3eb, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@d7eaea, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@13b2053, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@9ea2a9, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@17d857d, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1876acc, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1bc2066, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@186b47f, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@15bc1f9, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@ad0e62, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@c18eed, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@179f7ed, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@15cae73, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@183494c, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1caa4e8, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1caa4e8, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@18617f1, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1eb21d7, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@4e75ae, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1950234, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@f671a, 2, 5): success
test SubList.testIterator(java.util.LinkedList@dc805c, 2, 5): success
test SubList.testIterator(java.util.Vector@1d81fb, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@c1a13d, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@1944238, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@127869, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@8a1f87, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@1c0ea90, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@b5139, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@7da867, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@386bb2, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@15a29ed, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@1a5984c, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@15348f2, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@373874, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@12c2b53, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@47f7ac, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@1eb1a2d, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@1eb1a2d, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@b92d69, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@854c29, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@b755a7, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@b85843, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@14b89a1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@1b611a1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@79ede9, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@a88bb1, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@196e9cd, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@18af550, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@14342bb, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@83acfe, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1ca362, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@51fa60, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@193c878, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1866d87, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@1fa6c71, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1fe6c5d, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@31b70a, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@da31ae, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@51926e, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1b494dc, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1b494dc, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@1948a3d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@44983d, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@130db2b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@561d3c, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@1c6c8ce, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@d83f99, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@1e946d4, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@6abc3a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@14d6bc2, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@c64859, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1c4a09, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@1229c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@144a3c9, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@eac101, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@1ea87df, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@b07b95, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@11be091, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@eee5d3, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@58a287, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@8c8662, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@1b97803, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1e8e538, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@328a98, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@14a3d18, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@120cde8, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@1e69c07, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@11535e0, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@c6058d, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@11646, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@d86515, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1ff5be, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1ff5be, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@70fbde, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1c878ff, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@19213f2, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1e539a, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@1a240a5, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@15cfa67, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1656cca, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@109e681, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@bb1ea2, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1bd8d6f, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1bd8d6f, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@17a20ae, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@172a6e7, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@15acfa, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@93b911, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@149e49b, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@19b8c08, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@33d6c7, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@10d97a3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1f3642a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1a5cabe, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@d9c8ec, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@6f0d10, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1807006, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@23d8a0, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@1ebc1d0, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@148f0d8, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@10d24c4, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@229a93, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@58c104, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1fedadf, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@b871cc, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1600a60, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5e5820, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1d10da9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1bdd78e, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@1e9673f, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1573d22, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@24a883, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@f47c3a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1752410, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@8abb0b, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@8abb0b, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@626baf, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@118f889, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@f8ade1, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1f23f6f, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@a17584, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@1d3fe9e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@1b4efd1, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@112966d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@ad970, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@56137f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@175749a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@b16acf, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@64bfad, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@c6b6c1, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@466096, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@fe0df1, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1e2dff1, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@19d48d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@47ef27, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@65a2c2, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@1d43183, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1309c17, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1778923742], 0, 1): success
test SubList.testListIteratorSet([-1445241613], 0, 1): success
test SubList.testListIteratorSet([-646052101], 0, 1): success
test SubList.testListIteratorSet([-146993780], 0, 1): success
test SubList.testListIteratorSet([-1954018162], 0, 1): success
test SubList.testListIteratorSet([-802617361], 0, 1): success
test SubList.testListIteratorSet([-1962266361], 0, 1): success
test SubList.testListIteratorSet([-1800307579], 0, 1): success
test SubList.testListIteratorSet([303380357], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@4d520d, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@12d3280, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@1caff59, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@8d4a5, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@110b3e8, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1023f00, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@126b430, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@13a7c03, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@d75f3a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@45f6b3, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@175f012, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@e11081, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1825102177], 0, 1): success
test SubList.testListIteratorSetPrevious([-1135426256], 0, 1): success
test SubList.testListIteratorSetPrevious([-2070705764], 0, 1): success
test SubList.testListIteratorSetPrevious([452550414], 0, 1): success
test SubList.testListIteratorSetPrevious([-986527509], 0, 1): success
test SubList.testListIteratorSetPrevious([326814527], 0, 1): success
test SubList.testListIteratorSetPrevious([2082653550], 0, 1): success
test SubList.testListIteratorSetPrevious([1277460800], 0, 1): success
test SubList.testListIteratorSetPrevious([-596631285], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@ee8a49, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@87e18a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@1bf058, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@54efeb, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@10b0aa9, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@167da17, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@1e47794, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@8f28c1, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@17abbd8, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@77dde8, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@7ae9bf, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@107b81, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@15350a, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@2975db, 2, 5): success
test SubList.testModAdd(java.util.Vector@17b87, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@697c6f, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@10cebb9, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1f4368f, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@1b62a4, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@1ecb194, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@c8ee73, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@6935c5, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@17ff31a, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@48bd9, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@10abd44, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@d8d5a7, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@77c8c8, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@18814a9, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@1f6a7c, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@39cd70, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@1554b07, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@1237b1c, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@70c961, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@aa35b2, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@f027a3, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@17885a5, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@c69688, 2, 5): success
test SubList.testModClear(java.util.LinkedList@197d0f9, 2, 5): success
test SubList.testModClear(java.util.Vector@c147cd, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@efeb04, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@1ac5a6e, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@9e3757, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@fbd798, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@1c8658, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1e4852d, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1168136, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@168b64f, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@42c776, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@1e6e47f, 2, 5): success
test SubList.testModGet(java.util.LinkedList@671219, 2, 5): success
test SubList.testModGet(java.util.Vector@1851b74, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@a36866, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@52165c, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@186e20d, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@1847e60, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@14e9797, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@1be4543, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1a59ac0, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@1bd3219, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@c87bfb, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@11ad083, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1bb6a5b, 2, 5): success
test SubList.testModHashCode(java.util.Vector@1b85d26, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@3693ec, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@1ba8506, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1e64797, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@17641a7, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@14860b1, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1e03a8d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1e4582b, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@2bfe0b, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@12eea32, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@16afef, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@860202, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@95ab93, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@192d164, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@162a61f, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1755d30, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@114ea8b, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@1884d36, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@11f2835, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@5e1e2f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@165effc, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@9b8ac0, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@1ec8ccb, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@232ffd, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@129c6c4, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@111ec0c, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@9381eb, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1c058a6, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@1c01aac, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@934205, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@f775bf, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@f40695, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@9d5121, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@12ec303, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@85481, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@19de609, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@a6430a, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@13d5efc, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@12ac34, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1f428f, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1b87116, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@1fe8524, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@16f5b8e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@9bbad6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@127e7bd, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1f8fd06, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@783452, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@1dcbd9a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@126be1f, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@1738f84, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@145a039, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@13d04a6, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1fa64a8, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@1d7c6b6, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@5d6fdc, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1e5618, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@190d62f, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@e5df19, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@e71c10, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@849ee7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@11210c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@149081c, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@1c8d8cb, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1b2aba7, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@d91bec, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@4ef1b3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1677dc0, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@84508e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@14c5737, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1cda683, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@63a6b, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@149ad6b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@1a538ba, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@1db7721, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@15f81f8, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1f234fc, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@17bee65, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@188d0a2, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@65a7d0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@988a24, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@ff501e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1eccdd0, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@c4f63b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@162fa33, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@14d5623, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@13ef84a, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@eb9483, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@d77a24, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@9cc9d2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@557d8f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@985ed6, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1f447a1, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@126f8bf, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1085208, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@11534a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@1eae5be, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@bb245d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@a622d7, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@85551c, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@87fa89, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1731580, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@13bb17d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1360eb6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@12f2187, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@c6657e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1eb3126, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@31ae18, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@1b7f6ba, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@1cff9ca, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@17fcddd, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@1ecaec8, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@e8d222, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@168d293, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@1243ab6, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@977c6b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@129a9c6, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@11f87a3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@ebdb94, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@13bbebe, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@192919f, 2, 5): success
test SubList.testModRemove(java.util.Vector@1e68033, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@10a58b7, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@1d826d2, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@112744b, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@193722d, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@1d13382, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1630694, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@113a75d, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@1f34e6b, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@d1cf55, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@199929a, 2, 5): success
test SubList.testModSet(java.util.LinkedList@1773d48, 2, 5): success
test SubList.testModSet(java.util.Vector@c443e2, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@e446d0, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@184e29d, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1179a3, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@2e2548, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@76f2cb, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@44f0b9, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4e60e8, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@a55975, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@16b810d, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@1e5015, 2, 5): success
test SubList.testRemove(java.util.LinkedList@18d90c3, 2, 5): success
test SubList.testRemove(java.util.Vector@1afe671, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@154dcc3, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@e86b19, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@29f14c, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@926a77, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@3ef8b5, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@14ef14c, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1735249797], 0, 1): success
test SubList.testSet([-1619191463], 0, 1): success
test SubList.testSet([578634145], 0, 1): success
test SubList.testSet([1665284136], 0, 1): success
test SubList.testSet([314456606], 0, 1): success
test SubList.testSet([600750804], 0, 1): success
test SubList.testSet([57738693], 0, 1): success
test SubList.testSet([862116660], 0, 1): success
test SubList.testSet([814873297], 0, 1): success
test SubList.testSet(java.util.ArrayList@17d98c, 2, 5): success
test SubList.testSet(java.util.LinkedList@119270a, 2, 5): success
test SubList.testSet(java.util.Vector@1787275, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@2105de, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@1216f28, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@12359fb, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1ded29, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@15fc66b, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@9c5c10, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@26dbfc, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@17399d5, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1a835d9, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@11f397f, 2, 5): success
test SubList.testSubList(java.util.LinkedList@1da5ac6, 2, 5): success
test SubList.testSubList(java.util.Vector@9d8f69, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@f66729, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@97a28e, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@f84241, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1fac197, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@14d8ecc, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4273f3, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1d46f3c, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@9a76ab, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1f0d875, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@1ffdbc9, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1d436fc, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1066c0e, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@1ac8f5a, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@17610b7, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@c7425c, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@c7425c, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@4ecd65, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@85c253, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4bc312, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1026c94, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@688f6f, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1bb6f7b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@9f57ad, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@1911d98, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@e4d9d4, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@142415b, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@142415b, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@3bc39, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1f5c85f, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@c300c2, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@18a1d6d, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@14b41d0, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1b180bf, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@92816b, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@d5c8f8, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6f6c5c, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@10ebaba, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@10ebaba, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@2a0dd5, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@10f6cd8, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@974484, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1c27a69, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@244c60, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@15ce4f, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@174bca0, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@558989, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@e37638, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@18a40d0, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@18a40d0, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1bbb4df, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@9339fd, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@e96382, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@daca8e, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@1e12a8d, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@bfeec6, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1ef9196, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@b3652b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@121202b, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@16312e5, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@16312e5, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@1317edd, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@1cabfa5, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@1d86356, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@9dfa67, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@87cf22, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@a7fee5, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1d1aa70, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@15beb47, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@19e2373, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@186158a, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@186158a, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@145d9a1, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1bf2352, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@701200, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@104889d, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@78af56, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@eca717, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1e185c5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@d67874, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1bf9828, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@126557b, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@126557b, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1f985b7, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1ef567, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@88a9e9, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@128a9d3, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@857c0d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1e69b0f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@c44475, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@47772b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@15c098b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1359fbe, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1359fbe, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@d37831, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@b18431, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@ddead, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1b7ff49, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@10d69c5, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@16e769c, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@fb1720, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@798fbd, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@7bd6b6, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@18f2c6b, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1d84202, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@155ff69, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@1e8b3c0, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@e6dc6d, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@d217, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1d15e10, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1daf759, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@1452396, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@12cd9e7, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1827b7c, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1827b7c, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@922349, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@15b9494, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@1c3cedc, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@1cc3427, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
