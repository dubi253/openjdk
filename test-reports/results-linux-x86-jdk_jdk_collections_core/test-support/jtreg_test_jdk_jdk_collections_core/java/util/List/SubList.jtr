#Test Results (version 2)
#Fri Mar 01 18:39:57 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=508 0\:00\:00.508
end=Fri Mar 01 18\:39\:57 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az775-2.ywbp5beigl5e3k0catohwgwj5f.cx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 18\:39\:57 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1015-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=508
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/559)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd)
OpenJDK Server VM (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 18:39:57 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 18:39:57 UTC 2024
elapsed time (seconds): 0.025
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 18:39:57 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 18:39:57 UTC 2024
elapsed time (seconds): 0.024
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 18:39:57 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 18:39:57 UTC 2024
elapsed time (seconds): 0.107
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 18:39:57 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 18:39:57 UTC 2024
elapsed time (seconds): 0.106
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 18:39:57 UTC 2024
Mode: agentvm
Agent id: 3
finished: Fri Mar 01 18:39:57 UTC 2024
elapsed time (seconds): 0.375
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91102)----------
Seed from RandomFactory = 7251539100236389769L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 469537533], 0, 1): success
test SubList.testAdd([42, -1942283203], 0, 1): success
test SubList.testAdd([42, 289149024], 0, 1): success
test SubList.testAdd([42, -715262014], 0, 1): success
test SubList.testAdd([42, -937703041], 0, 1): success
test SubList.testAdd([42, -845806268], 0, 1): success
test SubList.testAdd([42, -1354487306], 0, 1): success
test SubList.testAdd([42, 1841598062], 0, 1): success
test SubList.testAdd([42, -1707057958], 0, 1): success
test SubList.testAdd(java.util.ArrayList@10f9f28, 2, 5): success
test SubList.testAdd(java.util.LinkedList@19324ff, 2, 5): success
test SubList.testAdd(java.util.Vector@949311, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@120f3d4, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@11decc4, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@bcd22e, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@758dca, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@13a2a30, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@a6aae3, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@64dcfd, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@abce42, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@f20707, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 1888686095], 0, 1): success
test SubList.testAddAtPos([42, -1525908783], 0, 1): success
test SubList.testAddAtPos([118833286, 42], 0, 1): success
test SubList.testAddAtPos([893668391, 42], 0, 1): success
test SubList.testAddAtPos([-2141610369, 42], 0, 1): success
test SubList.testAddAtPos([42, 2080567774], 0, 1): success
test SubList.testAddAtPos([42, -331105953], 0, 1): success
test SubList.testAddAtPos([42, 13741042], 0, 1): success
test SubList.testAddAtPos([865348498, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@bbe76, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@2f5ccd, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@17ea1ea, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@643b28, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@5c34c9, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1410ef0, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1328c53, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@ef454d, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1b2521c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@13155de, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@5101a3, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1c99ab4, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@502c5, 2, 5): success
test SubList.testClear(java.util.LinkedList@3fb1d0, 2, 5): success
test SubList.testClear(java.util.Vector@1cc0f98, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@6d638e, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@95b688, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@7f092e, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@501c02, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@376409, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@1ea913b, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@1449fa2, 2, 5): success
test SubList.testEquals(java.util.LinkedList@107b6f7, 2, 5): success
test SubList.testEquals(java.util.Vector@16d399e, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@d69d3e, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@e51d40, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@11fbaf5, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@d715ff, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@c52786, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@d0c0a8, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@bf76fb, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@93c3a6, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@e45349, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@edf4ff, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1dc8c2f, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1c8cc04, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@5701a3, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1502a8a, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@16acc14, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@16acc14, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1592e8e, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@14821f6, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@14ebeac, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@107d722, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@52a521, 2, 5): success
test SubList.testGet(java.util.LinkedList@c6ee63, 2, 5): success
test SubList.testGet(java.util.Vector@81172c, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@1a0888e, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@cab8c0, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@151fff3, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1ede4cd, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@1a12cb, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@dee6ef, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@e8eb89, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@979419, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2b7403, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@e05d1f, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@f503bf, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@cc334e, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@117d830, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@104326e, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@1d2180b, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@1d2180b, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@10ac532, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@7ed31c, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1af0198, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1ba5d60, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@7c8f80, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@41255b, 2, 5): success
test SubList.testIndexOf(java.util.Vector@1819bc, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@77c933, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@b5583a, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1d82b64, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@74929f, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@1b5999e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@43a456, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@fa4742, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@ffe70e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1466d6c, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@15de2a, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@11ec433, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1e98f9c, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@639d86, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1c0428c, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@271922, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@271922, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1cf2af4, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@bffca5, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@94a62, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@cf5f62, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@1dfc7e, 2, 5): success
test SubList.testIterator(java.util.LinkedList@764899, 2, 5): success
test SubList.testIterator(java.util.Vector@510e6b, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@2da7e1, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@86360c, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@19fe718, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@ab685b, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@1c3a1c, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@d05872, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@4ceb34, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@1a79ad6, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5cc77f, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@16e3600, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@128ffa6, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@111525e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@11c2b54, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@18cf752, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@18154a1, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@18154a1, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@1e2a9ec, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@9e4d4d, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@100225c, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1ca84f9, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@1053d11, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@10fd32a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@11a1ab9, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@7f3ae9, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@9414c5, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1025e44, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@590b28, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@1efe316, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1d47d82, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@afc323, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@356c89, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@10dedd5, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@8e3f9, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@10e5a50, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7914af, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@1cec99f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@f2b8b4, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@3fb27c, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@3fb27c, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@de0a9c, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@164e6ff, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1e78528, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@13cfa14, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@d7c8ce, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@97ab7c, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@1fabd6b, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@14997d2, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@4d805, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@16a83e4, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@16dcaae, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@191a48b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3c1560, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@ad618e, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@1d74d7c, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@14075d7, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@1157c45, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@12f32ac, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@83cef7, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@12d230b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@5347a5, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@19a5683, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@142ffa1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@103b52d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@186fdc6, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@8c3e8d, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7dcfd5, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@14aded9, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@1bea54a, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@673bea, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@260f63, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@260f63, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@cb384c, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1659351, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@2c706, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@58642b, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@1307433, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@7de888, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@8e466c, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@1392220, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1143dec, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@4c307c, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@4c307c, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@668784, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@1c267a0, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@c24c2, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@1a5a57d, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@14459d0, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@171071c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@11f3e11, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2bf8b3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@179ee7b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@11789c9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1b8bb60, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@647c55, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1f69114, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@608e0d, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@aa7f44, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@1d972f7, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@9eb65, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1425888, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@9ff3a7, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@639362, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@14fafd6, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@b03797, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@12db011, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@4d78b7, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@11412a8, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@191d58a, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@b47ee6, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@b5a47b, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@1a762dc, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1c81620, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@187d61c, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@187d61c, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@72a7ed, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@6f355d, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@9af2e, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1fff00f, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@623923, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@1736f6b, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@19951d7, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@17a4e3b, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@1db5579, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@39a910, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1443e12, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@2950d6, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@c324fe, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@a015b5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@1d31041, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@21bf55, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1745baf, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@1a533a9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1728d14, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1866a66, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@d2c53, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@c2f4c8, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1922042431], 0, 1): success
test SubList.testListIteratorSet([-492447375], 0, 1): success
test SubList.testListIteratorSet([-1445188452], 0, 1): success
test SubList.testListIteratorSet([-1762455098], 0, 1): success
test SubList.testListIteratorSet([-1733075631], 0, 1): success
test SubList.testListIteratorSet([-1263949857], 0, 1): success
test SubList.testListIteratorSet([1289952692], 0, 1): success
test SubList.testListIteratorSet([-78235838], 0, 1): success
test SubList.testListIteratorSet([-78045932], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@13d6976, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@a62f4a, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@328258, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@194d8ed, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@e61c55, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@82c21, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@14f5457, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@1b09cf0, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@9f0577, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1dedaee, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@e5d204, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1ef18dc, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-837849737], 0, 1): success
test SubList.testListIteratorSetPrevious([1548173727], 0, 1): success
test SubList.testListIteratorSetPrevious([1405512312], 0, 1): success
test SubList.testListIteratorSetPrevious([1136028071], 0, 1): success
test SubList.testListIteratorSetPrevious([245571931], 0, 1): success
test SubList.testListIteratorSetPrevious([-2091260907], 0, 1): success
test SubList.testListIteratorSetPrevious([952501785], 0, 1): success
test SubList.testListIteratorSetPrevious([54166371], 0, 1): success
test SubList.testListIteratorSetPrevious([1929074147], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@10f85f1, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@1eaaa86, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@3b3a1c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@11f5260, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@1e6ec23, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@9e80de, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@90fb47, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@17041f0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@42ccc9, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@109e044, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@669253, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@e3ea9a, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@115222a, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@b01671, 2, 5): success
test SubList.testModAdd(java.util.Vector@296984, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@146842c, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@59fda, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@e618f6, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@413aed, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@1816474, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@39e7be, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@47cc07, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@1bf5917, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@197f5a, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@8cacfb, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@b68a4, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@1269390, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@47e024, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@1b49daa, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@ae429, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@b7eb62, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@1cd97b9, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@28e5c, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1d79e8b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@8a220f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@c24bd8, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@9353, 2, 5): success
test SubList.testModClear(java.util.LinkedList@7fa883, 2, 5): success
test SubList.testModClear(java.util.Vector@1c3d8e, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@16345f4, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@1316c6d, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@e72dee, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@c4af27, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@1ad66f, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@f1b7a4, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@193645b, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@1fbeb6d, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@19ba69d, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@15511d0, 2, 5): success
test SubList.testModGet(java.util.LinkedList@196689e, 2, 5): success
test SubList.testModGet(java.util.Vector@16059fd, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@a105b, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@1a39ad7, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1f7c6f9, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@486398, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@c187ca, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@180468d, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@56a1c0, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@cad96b, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@108db26, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@1a2a31b, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@3ea6ea, 2, 5): success
test SubList.testModHashCode(java.util.Vector@23f4fc, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@1468713, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@1c14e82, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1dd05a2, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@859bf, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@8129a4, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@42d314, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@8ff5c9, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@1bf35f4, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@fd9fd7, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@d7abc0, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@1d874a0, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@1286a1a, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@17a9508, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@1194c86, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1613a5c, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@14b9d79, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@9f75d8, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@1ef3254, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4d46eb, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@756b4c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1602a32, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@aae53d, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@912cc2, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@fbe341, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@8dadd5, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@1d2f0b8, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@f11c1f, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@18fc376, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@158d72b, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@55a63b, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@197cfb8, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@127eea5, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@12e34c2, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@19e3758, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@5c6c05, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@f83a37, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@1ba060d, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@1930e9a, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@120581e, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@18bdf05, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@1414c4a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1fdf4e8, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@9ae0bb, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@168b47c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@10dde8f, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@201f5e, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@1d56f4, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@b458ca, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@22c10, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@1582400, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@192a8fc, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@448534, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@1e9106d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@12a69db, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1ddc36f, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@1290256, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@c789c7, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@188fea9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@13a1089, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@52de62, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@19ab26b, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@1978d15, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@17e1910, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@52df90, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@16d232b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@bc9389, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@b13376, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@114eade, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1f4f091, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@10f947d, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@1b72574, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@1e31329, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@19f5714, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@592830, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@e1ba54, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@aaa04, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@18b4b68, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1d54200, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1718e7d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@ab1d6c, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@156ac86, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@1865d88, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@8fa4af, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@6799a3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@86a5d3, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@41682, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@399a66, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1194694, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@e7e8ee, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@11f1252, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@189c3f6, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@6104da, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@61a432, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@11ed46, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@6d4e1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@51031f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@1430602, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@1ba9e35, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3ec68c, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@152b66a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@1153ab5, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1452544, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@ec04d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@d88528, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@bbb0af, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@1e45275, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@6d8d6d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@1cd19b3, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@1f903c6, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@6ee75c, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1629834, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@e26306, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@18e88ec, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@777648, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1ee1576, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@1e62c9d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1b8a5c1, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@18dcfc5, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@f2ab2, 2, 5): success
test SubList.testModRemove(java.util.Vector@74d2ed, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@12ef8e6, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@4e2943, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@7d25f7, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@f628bb, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@1d953cc, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1c0b4c6, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5f8908, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@1be6a4e, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@194cf3e, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@a7ef3c, 2, 5): success
test SubList.testModSet(java.util.LinkedList@112ad7d, 2, 5): success
test SubList.testModSet(java.util.Vector@5078f, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@3369f0, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@1a34581, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@2e2fb9, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@793ec4, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@1e6f25d, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@7a4ca6, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@449605, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@1367c8f, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@e582f0, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@9ca3ac, 2, 5): success
test SubList.testRemove(java.util.LinkedList@17ab93a, 2, 5): success
test SubList.testRemove(java.util.Vector@c50e6f, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@393a7, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@d5318, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@d433a4, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@86192d, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@1816858, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@1e4b0d4, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([989445826], 0, 1): success
test SubList.testSet([539452384], 0, 1): success
test SubList.testSet([-1429191415], 0, 1): success
test SubList.testSet([-1119521742], 0, 1): success
test SubList.testSet([-1636855761], 0, 1): success
test SubList.testSet([627112149], 0, 1): success
test SubList.testSet([1645849825], 0, 1): success
test SubList.testSet([1087505840], 0, 1): success
test SubList.testSet([-1756661331], 0, 1): success
test SubList.testSet(java.util.ArrayList@282b42, 2, 5): success
test SubList.testSet(java.util.LinkedList@44167b, 2, 5): success
test SubList.testSet(java.util.Vector@3c4d8f, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@13ef05, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@1ff6e77, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@3e8b31, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1cb27cb, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@1e626a8, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1e8971f, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@ceef71, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@d54735, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1455277, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@1adb44, 2, 5): success
test SubList.testSubList(java.util.LinkedList@58a61f, 2, 5): success
test SubList.testSubList(java.util.Vector@528636, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@776766, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@16b530d, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@11f1f91, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1950211, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@9e015b, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1824da7, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@185b0e6, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@860bbd, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@dbc0f6, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@1e59248, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@8b1e41, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@119b8cf, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@1c6f205, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@15ec83a, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@99d5c8, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@99d5c8, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@60ae56, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1591093, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@c12f70, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1e05b97, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@fdc817, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@9ef5d1, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@17d10fb, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@14b94ad, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1a1f15d, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@169f5f8, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@169f5f8, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@6ab24, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@159df74, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@1439ed4, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@5b8ee6, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@14aed07, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1289b86, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@71e1b5, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@d20b81, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1026ae6, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@e4feac, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@e4feac, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@ac4c05, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1029826, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@a4f5d7, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@564fd6, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@1d2f0b6, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@eb3711, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1e00064, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@944d0b, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@cc4021, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@b593b8, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@b593b8, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@13641ed, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@17e3ba6, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@f82141, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@20eda7, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@8e43c7, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1124bb1, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@9cb60b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@d015e5, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1208735, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1c12573, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1c12573, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@1b1d3ce, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@ec0ea8, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@39250, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@119288c, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@1beb155, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@587676, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1c15d96, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@1ac9c47, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@9d7a49, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@10abf5e, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@10abf5e, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1bf1cb4, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@f676e5, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5fe309, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1c8ea43, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@e4c4f0, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1c670eb, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@46dea1, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@9f3265, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@a644b5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1fefb21, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1fefb21, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1fec763, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@12a3c55, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@11d8a6f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@a7c3f7, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@1373571, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@40452a, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@18604d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@170a5bf, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1731beb, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1fdc26a, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1fdc26a, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@103c476, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@102a35, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@679449, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@719ba4, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@c955e7, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1ae1032, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6923b9, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@1208269, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@16acf2f, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@1629, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@e27b79, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@9e2e7, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@476e7, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@184e3c9, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@952ca1, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1ff7c34, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@8958f2, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@d7763f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@16062fe, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1e318a3, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1e318a3, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@1f034ee, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@caa961, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@630de3, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@1b9a2c4, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
