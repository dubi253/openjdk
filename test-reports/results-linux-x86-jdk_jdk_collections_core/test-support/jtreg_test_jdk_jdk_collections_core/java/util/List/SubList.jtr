#Test Results (version 2)
#Sat Apr 13 18:16:06 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=643 0\:00\:00.643
end=Sat Apr 13 18\:16\:06 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az881-854.kxqfgnpkrxgetcyd3drl2yrtfd.ex.internal.cloudapp.net
javatestOS=Linux 6.5.0-1017-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Sat Apr 13 18\:16\:06 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1017-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757350400,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1017-azure
totalTime=643
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/559)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f)
OpenJDK Server VM (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/274)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Sat Apr 13 18:16:06 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Sat Apr 13 18:16:06 UTC 2024
elapsed time (seconds): 0.04
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:16:06 UTC 2024
Mode: agentvm
Agent id: 2
finished: Sat Apr 13 18:16:06 UTC 2024
elapsed time (seconds): 0.039
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Sat Apr 13 18:16:06 UTC 2024
Test directory:
  compile: SubList
finished: Sat Apr 13 18:16:06 UTC 2024
elapsed time (seconds): 0.142
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:16:06 UTC 2024
Mode: agentvm
Agent id: 2
finished: Sat Apr 13 18:16:06 UTC 2024
elapsed time (seconds): 0.142
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/207)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Sat Apr 13 18:16:06 UTC 2024
Mode: agentvm
Agent id: 4
finished: Sat Apr 13 18:16:06 UTC 2024
elapsed time (seconds): 0.46
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91128)----------
Seed from RandomFactory = -1854553579807675381L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1627972129], 0, 1): success
test SubList.testAdd([42, -1837306266], 0, 1): success
test SubList.testAdd([42, -105806037], 0, 1): success
test SubList.testAdd([42, 2000577708], 0, 1): success
test SubList.testAdd([42, 703429998], 0, 1): success
test SubList.testAdd([42, -943436204], 0, 1): success
test SubList.testAdd([42, 856781951], 0, 1): success
test SubList.testAdd([42, -1300009631], 0, 1): success
test SubList.testAdd([42, -783037522], 0, 1): success
test SubList.testAdd(java.util.ArrayList@c638d1, 2, 5): success
test SubList.testAdd(java.util.LinkedList@10db7ae, 2, 5): success
test SubList.testAdd(java.util.Vector@d5cba1, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@e5005b, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@901502, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@12cb878, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@10fb269, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@c62664, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@10e2db5, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@16fee53, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@879903, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@bac2f2, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-298533118, 42], 0, 1): success
test SubList.testAddAtPos([42, -728304924], 0, 1): success
test SubList.testAddAtPos([42, -102498086], 0, 1): success
test SubList.testAddAtPos([42, -548702206], 0, 1): success
test SubList.testAddAtPos([42, 1430361941], 0, 1): success
test SubList.testAddAtPos([42, -708121927], 0, 1): success
test SubList.testAddAtPos([1188967274, 42], 0, 1): success
test SubList.testAddAtPos([-985856716, 42], 0, 1): success
test SubList.testAddAtPos([42, -1435737062], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@1a647f8, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@16a118e, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@1fd967e, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@6e579b, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@15eb5ac, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@f44c84, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@39205f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@cde5c2, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@100455b, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@102b8f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@24100f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1bfae1a, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@7e70a3, 2, 5): success
test SubList.testClear(java.util.LinkedList@1758014, 2, 5): success
test SubList.testClear(java.util.Vector@1ed42e, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@5ea093, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@25f062, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1edf9b3, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@125c1f6, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@1eb7911, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@53764a, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@4d84d6, 2, 5): success
test SubList.testEquals(java.util.LinkedList@2c7865, 2, 5): success
test SubList.testEquals(java.util.Vector@11c9c15, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@1ea8279, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@1b9db0b, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@18c090a, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@19c7c4, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@5a0f9e, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5921a6, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1f611f0, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@14cbb88, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1a42c7e, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@1c7b337, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@18793fb, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@e14c73, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@20023a, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@15f446d, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@142f349, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@142f349, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@f88bfb, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@b24cd2, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1da6e23, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1775d, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@67b346, 2, 5): success
test SubList.testGet(java.util.LinkedList@1a99575, 2, 5): success
test SubList.testGet(java.util.Vector@1e4953e, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@134b579, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@132a7ec, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@17b8ec3, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1711a05, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@dc26d8, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@8b11c1, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@11f5b16, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@8e57ae, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1b3538a, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@1131eb6, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1dfc0ff, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1f26ea6, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@fe1ecd, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@d11180, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@12569d6, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@12569d6, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@4fb0c8, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@547447, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@75a7c, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1ece00a, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@a5292a, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@917df1, 2, 5): success
test SubList.testIndexOf(java.util.Vector@e2e5be, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@d9e72a, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@1fe0732, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@69707e, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1edd92f, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@d04017, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1b46c02, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1a90260, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@5f4551, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@136d442, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@a76a26, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1211d7f, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@13d2ee4, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@3bd081, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@16336e9, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@b223bd, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@b223bd, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@bda2ac, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@13a2f17, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@8ddf2d, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@11b06f4, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@da03a, 2, 5): success
test SubList.testIterator(java.util.LinkedList@2ab1ae, 2, 5): success
test SubList.testIterator(java.util.Vector@11f642c, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@1f0405, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@36598c, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@c6b424, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@122db8a, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@16a3984, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@17a1c4e, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1a5eaa9, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@1862390, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2c90dc, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@996a22, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@58c112, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@14cdbf8, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@6301ee, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1be24f8, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@33490f, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@33490f, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@1121235, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@1e155e4, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@da4230, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@dc9929, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@190b849, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@1d53cad, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@1f39267, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@ea6262, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@141b70f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@af5cc9, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1334d0f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@894e1f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1803209, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@11b16ac, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@12a71b7, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1d74b0c, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@4e5142, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@ed8f04, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@17c811b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@82806e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@12a0ffd, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1226157, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1226157, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@1d88d79, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@1a54811, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@195d99d, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5bcdc3, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@f264ba, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@1b9c6cb, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@bd535, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@961655, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@49306c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@1d24c88, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@783646, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@7a5ccd, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1a07adf, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@fc391, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@3fa7b7, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@53654f, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@4a8a72, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@21eb71, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1730cf6, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@15e7648, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@10decfd, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@b3cf6e, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@dad24a, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@4b00dd, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1955394, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@1db7b40, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3821f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1050fbd, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@45c7ab, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@cac639, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@187ef5e, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@187ef5e, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@2cd99b, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1d65cd5, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@784b35, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4724a0, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@169cfe6, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@14850b8, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1c8e3cd, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@e71cf, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1a60b0b, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1bd2119, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1bd2119, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@18ee91b, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@10aa402, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@17079f, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@aa3750, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@5daf30, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@10b45d0, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@fc8ded, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1fe9b91, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@fa9d6, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@d94358, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1ed8654, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1e9c9a1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@a44a64, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@9a9cb8, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@36a5d3, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@955ec8, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@5c077f, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1d7b425, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1acff91, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@91484a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@5e31f, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@17db194, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@853a36, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@d3f793, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@18b0146, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@1121c, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@18f872, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@9ab6b3, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@6fb02e, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1a243dd, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@54dbf8, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@54dbf8, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1000b53, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@3f4035, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1e68118, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@188460, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@1d37c50, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@105e8d1, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@6fea51, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@12558cb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@17ea070, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@136b8f8, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@723326, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@cc7433, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@a72fd5, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@1329496, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@f5d69e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@38c25c, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@15a8375, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@166e41f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1156d2e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@13fbd68, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@12b74ce, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@15806f3, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1198978349], 0, 1): success
test SubList.testListIteratorSet([1613096648], 0, 1): success
test SubList.testListIteratorSet([-1636603002], 0, 1): success
test SubList.testListIteratorSet([445795771], 0, 1): success
test SubList.testListIteratorSet([546814732], 0, 1): success
test SubList.testListIteratorSet([-892027073], 0, 1): success
test SubList.testListIteratorSet([-1134287102], 0, 1): success
test SubList.testListIteratorSet([-795802447], 0, 1): success
test SubList.testListIteratorSet([-2146611804], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@154cad4, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@1d8115, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@b01541, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@ecd8c3, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@97ca97, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@14667bb, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@1d8330d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@c6ccd3, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@130c5d2, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1fbb176, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@15009cb, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1c3537, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-1347793728], 0, 1): success
test SubList.testListIteratorSetPrevious([-1415485801], 0, 1): success
test SubList.testListIteratorSetPrevious([1501636120], 0, 1): success
test SubList.testListIteratorSetPrevious([671249626], 0, 1): success
test SubList.testListIteratorSetPrevious([2039042674], 0, 1): success
test SubList.testListIteratorSetPrevious([-1860191083], 0, 1): success
test SubList.testListIteratorSetPrevious([416770557], 0, 1): success
test SubList.testListIteratorSetPrevious([298031829], 0, 1): success
test SubList.testListIteratorSetPrevious([-1447291276], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@d0130, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@21217a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@6e0d20, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@1ef3bf7, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@1c2cdf5, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@c83715, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@5f3fc7, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@12d8b3f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@d1f8e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@e6c9de, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@6505ee, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@170359e, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@12bd367, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@130c990, 2, 5): success
test SubList.testModAdd(java.util.Vector@45bbbe, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@5a21af, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@1818efb, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1957091, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@f01187, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@19e832d, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@1974926, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@85e23b, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@a96afc, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@fa54fb, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@1c88534, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@119a33f, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@13b9bcd, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@13ee272, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@4337c4, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7102d1, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@14447a7, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@1a7e52a, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@16947fe, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4cb87a, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@1714baa, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6ceea8, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@ac2668, 2, 5): success
test SubList.testModClear(java.util.LinkedList@1aff298, 2, 5): success
test SubList.testModClear(java.util.Vector@1b1c020, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@d79193, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@db752f, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@75ae80, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@9e7dcd, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@cf2a8f, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@329fb0, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@faeb05, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@98c517, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@150c3d8, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@1f1da3, 2, 5): success
test SubList.testModGet(java.util.LinkedList@17ea52b, 2, 5): success
test SubList.testModGet(java.util.Vector@ec42fc, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@3b5b87, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@1a98f1c, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@3d0018, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@9cd18, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@9f597b, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@e19cbf, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@18356ef, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@cd2f2e, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@611f53, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@87f97e, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@17e1c2f, 2, 5): success
test SubList.testModHashCode(java.util.Vector@14c41ee, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@2c0111, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@1c587ba, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@17a0733, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@166cc57, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@f064d1, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@f2126e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@17968fb, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@13296c9, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1145c01, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@1325b65, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@39ea38, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@a87688, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@bf103c, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@195cdde, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@58870d, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@6e6bb4, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@36e5bd, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@115fb5e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1d68d9c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@1e9ebd4, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@5bca34, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@1bdd8ab, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@d93336, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@4010f7, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@e78b2a, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@f4e784, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1acede5, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@ca842a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@1630145, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@d8c7f1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@b9d019, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@10844bc, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@477195, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@186f8dd, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@15e3132, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@1487c89, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@1feb6fc, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@16fc537, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@c0aeb5, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@6aab3a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@6e1cd, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@38992a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@343842, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@1e2e70e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@730f5c, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@1d000d1, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@15190e, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@925e6f, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@a7a9dc, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@12ab4ec, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@35d081, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@adf6b6, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@dc76ad, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@e29b21, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1502e93, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@3a5a4a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@278236, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@1808fd1, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@1172ae8, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@14cad09, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@1bfab80, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@1b6b6b0, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3e9a35, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@dc6d70, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@e87e15, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@14045a2, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@11d2430, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@caa4f6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1c0b318, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@1ae1315, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@74fd89, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@971c66, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@8a348f, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@1b0fe76, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1c3c3dc, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1fc3209, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@1913be0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@150d07b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@10faaa0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@14b6c08, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@f797dd, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@282a8e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@b7670b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@15825a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@171afe5, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@1c7dfa9, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1ca1933, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1e05cc3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@152478c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@196d174, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4adafa, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@1c850f8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@a8878b, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@1c0f1d5, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@1bda278, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@b123ad, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@18b7528, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@199ef3a, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1cc458d, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@18024d6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@19f22b2, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@166124f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1fef74, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@105decf, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@e0e75a, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@1c09ae7, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@9983d4, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@170b735, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@1646784, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@130dc63, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@605ef1, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@55aa8e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@cd2d8c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@10a8b71, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@13030a2, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@27214e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@af6bee, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@645656, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@d1ab33, 2, 5): success
test SubList.testModRemove(java.util.Vector@57433f, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@1dd0355, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@15c6d3e, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@55a2f6, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1351a4b, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@1cbf9e9, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@ed8a5f, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1c2ee8c, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@1211f5f, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@8d6d83, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@ec1027, 2, 5): success
test SubList.testModSet(java.util.LinkedList@951cfa, 2, 5): success
test SubList.testModSet(java.util.Vector@209cbc, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@160e6d9, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@1d1c5d4, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@da2fbd, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1af120e, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@9639a, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1c72b52, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1a3fa32, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@1b050f, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@42f900, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@fc7450, 2, 5): success
test SubList.testRemove(java.util.LinkedList@130d68, 2, 5): success
test SubList.testRemove(java.util.Vector@21c1f2, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1091721, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@7f6fd2, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@16140df, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@f61db3, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@68483e, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@7c0a9c, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1627397654], 0, 1): success
test SubList.testSet([-876797702], 0, 1): success
test SubList.testSet([1160001484], 0, 1): success
test SubList.testSet([2074262549], 0, 1): success
test SubList.testSet([-841700992], 0, 1): success
test SubList.testSet([41771672], 0, 1): success
test SubList.testSet([1607514256], 0, 1): success
test SubList.testSet([-1399303131], 0, 1): success
test SubList.testSet([-199072612], 0, 1): success
test SubList.testSet(java.util.ArrayList@9919d5, 2, 5): success
test SubList.testSet(java.util.LinkedList@1a90ef9, 2, 5): success
test SubList.testSet(java.util.Vector@3ea201, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@1596adf, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@c4f61, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1898d7e, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1137cc, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@3188a5, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1b688f3, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@8bcd85, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@815954, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@15f0ff, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@15c4738, 2, 5): success
test SubList.testSubList(java.util.LinkedList@164b77d, 2, 5): success
test SubList.testSubList(java.util.Vector@3ce425, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@1f8bce9, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@1e44c73, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1e74c56, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@11dc13, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@1ee576a, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6bf5a3, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@523556, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@1860b16, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@4dcfa5, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@ff781, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@753678, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1430ba3, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@170c8d9, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@66981a, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@1a5c124, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@1a5c124, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1c0849a, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1cdb1e2, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@5319ec, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@ad59b1, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@1ac40c5, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1c8de45, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@15212ce, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@11b6322, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@7f69d, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@91cfb6, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@91cfb6, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1a62b79, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1768062, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@f16c98, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@1df87f4, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@b191be, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@fe28d6, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1424d39, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@1fb57aa, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1460cfc, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@23bdfc, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@23bdfc, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@e1ff46, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1de2917, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@6764ef, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@ea9a79, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@1fafad6, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1431401, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1a13351, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@1be3ee8, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@11f32f8, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@f39deb, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@f39deb, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@139a081, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@d143a5, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@b86484, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@dfaee6, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@7071d2, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@119cec, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1baee4e, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@517bae, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@17a5a60, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@806c98, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@806c98, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@1ef4b2d, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@5e9e8d, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@138ff22, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1bfda8b, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@6764c9, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1af4daa, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1624e08, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@1c76394, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1935024, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@17ff025, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@17ff025, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1358ef1, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@d9eadc, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@17d63b5, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@e30624, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@184ca81, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1796699, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@9dee2c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@1f9f4f7, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@14063d4, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@2b759e, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@2b759e, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@194ac94, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@132926e, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@8152a8, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@5727bd, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@1943758, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@19446db, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@113752, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@19b49cf, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1da9bf5, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@863ba9, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@863ba9, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@126fda8, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@9dd32e, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@683062, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@f0d5c0, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@183edfd, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5409ce, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@11b078a, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@14071a9, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1f66778, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@138fb0e, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@94398d, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@24fb93, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@3ec243, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@19bc634, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@10239e6, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@114e059, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@fb3cd8, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@989b9c, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1c93a35, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@118ddc6, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@118ddc6, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@1c7e2de, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@15ddb8c, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@f86387, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@4f9fc1, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
