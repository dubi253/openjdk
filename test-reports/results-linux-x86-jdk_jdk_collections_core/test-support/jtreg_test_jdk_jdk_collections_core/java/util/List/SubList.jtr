#Test Results (version 2)
#Sun Mar 17 17:52:39 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=975 0\:00\:00.975
end=Sun Mar 17 17\:52\:39 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az714-44
javatestOS=Linux 6.5.0-1016-azure (amd64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Sun Mar 17 17\:52\:38 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1016-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757350400,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1016-azure
totalTime=976
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/559)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc)
OpenJDK Server VM (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Sun Mar 17 17:52:38 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Sun Mar 17 17:52:38 UTC 2024
elapsed time (seconds): 0.041
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Sun Mar 17 17:52:38 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sun Mar 17 17:52:38 UTC 2024
elapsed time (seconds): 0.041
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Sun Mar 17 17:52:38 UTC 2024
Test directory:
  compile: SubList
finished: Sun Mar 17 17:52:38 UTC 2024
elapsed time (seconds): 0.263
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Sun Mar 17 17:52:38 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sun Mar 17 17:52:38 UTC 2024
elapsed time (seconds): 0.262
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/207)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Sun Mar 17 17:52:38 UTC 2024
Mode: agentvm
Agent id: 3
finished: Sun Mar 17 17:52:39 UTC 2024
elapsed time (seconds): 0.67
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91117)----------
Seed from RandomFactory = -6589519862918947833L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 445413623], 0, 1): success
test SubList.testAdd([42, 1342132153], 0, 1): success
test SubList.testAdd([42, 668153063], 0, 1): success
test SubList.testAdd([42, 1955297434], 0, 1): success
test SubList.testAdd([42, 597777173], 0, 1): success
test SubList.testAdd([42, -540450255], 0, 1): success
test SubList.testAdd([42, 1258121038], 0, 1): success
test SubList.testAdd([42, -953658416], 0, 1): success
test SubList.testAdd([42, -1725984771], 0, 1): success
test SubList.testAdd(java.util.ArrayList@a886e2, 2, 5): success
test SubList.testAdd(java.util.LinkedList@ee54e0, 2, 5): success
test SubList.testAdd(java.util.Vector@12b9692, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@137e450, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@16452d9, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@11104cc, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@40eb06, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@1aefb99, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@1dee281, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@d24ec0, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@14a2da2, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@19fdb91, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 1217201721], 0, 1): success
test SubList.testAddAtPos([42, -467673080], 0, 1): success
test SubList.testAddAtPos([42, 759060977], 0, 1): success
test SubList.testAddAtPos([42, 991432183], 0, 1): success
test SubList.testAddAtPos([42, -1456359871], 0, 1): success
test SubList.testAddAtPos([42, 995692635], 0, 1): success
test SubList.testAddAtPos([-2037786763, 42], 0, 1): success
test SubList.testAddAtPos([435851629, 42], 0, 1): success
test SubList.testAddAtPos([1813729509, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@b10a1a, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@128e163, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@f13434, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@1bf8ccc, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@e990fc, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@539a34, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@10f8de0, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@11fb3c5, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@10aa1d2, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2c1f1, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@8cdfcf, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@d557d3, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@baef97, 2, 5): success
test SubList.testClear(java.util.LinkedList@1d44f24, 2, 5): success
test SubList.testClear(java.util.Vector@7900e, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@31d791, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@d0bf39, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@7d6c22, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@199b15b, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@1ecb001, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@9181e3, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@1b93f3b, 2, 5): success
test SubList.testEquals(java.util.LinkedList@1fa3a32, 2, 5): success
test SubList.testEquals(java.util.Vector@b88de2, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@a238dd, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@11fdfac, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@172be3f, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@15db17d, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@160db4b, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@b6750f, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5b588d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@4c6c75, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@447d39, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@1ed1127, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@b95d57, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@19d199d, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@fd042d, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@ac5080, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@d13211, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@d13211, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@178a2eb, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@37a4b8, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@980063, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@122eeb2, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@16646b9, 2, 5): success
test SubList.testGet(java.util.LinkedList@147b02d, 2, 5): success
test SubList.testGet(java.util.Vector@165b59b, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@28deb2, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@16eb51a, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1150e00, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@b265b, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@eb464, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1f2f302, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1455797, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@cfdf7a, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@74ec1b, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@8056a4, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@86613a, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@96945c, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@671331, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1f04bb5, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@da1931, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@da1931, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1e51f5e, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1c51371, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@cfbd49, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@19c90, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@130da73, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@59b8c3, 2, 5): success
test SubList.testIndexOf(java.util.Vector@29189f, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@aa9807, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@aabe02, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@e4fb26, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1ea352, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@f3ec30, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@8c7429, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@84c32b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@8372c5, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@65dbe6, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@17eff45, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@d6454a, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1492dbe, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@1e6d2cb, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1c659a9, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1e32fd7, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1e32fd7, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@415dd, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@790e16, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1db6a40, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1e5b000, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@1ac156e, 2, 5): success
test SubList.testIterator(java.util.LinkedList@86b14b, 2, 5): success
test SubList.testIterator(java.util.Vector@1d0f34d, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@7ae46e, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@106061, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@4fc312, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1786c7, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@15824be, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@137cfda, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1ff14c0, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@1824ca5, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@e0a81e, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@1244d75, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@7cf0d2, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@14e9964, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@dd57b8, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@40242d, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@e2ef28, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@e2ef28, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@155af4c, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@d21834, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@7d6afe, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@c2e286, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@89eebc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@d3419d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@9ba13e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@14ddd4b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@1bc76f0, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@90455c, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@15f6159, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@194fe8d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@757905, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@a1443c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@19e0881, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@3f2921, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@17b77da, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1e9a72c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1667e4b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@b5c0a8, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@153a4a6, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1220c0a, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1220c0a, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@5fb281, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@46fa09, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@14150af, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@f62e5f, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@1ca77a2, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@1f81b37, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@25bd74, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@d6887c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@13de1e6, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@1217ae5, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1444c11, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@75f35f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@19c8010, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@5a2a87, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@1a59dc0, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@109173, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@1077638, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@cc8fe0, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1853262, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1cba553, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@1b815b2, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@f60ec8, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@132115b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@180b6cb, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6a0ff0, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@415ed4, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@30d116, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@a6722f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@1291e7c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@b3c9a6, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@17dd39, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@17dd39, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@85733b, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@17f14ea, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@c80, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1d8654a, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@15d1193, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@a6519, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@c44280, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@1502cb, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@4d43bd, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@187b10a, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@187b10a, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@19d1062, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@111900e, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@1763770, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@556bd5, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@5077ad, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@122fd48, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5be720, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@be9717, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@7e745e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1541623, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@9fe0c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1001526, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@fb215f, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@e033d3, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@e14c9b, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@1a5d102, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@15c1110, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@7114db, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7590f8, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6e143c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1ebd7df, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1a2846a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@29b173, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@124939e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1fa186d, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@9dc3fd, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1dd946f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@a99ffc, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@54b48b, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@93ea8, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1567c34, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1567c34, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@5a6d84, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@d3bb2f, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6fe1a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1fbf071, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@fd2f08, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@87b697, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@ba7c15, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@11a30ea, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@dc4b8c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@72098, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1d0361b, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@7e202d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1cd6529, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@4bed0e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@1e061f7, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@1b64d84, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2731ea, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@1e4f7b1, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1155af4, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@15de03f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@69c689, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@12612ae, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([53723041], 0, 1): success
test SubList.testListIteratorSet([-151948919], 0, 1): success
test SubList.testListIteratorSet([-592408335], 0, 1): success
test SubList.testListIteratorSet([740629098], 0, 1): success
test SubList.testListIteratorSet([-1773325636], 0, 1): success
test SubList.testListIteratorSet([-404416775], 0, 1): success
test SubList.testListIteratorSet([-323696034], 0, 1): success
test SubList.testListIteratorSet([-1073228381], 0, 1): success
test SubList.testListIteratorSet([1484175455], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@6b939e, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@16e5873, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@1cd8074, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@511782, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@be2a35, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@e6ef, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@cca309, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@1da4d2f, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@16e4cc9, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@18d5e6c, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@1a5f214, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@423921, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-1332061464], 0, 1): success
test SubList.testListIteratorSetPrevious([-1381501822], 0, 1): success
test SubList.testListIteratorSetPrevious([-209829403], 0, 1): success
test SubList.testListIteratorSetPrevious([624611936], 0, 1): success
test SubList.testListIteratorSetPrevious([52154458], 0, 1): success
test SubList.testListIteratorSetPrevious([-1870956117], 0, 1): success
test SubList.testListIteratorSetPrevious([-1824264033], 0, 1): success
test SubList.testListIteratorSetPrevious([1441281657], 0, 1): success
test SubList.testListIteratorSetPrevious([-2081845129], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@1c23d10, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@13798f4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@ade4d3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@101e07c, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@1c8fd43, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@664c05, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@59307e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@c83778, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@bfc272, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@18577e9, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@4d4872, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@148bb45, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@33cf2d, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@11061df, 2, 5): success
test SubList.testModAdd(java.util.Vector@230f9d, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@e8e3f8, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@1177fc5, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1fd0071, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@51a105, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@19a8a88, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@c66dc2, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@c4a612, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@1bcc7a1, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@cb86c2, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@18ff4a5, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@98d078, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@9de534, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@7dd8a3, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@185fe16, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1551351, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@159b0ed, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@b87fc3, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@1778ebe, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5f4f03, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@63e49d, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@9c4a6f, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@8bd8a7, 2, 5): success
test SubList.testModClear(java.util.LinkedList@212a93, 2, 5): success
test SubList.testModClear(java.util.Vector@1e5a76d, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@206b21, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@1f873d8, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@3bbc9b, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@ed55ca, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@1410937, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1c46c25, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@18d359b, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@1196af0, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1e64449, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@c6f24b, 2, 5): success
test SubList.testModGet(java.util.LinkedList@160881c, 2, 5): success
test SubList.testModGet(java.util.Vector@7702, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@17cf6a4, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@10d5228, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@c2f363, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@1736e2f, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@17bfa9b, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@7abef9, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@bc8569, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@9944dc, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@5d525c, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@107ae51, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@5668b6, 2, 5): success
test SubList.testModHashCode(java.util.Vector@d6cb03, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@96a04d, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@a0c494, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@19fd3c2, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@161347d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@b59db0, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1501261, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@46cca0, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@58467e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@df709f, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@a5bab3, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@138c968, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@67a869, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@a0bf9c, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@18101fa, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@135033e, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@f71e3f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@19d764f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@2b240d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1d17e4e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@d0ade0, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@197ec62, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@1b9566, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@40e774, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@693a7b, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@f9f5c8, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@5fc717, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@f5424e, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@1580875, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@1e40b78, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@12d6d8d, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1461e3a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@100709f, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1a3754b, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@115acaa, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@1e44683, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@30ac7d, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@1f13644, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@10dfa9b, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@f339d, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1372239, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@16ee019, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@72ae5e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1174478, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@1155017, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1e9f101, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@1c49351, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@7a0b39, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@123e859, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@f9dbb5, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@14909bc, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@c3110, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@a94fd8, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@45c695, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@e72b2f, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@90391e, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@ab2060, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@f3bef8, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@1c0905d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@3e7042, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@1fb2380, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@1b3bd55, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@11f5327, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@66c70f, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5d6eef, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@42286a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@c0b3a8, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@12aebbd, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@1e1cf47, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@12b0474, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@8772bb, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@fcda43, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@127e158, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@1867f58, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@17de48a, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3d4f6b, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@289698, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@d39176, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1a08946, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1e946c8, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@17631dd, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5cf072, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@142b7eb, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@7a1545, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@12599f7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@1698a76, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@11302ac, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6a98af, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@170bead, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@a3a53e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4ab557, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@9dbbfe, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@3d6dfd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1ebd5bc, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@279a4d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@1b0030a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@e045ed, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@1155833, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@103f402, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1e83ead, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@a9eef9, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@1cc8bde, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1a20a69, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@147bfb1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@13e7d4a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1967ec1, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@1b59093, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@16816bc, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@12cab3, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@1c6b12c, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@1e7f34c, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@17f8a52, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@1b4bcc3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@1bf2d75, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@ec8e41, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@78be6b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@1e607b9, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1154bfa, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@5f294a, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@cd1be1, 2, 5): success
test SubList.testModRemove(java.util.Vector@1c2defe, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@1445f94, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@1e704e1, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@14b0726, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@de1362, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@10596ee, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@957220, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1c522bb, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@1994a30, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@b7d540, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@1c0a4cd, 2, 5): success
test SubList.testModSet(java.util.LinkedList@12e08fc, 2, 5): success
test SubList.testModSet(java.util.Vector@17bca61, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@1e3326a, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@4bd471, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@18818f0, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1b3b594, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@1c86cb7, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@27b160, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@143ebf6, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@1b65416, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@ae48da, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@1719008, 2, 5): success
test SubList.testRemove(java.util.LinkedList@dfcad8, 2, 5): success
test SubList.testRemove(java.util.Vector@e5fad1, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@b0df2, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@3e46aa, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@123bae6, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@f9a9b9, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@1e009a9, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@18886d4, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1785522102], 0, 1): success
test SubList.testSet([-1887759804], 0, 1): success
test SubList.testSet([-935179878], 0, 1): success
test SubList.testSet([1801298629], 0, 1): success
test SubList.testSet([1420026686], 0, 1): success
test SubList.testSet([1282840305], 0, 1): success
test SubList.testSet([-704318340], 0, 1): success
test SubList.testSet([166038795], 0, 1): success
test SubList.testSet([1498869319], 0, 1): success
test SubList.testSet(java.util.ArrayList@ccfa32, 2, 5): success
test SubList.testSet(java.util.LinkedList@1d9ac6, 2, 5): success
test SubList.testSet(java.util.Vector@1d3e5ee, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@3ce37d, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@9a2f63, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1e7272f, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@41b5fb, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@ec2d48, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@16a6bb2, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@18b956d, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@972a7f, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@4d51ac, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@11ab8e, 2, 5): success
test SubList.testSubList(java.util.LinkedList@10b8ca8, 2, 5): success
test SubList.testSubList(java.util.Vector@1b31ed3, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@143039f, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@3468f6, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@381ec4, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@12aa08c, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@1120e56, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1c18a0d, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3c64e5, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@1eabc3b, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@b8aa7b, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@d54535, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@294af4, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1126782, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@c0952a, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@aa44a3, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@1b24749, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@1b24749, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@13a80d9, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@165ccc6, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@f9454a, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@14b5197, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@1bd700f, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1d4e37, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@713c95, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@121759c, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1774cb0, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@77f79b, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@77f79b, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@10d72e3, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@f31897, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@1677e37, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@1465044, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@5d2b76, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@a8e1, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@13e3585, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@c2bdbb, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@a796fd, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@1de035a, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@1de035a, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@e64b0a, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1a704f4, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@1056a33, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@18c0ebc, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@1f01980, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@43d2e1, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1c7c302, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@bfca69, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1c2a239, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@199c5a3, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@199c5a3, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1f40ae2, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@13c129a, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@405a43, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@4c3ae, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@a789dd, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1977ed6, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@12688b9, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@1ec649d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@fe348c, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1d871ce, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1d871ce, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@18379bc, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@1865ddc, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@1b0ca29, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@aa2623, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@14af07c, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@19096f0, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@84ac43, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@674244, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@a513d7, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@163f3ef, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@163f3ef, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@ead2da, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@12e414, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@19707e6, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@14eb58e, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@153a901, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1c7f958, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1f45389, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@1b8ed20, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@17e2eca, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1c9db9a, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1c9db9a, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@6e0097, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@30212, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@18f6e47, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@475ffb, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@1eb05d1, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@9dcbc3, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@98c4d5, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@f0db21, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@13e3117, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7fea8e, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7fea8e, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@17722f, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1586c0b, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@14b6c52, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@ba06ba, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@156ce55, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@16e8b58, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1b294bf, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@179c8fb, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@9cf81f, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@1c3db43, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@18cb72, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@10e3173, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@125ed97, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@a40202, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@a40684, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@15f5eb2, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@152fd06, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@6cd061, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@e624e2, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@a5f63a, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@a5f63a, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@b409c8, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@18fdf0f, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@1a8819f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@b07c7, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
