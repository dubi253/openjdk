#Test Results (version 2)
#Fri Mar 01 15:08:40 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=581 0\:00\:00.581
end=Fri Mar 01 15\:08\:40 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1198-260.olij14r4f4eezasrnq2weippdh.phxx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 15\:08\:39 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1015-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757338112,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=582
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/559)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-e22bbb87eb47c075e30a3ae770ba2979e9628e8f)
OpenJDK Server VM (build 23-internal-dubi253-e22bbb87eb47c075e30a3ae770ba2979e9628e8f, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 15:08:39 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 15:08:39 UTC 2024
elapsed time (seconds): 0.025
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 15:08:39 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 15:08:39 UTC 2024
elapsed time (seconds): 0.024
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 15:08:39 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 15:08:40 UTC 2024
elapsed time (seconds): 0.126
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 15:08:39 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 15:08:40 UTC 2024
elapsed time (seconds): 0.125
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 15:08:40 UTC 2024
Mode: agentvm
Agent id: 3
finished: Fri Mar 01 15:08:40 UTC 2024
elapsed time (seconds): 0.429
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91142)----------
Seed from RandomFactory = 178175935914386652L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 712530380], 0, 1): success
test SubList.testAdd([42, 1391409836], 0, 1): success
test SubList.testAdd([42, -1513778426], 0, 1): success
test SubList.testAdd([42, -1819613823], 0, 1): success
test SubList.testAdd([42, -1364392333], 0, 1): success
test SubList.testAdd([42, -179432366], 0, 1): success
test SubList.testAdd([42, 1551605351], 0, 1): success
test SubList.testAdd([42, -300521334], 0, 1): success
test SubList.testAdd([42, 1856533022], 0, 1): success
test SubList.testAdd(java.util.ArrayList@3437f8, 2, 5): success
test SubList.testAdd(java.util.LinkedList@86150d, 2, 5): success
test SubList.testAdd(java.util.Vector@15dd181, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@16d4d4d, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@163621a, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@11deeb3, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@e7fa2, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@a787f6, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@619b30, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@5d0661, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@197ae05, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@42b439, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([1733126277, 42], 0, 1): success
test SubList.testAddAtPos([42, 439089071], 0, 1): success
test SubList.testAddAtPos([-1979260458, 42], 0, 1): success
test SubList.testAddAtPos([1340498754, 42], 0, 1): success
test SubList.testAddAtPos([-1400454565, 42], 0, 1): success
test SubList.testAddAtPos([42, -922152081], 0, 1): success
test SubList.testAddAtPos([438665396, 42], 0, 1): success
test SubList.testAddAtPos([42, 780569261], 0, 1): success
test SubList.testAddAtPos([42, 2055651994], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@94a8f6, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@177d436, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@11d1056, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@c7341c, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@111d194, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1990f94, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@10096bd, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@1fc5abb, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@105cd20, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@61400f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@152fedf, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@140d2e3, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@1ddc142, 2, 5): success
test SubList.testClear(java.util.LinkedList@1d23448, 2, 5): success
test SubList.testClear(java.util.Vector@1e79713, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@81332e, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@f2908c, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@124252b, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@c6dcfc, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@16b2cdd, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@1728f18, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@1427e67, 2, 5): success
test SubList.testEquals(java.util.LinkedList@f329d4, 2, 5): success
test SubList.testEquals(java.util.Vector@1dec847, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@4d845d, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@11f8929, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@140abdd, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@188874a, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1fb7838, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@e43221, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@a3dfba, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@b11da8, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@c1c28f, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@161ccdc, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@fb6af1, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@46e5e, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@10c398e, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1bb3309, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@ec64ea, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@ec64ea, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@cab867, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1b4ca64, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1d11d73, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@12139b2, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@1896006, 2, 5): success
test SubList.testGet(java.util.LinkedList@14a73b0, 2, 5): success
test SubList.testGet(java.util.Vector@1b880a9, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@194944e, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@1e886cf, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@55ed9d, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@b8032d, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@1b86cdb, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1ab6880, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@10b5423, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@1e3da6d, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@36e3a6, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@15df5ae, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@cf7ac9, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1ef0cb4, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@143aa2, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1ffb213, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@1482253, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@1482253, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@105854b, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@12c0755, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@705266, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@13c9f20, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@db6d7b, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@13eae12, 2, 5): success
test SubList.testIndexOf(java.util.Vector@81b29, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@7e17a2, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@14d6982, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4fe036, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@e8bd3c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@20197, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@197fe83, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7d4e9c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@12d16c2, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@317bda, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@28ce91, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@bd7139, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@67343, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@9a5de, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@658309, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@16f34aa, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@16f34aa, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@2089b2, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@817c, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@9714dd, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1ace323, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@d8f30b, 2, 5): success
test SubList.testIterator(java.util.LinkedList@a14c22, 2, 5): success
test SubList.testIterator(java.util.Vector@f30b5b, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@f742d, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@480c06, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@537044, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1a192e9, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@106ff30, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@158945b, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@b79930, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@35de4d, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@22bd41, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@1d618c7, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@13a8627, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@15e817c, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@127ff91, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1fea0d8, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@fe267b, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@fe267b, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@1d2d66c, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@e69a6, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1d45f26, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@119d7db, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@11108b4, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@1696ecb, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@171aa89, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@66b80b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@a9a98b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@190216d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1889c86, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@773951, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@195ea03, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1ef2027, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@9cfc29, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@18a0c27, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@3d2d47, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@18fc70d, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@163d0ba, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@9cdb76, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1310b48, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1d221f5, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1d221f5, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@1060330, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@b147b9, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@4adf38, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@147e0fe, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@1f3c71e, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@12886e7, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@1dc4379, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@9c5825, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@db4f25, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@19e1169, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@190b38d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@177351, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@40751b, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@114765f, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@907a5e, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@974070, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@1755eca, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@da61bd, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1b6dc2f, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1a5ff88, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@4e604e, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@18606bd, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@125e09d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@c7c4cb, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@17d799a, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@172f923, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1a74c2a, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@61e8ea, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@a11d73, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@63e776, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@e8ccec, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@e8ccec, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@c92f84, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@11f91e9, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@c3996f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1fece2f, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@58d859, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@107c1f0, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@7aac6e, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@135d3fa, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@141a4bb, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1673fbf, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1673fbf, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@1350033, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@95fd95, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@14b08d2, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@136abe6, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@4154cd, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1305a9e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@25d4e2, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1a178dc, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@11fb1bc, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6a9df5, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@e08e9a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@17c2f99, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1e5a108, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@249c4b, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@de04e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@161d0ba, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@149dc3a, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@11cbc74, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@ab0eaf, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@c59b28, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@182ce1, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1076db0, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@36af70, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@9ed5b0, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1b4f7a5, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@1467652, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1b8f6a4, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1c4ba12, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@cfb042, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@dc5c11, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1ba67f7, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1ba67f7, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@5d398c, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@fa9f4d, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@38c46c, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@140f48a, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@1900666, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@13b9fda, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@e09c7a, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@cc00f6, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@1c2056e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@222aeb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@19ebe93, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@fe77e3, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1abbd03, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@1ed8ccf, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@d21b86, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@119cccc, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@e5f4b1, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@e7dbe0, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@17a983b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@12589e2, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@1d8f30e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7725b8, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1765200353], 0, 1): success
test SubList.testListIteratorSet([-1123373845], 0, 1): success
test SubList.testListIteratorSet([348041845], 0, 1): success
test SubList.testListIteratorSet([-1146922116], 0, 1): success
test SubList.testListIteratorSet([175513304], 0, 1): success
test SubList.testListIteratorSet([1958649674], 0, 1): success
test SubList.testListIteratorSet([-374386625], 0, 1): success
test SubList.testListIteratorSet([-536057474], 0, 1): success
test SubList.testListIteratorSet([-369678496], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@4b73c4, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@1529830, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@1b9c162, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@888da4, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@149fa37, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@88e773, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@fe0248, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@afc468, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@a2f3d9, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@13a55cf, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@f9a3bf, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@23c7ce, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-1701155879], 0, 1): success
test SubList.testListIteratorSetPrevious([1677322537], 0, 1): success
test SubList.testListIteratorSetPrevious([929477434], 0, 1): success
test SubList.testListIteratorSetPrevious([-628973474], 0, 1): success
test SubList.testListIteratorSetPrevious([1728159482], 0, 1): success
test SubList.testListIteratorSetPrevious([-1311661847], 0, 1): success
test SubList.testListIteratorSetPrevious([-2123285503], 0, 1): success
test SubList.testListIteratorSetPrevious([1060997222], 0, 1): success
test SubList.testListIteratorSetPrevious([1431276848], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@1384963, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@177f460, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@780b6d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@1ef4e18, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@1299835, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@b55e39, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@fdc8d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@16ba34e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@523bca, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5a9846, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@a2f463, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1d270de, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@106b1d5, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@1c3acf3, 2, 5): success
test SubList.testModAdd(java.util.Vector@674a5d, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@2b2e45, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@b5522f, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@f73be, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@f74840, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@18b479c, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@19f36e6, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@2e6702, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@11796ff, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@a68675, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@38ef6d, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@7e0a8e, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@1f08b54, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@13e6735, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@3c9cf0, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@205e13, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@102b7fc, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@19c501b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@14f9bcc, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1faac97, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@80a16a, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1521d52, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@9288d0, 2, 5): success
test SubList.testModClear(java.util.LinkedList@1c97666, 2, 5): success
test SubList.testModClear(java.util.Vector@2c596d, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@efed53, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@bc34c, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@165ad88, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@162563e, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@125b6d8, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@41f677, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1553dee, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@1e6d2b0, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6eeed, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@18e21d5, 2, 5): success
test SubList.testModGet(java.util.LinkedList@12df345, 2, 5): success
test SubList.testModGet(java.util.Vector@34a815, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@f87c37, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@ea83ac, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1d6871b, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@1ea8252, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@feba54, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@264bda, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6019d6, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@5e3ca9, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@c86157, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@148d4cc, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@51cd4a, 2, 5): success
test SubList.testModHashCode(java.util.Vector@1c22f75, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@edf66e, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@13cf3ae, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@ec5ed9, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@168883d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@6ade54, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1aa0ce7, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@10640de, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@753be7, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1260f0c, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@1aa384f, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@19d5273, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@117214c, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@1bfd1cd, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@3b4bc9, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1cc97a5, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@1314aa8, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@d7e5cd, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@1e4c7b8, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@d07d96, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@e6d60b, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@116f03, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@169de10, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@4208fd, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@2fd42d, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@1acfd93, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@a690e3, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1abaefb, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@2ce2cf, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@1adeca1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@f0b00a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1f88646, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@1761f05, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@78c482, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@171812b, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@cf3026, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@eea727, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@d7a198, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@d2b645, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1862f98, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@298f63, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@9efa34, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@84e0e0, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@b104df, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@940414, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1af8414, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@f2afc0, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@9091dd, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@1989bfe, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@e69a97, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@983ad6, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@18ee880, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1175b38, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@19141bd, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@b507b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@19c9752, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@e20bb1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@cfca3d, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@1a92b62, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@1268bd5, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@a01085, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@11de891, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@143731c, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@9c00b8, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@b689c0, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@11715b3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@10e9343, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@10fbf23, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@791d57, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@a5821a, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@1525a37, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@1c24db0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@49a510, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@12bcab0, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@1d2e37f, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@11bd7b5, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@e5645e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@a39213, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@a3521d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@16aa9b2, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@ec5a62, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@19b04f9, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@1da72e4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@1f10e7b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@1854ca5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@1eb7251, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@17e28aa, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@a158f9, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1891e4b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@17d9dfb, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@157f4a7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@348d38, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@900940, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@13e40ff, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@1a209a8, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@1b27e94, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@b82538, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@495d5b, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@cd4514, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@ab3076, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@da5273, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@1c2052f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@14232ea, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@178c741, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@1c7047d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@863483, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@18c8fce, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@13ce592, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@1719767, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@1322312, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@6334ac, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1c68509, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@1983409, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@1c67bdc, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@a34e5e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@60af01, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@29eb73, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@89642f, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@1ec2d68, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@3d741d, 2, 5): success
test SubList.testModRemove(java.util.Vector@1912a39, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@8908af, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@146e5cc, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@f26b9f, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@14ac6fa, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@b1aa96, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1294258, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1ad453f, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@1ec40bc, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@172b670, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@11308f1, 2, 5): success
test SubList.testModSet(java.util.LinkedList@1a2d976, 2, 5): success
test SubList.testModSet(java.util.Vector@f0b480, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@1ce560c, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@b81e49, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@17d1cfb, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1267ce0, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@fbf0f7, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@b0cb2e, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@10c5a58, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@c48393, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@103233, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@136ebab, 2, 5): success
test SubList.testRemove(java.util.LinkedList@8f47ea, 2, 5): success
test SubList.testRemove(java.util.Vector@12ead0a, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1d3cb0f, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@1d62268, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@fed241, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@40d865, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@f448a2, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@192f1a3, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([151720806], 0, 1): success
test SubList.testSet([-795797026], 0, 1): success
test SubList.testSet([673336623], 0, 1): success
test SubList.testSet([-1905813322], 0, 1): success
test SubList.testSet([361288804], 0, 1): success
test SubList.testSet([692639856], 0, 1): success
test SubList.testSet([246688590], 0, 1): success
test SubList.testSet([-1074607985], 0, 1): success
test SubList.testSet([-2069544207], 0, 1): success
test SubList.testSet(java.util.ArrayList@7a9a5c, 2, 5): success
test SubList.testSet(java.util.LinkedList@430e22, 2, 5): success
test SubList.testSet(java.util.Vector@11f18dd, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@c3388f, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@33933f, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1b70ba2, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1d761b9, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@ae6dd2, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@ff6ed6, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@e8dbfa, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@11fd1d5, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1b6fcd1, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@119b95e, 2, 5): success
test SubList.testSubList(java.util.LinkedList@decc2a, 2, 5): success
test SubList.testSubList(java.util.Vector@b8fde, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@1774ae2, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@17cafc0, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@ea9335, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@5b51ad, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@fa239e, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@12a520c, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1ebd875, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@a10e2d, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@423cb6, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@10f1e33, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@14d1bf1, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@cc7901, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@1360c4a, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1a91465, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@11936fc, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@11936fc, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1f2e708, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@171dc7d, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@cd03ce, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@bb461e, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@da972c, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6543be, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@435cd7, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@c9c26d, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@e9e528, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@1e0cf65, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@1e0cf65, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@12ac8e2, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@19de848, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@e4f2a0, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@1d02e2c, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@5e9a95, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@a3f194, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1e66577, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@3b08f7, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@2c4c9a, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@f50e72, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@f50e72, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@19316e3, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1d79611, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@142846b, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@163f15d, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@97a5d0, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@17b2270, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1f86011, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@1aef00c, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@c32c45, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@1248b91, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@1248b91, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1e97ac4, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@86af0b, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@a2a8d7, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@18400ca, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@3b18b3, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@6a0600, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@10186b9, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@1fb5ee5, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1085005, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@12232e8, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@12232e8, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@2e3545, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@15a8ff0, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@154a3c9, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1a833ba, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@18780c5, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@10b9d00, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1e69651, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@a9ea0a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@a62e7e, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@eb8daf, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@eb8daf, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1bc653c, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@125fc6d, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@467cb0, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@15fd7b4, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@8d536f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1e27fa5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@c7a911, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@19ab72f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1375799, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@59d570, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@59d570, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1db310b, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@67e577, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@181806, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@f91a69, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@1f41368, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@c26af, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1385f1, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@e1e69f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1789939, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1dee5bd, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1dee5bd, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1920314, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1017c38, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@194aa78, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1538a2c, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@6bd22b, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@14425d4, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@c4f71c, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@72dcb7, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@901f64, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@1f5253b, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@3647f9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@190884c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@16c5462, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1170ff1, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@83184e, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@19d3c4b, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@bf40f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@b3efd7, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@3e1141, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1dd2ba7, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1dd2ba7, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@1221735, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@3b58cd, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@19cc138, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@2d2bbb, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
