#Test Results (version 2)
#Fri Mar 15 23:50:56 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=601 0\:00\:00.601
end=Fri Mar 15 23\:50\:56 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1108-60.qx2vdsazxcienorwhmthlehiqd.ex.internal.cloudapp.net
javatestOS=Linux 6.5.0-1016-azure (amd64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 15 23\:50\:55 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1016-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757346304,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1016-azure
totalTime=602
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/559)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ced5e427db9ce5a0c5a328b30c33edee96767763)
OpenJDK Server VM (build 23-internal-dubi253-ced5e427db9ce5a0c5a328b30c33edee96767763, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 15 23:50:55 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 15 23:50:56 UTC 2024
elapsed time (seconds): 0.061
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 15 23:50:55 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 15 23:50:56 UTC 2024
elapsed time (seconds): 0.061
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 15 23:50:56 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 15 23:50:56 UTC 2024
elapsed time (seconds): 0.124
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 15 23:50:56 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 15 23:50:56 UTC 2024
elapsed time (seconds): 0.124
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 15 23:50:56 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 15 23:50:56 UTC 2024
elapsed time (seconds): 0.415
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91137)----------
Seed from RandomFactory = -1035029533103612938L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -52913868], 0, 1): success
test SubList.testAdd([42, -2007912666], 0, 1): success
test SubList.testAdd([42, 713981391], 0, 1): success
test SubList.testAdd([42, 378111462], 0, 1): success
test SubList.testAdd([42, 1176817187], 0, 1): success
test SubList.testAdd([42, 1581262060], 0, 1): success
test SubList.testAdd([42, 857226397], 0, 1): success
test SubList.testAdd([42, -1689413142], 0, 1): success
test SubList.testAdd([42, -550014105], 0, 1): success
test SubList.testAdd(java.util.ArrayList@1c5189f, 2, 5): success
test SubList.testAdd(java.util.LinkedList@4d90ef, 2, 5): success
test SubList.testAdd(java.util.Vector@1dbf448, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@1412888, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@1a8e5fc, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@8d565, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@ad6252, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@1144005, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@16c0466, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@13c47da, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@24a36b, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@e6b693, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-657755202, 42], 0, 1): success
test SubList.testAddAtPos([42, -1036235908], 0, 1): success
test SubList.testAddAtPos([-1973016873, 42], 0, 1): success
test SubList.testAddAtPos([42, -1529254113], 0, 1): success
test SubList.testAddAtPos([42, 1136968063], 0, 1): success
test SubList.testAddAtPos([-2094801918, 42], 0, 1): success
test SubList.testAddAtPos([42, 330128185], 0, 1): success
test SubList.testAddAtPos([-1156983044, 42], 0, 1): success
test SubList.testAddAtPos([1002054665, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@1056d1c, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@1589bb7, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@138464, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@34e1b, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@1cdf179, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@198019c, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1411d91, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@92f74c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1b41a53, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1c781f2, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@1b799a3, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1b813bd, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@59acf4, 2, 5): success
test SubList.testClear(java.util.LinkedList@fb57c9, 2, 5): success
test SubList.testClear(java.util.Vector@d166ad, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@178e066, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@7bb02f, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1869af0, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@1b808f4, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@36dd0b, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@c0e2df, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@2efe13, 2, 5): success
test SubList.testEquals(java.util.LinkedList@1cbca58, 2, 5): success
test SubList.testEquals(java.util.Vector@1f59504, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@1e4f2b6, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@1da2207, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@91a36a, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@900278, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@171299f, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1b58939, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@15a9765, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@18f7fb8, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@fe2a2e, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@106cece, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@13ba2e, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1085992, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@5c94b3, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1ed2fad, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@765077, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@765077, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@101c052, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@15d6d4b, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7b994a, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1645387, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@1f7055b, 2, 5): success
test SubList.testGet(java.util.LinkedList@3996d8, 2, 5): success
test SubList.testGet(java.util.Vector@a0d39f, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@15fb233, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@a39362, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6f3018, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@32c5f7, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@1eb662f, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@bbaab7, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1798b50, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@b36429, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@452bb3, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@1cf972e, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@19e3c07, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1e0cad2, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@b47e57, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@e672c9, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@a782d5, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@a782d5, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1f69777, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@3261ed, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@144926a, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1f1a7f9, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@6bfa90, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@11e0aeb, 2, 5): success
test SubList.testIndexOf(java.util.Vector@12d6df5, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@105bcd6, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@d59d54, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1bd324b, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1a6c5e7, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@effa80, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1e0841, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@6c1d63, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@7342a9, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@14eff83, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@19fac51, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@b1e17f, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@75305, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@1327a67, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5602fe, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@4614b, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@4614b, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@19b51c7, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@b1c324, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1255a03, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@726579, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@1126a87, 2, 5): success
test SubList.testIterator(java.util.LinkedList@b6c03d, 2, 5): success
test SubList.testIterator(java.util.Vector@1f3d0fc, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@10a1569, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@1f7d1a4, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@19d957a, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@bfbafe, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@7644c3, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1a38b45, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@18e8ea8, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@170e81c, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1cf75c2, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@a11f4f, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@dd6316, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@e65eed, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@181f8c9, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@17b9f02, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@e49b61, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@e49b61, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@19f8dd2, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@3a481a, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@13131f1, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1e58a4c, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@18f7bd4, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@1a17ec4, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@1f3a8cb, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@1c5bdce, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@117a378, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@11d12d0, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1d6dc3d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@33561e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@101e217, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@436918, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@1f81f58, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@d1e2c2, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@1c58f93, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@68d0d8, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@13a61fa, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@1bebb48, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@123c2b0, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@d08210, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@d08210, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@e93a44, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@12f635f, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@65c010, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@11822dc, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@de81e9, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@102fec, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@199dfbe, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@64313a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@18fdcf1, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@63d44, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@c34902, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@135b0f5, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@19625e7, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@acc200, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@f1af07, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@12c2723, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@104f128, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@7088e6, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@10fd4a3, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@4164be, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@1ea1894, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1059ae3, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@19fed9e, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@19bef1f, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3a55d6, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@1d28a2f, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1c9e3c6, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@c5fd63, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@66eef0, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@12f114b, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@bc1a3c, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@bc1a3c, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1e87a40, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1d84f76, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@11d85ae, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@e5b27f, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@b0d022, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@16a11fd, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@188f6f8, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@9fcde9, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1e4767, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@2e3bce, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@2e3bce, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@b79bd0, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@ab40bf, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@184589c, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@1507d74, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@1fef11c, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@181311c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1c6310e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@8f5b11, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1778f25, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@196fea9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@12b75ef, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1393e09, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1e8ae47, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@1c00f1b, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@1b620a0, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@38ed3f, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@a5e8ac, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@4b9ac8, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@c26289, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@15b973f, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1fe0b33, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1401676, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1c0dde6, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@18167a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3307aa, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@175ee7c, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@12c1fa1, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@fb4871, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@1936560, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@2dacfa, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@682bf5, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@682bf5, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@11eaeea, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@127c2b, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@19dcbf, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@180aaa1, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@5abbea, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@fa7767, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@1042e64, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1c5ff10, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@fbe77f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@428f53, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1fcc75e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@1340830, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@c7aeda, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@124a8a0, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@12471c3, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@dc75cf, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@fca6b7, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@146b9a9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@3545cf, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@18a3fcb, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@79f1d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1961691, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1718652673], 0, 1): success
test SubList.testListIteratorSet([649666992], 0, 1): success
test SubList.testListIteratorSet([338861258], 0, 1): success
test SubList.testListIteratorSet([14097515], 0, 1): success
test SubList.testListIteratorSet([1194617431], 0, 1): success
test SubList.testListIteratorSet([-2026877352], 0, 1): success
test SubList.testListIteratorSet([1829570731], 0, 1): success
test SubList.testListIteratorSet([958117629], 0, 1): success
test SubList.testListIteratorSet([1731444660], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@1559bb0, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@1a8de18, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@4fe5bf, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@aea034, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@10432f2, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@b17db1, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@f5abbe, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@7d7fb5, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@1f9a528, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@161587f, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@1dffb77, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@c62670, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-2119485304], 0, 1): success
test SubList.testListIteratorSetPrevious([-776332654], 0, 1): success
test SubList.testListIteratorSetPrevious([-1804130116], 0, 1): success
test SubList.testListIteratorSetPrevious([-1395509296], 0, 1): success
test SubList.testListIteratorSetPrevious([-2122935498], 0, 1): success
test SubList.testListIteratorSetPrevious([1116012028], 0, 1): success
test SubList.testListIteratorSetPrevious([599776029], 0, 1): success
test SubList.testListIteratorSetPrevious([417430214], 0, 1): success
test SubList.testListIteratorSetPrevious([1421635444], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@96351c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@1e988b8, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@9dbae4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@5870e6, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@7a9da8, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@b7c700, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@1a9b783, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@44d164, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@2794e3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@e208f0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@137d0d5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7954e4, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@fd2c06, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@12177fd, 2, 5): success
test SubList.testModAdd(java.util.Vector@9bdbd7, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@15b8605, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@b0d5f, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@ddff18, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@1dc979c, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@396721, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@4261bf, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@11b1eb3, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@7f3f54, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@eea96a, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@1e26279, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@ffe0a4, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@11ae745, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@1e98f9f, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@1fb6f2e, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@117e374, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@4d0ada, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@5a3a64, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@8dbbd5, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@18a57e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@19adca, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1e2b83c, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@13cc83b, 2, 5): success
test SubList.testModClear(java.util.LinkedList@893cc5, 2, 5): success
test SubList.testModClear(java.util.Vector@15512b, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@12859d4, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@15a657f, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@12ebe87, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1d86f22, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@3ddd38, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@13fad47, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@155de2c, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@1934e19, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@153c804, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@3d4d2c, 2, 5): success
test SubList.testModGet(java.util.LinkedList@178ad7f, 2, 5): success
test SubList.testModGet(java.util.Vector@1d277ed, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@1397a49, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@d5ba43, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@3c85c3, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@1314970, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@1dd1dc3, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@19c0a57, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@16b5132, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@1fb5983, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1cbbe01, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@7824f, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1113398, 2, 5): success
test SubList.testModHashCode(java.util.Vector@978fac, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@1f342ca, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@cc37a5, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1badaee, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1565dab, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@1a49036, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@16dbb36, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@30163f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@2dd68d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@149dae8, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@e0e1e1, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@6439e5, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@10f5ed1, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@771724, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@1e28c8c, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@12c69a6, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@17c34cd, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@ceaa8d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@5e712d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@165fc0d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@187509a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@8795bf, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@b67d34, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@190e9b, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@f9a65f, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@113c915, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@15d3fe2, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@53098c, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@a03765, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@8d72b5, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@4f43e6, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@14af1c1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@bb88b6, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1caa7ad, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@160d8a4, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@8ad346, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@a84634, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@1b2cbfd, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@943f42, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@18d7874, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@7fab07, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@1ce32d9, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@aaec80, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@b0443c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@5b43e3, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@15344fc, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@13cb4bb, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@167a17f, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@1081b80, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@ca8aa1, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@179d2a5, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@d3c2f6, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1210cdd, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@165d139, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@998657, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1c558b2, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@1ddb024, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@17b0dfd, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@9f46f4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@148ca2, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@1bb550, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@9c737d, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@449441, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@12be44e, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@c42e54, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@102f471, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5da853, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1ae78, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@1beeda, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@fcdadd, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@4455c, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@d29bc3, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@1c5141a, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@1fc69f0, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@1e405e5, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@17ddf35, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@121f6cc, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@1051c3f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1c55f5f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1d68185, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@1c00c04, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@e8be31, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@f9cc5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@e4975c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@1bae49c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@188d8bc, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@1f7cb54, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@dc1610, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@318418, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@3ed423, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@17f914a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7c6df1, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@2212ff, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4de45, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@78aa7f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@5deee3, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@12e405, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@fc9423, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@f6056d, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@10d02ce, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@195e787, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@1ec41c2, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@ff5f91, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5ae75e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@1bc5231, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1d68ebd, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@4c12b6, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@b463ed, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@92b79e, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@95b1e5, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@1873846, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@167d3fd, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@1dc2300, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@c72a8b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@fdfed8, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1e079b4, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@f89828, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@e32608, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@fa3f69, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@4cfb4, 2, 5): success
test SubList.testModRemove(java.util.Vector@1fb2173, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@12d8b20, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@15de79c, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1a817b, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@396e7, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@2ab9fb, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1be02ed, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@136dbff, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@1296c6d, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@42b42f, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@116cb77, 2, 5): success
test SubList.testModSet(java.util.LinkedList@13cc22e, 2, 5): success
test SubList.testModSet(java.util.Vector@1173ca6, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@28a3a2, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@408e87, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@180b86a, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@5675a4, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@19753d5, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1aca4ac, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4577dc, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@20ee88, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@564199, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@1138ebd, 2, 5): success
test SubList.testRemove(java.util.LinkedList@abb409, 2, 5): success
test SubList.testRemove(java.util.Vector@4fe9d5, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1377e5d, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@6b968e, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@13375d5, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@107602b, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@191d9cf, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@abeb55, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([518270337], 0, 1): success
test SubList.testSet([1750120531], 0, 1): success
test SubList.testSet([-438665894], 0, 1): success
test SubList.testSet([726106004], 0, 1): success
test SubList.testSet([2060907820], 0, 1): success
test SubList.testSet([-1769905048], 0, 1): success
test SubList.testSet([-1507732455], 0, 1): success
test SubList.testSet([1678807528], 0, 1): success
test SubList.testSet([-1457949081], 0, 1): success
test SubList.testSet(java.util.ArrayList@1c4eb49, 2, 5): success
test SubList.testSet(java.util.LinkedList@1c0e464, 2, 5): success
test SubList.testSet(java.util.Vector@15fb207, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@1ae388c, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@438808, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@16141d9, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@16c0ff2, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@a82bc9, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@947db6, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@dbd4c7, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@11cd43d, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@2c387d, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@18c7a8e, 2, 5): success
test SubList.testSubList(java.util.LinkedList@137c97e, 2, 5): success
test SubList.testSubList(java.util.Vector@1f16e07, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@1bc8c84, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@17b12fe, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@cb75dd, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@a1f4f7, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@44b58a, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1b57f1e, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@17aeef2, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@9367f, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1729afb, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@15f1b96, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1c18173, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@5cab49, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@63471e, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@3542fa, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@6e0590, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@6e0590, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@5ca040, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@15e0b84, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@946e14, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@682a12, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@f468e7, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@27e690, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@f26530, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@166a5bb, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1d78e68, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@d9aad1, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@d9aad1, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1166613, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@45b3a3, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@17b2159, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@2c4803, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@7f804a, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@283557, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1a1ee2d, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@afe9a8, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@dc5c40, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@e4f4cf, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@e4f4cf, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@10aeb7e, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@bbe818, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@1a5432b, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1cf62a0, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@1c381ce, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@549f00, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1b39f5c, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@b6465a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1cb1dcc, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@f35a00, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@f35a00, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@f31393, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2ba9cf, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@1fe1753, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@15da52b, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@1a9ba2e, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@15c68c2, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1751c22, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@1cdb539, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@159985d, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@16f0ef3, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@16f0ef3, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@b91282, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@b48da5, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@1c1918f, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@661e13, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@1cacc21, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1e5ad7a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@45f4b3, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@1781b77, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@613843, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@1c5f7f4, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@1c5f7f4, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@158a89e, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@e9a410, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@37572b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@e4107, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@39b445, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@14dc9f0, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@131bc78, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@24195f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@31305a, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@241264, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@241264, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@17db10e, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1e55f94, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@df708c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@19441d5, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@13fa88d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@173481d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@684936, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@14f82b9, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@13b3188, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1c5295a, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1c5295a, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1c3eb0a, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@9b9740, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1a59f28, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@53aadf, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@283e75, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@191362d, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@81bdb9, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@1b93fa7, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@18be2eb, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@9945e9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@679cb8, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@18be86f, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@44045d, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@12e6fa2, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@21c9b8, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@15114c2, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1cc5439, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@153e91a, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@666e86, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1216adc, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1216adc, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@182861f, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@4dffcf, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@190253e, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@3889b1, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
