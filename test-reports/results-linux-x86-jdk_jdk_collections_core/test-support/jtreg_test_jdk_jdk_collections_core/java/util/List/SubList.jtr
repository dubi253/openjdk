#Test Results (version 2)
#Thu Feb 29 23:25:17 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=648 0\:00\:00.648
end=Thu Feb 29 23\:25\:17 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az888-704.pbnfqiwlmsbu5gn45r0pdzho1a.cx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 23\:25\:16 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1015-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=648
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/559)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be)
OpenJDK Server VM (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 23:25:16 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 23:25:16 UTC 2024
elapsed time (seconds): 0.029
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:25:16 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 23:25:16 UTC 2024
elapsed time (seconds): 0.029
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/203)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 23:25:16 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 23:25:16 UTC 2024
elapsed time (seconds): 0.13
result: Passed. Build successful

#section:compile
----------messages:(7/270)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:25:16 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 23:25:16 UTC 2024
elapsed time (seconds): 0.13
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 23:25:16 UTC 2024
Mode: agentvm
Agent id: 3
finished: Thu Feb 29 23:25:17 UTC 2024
elapsed time (seconds): 0.488
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91119)----------
Seed from RandomFactory = 7901595363124008910L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1906957725], 0, 1): success
test SubList.testAdd([42, -178122315], 0, 1): success
test SubList.testAdd([42, -1749550826], 0, 1): success
test SubList.testAdd([42, 442031741], 0, 1): success
test SubList.testAdd([42, -381605822], 0, 1): success
test SubList.testAdd([42, 1783632795], 0, 1): success
test SubList.testAdd([42, -1321671744], 0, 1): success
test SubList.testAdd([42, -863693302], 0, 1): success
test SubList.testAdd([42, -1543432322], 0, 1): success
test SubList.testAdd(java.util.ArrayList@1b40f7c, 2, 5): success
test SubList.testAdd(java.util.LinkedList@972b62, 2, 5): success
test SubList.testAdd(java.util.Vector@31e684, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@1a0bdda, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@1e309b7, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1866811, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@63e67e, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@1449371, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@830e00, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@106de88, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@6c0324, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@148cccd, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 652905951], 0, 1): success
test SubList.testAddAtPos([42, 459928474], 0, 1): success
test SubList.testAddAtPos([-1574429672, 42], 0, 1): success
test SubList.testAddAtPos([-1622578109, 42], 0, 1): success
test SubList.testAddAtPos([42, -1916762464], 0, 1): success
test SubList.testAddAtPos([59967190, 42], 0, 1): success
test SubList.testAddAtPos([-1136036638, 42], 0, 1): success
test SubList.testAddAtPos([42, -2094652536], 0, 1): success
test SubList.testAddAtPos([-972886832, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@68db09, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@eaacfe, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@34b8f0, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@68d452, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@12bd199, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@a8293, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@17bc6da, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@1279098, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1a7973f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1d27fb8, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@e177a8, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@296a43, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@be1f59, 2, 5): success
test SubList.testClear(java.util.LinkedList@a20454, 2, 5): success
test SubList.testClear(java.util.Vector@1b1f4fc, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@99944b, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@19bb135, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1eb7f32, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@352ec4, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@1ee25b4, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@1bbbce0, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@d03685, 2, 5): success
test SubList.testEquals(java.util.LinkedList@1180a3d, 2, 5): success
test SubList.testEquals(java.util.Vector@1cb1aba, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@1966d5d, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@1215417, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1a94548, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7697a9, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1f40a5b, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1627d76, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5309d5, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@d21dc1, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@d095e2, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@8e0e8e, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@c9403a, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1827935, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@3aaa5, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@15685f, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@13a3eef, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@13a3eef, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1817e02, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@a96f2, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@9063cf, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@d0a17, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@deba28, 2, 5): success
test SubList.testGet(java.util.LinkedList@151a4a4, 2, 5): success
test SubList.testGet(java.util.Vector@a23208, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@12a8dfe, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@15fa766, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@dccdef, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@11f9993, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@1c81653, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@f55ca4, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@d51914, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@1af2148, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1f389b9, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@11818df, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@a4bda0, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@c3ec6a, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@d0437a, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@bbff0c, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@1a9c911, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@1a9c911, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@f12b56, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@ae6357, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1c7f967, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@182f240, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@752e10, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@ee05da, 2, 5): success
test SubList.testIndexOf(java.util.Vector@1359258, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@cce723, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@e9744d, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@fb47fe, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@d0700d, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@1366a1d, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@5a883f, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1a4d44e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@6909ba, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1b76656, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@1cd2a13, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@46e8e2, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1935dc2, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@1d514ae, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@63123, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@160db4f, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@160db4f, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1f2bda8, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@fa8a7f, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@a39325, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1492a9f, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@1ec78fb, 2, 5): success
test SubList.testIterator(java.util.LinkedList@1c670d, 2, 5): success
test SubList.testIterator(java.util.Vector@e14c60, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@2b980, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@2ff91d, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@cf9d37, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@bc9b1d, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@4311df, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1a8acd, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@8c12b0, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@8bec05, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@18e0d08, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@c95a02, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2ccc1b, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@14983dd, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@e55f27, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1123e21, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@71c612, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@71c612, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@1c0e98, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@edb73f, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1a90edd, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5bf08, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@1a4b585, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@9a93e4, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@196f6b0, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@133032f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@1a22549, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@89737d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@87b31c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@146da8e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@fe0fad, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@195a581, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@334c54, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6d5cb9, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@ab598d, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@e342, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@b04abc, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@11ff0ea, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@8b5066, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1bbb493, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1bbb493, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@1ae1e19, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@184b202, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1088990, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@10f5a1f, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@ae4db, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@cc0937, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@1c773be, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@326fc9, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@182e862, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@2e83da, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@da7a18, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@db91b1, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@117d673, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@93d477, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@d5ff17, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@1370eb6, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@1dfdfa5, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@170d1a0, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1747637, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1ad3ea1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@896f0c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@146746, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@fade6f, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@12f92bc, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1f671b8, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@18c0e14, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@ebe088, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@f71585, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@1705256, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@16e9114, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@5693ac, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@5693ac, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@7d8189, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1c515c1, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@2b2638, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7e56e3, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@11f5550, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@112b17f, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@40d427, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@1ca25b2, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@13950f1, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1767ab4, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1767ab4, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@194f02, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@19f0947, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@12e2952, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@116723d, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@90b28e, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@d2e71b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@111cb0c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@175fea3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@93cd17, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@170ca8c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1b00d6e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@3ee656, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@d3c1e, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@1b796e5, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@1b2f6fa, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@bec969, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@d6fefe, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@4e116, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1b6dad7, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@af75bb, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@84e7c9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1a106bc, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@8beab9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@7058d0, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@14236a3, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@748395, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@811dc7, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1934454, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@37a486, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1fd2982, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1c28e1f, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1c28e1f, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@923435, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1c1d532, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1ea305a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@e06675, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@15287ea, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@1cd7b10, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@3e42cc, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@164cf03, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@e450f0, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@71e6dc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@ebc9e1, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@14a608e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@5f3371, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@13eef3b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@150055a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@7cff43, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1e64857, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@c38c27, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1be2904, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@331cfd, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@1109331, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1de1a36, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1815308085], 0, 1): success
test SubList.testListIteratorSet([39816955], 0, 1): success
test SubList.testListIteratorSet([-1202584316], 0, 1): success
test SubList.testListIteratorSet([1041700506], 0, 1): success
test SubList.testListIteratorSet([-1761485760], 0, 1): success
test SubList.testListIteratorSet([-253212118], 0, 1): success
test SubList.testListIteratorSet([-1977695895], 0, 1): success
test SubList.testListIteratorSet([-1760766721], 0, 1): success
test SubList.testListIteratorSet([701826439], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@14749c9, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@13f1404, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@69b03d, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@fca3b0, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@1f2ad21, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@12ae82d, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@1aebb3a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@b5674e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@13aaaa3, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@953f7f, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@3fa471, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1897c25, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1460961325], 0, 1): success
test SubList.testListIteratorSetPrevious([1660330796], 0, 1): success
test SubList.testListIteratorSetPrevious([-990056806], 0, 1): success
test SubList.testListIteratorSetPrevious([-529023842], 0, 1): success
test SubList.testListIteratorSetPrevious([1804276487], 0, 1): success
test SubList.testListIteratorSetPrevious([1910656561], 0, 1): success
test SubList.testListIteratorSetPrevious([-1953654219], 0, 1): success
test SubList.testListIteratorSetPrevious([-56274097], 0, 1): success
test SubList.testListIteratorSetPrevious([-1690167875], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@1bb13b9, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@1575a18, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@1fa4903, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@18f152b, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@14dc173, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@fafb58, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@f9e3fb, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@7cc20b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@13c1a24, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@ce1748, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@1fc0411, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@79ba6a, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@ab4d6c, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@171c4f6, 2, 5): success
test SubList.testModAdd(java.util.Vector@1e6eb43, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@113cf83, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@db8be3, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@72b478, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@5d195d, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@66ea15, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@dfedd1, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@ace920, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@1a53d23, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@12306db, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@77530a, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@1119161, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@1959908, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@7d4282, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@1282e9c, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@e9c27, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@181c61e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@bd9775, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@8cdd9f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@8be940, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@1126eab, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@fd8427, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@14c86bb, 2, 5): success
test SubList.testModClear(java.util.LinkedList@492ef9, 2, 5): success
test SubList.testModClear(java.util.Vector@c04221, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@12f8aee, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@1d9eb57, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@97fa83, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@bee446, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@18744ed, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@18a6a12, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1574f5a, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@7f1b3e, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1895ac1, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@1581019, 2, 5): success
test SubList.testModGet(java.util.LinkedList@14e3b03, 2, 5): success
test SubList.testModGet(java.util.Vector@e59234, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@c18c13, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@1be06a1, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@d6a966, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@4d840b, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@1296fbe, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@e89984, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@16273ab, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@2efe60, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@a82bb9, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@a65136, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1c05f09, 2, 5): success
test SubList.testModHashCode(java.util.Vector@19678fa, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@1b1da13, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@13da798, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1d82df9, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@eb8c9c, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@1f9b01, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1062dd4, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1890a71, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@6779ad, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1bc56f, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@12ffbda, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@17f82cd, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@13a9c54, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@479075, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@8609f, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@19d1c43, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@142d887, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@d4e425, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@19ed0cc, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@187fa1c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@1736bbd, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1c80aa9, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@11f2c8, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@74458d, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@1568423, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@6a75fc, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@334152, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@177213b, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@11dd3ae, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@73951c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@13449be, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@196bdfe, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@1332629, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@75e64e, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@1c88377, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@efc5ac, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@14b2ad6, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@db0688, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@c57f54, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1f4c3f9, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1858185, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@4c5fa9, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@7ceacf, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@280e09, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@be8478, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@13f9750, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@1580d4d, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@65603a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@1967bed, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@146c5c4, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@e1cbd4, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1d7c583, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1a1c3d2, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@488cb4, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@d50d81, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@8e4e9, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@f99c0d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@40397a, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@1423ad, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@12378dd, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@10ab889, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@bd9c5, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@13ba28c, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@a950b8, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1cc672b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@9d17b0, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1f269a0, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@9269ef, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@e2faba, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@134cc9f, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@d48d6f, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@1710dbb, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@a2f130, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@12e14ea, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@16fb04e, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7ebc3a, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1cd6b45, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@40e3c, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1e5fb08, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@11667aa, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@11e47f5, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@16c3905, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@f50cb0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@154fa71, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@20e7d0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@9e2a40, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@197135, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@16fd4a9, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1f0e657, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@1de123c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@553244, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@138cf87, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@146462a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1981ff4, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@1f7fcf9, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@176b824, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@3c1ede, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@1a976d2, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@6056c2, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1b28c12, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@d85954, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@13c0e80, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1a0684c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@fc9a5f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@1857524, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@28689e, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@18a8275, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@1a8d46e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@e22cb6, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@1a1f590, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@1467fcd, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1523bef, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@d68527, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@1705f16, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@cdf6b0, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@229cd9, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@23d7c5, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3a708f, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@35c0e9, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@15d8e29, 2, 5): success
test SubList.testModRemove(java.util.Vector@1ea5cef, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@57f7f7, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@1f1fe8b, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@16da675, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1ed52f9, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@17d85ba, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@9711fe, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@c5427c, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@281593, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1b8ad86, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@9e05eb, 2, 5): success
test SubList.testModSet(java.util.LinkedList@1afc084, 2, 5): success
test SubList.testModSet(java.util.Vector@a8214e, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@150aa36, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@1b0332, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1c93bb0, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1c5b2b1, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@1fc285b, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@102ac0b, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@20bc7d, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@18205bc, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@17fd205, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@1990743, 2, 5): success
test SubList.testRemove(java.util.LinkedList@203371, 2, 5): success
test SubList.testRemove(java.util.Vector@1616bdc, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@65798c, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@1f78116, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1361248, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@e0f493, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@d886e0, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@1f1c08f, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1335352158], 0, 1): success
test SubList.testSet([755914614], 0, 1): success
test SubList.testSet([-591856162], 0, 1): success
test SubList.testSet([887276589], 0, 1): success
test SubList.testSet([1021453706], 0, 1): success
test SubList.testSet([-1486392281], 0, 1): success
test SubList.testSet([-1532747454], 0, 1): success
test SubList.testSet([-1484094875], 0, 1): success
test SubList.testSet([1281077626], 0, 1): success
test SubList.testSet(java.util.ArrayList@a33387, 2, 5): success
test SubList.testSet(java.util.LinkedList@191bda3, 2, 5): success
test SubList.testSet(java.util.Vector@e6a3ef, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@cead5c, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@b30441, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@294b29, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@9556f8, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@2f3721, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@ae93f0, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1548e48, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@902f6b, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@9f4e8d, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@1526ef4, 2, 5): success
test SubList.testSubList(java.util.LinkedList@1c91565, 2, 5): success
test SubList.testSubList(java.util.Vector@3212f5, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@b9f758, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@1189d81, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@71da39, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1d94ad, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@837d4e, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@a56010, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1256483, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@1575592, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1074ea3, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@675635, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@f77669, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1b1616, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@9ad93f, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@51aa1c, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@15985ea, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@15985ea, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@14a98b8, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1159e59, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1d20c7, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@68428c, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@f1f65c, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1f5be0e, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1e0c5eb, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@125ea72, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@12adceb, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@e5258c, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@e5258c, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@41e590, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@dcdc49, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@1b5535f, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@1084b2a, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@d2f3aa, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@2c91d5, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1fd638, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@ae8dee, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@2845a7, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@55b517, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@55b517, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1bf4b00, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1b50efb, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@1bb02fe, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1279501, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@1da284b, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@18b9be, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1009689, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@66039e, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1ff9d29, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@26e805, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@26e805, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@ebeea4, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@127f368, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@7e406e, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@1e8500c, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@1ec8ec, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@cb0526, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@57883d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@1dc7e06, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@6c8924, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@bfe27d, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@bfe27d, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@5f29db, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@150ac0c, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@1a8c4f, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1927669, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@17dcd55, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@354fe6, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@19be879, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@86503, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1fe7b6, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@15c0b95, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@15c0b95, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@59fb2, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@4464f5, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@101ac1e, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5b83b5, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@7a69a2, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3608d6, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@6b62f4, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@ce559c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1622d2, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6dfe13, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6dfe13, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1e2aaf2, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@2f1b51, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@108ff0c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@17e56ee, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@92269d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@11ed16a, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@c5b3d5, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@62a332, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@9c9464, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1e48497, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@1e48497, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@ccfb2b, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1aeb03a, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@df8d13, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1acd232, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@197ed9d, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1100f77, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@7fb7ba, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@1b6fa46, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@c009f, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@3b28a2, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@106cdd8, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@18157cd, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@1326bd8, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@7e5319, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@1798c08, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@9f699, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@40b50b, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@1f0f269, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@80f791, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@30c6fc, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@30c6fc, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@1144bd2, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@772664, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@ac6925, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@193df0a, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
