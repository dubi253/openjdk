#Test Results (version 2)
#Tue Mar 05 01:33:44 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=547 0\:00\:00.547
end=Tue Mar 05 01\:33\:44 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1535-662.xkwhxnxhkr0uhg1d1vyon3jiaf.dx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Tue Mar 05 01\:33\:43 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1015-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=548
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/559)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733)
OpenJDK Server VM (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Tue Mar 05 01:33:43 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Tue Mar 05 01:33:43 UTC 2024
elapsed time (seconds): 0.023
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:33:43 UTC 2024
Mode: agentvm
Agent id: 2
finished: Tue Mar 05 01:33:43 UTC 2024
elapsed time (seconds): 0.023
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Tue Mar 05 01:33:43 UTC 2024
Test directory:
  compile: SubList
finished: Tue Mar 05 01:33:43 UTC 2024
elapsed time (seconds): 0.112
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:33:43 UTC 2024
Mode: agentvm
Agent id: 2
finished: Tue Mar 05 01:33:43 UTC 2024
elapsed time (seconds): 0.112
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Tue Mar 05 01:33:43 UTC 2024
Mode: agentvm
Agent id: 4
finished: Tue Mar 05 01:33:44 UTC 2024
elapsed time (seconds): 0.411
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91129)----------
Seed from RandomFactory = -755747099834902765L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -367462163], 0, 1): success
test SubList.testAdd([42, -1688278423], 0, 1): success
test SubList.testAdd([42, 146145877], 0, 1): success
test SubList.testAdd([42, 1910409930], 0, 1): success
test SubList.testAdd([42, 1038280176], 0, 1): success
test SubList.testAdd([42, -48904987], 0, 1): success
test SubList.testAdd([42, 2144997595], 0, 1): success
test SubList.testAdd([42, -2057589576], 0, 1): success
test SubList.testAdd([42, 1578750218], 0, 1): success
test SubList.testAdd(java.util.ArrayList@7e2a55, 2, 5): success
test SubList.testAdd(java.util.LinkedList@de88fd, 2, 5): success
test SubList.testAdd(java.util.Vector@167f36f, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@191811f, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@172fa6b, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@654b46, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@110640c, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@12a4540, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@16491d3, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@15deb5d, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@d1f613, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@11fe214, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 1646984017], 0, 1): success
test SubList.testAddAtPos([-135476105, 42], 0, 1): success
test SubList.testAddAtPos([42, -2041335156], 0, 1): success
test SubList.testAddAtPos([42, 773842490], 0, 1): success
test SubList.testAddAtPos([984923410, 42], 0, 1): success
test SubList.testAddAtPos([-594349705, 42], 0, 1): success
test SubList.testAddAtPos([42, -200591548], 0, 1): success
test SubList.testAddAtPos([845665696, 42], 0, 1): success
test SubList.testAddAtPos([461043876, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@cc72f5, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@751d3a, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@18fc2a6, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@8f9752, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@105e403, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@160191a, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@101ece0, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@c685e0, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@45450f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@43070b, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@dd4412, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1400c19, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@a06502, 2, 5): success
test SubList.testClear(java.util.LinkedList@1858ce1, 2, 5): success
test SubList.testClear(java.util.Vector@19a2fcb, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@16a82e3, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@ba597a, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@12b3bfb, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@634399, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@a628b8, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@153306b, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@178a6e3, 2, 5): success
test SubList.testEquals(java.util.LinkedList@130108a, 2, 5): success
test SubList.testEquals(java.util.Vector@e62fc3, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@18ed5dc, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@1c785a, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@fd7885, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@a64562, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1b0c32d, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@11db39c, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1739681, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@1c6f567, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@99ba20, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@1d0e542, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@186bfa7, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@701b48, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@1b4cf65, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1350a28, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@1741560, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@1741560, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@bf369e, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1de86de, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@126539e, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4d8c95, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@1ca89f6, 2, 5): success
test SubList.testGet(java.util.LinkedList@87a0b9, 2, 5): success
test SubList.testGet(java.util.Vector@4f88e5, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@84743d, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@21420d, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1545d0, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1a64a21, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@10ee690, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@14de14e, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2ce426, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@3897f, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@ca300b, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@4ecb2e, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@10a2fb9, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@85546d, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@e0864f, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1dea65b, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@ddbae6, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@ddbae6, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@14c0329, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1694ebe, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1939700, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@c25715, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@1cee29e, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@1cde653, 2, 5): success
test SubList.testIndexOf(java.util.Vector@f41615, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@11cd89c, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@19aa669, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1bde782, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@ce9fe1, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@56a52f, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@ff86de, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1120113, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@cf49e7, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@30fc94, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@cf088a, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@8639f4, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1de498b, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@150e209, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1341191, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@bc3443, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@bc3443, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@11c5e6, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1d6ea95, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1cfe163, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1b7794f, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@17bc195, 2, 5): success
test SubList.testIterator(java.util.LinkedList@1030b2f, 2, 5): success
test SubList.testIterator(java.util.Vector@7eed2, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@15818f4, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@f94f2d, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@fa5e53, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1d3b875, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@126c6bf, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@e17e4, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@cb9cce, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@2fb39, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@991483, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@1381f4c, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@a5a87e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@15a6c7e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@7fd6a6, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@19110ae, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@140c02e, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@140c02e, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@91bf59, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@1cc9707, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@13da2f0, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1de7dc4, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@1d1d3b7, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@1babf91, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@18743a4, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@aa122e, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@49d464, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@181d24a, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1db0dd1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@199c6f8, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@174e470, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@87b86a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@9dba53, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@ea1141, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@18153d5, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1417ad, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@48f99e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@1c2f87f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4f4650, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1d865d6, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1d865d6, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@1200563, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@83f819, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@466f18, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@186f56f, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@11f5549, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@e7277e, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@12af199, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@c87577, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@df2fde, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@19a6629, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@96f3e7, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@7b34a6, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@72cf21, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@1bffb21, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@1949957, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@878aa3, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@139518b, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@12dfd37, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1af0c3d, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1d711a1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@19fd2fb, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@13f3caa, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@11af3b1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@43fea1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1beabb5, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@909fb3, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@8b44d5, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6fa758, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@179595f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1f1735d, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@a704a8, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@a704a8, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@a3df65, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@995a9f, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@42cefa, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@ea6b27, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@fe8336, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1706ec1, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@17f90be, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@1d5eaa7, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@24133b, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@ed4ca, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@ed4ca, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@1cefa25, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@1f06e01, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@14f0c9b, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@f6b39c, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@cca7f4, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@d88172, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@66d2d6, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@111f739, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1e303ea, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@15c6250, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1b6e5dd, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1e105bd, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@13d4934, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@cce631, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@af0987, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@2fc125, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@1ba7e4f, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@5c8dae, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5dd9f2, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@a9d6a2, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@5fc1de, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@b29e3d, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@c78b2f, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@6402b2, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1a7f42b, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@13d160e, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@fb8d1c, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@7f8e95, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@1290ead, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1a8a252, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1b8412c, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1b8412c, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@107fd1d, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@48b3b0, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@159c39c, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1e4cbae, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@1eb2eeb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@138ae23, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@651554, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@191b8bb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@1fbba4c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@19ef58e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1320c78, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@2283e4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@159d71d, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@1d5530b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@1a36810, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@1ecc7dc, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2aaefa, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@f9ae60, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1522ea6, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@74a352, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@94fede, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@9e77d3, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([292382860], 0, 1): success
test SubList.testListIteratorSet([-1826183891], 0, 1): success
test SubList.testListIteratorSet([640722298], 0, 1): success
test SubList.testListIteratorSet([1036817244], 0, 1): success
test SubList.testListIteratorSet([408906613], 0, 1): success
test SubList.testListIteratorSet([572385859], 0, 1): success
test SubList.testListIteratorSet([1222665377], 0, 1): success
test SubList.testListIteratorSet([-1424136835], 0, 1): success
test SubList.testListIteratorSet([-674807888], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@1776cb2, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@1179760, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@12f898e, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@3fa4bd, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@1fdead9, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@15c5acf, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@f23c64, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@11f4b4b, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@1855589, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1df173a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@21f8aa, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1245b6c, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([2050929767], 0, 1): success
test SubList.testListIteratorSetPrevious([548101698], 0, 1): success
test SubList.testListIteratorSetPrevious([1363356023], 0, 1): success
test SubList.testListIteratorSetPrevious([470006389], 0, 1): success
test SubList.testListIteratorSetPrevious([-31157330], 0, 1): success
test SubList.testListIteratorSetPrevious([-1090559888], 0, 1): success
test SubList.testListIteratorSetPrevious([-2118186257], 0, 1): success
test SubList.testListIteratorSetPrevious([31304130], 0, 1): success
test SubList.testListIteratorSetPrevious([1066254431], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@1f16e0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@8a1b08, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@10bde48, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@2c165e, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@1a50f5f, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@11f6272, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@105a8cd, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@42152b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@c57985, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1d4a707, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@1df6dc4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7b4dde, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@84947c, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@b7602e, 2, 5): success
test SubList.testModAdd(java.util.Vector@80430c, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@621535, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@bbe242, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@b81643, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@1782be5, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@f439bd, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@154d114, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@13abdf4, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@f811af, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@2df079, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@c2feb, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@e2f714, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@af049f, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@1ee86c, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@1e26c2e, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@d7230, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@16d0f2f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@24bbf, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@c3efd0, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5314d4, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@3b5b04, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@131de99, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@bdef77, 2, 5): success
test SubList.testModClear(java.util.LinkedList@33333e, 2, 5): success
test SubList.testModClear(java.util.Vector@85cae0, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@13e6106, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@288922, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@867f0, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@139e2a, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@1fac556, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@570509, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@152538f, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@ce9f92, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@88a3c7, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@bf2aa6, 2, 5): success
test SubList.testModGet(java.util.LinkedList@942d5c, 2, 5): success
test SubList.testModGet(java.util.Vector@16952ae, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@850932, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@b5e57e, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@d7b633, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@12e86e1, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@1538748, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@f8eba6, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1fec2c3, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@59d78f, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@f3c912, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@87c27d, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@4de17b, 2, 5): success
test SubList.testModHashCode(java.util.Vector@a52d9a, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@a832ff, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@1f7a7e7, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1970d14, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1b4bdd2, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@17da64e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1290b6b, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7bfb4e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@16c9bed, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@19f1163, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@11aa3f8, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@f85185, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@1d27d38, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@e108ea, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@1ee0d59, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@157cc98, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@13feb72, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@c64296, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@1505c15, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@149c6a7, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@17eca47, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@3d437e, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@1c6ad7f, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@14bcc0b, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@4d0e38, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@706885, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@1f72039, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1708e5c, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@f57dc0, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@24c723, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@e2344a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@d97e70, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@afcc68, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@c13a6f, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@1b2ad1e, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@e1d04e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@1a840ba, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@133abaa, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@19a4368, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1a76bae, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@11a7db2, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@19dba5f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@390b5d, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1ca11e7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@1535ce5, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1a9d6d8, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@1955f07, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@1fb0bfc, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@1e5d3fe, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@1add99e, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@c1cfba, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1d52750, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@e0b28b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@196da24, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@a41ae9, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3c683, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@18bec2d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1c61d4a, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@b38c71, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@840920, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@11d604d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@1947b78, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@1c8a885, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1f5de11, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@14dc67f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@1a20f0, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@9d12bb, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@10da42f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@9ee6a4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@64549c, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@1f9e50e, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@19db8ae, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@7a5482, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@19ff9a1, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@1001b71, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1ae963f, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1394181, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@3d7fd0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@12983bb, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@18e0c06, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@1cc553e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1e7362a, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@12caf28, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@67cea3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@701672, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@a75943, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@17d6189, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@196e581, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@133d180, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@aefaeb, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@3b7f3d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@76abf4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@876b9e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1415f96, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@389f9a, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@119c6f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@1f0d19b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@c1d0eb, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@b81a6b, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@8a3d6f, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@7e937b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@b950c1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1162a74, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@10e1704, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@f677fd, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@133d71d, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@16a3b6d, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@6abf68, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@393f73, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@19d2269, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@467496, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@8063da, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@c61761, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@1797d9b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@1e512a9, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1e185aa, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@8fda73, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@189b9c3, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@118903b, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@1ec92c2, 2, 5): success
test SubList.testModRemove(java.util.Vector@70f676, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@17b093a, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@1cc3c49, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@13e8334, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@3e2511, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@46b5cd, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@b9d2bb, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@127598c, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@17493f8, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@16db1d5, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@1ab4183, 2, 5): success
test SubList.testModSet(java.util.LinkedList@ca05a4, 2, 5): success
test SubList.testModSet(java.util.Vector@17333c2, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@1bb0ab3, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@16f4bb1, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1f1653c, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@11ab49f, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@106f810, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@168e89e, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1c801a3, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@2a7019, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@17f30e4, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@15e8281, 2, 5): success
test SubList.testRemove(java.util.LinkedList@663922, 2, 5): success
test SubList.testRemove(java.util.Vector@8410ac, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@17985f, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@b22dc2, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@beaa16, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@644b22, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@1bb072d, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@1a4ce34, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-2070809998], 0, 1): success
test SubList.testSet([827979915], 0, 1): success
test SubList.testSet([1479092483], 0, 1): success
test SubList.testSet([-537708975], 0, 1): success
test SubList.testSet([-1098860393], 0, 1): success
test SubList.testSet([-1854846771], 0, 1): success
test SubList.testSet([-1033553629], 0, 1): success
test SubList.testSet([-961445394], 0, 1): success
test SubList.testSet([-1724320590], 0, 1): success
test SubList.testSet(java.util.ArrayList@1335e97, 2, 5): success
test SubList.testSet(java.util.LinkedList@186e054, 2, 5): success
test SubList.testSet(java.util.Vector@44351f, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@1f9f23b, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@14ddd0c, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1d4738c, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1ff792f, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@17ce616, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@d40c18, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@6712f9, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@11342e0, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@181f134, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@19a5588, 2, 5): success
test SubList.testSubList(java.util.LinkedList@124b3d4, 2, 5): success
test SubList.testSubList(java.util.Vector@19496a7, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@8f2550, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@4c069a, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1997ae3, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@27729c, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@17db445, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@9a8f89, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1aae97a, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@1e95be6, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@10fb920, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@6cc1d1, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1a7708b, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@e3575c, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@175d83d, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@6966e3, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@5227b1, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@5227b1, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@615cf5, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@18d4a27, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@feed0b, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1a0e28, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@13ac8f8, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@8f8616, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@13c45db, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@16abbe8, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@65b4d5, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@1026a3e, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@1026a3e, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@c60782, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@106e1fc, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@117dc7b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@16c3286, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@1645449, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1e8933b, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@82703d, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@e65b14, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@17fd3ae, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@87949f, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@87949f, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1922eb6, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1b8642c, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@f21d97, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@f3ac5, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@fe3cc6, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@c02246, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1f3e382, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@cdfaed, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@f1e689, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@493bea, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@493bea, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@5fe676, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1b21488, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@d37872, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@d6761b, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@1d881a4, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@19d7486, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@eed9d4, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@1a0c426, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1b0e071, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@26485f, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@26485f, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@9ba4ee, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@6bd8bd, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@130802e, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@caaf70, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@122b48f, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@754ed3, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@d97fa7, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@1126e1a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@50e4c3, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@204a38, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@204a38, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1c67506, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@d79794, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@15172f8, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@d817d3, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@1dddfbf, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@c3bcbc, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@79b42a, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@f78725, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1ddd7d1, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6b8782, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6b8782, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@ee01c9, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1beb212, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1d8a55d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1758d6e, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@1befe05, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1d26be, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@b87293, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@fb8dfd, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@f3f511, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@e318ed, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@e318ed, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1938745, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@a3920a, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1485e3b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@208626, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@136e10a, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1567271, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1674be8, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@913f29, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1cff053, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@12454e9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@a2e0ee, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@dc1c77, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@b5fb79, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@eca1ae, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@b486d7, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@119a535, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@6600f1, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@8a3fb9, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@148047d, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@9afebb, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@9afebb, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@639402, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@7af5aa, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@cfbaab, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@b480c, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
