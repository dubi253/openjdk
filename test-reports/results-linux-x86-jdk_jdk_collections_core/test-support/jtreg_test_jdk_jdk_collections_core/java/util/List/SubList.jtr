#Test Results (version 2)
#Thu Feb 29 16:02:35 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=513 0\:00\:00.513
end=Thu Feb 29 16\:02\:35 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az569-784
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 16\:02\:35 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1015-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=514
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/559)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183)
OpenJDK Server VM (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 16:02:35 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 16:02:35 UTC 2024
elapsed time (seconds): 0.027
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 16:02:35 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 16:02:35 UTC 2024
elapsed time (seconds): 0.027
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 16:02:35 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 16:02:35 UTC 2024
elapsed time (seconds): 0.118
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 16:02:35 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 16:02:35 UTC 2024
elapsed time (seconds): 0.118
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 16:02:35 UTC 2024
Mode: agentvm
Agent id: 3
finished: Thu Feb 29 16:02:35 UTC 2024
elapsed time (seconds): 0.366
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91132)----------
Seed from RandomFactory = -255481667576961835L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -647652738], 0, 1): success
test SubList.testAdd([42, 57061041], 0, 1): success
test SubList.testAdd([42, 1866812492], 0, 1): success
test SubList.testAdd([42, -998340160], 0, 1): success
test SubList.testAdd([42, -1142213901], 0, 1): success
test SubList.testAdd([42, 870738602], 0, 1): success
test SubList.testAdd([42, 1081669676], 0, 1): success
test SubList.testAdd([42, 626768963], 0, 1): success
test SubList.testAdd([42, 37512672], 0, 1): success
test SubList.testAdd(java.util.ArrayList@5edd1f, 2, 5): success
test SubList.testAdd(java.util.LinkedList@1d2d783, 2, 5): success
test SubList.testAdd(java.util.Vector@159f381, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@84abd1, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@6c9b99, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@a42d47, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@157181a, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@11e1152, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@9430cb, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@12eff93, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@5ad576, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@18c9489, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -210304480], 0, 1): success
test SubList.testAddAtPos([-1824208866, 42], 0, 1): success
test SubList.testAddAtPos([42, 1080107998], 0, 1): success
test SubList.testAddAtPos([542231219, 42], 0, 1): success
test SubList.testAddAtPos([1327127880, 42], 0, 1): success
test SubList.testAddAtPos([42, 1950798925], 0, 1): success
test SubList.testAddAtPos([42, -208861804], 0, 1): success
test SubList.testAddAtPos([-793033156, 42], 0, 1): success
test SubList.testAddAtPos([-70606124, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@e4845f, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@138f9ae, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@193ee3, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@609c6, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@1c42b48, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6d3e0f, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@145522d, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@1f671a, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@112a349, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@d82eb1, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@bdc467, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1a6d45b, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@e24c6b, 2, 5): success
test SubList.testClear(java.util.LinkedList@de39f4, 2, 5): success
test SubList.testClear(java.util.Vector@1ae1efc, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@484f37, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@19aacab, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@10c023a, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@662384, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@ce8e4f, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@e5bfb4, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@80e4db, 2, 5): success
test SubList.testEquals(java.util.LinkedList@120cc74, 2, 5): success
test SubList.testEquals(java.util.Vector@1b850a3, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@17257d4, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@f35e45, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@51237b, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@fb7952, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@7aff49, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@13d46df, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1e3bcb1, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@aff2e6, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6b6370, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@59f29e, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@712f07, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1bd3fca, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@1f78eec, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1f7e04f, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@1c2a18a, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@1c2a18a, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@b0f5c5, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@136dc99, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@b1ed5c, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1cf6fbb, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@7561a6, 2, 5): success
test SubList.testGet(java.util.LinkedList@16667b9, 2, 5): success
test SubList.testGet(java.util.Vector@1b3c1aa, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@b7f663, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@db7935, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@139f4d9, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1c6e04f, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@16d9b48, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@72e540, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@18e8d84, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@15a2932, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@10c711a, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@1411e2b, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@82b796, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1fbbb39, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@167dc8b, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@cc3b0c, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@1ff6bd8, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@1ff6bd8, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@184dc4a, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@2f975c, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@49c9de, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1560fd9, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@13246c4, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@1f0f0de, 2, 5): success
test SubList.testIndexOf(java.util.Vector@168851b, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@36bc0c, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@c275e7, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1efc546, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6cb9ea, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@176903b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@162dc33, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1337f34, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@a2ff4d, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@df2c5c, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@17705d, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@189e5be, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1ae8a42, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@fb7aa1, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@24153d, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@464b7e, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@464b7e, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@11a457c, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@17cb7c9, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@19967c4, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1b40145, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@bf1bd5, 2, 5): success
test SubList.testIterator(java.util.LinkedList@d69283, 2, 5): success
test SubList.testIterator(java.util.Vector@1c8127d, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@3aa911, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@a10710, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@6bc31b, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@a27cf1, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@14c7ae1, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1f744aa, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@c097e4, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@740dc5, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1c00cc5, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@68658e, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@43b104, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1c03546, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@16d4dcc, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@159e81f, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@110aee0, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@110aee0, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@2b32cd, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@672c44, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@aa46ad, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@c55a51, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@bed715, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@3dca6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@69fa88, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@178b6af, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@8c8fb9, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@35124c, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1907109, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@166846b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@629a1c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@d1e307, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@111f9d5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5c1580, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@116ac72, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@10106c6, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@13d8e27, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@32f073, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@2d35ff, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@53dd7f, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@53dd7f, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@ad41dd, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@1fe3f0b, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@15f4a45, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@188d5bd, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@17485e1, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@53d55f, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@9a4c06, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@19ebbd6, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@507d3f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@1be880a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@d5dd62, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@c8efb1, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@f29c37, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@1bf86fb, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@1e7bbe, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@bfca33, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@72b7dd, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@12a3031, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@e34228, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1d68aa4, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@9511fd, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@5fbd27, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@14755e4, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@1cec018, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6ab512, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@1723ecb, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1add72c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@46a438, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@1e8866a, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@b0c808, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@d47feb, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@d47feb, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@248fd6, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@d36c4b, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@966563, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@fb4957, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@1fde6aa, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@bde0e1, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@38f52d, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@c74fbd, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1e7f423, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1be8b5f, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1be8b5f, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@17ced32, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@50aee, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@1757dc, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@14ecebf, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@13ff43f, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1135962, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1947fd0, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@b14680, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@6b98aa, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1e12e75, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@13ca32a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1ccdade, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@93dae3, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@8d563b, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@2603bc, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@54e04, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@329140, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1b89da2, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1613bfa, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1c21ebc, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@22178d, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1f672be, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@18c03b7, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@2f0e7a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@13cd13f, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@24034e, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1115f78, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@842835, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@cea96f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@552367, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@b6642b, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@b6642b, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@342b37, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@7b725a, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@58c7, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5c691a, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@13cc52d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@1c589c8, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@1de1c19, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1eaa541, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@10a548e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1441ba4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@9d1f0d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@1122afa, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@9eb36c, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@1d1d67e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@134f35b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@1d0d83a, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@177efd1, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@11c2124, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1dd5669, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@118e1b4, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@f82832, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@b3ba59, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([849243948], 0, 1): success
test SubList.testListIteratorSet([-203079893], 0, 1): success
test SubList.testListIteratorSet([-1296092415], 0, 1): success
test SubList.testListIteratorSet([329138164], 0, 1): success
test SubList.testListIteratorSet([-17038216], 0, 1): success
test SubList.testListIteratorSet([1380561496], 0, 1): success
test SubList.testListIteratorSet([-1469764439], 0, 1): success
test SubList.testListIteratorSet([-1870263429], 0, 1): success
test SubList.testListIteratorSet([-1071668855], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@b54b2a, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@10c4bbd, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@c77358, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@13dfaac, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@b5f922, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@9df886, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@731779, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@1c911fa, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@6201e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1d5e618, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@13436a2, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7b41bc, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-409986076], 0, 1): success
test SubList.testListIteratorSetPrevious([1879586272], 0, 1): success
test SubList.testListIteratorSetPrevious([-665986596], 0, 1): success
test SubList.testListIteratorSetPrevious([49052034], 0, 1): success
test SubList.testListIteratorSetPrevious([576745230], 0, 1): success
test SubList.testListIteratorSetPrevious([819223573], 0, 1): success
test SubList.testListIteratorSetPrevious([1988526751], 0, 1): success
test SubList.testListIteratorSetPrevious([-2141150561], 0, 1): success
test SubList.testListIteratorSetPrevious([-1649800777], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@66f6ea, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@16b4021, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@17384e0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@286f83, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@8e6f91, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@95950b, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@1870bae, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@13c13cc, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@6b443f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@10ef705, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@19ca03f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7dbad8, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@1fd9762, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@dfd8aa, 2, 5): success
test SubList.testModAdd(java.util.Vector@143a5b1, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@dcddde, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@1b7e421, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@16a61c0, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@1cdc68d, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@1e5c1a1, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@47d983, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@53b95d, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@1f8197d, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@11d2fef, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@143636f, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@10c163a, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@185fb45, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@1a11e1e, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@1cb58b1, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1fcdbd8, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@1504b67, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@1d3676d, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@f0d214, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@c1f2a8, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@aa97e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@19614ae, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@107531f, 2, 5): success
test SubList.testModClear(java.util.LinkedList@1c30824, 2, 5): success
test SubList.testModClear(java.util.Vector@8f1ba7, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@1d6cecf, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@1ca6f43, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1edb311, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@6bd7b3, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@12e816e, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@187e222, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@11a18ac, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@1fad4ca, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@2b886d, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@8f9631, 2, 5): success
test SubList.testModGet(java.util.LinkedList@1e6b8ec, 2, 5): success
test SubList.testModGet(java.util.Vector@197703c, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@12b6c1b, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@a0172d, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@172f979, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@1036cb8, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@cf4913, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@14a43e3, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1016acb, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@198d383, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@12aabaa, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@145dc64, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1273631, 2, 5): success
test SubList.testModHashCode(java.util.Vector@123db4f, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@1bdc649, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@db4d93, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1bde9a1, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@aee864, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@141349a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@4da8cf, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@ca477d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@22e369, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@2265d7, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@6e74c4, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@fb07d2, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@1489a31, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@15da512, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@a53d1a, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@9d1da2, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@1269dfe, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@1fc659c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@1e78892, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@34b1c5, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@ca6823, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@f4ad1f, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@3fde74, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@ad2e56, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@ad62fc, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@144080a, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@9d873f, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@13a50ad, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@18135d9, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@8fdb54, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@feaa59, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1a2bd8b, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@13ab057, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@36a4aa, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@1cfa965, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@598f87, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@143a12d, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@236c56, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@79543e, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4f7a71, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@f8417c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@104e2c1, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@27be71, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@94f827, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@9c9cc, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@17bd21f, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@a90737, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@b3a7d5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@1dd5d1c, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@31b384, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@1e5b46b, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@41fa34, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@14374fa, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@1364aab, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1e60f4, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@12db9e0, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@1b9ddf6, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1646c2d, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@108c89f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@1793d72, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@994493, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@1989851, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@1ad5f30, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@d177bd, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@14a2e8d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@dd8259, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1ec222d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1af14ae, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@ad6f14, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@b90212, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@519f9a, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@148c9c0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@40f4fb, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@140e6b1, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@e27c4b, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@12adb8a, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@e23b9d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@8ab713, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@a7f5e4, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@f981d0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@a5466d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1fbd639, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@8bef37, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@d7ee9a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@1b5addd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@1f7900, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@9776ea, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@10c40ba, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@185f727, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@13ca699, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@aa3bb, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@154f5e8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@1209fd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@13d2731, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@19ec010, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@14d6829, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@f91458, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@d89fd8, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@125fdff, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5ebf33, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@561a22, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@14365d3, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1927921, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4962dc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@e02f07, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@8ec9a2, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@1dcbace, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@1952b2e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@183632f, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@14d7abc, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@124ec44, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@158a237, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@1860f3a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@18261ef, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@1a9bcb1, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@16c4b2d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@16159ab, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@152bbe1, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@5307bf, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@15d39c4, 2, 5): success
test SubList.testModRemove(java.util.Vector@18e7236, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@109939b, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@9ef7dd, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@197a8f3, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@161ec9e, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@9e31ba, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@4b4b3c, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1e23317, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@1a127bc, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1bd578d, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@12051c3, 2, 5): success
test SubList.testModSet(java.util.LinkedList@35cb3d, 2, 5): success
test SubList.testModSet(java.util.Vector@e83a7c, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@101b297, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@15f8abe, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1884543, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1c394b7, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@14f9e43, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@19ad9db, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@181a7d4, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@a3e9ce, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@e3ff89, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@ba7e34, 2, 5): success
test SubList.testRemove(java.util.LinkedList@17f7ea5, 2, 5): success
test SubList.testRemove(java.util.Vector@cb34ba, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@6056a4, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@1745c2c, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1c4522f, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@12e14de, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@17cfe, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@a50f7b, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-804708964], 0, 1): success
test SubList.testSet([-1311608651], 0, 1): success
test SubList.testSet([1489627488], 0, 1): success
test SubList.testSet([168667664], 0, 1): success
test SubList.testSet([131080992], 0, 1): success
test SubList.testSet([-975045741], 0, 1): success
test SubList.testSet([678856867], 0, 1): success
test SubList.testSet([-270547856], 0, 1): success
test SubList.testSet([-1927238279], 0, 1): success
test SubList.testSet(java.util.ArrayList@504189, 2, 5): success
test SubList.testSet(java.util.LinkedList@9d7eed, 2, 5): success
test SubList.testSet(java.util.Vector@afde37, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@1e454fc, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@1b0e439, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@14ed31c, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@c49633, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@e0ff8d, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1a00a1d, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1e3cda2, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@b992ab, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@13b70ef, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@d6d251, 2, 5): success
test SubList.testSubList(java.util.LinkedList@1ddf05c, 2, 5): success
test SubList.testSubList(java.util.Vector@183b941, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@16b363b, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@1502c33, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1963b2e, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@585362, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@1f0d220, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@131abbf, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@17e875c, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@155225a, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1023c24, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@2a7615, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1a2c1ff, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@10f2f3e, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@1916457, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1d09a35, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@728e4b, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@728e4b, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@14de12e, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@6d2713, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@17578f, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@14e7913, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@e2ad64, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@b55375, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@26ffc0, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@1b073b5, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1537021, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@9a03ce, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@9a03ce, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1fab032, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1317236, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@6d4028, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@1276fcb, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@cbe4da, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@c5f1f1, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@9995d5, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@eb80c4, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@73d36, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@8357d4, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@8357d4, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@18d43b, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1bc94ec, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@11bd7c4, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@344c54, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@433ec3, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3fa89d, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1acbf4, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@44421b, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@39a268, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@17059f7, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@17059f7, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@4d0d46, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1b95681, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@1f5d097, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@1b961f1, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@d01190, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@148571b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1edf23e, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@b3971d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@15d29b9, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@192847c, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@192847c, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@127a671, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@17b7b36, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@1a0434b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@16d901, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@1dace62, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1893214, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@100d494, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@3253c3, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1e065ea, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@11cb8c8, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@11cb8c8, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1b5c905, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@c5a593, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@32c7b1, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1678dad, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@4657ae, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@4b9bea, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@b5b34e, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@15676f2, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@678146, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@d376d0, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@d376d0, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@771455, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@e433b0, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@618608, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@ac96e3, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@fe11f6, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@411f63, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@8fd261, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@9dcb80, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@be2abe, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@135d58f, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@135d58f, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1dc8bd3, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@d3f0f8, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@f06474, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@30c4e0, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@3cf2c1, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@16287a7, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@8bf997, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@cf7461, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@12b691d, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@520539, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@397f49, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@10167ee, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@119e9e2, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@16892ba, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@10ef952, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@16b2fea, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@17e8ea4, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@1c8a783, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@135e6a8, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@324fb8, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@324fb8, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@12fa8c5, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@e6a566, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@e1f4b0, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@185c1cb, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
