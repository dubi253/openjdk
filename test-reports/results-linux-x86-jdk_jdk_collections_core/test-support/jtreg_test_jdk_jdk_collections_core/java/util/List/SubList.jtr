#Test Results (version 2)
#Fri Mar 01 16:34:03 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=568 0\:00\:00.568
end=Fri Mar 01 16\:34\:03 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az659-319
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 16\:34\:02 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1015-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=568
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/559)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b)
OpenJDK Server VM (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/274)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 16:34:02 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 16:34:02 UTC 2024
elapsed time (seconds): 0.03
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 16:34:02 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 16:34:02 UTC 2024
elapsed time (seconds): 0.027
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 16:34:02 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 16:34:03 UTC 2024
elapsed time (seconds): 0.122
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 16:34:02 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 16:34:03 UTC 2024
elapsed time (seconds): 0.122
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 16:34:03 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 01 16:34:03 UTC 2024
elapsed time (seconds): 0.411
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91123)----------
Seed from RandomFactory = -2009637023730050458L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1047649240], 0, 1): success
test SubList.testAdd([42, 1049892762], 0, 1): success
test SubList.testAdd([42, -1714891452], 0, 1): success
test SubList.testAdd([42, -1152719308], 0, 1): success
test SubList.testAdd([42, -990243080], 0, 1): success
test SubList.testAdd([42, -1873247424], 0, 1): success
test SubList.testAdd([42, -1188768786], 0, 1): success
test SubList.testAdd([42, 103394402], 0, 1): success
test SubList.testAdd([42, 1165697747], 0, 1): success
test SubList.testAdd(java.util.ArrayList@4dc2dd, 2, 5): success
test SubList.testAdd(java.util.LinkedList@121fd13, 2, 5): success
test SubList.testAdd(java.util.Vector@1d4c6a3, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@1725f78, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@1646c3, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1aa505a, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@116cdfb, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@485e62, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@138ad68, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1b8e899, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@1b54b50, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@13344a, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-1721942237, 42], 0, 1): success
test SubList.testAddAtPos([2117457440, 42], 0, 1): success
test SubList.testAddAtPos([42, 1225958147], 0, 1): success
test SubList.testAddAtPos([-1258954492, 42], 0, 1): success
test SubList.testAddAtPos([1708409994, 42], 0, 1): success
test SubList.testAddAtPos([-1118471794, 42], 0, 1): success
test SubList.testAddAtPos([589557332, 42], 0, 1): success
test SubList.testAddAtPos([42, -1344389371], 0, 1): success
test SubList.testAddAtPos([42, 1400651241], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@10a6b08, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@fc1f1c, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@16b5248, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@d43f71, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@1dd75a9, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@63976d, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@4733f7, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@185b1a0, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@111fd31, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@e9fe24, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@136898f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@17f5c5, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@1a4ba05, 2, 5): success
test SubList.testClear(java.util.LinkedList@14df510, 2, 5): success
test SubList.testClear(java.util.Vector@ec41ca, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@50d699, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@bc4aa8, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1e7b460, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@17a0180, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@c3154, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@176d42c, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@27687b, 2, 5): success
test SubList.testEquals(java.util.LinkedList@1a3bccb, 2, 5): success
test SubList.testEquals(java.util.Vector@d4ff1, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@cb7803, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@196bea1, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@2183ea, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@15086b1, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1cc88e9, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1d894f3, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@335fe1, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@5acb80, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@17fe7b3, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@1fc3896, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@660499, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1929dcd, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@1a708c8, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@14318fc, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@dd8ad7, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@dd8ad7, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@12025e0, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@cc257c, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@69d16f, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@21a86, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@da37bd, 2, 5): success
test SubList.testGet(java.util.LinkedList@e61768, 2, 5): success
test SubList.testGet(java.util.Vector@195a8d, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@1e86ff1, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@1661add, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1d96253, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@63a301, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@1fe3365, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@883698, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@12af950, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@395ff9, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@12bafdc, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@bd35fc, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@179102, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@8b5efc, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@1497b80, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@b1145e, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@1e645c8, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@1e645c8, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1d55618, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@e6ad5b, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@143fadf, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@59df65, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@941da6, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@1838257, 2, 5): success
test SubList.testIndexOf(java.util.Vector@77a819, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@1a8c4b8, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@183478a, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1888b33, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3edcd9, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@178b2f6, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1819799, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4daeda, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@48f00e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@13ded7f, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@ce68b0, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7cc732, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@82e975, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@19fe41f, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@32a6db, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@38256c, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@38256c, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1a155b2, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@11c28cb, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@123ab80, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1eb1bfb, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@1da0ea4, 2, 5): success
test SubList.testIterator(java.util.LinkedList@3722d2, 2, 5): success
test SubList.testIterator(java.util.Vector@12ef280, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@efdc17, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@184cb40, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1997cf, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5f6dbd, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@1d400fb, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@ffd769, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@dac315, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@13b5d5, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1e43868, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@5be513, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@523703, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@108d46f, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@bfd474, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1eab11b, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@9832ae, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@9832ae, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@1231b8a, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@26d3d0, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@12eabd2, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@109de90, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@f037a3, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@116a362, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@1439fa5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@b1493d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@693ecd, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@17de5c9, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@5ad406, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@59d97, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1dfd5ab, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@e4b01, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@6a2cec, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@ebdf, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@1e6499a, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@59589b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@f50856, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@f6de46, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@8fabd8, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1f85ea8, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@1f85ea8, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@133795e, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@421862, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@db4759, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1d0189d, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@2726f9, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@1a53c56, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@1d1da3b, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@daeeb2, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@136a0d3, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@71732, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1945542, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@24b264, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@921806, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@49e445, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@17df250, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@1827758, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@13ae4f1, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@16e5b5d, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1cf16ad, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@13f0339, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@764aae, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1b7473d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@90c8f5, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@884b55, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@735a33, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@17e675a, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@189657c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@157d191, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@156c72f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1fde7e5, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@a750bb, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@a750bb, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@13ca140, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@13b89db, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@9c3cec, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3d0b3c, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@173c3de, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@eda31d, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@35ae0c, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@1921a, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@137f069, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@353243, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@353243, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@14ba6b2, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@690fc2, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@a3f2b9, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@1411609, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@1ac32e3, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1e2d46f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1951319, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@16b4e0b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1575535, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@19309b6, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2a8a86, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1956820, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@368410, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@430ee8, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@aea9c0, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@1797871, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@1b55edb, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@9cfbdd, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1ddc43a, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1d55a48, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@3af014, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@19046a9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1a1d6ec, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@60bd5d, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@11ea65, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@1a18450, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@a071d, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@181c820, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@185e549, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1f9f0ca, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@774d5d, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@774d5d, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1fd02c7, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@558ac5, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@8af366, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@8f71bd, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@32d391, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@176aad5, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@12b5e2b, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@bafeb8, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@13cc07f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1abf43c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@e27264, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@c45a89, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@11ce06d, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@18e9cb3, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@1a07c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@1b57c7f, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1adf422, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@1aca78e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1a12df9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@131a04f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@e57e0e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7e5988, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-98043350], 0, 1): success
test SubList.testListIteratorSet([-1765878151], 0, 1): success
test SubList.testListIteratorSet([-1481822659], 0, 1): success
test SubList.testListIteratorSet([-1425121669], 0, 1): success
test SubList.testListIteratorSet([-2145342420], 0, 1): success
test SubList.testListIteratorSet([1718491516], 0, 1): success
test SubList.testListIteratorSet([-1337129278], 0, 1): success
test SubList.testListIteratorSet([1068879762], 0, 1): success
test SubList.testListIteratorSet([394237147], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@1f14fc9, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@181b213, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@127e0c6, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@eafa2f, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@16baf8f, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@74c174, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@1e5b481, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@10f2d3a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@1ffa1df, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1ad0593, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@f9b31, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@e00024, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1856523909], 0, 1): success
test SubList.testListIteratorSetPrevious([1620845165], 0, 1): success
test SubList.testListIteratorSetPrevious([1112839489], 0, 1): success
test SubList.testListIteratorSetPrevious([46383545], 0, 1): success
test SubList.testListIteratorSetPrevious([1057807470], 0, 1): success
test SubList.testListIteratorSetPrevious([-1290651472], 0, 1): success
test SubList.testListIteratorSetPrevious([-1478343801], 0, 1): success
test SubList.testListIteratorSetPrevious([-1344177796], 0, 1): success
test SubList.testListIteratorSetPrevious([-384525758], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@1e71be6, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@59b063, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@12b6ace, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@1a46aa2, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@b62058, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@bd544d, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@1490739, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@17a27e3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@a70134, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@17fb623, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@176a2eb, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@a39c46, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@1d502c1, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@330a80, 2, 5): success
test SubList.testModAdd(java.util.Vector@e0f5bc, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@16fbb80, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@fde58d, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@17cc2aa, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@c9b524, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@68c3f3, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@1a8cdc9, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1ba02be, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@1a6c438, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@da884d, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@11025df, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@fc562d, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@7e3b4a, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@9750ab, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@148cb63, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3647b2, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@1891de4, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@15c0624, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@240a35, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3f8464, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@1a8480e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@fce7ab, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@5cfa8e, 2, 5): success
test SubList.testModClear(java.util.LinkedList@89e681, 2, 5): success
test SubList.testModClear(java.util.Vector@72f642, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@14709d3, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@18fe53, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@19a77c6, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1d50ff3, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@d8857c, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@15b11ca, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@98b681, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@320992, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@c5ffe3, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@d706d4, 2, 5): success
test SubList.testModGet(java.util.LinkedList@1b72c5e, 2, 5): success
test SubList.testModGet(java.util.Vector@1bd9982, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@cb4200, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@b27a92, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@3314da, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@c0fb11, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@d7c99c, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@10595ed, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@18cd57f, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@13874ab, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6af694, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@1b546, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1995ab8, 2, 5): success
test SubList.testModHashCode(java.util.Vector@2ab9cc, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@12c9466, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@1655374, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1e403e, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@d54e55, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@d4dcfb, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1c9f71e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@bb2c4a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@2a18d0, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@19d69cf, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@605ef, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@7526eb, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@1b07edc, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@ed5e20, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@937702, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@edfb87, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@775ac2, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@302c73, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@137d932, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@19a100b, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@63ebbd, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@e900c4, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@4f9668, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@d6aa4b, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@3ca025, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@118491e, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@2250a6, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@52c92e, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@964a63, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@291943, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@d0f0cd, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1e459ad, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@11e05e4, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@395841, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@1aa0b0e, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@478764, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@656fdb, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@2eadd5, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@1f63716, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@110a636, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@10705b6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@c16cd5, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@3cf799, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@10b0ee1, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@26eebe, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@eeb2fc, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@14d2a4c, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@aa8560, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@fceb9a, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@1008a77, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@16f5195, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1c033bb, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@73a055, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@894b07, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1d4cc25, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@fe2187, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@965e80, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1b11907, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@c98439, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@1349e62, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@10fa532, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@1792fdd, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@ecfcf9, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@14227e7, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@17084d9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@1c2fd70, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@130ea89, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@804cd5, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@1546488, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1153ae8, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@17dc708, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@17ed184, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@81bde5, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@f0b3ca, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@11efdce, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@f05a98, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@88e1a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@14ad3e1, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@55a2ac, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@119ebc4, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@3058fb, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1c634e1, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@10ffa2d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@1033cb0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@11f7ed6, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@b8039d, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@e2fe07, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@2a001f, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@15ab58f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@12d198e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@69df8e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@77a249, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@1223242, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7b79e7, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@1102f7b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@6a6480, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@1b86ef2, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@15e1c81, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@1fe3776, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@18c961d, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@bb409e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@1432e5, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@2024c3, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@10e62ae, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@13ae682, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@c80de, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@f562f, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@1354581, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@121a257, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@1e7a413, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@1b8c8b5, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@47ffb2, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@1709306, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@be4a5, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@1183303, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@ad44ad, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@16adac5, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@14fb94e, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@3989aa, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@925c39, 2, 5): success
test SubList.testModRemove(java.util.Vector@1ef201d, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@f11a85, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@180cbbb, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@828509, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1b1a7fb, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@1238582, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@8bc98c, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@14bac8c, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@42264b, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@13927df, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@1d877f3, 2, 5): success
test SubList.testModSet(java.util.LinkedList@11d7428, 2, 5): success
test SubList.testModSet(java.util.Vector@ca34cf, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@5839c5, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@659d64, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@25858e, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@112956, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@1364e6b, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@9b6edd, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1d36a0a, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@a184cf, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1a371f0, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@1bb3e3b, 2, 5): success
test SubList.testRemove(java.util.LinkedList@1b663ba, 2, 5): success
test SubList.testRemove(java.util.Vector@b0c8e9, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@d2986e, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@14c4c9d, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@8fedfb, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@1ebfdbb, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@d1cfb3, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@1e27ff3, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([982418356], 0, 1): success
test SubList.testSet([1275793862], 0, 1): success
test SubList.testSet([-511828634], 0, 1): success
test SubList.testSet([-803719733], 0, 1): success
test SubList.testSet([98463899], 0, 1): success
test SubList.testSet([-727804030], 0, 1): success
test SubList.testSet([342405975], 0, 1): success
test SubList.testSet([459485059], 0, 1): success
test SubList.testSet([1402564942], 0, 1): success
test SubList.testSet(java.util.ArrayList@113e2d5, 2, 5): success
test SubList.testSet(java.util.LinkedList@1ad2976, 2, 5): success
test SubList.testSet(java.util.Vector@1a722b5, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@c83479, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@f2793b, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1b8f94a, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@b83010, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@1730b97, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@795461, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5188c2, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@1f1f5cc, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5e9c4d, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@7f5f3c, 2, 5): success
test SubList.testSubList(java.util.LinkedList@d915e7, 2, 5): success
test SubList.testSubList(java.util.Vector@26b2c8, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@1abd5a8, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@6c7aee, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5fed19, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1dd23c9, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@73f378, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@b0da24, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1212516, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@ecccb, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@10e7002, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@10038a8, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1d12424, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@10c2b3b, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@1e22541, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@7a14d5, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@172ec2c, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@172ec2c, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@a3709b, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@74c647, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@16931, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1af69c5, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@7735a3, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@77f3bb, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1608a18, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@131529d, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@15a884b, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@1747317, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@1747317, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@473d6e, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@235161, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@132a613, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@1f48b54, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@10332e3, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@f9b83f, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@188e28b, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@1501266, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@124a1fe, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@d757b0, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@d757b0, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@240d3, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@179fc0a, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@15bcb0e, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@e434f5, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@1da8314, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@195b147, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@5d8f1c, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@15ac05b, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@15fd328, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@da1c63, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@da1c63, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1f3bad5, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@42f6e7, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@384bea, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@980d4, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@1c4d689, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@7e4e7b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@12aa8df, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@1d698f0, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@11a1968, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@16bf616, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@16bf616, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@683c8a, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@22a840, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@1f55322, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1b209e8, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@dd0e44, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@2d822a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@9057e5, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@e7f6f4, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@94269d, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@78fd43, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@78fd43, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@15e7c98, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1ecbebe, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1dfcc3f, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1e941f6, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@1a55e6f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@d6b886, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1a579f5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@d9f735, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@10fbc8c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@152eb99, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@152eb99, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@c746b, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@11a9acf, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@10249f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1937b65, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@b2b0ea, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@18ca70b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@c814a1, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@1d1e448, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@fcaa97, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@14fc6a5, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@14fc6a5, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@8ba09f, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@3f8a4d, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@39d35b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@949678, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@4d693d, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1850541, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3eda96, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@382a44, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6c0a02, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@7302, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@d3634d, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1ebf6e0, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@19f3c49, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@17d1ba, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@15edcbb, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@166c667, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@9a75ac, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@146298a, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@126bf77, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@5c0ed6, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@5c0ed6, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@61db23, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@1f3199e, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@1fd6c3b, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@900774, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
