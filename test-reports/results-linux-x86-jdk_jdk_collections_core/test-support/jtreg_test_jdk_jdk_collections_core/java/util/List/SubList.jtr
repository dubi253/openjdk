#Test Results (version 2)
#Fri Apr 12 13:26:52 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=597 0\:00\:00.597
end=Fri Apr 12 13\:26\:52 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az773-806.an51pne1gm2ejjnmkprpigk40g.dx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1017-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Apr 12 13\:26\:52 UTC 2024
test=java/util/List/SubList.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1017-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1017-azure
totalTime=597
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/559)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5)
OpenJDK Server VM (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /home/runner/work/openjdk/openjdk/test/lib
   class directory: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Apr 12 13:26:52 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Apr 12 13:26:52 UTC 2024
elapsed time (seconds): 0.064
result: Passed. Build successful

#section:compile
----------messages:(7/275)----------
command: compile /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:26:52 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Apr 12 13:26:52 UTC 2024
elapsed time (seconds): 0.064
----------configuration:(12/840)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3495)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Apr 12 13:26:52 UTC 2024
Test directory:
  compile: SubList
finished: Fri Apr 12 13:26:52 UTC 2024
elapsed time (seconds): 0.129
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:26:52 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Apr 12 13:26:52 UTC 2024
elapsed time (seconds): 0.129
----------configuration:(15/1143)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/test/lib
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3907)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Apr 12 13:26:52 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Apr 12 13:26:52 UTC 2024
elapsed time (seconds): 0.402
----------configuration:(15/1132)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /home/runner/work/openjdk/openjdk/test/lib

----------rerun:(28/3482)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/List:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/home/runner/work/openjdk/openjdk/test/lib:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91101)----------
Seed from RandomFactory = 6539174891423000292L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1420991866], 0, 1): success
test SubList.testAdd([42, 2052129151], 0, 1): success
test SubList.testAdd([42, -637319902], 0, 1): success
test SubList.testAdd([42, 861193398], 0, 1): success
test SubList.testAdd([42, -1062032604], 0, 1): success
test SubList.testAdd([42, -423819278], 0, 1): success
test SubList.testAdd([42, 1969175789], 0, 1): success
test SubList.testAdd([42, -712281433], 0, 1): success
test SubList.testAdd([42, 1022872353], 0, 1): success
test SubList.testAdd(java.util.ArrayList@1de2f29, 2, 5): success
test SubList.testAdd(java.util.LinkedList@25b046, 2, 5): success
test SubList.testAdd(java.util.Vector@1c6158f, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@1877c83, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@1ff238d, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1bf3db3, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@ac3cbd, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@cdf697, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@1574666, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@e21438, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@1c6cf88, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@10f3b86, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-1424988648, 42], 0, 1): success
test SubList.testAddAtPos([1919073, 42], 0, 1): success
test SubList.testAddAtPos([42, -1909169567], 0, 1): success
test SubList.testAddAtPos([-831706805, 42], 0, 1): success
test SubList.testAddAtPos([-96118364, 42], 0, 1): success
test SubList.testAddAtPos([42, -584142899], 0, 1): success
test SubList.testAddAtPos([42, 980478232], 0, 1): success
test SubList.testAddAtPos([-1387067216, 42], 0, 1): success
test SubList.testAddAtPos([42, -1392131869], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@1765cbd, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@1c0ad86, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@1158937, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@1bfd6ae, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@16f2694, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@ffbda8, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@604fea, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@80b369, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1a23a, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@f91016, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@856294, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@bec483, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@1b7d380, 2, 5): success
test SubList.testClear(java.util.LinkedList@6895b2, 2, 5): success
test SubList.testClear(java.util.Vector@12e2403, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@49985e, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@ade440, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1ba25a7, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@1deec48, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@f4138e, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@87095c, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@a3dfe7, 2, 5): success
test SubList.testEquals(java.util.LinkedList@154411a, 2, 5): success
test SubList.testEquals(java.util.Vector@1584a45, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@fdf683, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@195bcc4, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@ce8d01, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@205f8b, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@88120e, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1d68fd3, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6d00c5, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@aa6018, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@13ef8b2, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@15dd906, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@166cdd7, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@42fa3f, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@5305da, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@ee90ca, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@cc4f5, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@cc4f5, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@971d78, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@e6362d, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@957fb4, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1629ffa, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@cfeef5, 2, 5): success
test SubList.testGet(java.util.LinkedList@587a, 2, 5): success
test SubList.testGet(java.util.Vector@3df17c, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@76f5c5, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@639461, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@13a00d, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@16029e, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@1b34917, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@14a0825, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@fa823, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@1fcac2b, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@81df10, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@172e710, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@10c35b1, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@237eaa, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@f61693, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@771c29, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@28dc22, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@28dc22, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@2b9b54, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@eb8b8e, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1257d36, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@13fa513, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@9c8988, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@979417, 2, 5): success
test SubList.testIndexOf(java.util.Vector@146a1b5, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@15a78df, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@15f6a02, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@11c87ce, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1e3dceb, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@1320912, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@ea33ca, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1f96b4b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@8faf13, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@90bf05, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@5efb0e, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3ff245, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@14ad1b4, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@54ec0a, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@11e1a93, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3ccae4, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@3ccae4, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1b57e6, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@117aeac, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@55fb23, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@322321, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@10b0d6a, 2, 5): success
test SubList.testIterator(java.util.LinkedList@19a7e0, 2, 5): success
test SubList.testIterator(java.util.Vector@16f83b1, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@1a6f6f6, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@14c87f1, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@a07e86, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@34de5a, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@b07e19, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@a2a47d, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@107cfa7, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@113f147, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1990d07, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@76f2e4, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1762685, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1f72855, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@9cb935, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@c35b81, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@54a08d, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@54a08d, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@24f98b, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@17a2f67, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1cc1e8f, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1be5e51, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@d9477c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@1bd8a6b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@15aa6c3, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@1815833, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@1b84e6a, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@140dc64, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@120a414, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@9919fc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1930bb1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@33346e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@60654, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@10fd88a, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@616b8e, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@a03004, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1004da6, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@1cb1eb9, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1bef2ec, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4e2183, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4e2183, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@1a797db, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@13c48b0, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@aa6e66, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@e7762c, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@196cf38, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@c5dbaf, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@59992c, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@1f868f5, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@1116045, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@b6f47e, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@58ba21, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@1391e6a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@11875a8, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@151dd22, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@1c0e90a, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@1a3cace, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@7abdce, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@b8526a, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1ce3eb8, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@d95975, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@16df44b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@88f343, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@84a25f, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@1679725, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@b4ef4c, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@18c1964, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@18e6bee, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@161c3e7, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@1bc4142, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@61b845, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1d9033f, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1d9033f, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@cf267d, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1c057b9, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@ad833b, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@bfb69a, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@e0e2a, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@160aa0, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@15b6b77, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@198c981, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@d6a257, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1d3127d, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1d3127d, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@c50921, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@1c05a5c, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@16c9273, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@b48da3, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@803f11, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@733d9f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@19b389d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1ca32bd, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@b3619f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@13433bc, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1efb7ec, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@188c2be, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1faffa7, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@9a2f61, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@ae8a9c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@f180ba, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@85ab58, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1711fbb, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@198ada1, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@8fb695, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@34a3f3, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@162a7f6, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1f73959, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1455643, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7e5137, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@1359d44, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@f3939f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@45bfec, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@6120e2, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1fa5d47, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@20d313, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@20d313, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1079e80, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1b4cdc6, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1b26683, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@356d2c, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@1ab8f5b, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@4ec64c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@a11851, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@9da0d4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@689712, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@c0ff7f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1b86278, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@4c0a1d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@126ae, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@8ca8ee, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@363a53, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@8c0a87, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1f70aa3, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@41dee9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1f38762, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@79737, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@a9dd4b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@199cda4, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1200634478], 0, 1): success
test SubList.testListIteratorSet([622964152], 0, 1): success
test SubList.testListIteratorSet([1053069698], 0, 1): success
test SubList.testListIteratorSet([1784112855], 0, 1): success
test SubList.testListIteratorSet([1708706513], 0, 1): success
test SubList.testListIteratorSet([-340931562], 0, 1): success
test SubList.testListIteratorSet([-465968742], 0, 1): success
test SubList.testListIteratorSet([-887079268], 0, 1): success
test SubList.testListIteratorSet([1722782137], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@133efdd, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@406da4, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@18f5d1a, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@84c85b, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@22043c, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@48050, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@f1f531, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@cfb1cf, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@1310ac3, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1eacae6, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@c30f1e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3292fd, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([524209821], 0, 1): success
test SubList.testListIteratorSetPrevious([-2065751230], 0, 1): success
test SubList.testListIteratorSetPrevious([-1851989034], 0, 1): success
test SubList.testListIteratorSetPrevious([-2130124032], 0, 1): success
test SubList.testListIteratorSetPrevious([-2000023352], 0, 1): success
test SubList.testListIteratorSetPrevious([-427294827], 0, 1): success
test SubList.testListIteratorSetPrevious([-1522074125], 0, 1): success
test SubList.testListIteratorSetPrevious([-1640802303], 0, 1): success
test SubList.testListIteratorSetPrevious([716540147], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@117531d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@147cf57, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@1ea0f4e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@24cc35, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@6d357a, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1ac0557, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@10d8967, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@d2b7bd, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@9b874c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@ea28be, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@48cfcf, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@c4ef7b, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@1c8daeb, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@361daa, 2, 5): success
test SubList.testModAdd(java.util.Vector@872a59, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@18296d1, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@895432, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@701e63, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@4883e, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@cc174a, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@13e0287, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1c2607b, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@29fc41, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@109b04d, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@4a8830, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@d37c5b, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@109ccaf, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@1172965, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@1640bec, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@b0309c, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@1362045, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@1b954fe, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@66eceb, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4db1fd, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@190133b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1762138, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@10a6994, 2, 5): success
test SubList.testModClear(java.util.LinkedList@9fcd03, 2, 5): success
test SubList.testModClear(java.util.Vector@1259418, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@18c0c1d, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@19f2f9c, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@fe26b2, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@159b453, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@53ec06, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@16e4eff, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@17bf53a, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@194b6a0, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@17e5c40, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@612472, 2, 5): success
test SubList.testModGet(java.util.LinkedList@1686893, 2, 5): success
test SubList.testModGet(java.util.Vector@1f4f215, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@bad2ae, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@a7b0f3, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1685ef, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@1f15611, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@1421d80, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@be48, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@a6518a, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@1861bc8, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@1969d16, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@68d929, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@9f8ab1, 2, 5): success
test SubList.testModHashCode(java.util.Vector@1fe0911, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@190d776, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@9c2dec, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@e479ce, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@26be2, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@196f61d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@17eb478, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@11985e5, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@1d3436a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@8769eb, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@1df443, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@1b0b9c1, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@618582, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@1d26f99, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@3d1f5b, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@cbbc68, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@24ad49, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@5fd29b, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4c4a24, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@163d021, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@1ba654a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@110805d, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@6cc751, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@1ad2c6d, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@241735, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@abb07e, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@fbfb0a, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3e4d0b, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@1480ed6, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@191b23d, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@fd397b, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2ed43d, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@1d6bb21, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@173b01a, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@b9356c, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@fafe7b, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@89f741, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@1b4218a, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@6aa13b, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@c2c220, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1bd0e50, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@172c43c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@857fdd, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2812ff, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@170b3b8, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1ab3fa4, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@1219fde, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@560ae3, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@1421468, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@260afa, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@25f1d6, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3f07db, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@ed09a8, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@19a2e73, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1032c6c, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1339744, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@46a7d1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@666826, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@1b263d6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@1cc429c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@7e6dce, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@1846782, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@691413, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@792105, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1f2f675, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@171a5e8, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1f5650f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@141a20f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@1ceaed2, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@264721, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@1ebbb89, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@1869718, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@f392f9, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@927faf, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@907b4e, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3c1977, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1a6b80e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@1961040, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@8e4f40, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6cc8bc, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@1b7687a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@e2f10a, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@cd4c83, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@54decd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@1259be5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@1ede153, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@6e941a, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@307156, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1596759, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@15972d0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@122f8c4, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1c78eb8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@1346e3a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6c8abe, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@194f19d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@1c70886, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@23c7c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@2597bc, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@1b6a7b, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@791838, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@590e8c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@17ae42e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@104be2c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@348b5, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@2893ee, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@e220f2, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@f5ae0, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@73fc72, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@13bbd35, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@1f30e0f, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@1eb2bf1, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@14474f9, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@1d2b28e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@1f5b0d6, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@15cf810, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@192cd62, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@1ad9049, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1a0e4b, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@1acc598, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@4b2d96, 2, 5): success
test SubList.testModRemove(java.util.Vector@1760cc5, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@70bf5b, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@14ad6f0, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@14927e8, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1133aa8, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@131411a, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@12af2fa, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1c17f87, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@ab788c, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@973181, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@6dff85, 2, 5): success
test SubList.testModSet(java.util.LinkedList@171034f, 2, 5): success
test SubList.testModSet(java.util.Vector@6e316d, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@c4c1db, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@180b692, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@31aae, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@90752e, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@98a996, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@a3b484, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@18860aa, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@1d6510e, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@203018, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@222c5, 2, 5): success
test SubList.testRemove(java.util.LinkedList@13fa702, 2, 5): success
test SubList.testRemove(java.util.Vector@43e442, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1966fbb, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@114f1b1, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@1e390c1, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@aac3af, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@42356c, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@126e5fa, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-529402290], 0, 1): success
test SubList.testSet([-1708134050], 0, 1): success
test SubList.testSet([1033324729], 0, 1): success
test SubList.testSet([-1726822606], 0, 1): success
test SubList.testSet([-41831291], 0, 1): success
test SubList.testSet([-370746837], 0, 1): success
test SubList.testSet([901468756], 0, 1): success
test SubList.testSet([563899335], 0, 1): success
test SubList.testSet([654334838], 0, 1): success
test SubList.testSet(java.util.ArrayList@1b6da, 2, 5): success
test SubList.testSet(java.util.LinkedList@10eb791, 2, 5): success
test SubList.testSet(java.util.Vector@2a7661, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@9f38f8, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@1d09d56, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1d9e8fd, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@17d3da7, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@1ea2e27, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@fd213e, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@a79d39, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@96b0f6, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@bcc726, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@9ceac8, 2, 5): success
test SubList.testSubList(java.util.LinkedList@9466f1, 2, 5): success
test SubList.testSubList(java.util.Vector@730ede, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@1a6c06e, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@1399d5b, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@4a8415, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@19650b1, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@7034d4, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1f1ea18, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@10825d9, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@c84afa, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@12074d2, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@159d8a2, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@825352, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@c40382, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@1471677, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@dae133, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@156bb74, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@156bb74, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@99d61f, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@7c880b, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@bd03f5, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@ae2f55, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@17b8f91, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@7152c8, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@184d976, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@858662, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5348d9, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@4f8548, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@4f8548, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@adab55, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@97662f, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@a1bad6, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@13010d6, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@e7ab, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1ce8ae4, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@bfb49e, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@6f482c, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1611efa, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@909c98, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@909c98, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1f70f2d, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@7a66ef, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@1cde128, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6a1118, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@270b4, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@18d618b, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@145133c, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@18c6813, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1971ae5, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@142427c, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@142427c, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1196a33, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@111cea6, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@5625f4, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@1bed5d9, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@1404d98, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@1f24f06, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@efa89a, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@1a29486, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@10d5b33, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5a40f, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5a40f, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@1cf6a95, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@b5692b, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@3416c5, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1112e48, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@9c15b3, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@46d5c0, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1b47c96, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@8f1616, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@160cd0f, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@ac376b, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@ac376b, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@ddbd88, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1bb9d73, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5757f4, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7c7902, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@bad001, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@6cf4a7, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@12f82d1, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@14aa043, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@970c67, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@bf8224, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@bf8224, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@b14d61, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1c58676, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1531e31, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@c8590d, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@2f3827, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1cb62d1, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@e6227f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@b08d4f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@1101a47, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@10c63a7, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@10c63a7, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@ef6c52, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@14b56d0, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@178e487, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1321aac, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@1f6e784, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@ee0cc2, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@118aef4, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@cf96d3, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@8a684, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@1648fb1, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2228e3, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@16d36fa, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@17e2090, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@17e866c, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@127e705, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1b8bcdc, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1ebbb0c, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@fbf9e0, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@30cef9, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@79fdb7, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@79fdb7, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@173a266, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@f3bf49, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@2cba00, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@722bc0, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
