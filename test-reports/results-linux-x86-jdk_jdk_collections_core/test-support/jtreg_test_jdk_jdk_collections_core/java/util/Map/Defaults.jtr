#Test Results (version 2)
#Mon Apr 29 00:37:12 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
author=Mike Duigou
keywords=bug8010122 bug8004518 bug8024331 bug8024688 testng
run=USER_SPECIFIED testng Defaults\n
source=Defaults.java
title=Test Map default methods

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
elapsed=784 0\:00\:00.784
end=Mon Apr 29 00\:37\:12 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az714-682.22nzjvkrszmuhkvqy55p1tioig.phxx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1018-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Mon Apr 29 00\:37\:11 UTC 2024
test=java/util/Map/Defaults.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1018-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1018-azure
totalTime=784
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Map

#section:script_messages
----------messages:(4/315)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/206)----------
command: build Defaults
reason: Named class compiled on demand
started: Mon Apr 29 00:37:11 UTC 2024
Test directory:
  compile: Defaults
finished: Mon Apr 29 00:37:12 UTC 2024
elapsed time (seconds): 0.298
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:37:11 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:37:12 UTC 2024
elapsed time (seconds): 0.297
----------configuration:(13/942)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(35/3438)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Map/Defaults.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
----------direct:(12/1022)----------
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:624: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(0L), map.compute(new Long(3L), fun));
                                                   ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:625: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(3L), map.compute(new Long(3L), fun));
                                                   ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:626: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(6L), map.compute(new Long(3L), fun));
                                                   ^
Note: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 warnings
result: Passed. Compilation successful

#section:testng
----------messages:(7/210)----------
command: testng Defaults
reason: User specified action: run testng Defaults 
started: Mon Apr 29 00:37:12 UTC 2024
Mode: agentvm
Agent id: 3
finished: Mon Apr 29 00:37:12 UTC 2024
elapsed time (seconds): 0.485
----------configuration:(13/934)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/Map

----------rerun:(28/3015)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Map/Defaults.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/Map/Defaults.java false Defaults
----------System.out:(518/56198)----------
test Defaults.testCompute("Hashtable", java.util.Hashtable@b7773c): success
test Defaults.testCompute("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@119c3d7): success
test Defaults.testCompute("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1fbb014): success
test Defaults.testCompute("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@1e6ca1e): success
test Defaults.testCompute("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@171889): success
test Defaults.testCompute("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1fe59ed): success
test Defaults.testCompute("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@2f656a): success
test Defaults.testCompute("HashMap", java.util.HashMap@f29cd6): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@156b660): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@1f10a45): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1557599): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1bfb505): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@ec50f4): success
test Defaults.testCompute("HashMap", java.util.HashMap@10c4158): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@1128c20): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@1da7984): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@14cf972): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@9872fd): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@cff2bf): success
test Defaults.testCompute("EnumMap", java.util.EnumMap@b36a3): success
test Defaults.testCompute("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@c6ba2f): success
test Defaults.testCompute("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1c2555b): success
test Defaults.testCompute("TreeMap", java.util.TreeMap@248912): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@b97fa3): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@1fff2c6): success
test Defaults.testComputeIfAbsent("Hashtable", java.util.Hashtable@13b19b5): success
test Defaults.testComputeIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1fb71bc): success
test Defaults.testComputeIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@adf06b): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@551ff6): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@4179a1): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1361448): success
test Defaults.testComputeIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@13cece2): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@1b2634f): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@c67b87): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@11c4a29): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@e984c8): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@16a05a2): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@a79898): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@1bfc201): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@1788ea8): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1605eb8): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@fd8083): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@64700b): success
test Defaults.testComputeIfAbsent("EnumMap", java.util.EnumMap@14bc90e): success
test Defaults.testComputeIfAbsent("TreeMap", java.util.TreeMap@6ece09): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@13ba3f4): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1b6b23): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@70d651): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@1035bfa): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@134e3dc): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1f22ebd): success
test Defaults.testComputeIfAbsentNullFunction("Hashtable", java.util.Hashtable@6cd421): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1f3c330): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@13cb5de): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1be337a): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1c4e8f5): success
test Defaults.testComputeIfAbsentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@ccc470): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@1c22ed9): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@ca6c4e): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@101a199): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1e9306b): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@422fc3): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@edbdad): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@1848c20): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@19c312f): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@7b7d73): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@1445d7c): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@176c37d): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@107edca): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1f4a680): success
test Defaults.testComputeIfAbsentNullFunction("EnumMap", java.util.EnumMap@bf8735): success
test Defaults.testComputeIfAbsentNullFunction("TreeMap", java.util.TreeMap@17e534a): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@13a3b64): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@99b375): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@fb59fc): success
test Defaults.testComputeIfAbsentNulls("HashMap", java.util.HashMap@1f19a17): success
test Defaults.testComputeIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@f2963b): success
test Defaults.testComputeIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@31b893): success
test Defaults.testComputeIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@1ebed8a): success
test Defaults.testComputeIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@cc8609): success
test Defaults.testComputeIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1523fab): success
test Defaults.testComputeIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1df6653): success
test Defaults.testComputeIfPresent("Hashtable", java.util.Hashtable@1dd4cdd): success
test Defaults.testComputeIfPresent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@144f4cd): success
test Defaults.testComputeIfPresent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@bd6a65): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@3b2b7a): success
test Defaults.testComputeIfPresent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1e5f0e0): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@15c7121): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@3bc5e3): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@8ebeae): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@92eb55): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1f2b392): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@56fe74): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1bc2ad1): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@7d0a2d): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@9d0f9e): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@8187bf): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@6685bf): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@fe4c4e): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@9b49): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@c3b880): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@ce4a7e): success
test Defaults.testComputeIfPresent("EnumMap", java.util.EnumMap@1feb2bb): success
test Defaults.testComputeIfPresent("TreeMap", java.util.TreeMap@1861e69): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@9aa56f): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@bda7bb): success
test Defaults.testComputeIfPresent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@171a053): success
test Defaults.testComputeIfPresentNullFunction("Hashtable", java.util.Hashtable@888a9a): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6e2743): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@19d00a): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@1000910): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@8093b1): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@18a70fb): success
test Defaults.testComputeIfPresentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@6d58f3): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@1fc9508): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@1a38cd7): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@72c205): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1db621): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@11967fb): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@119bc85): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@1f73dd5): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@b1a4f0): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@12835f): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@124da31): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@47b0cb): success
test Defaults.testComputeIfPresentNullFunction("EnumMap", java.util.EnumMap@10b257e): success
test Defaults.testComputeIfPresentNullFunction("TreeMap", java.util.TreeMap@198c173): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@14598d4): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1de52cc): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@1532d78): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@15eb144): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@1677810): success
test Defaults.testComputeIfPresentNulls("HashMap", java.util.HashMap@dd38b1): success
test Defaults.testComputeIfPresentNulls("IdentityHashMap", java.util.IdentityHashMap@1af75a3): success
test Defaults.testComputeIfPresentNulls("LinkedHashMap", java.util.LinkedHashMap@bcfbad): success
test Defaults.testComputeIfPresentNulls("WeakHashMap", java.util.WeakHashMap@1971): success
test Defaults.testComputeIfPresentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@e767c0): success
test Defaults.testComputeIfPresentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1ad3da5): success
test Defaults.testComputeIfPresentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@268e08): success
test Defaults.testComputeNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@8f57e0): success
test Defaults.testComputeNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1f61079): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@347e66): success
test Defaults.testComputeNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@11764d5): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1e03911): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1b85793): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@15d3b7f): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@190e3d6): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@19f8248): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@59f36f): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@1e0283f): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@75dd53): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@101978f): success
test Defaults.testComputeNullFunction("EnumMap", java.util.EnumMap@eefe83): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@11fe08): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@c83be0): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@56aec8): success
test Defaults.testComputeNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@32aedd): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@17481cc): success
test Defaults.testComputeNullFunction("Hashtable", java.util.Hashtable@c5ae88): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@14bca07): success
test Defaults.testComputeNullFunction("TreeMap", java.util.TreeMap@14da06d): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@ca15a3): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@cb1a42): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@1cd3061): success
test Defaults.testComputeNulls("IdentityHashMap", java.util.IdentityHashMap@17f22fa): success
test Defaults.testComputeNulls("HashMap", java.util.HashMap@17d78a3): success
test Defaults.testComputeNulls("LinkedHashMap", java.util.LinkedHashMap@97cbc1): success
test Defaults.testComputeNulls("WeakHashMap", java.util.WeakHashMap@19c1e9f): success
test Defaults.testComputeNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@552083): success
test Defaults.testComputeNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@16e4844): success
test Defaults.testComputeNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@176bd2c): success
test Defaults.testConcurrentMap_computeIfAbsent_racy(): success
test Defaults.testConcurrentMap_computeIfPresent_racy(): success
test Defaults.testConcurrentMap_compute_racy(): success
test Defaults.testConcurrentMap_compute_simple(): success
test Defaults.testConcurrentMap_merge_racy(): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@1a3855c): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@1279b7c): success
test Defaults.testForEach("Hashtable", java.util.Hashtable@6e1c10): success
test Defaults.testForEach("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1db32fa): success
test Defaults.testForEach("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@d9d83a): success
test Defaults.testForEach("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@93becd): success
test Defaults.testForEach("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@845b96): success
test Defaults.testForEach("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@61b2d9): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@97a73a): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@3b332a): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@18d399f): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@13ffaad): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@a9e82a): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@15d9e6d): success
test Defaults.testForEach("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1be526a): success
test Defaults.testForEach("HashMap", java.util.HashMap@13a2de6): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@e638c1): success
test Defaults.testForEach("TreeMap", java.util.TreeMap@c1ca00): success
test Defaults.testForEach("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@11328fa): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@153162b): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@1a9147): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1e4d201): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1aeb4f6): success
test Defaults.testForEach("HashMap", java.util.HashMap@35f5b8): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1b951ad): success
test Defaults.testForEach("EnumMap", java.util.EnumMap@15cb8e2): success
test Defaults.testForEach("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1948119): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@1680f31): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@11af5c3): success
test Defaults.testGetOrDefault("Hashtable", java.util.Hashtable@17d6a08): success
test Defaults.testGetOrDefault("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@14ddf63): success
test Defaults.testGetOrDefault("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1c46623): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@d220ca): success
test Defaults.testGetOrDefault("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@a42e61): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@6e861c): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@27fff8): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@406033): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1994b3f): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@17c311c): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@6f9f7c): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@800b7): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@f96c18): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@e056e1): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@70d558): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@e8def9): success
test Defaults.testGetOrDefault("EnumMap", java.util.EnumMap@126ceef): success
test Defaults.testGetOrDefault("TreeMap", java.util.TreeMap@2165aa): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@55050a): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1590089): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@18e12ef): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5f2a17): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@50a097): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@467806): success
test Defaults.testGetOrDefault("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@15fb476): success
test Defaults.testGetOrDefaultNulls("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@1fcd8c1): success
test Defaults.testGetOrDefaultNulls("HashMap", java.util.HashMap@b67bb1): success
test Defaults.testGetOrDefaultNulls("LinkedHashMap", java.util.LinkedHashMap@75efe): success
test Defaults.testGetOrDefaultNulls("IdentityHashMap", java.util.IdentityHashMap@c6970f): success
test Defaults.testGetOrDefaultNulls("WeakHashMap", java.util.WeakHashMap@e693e3): success
test Defaults.testGetOrDefaultNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1a84b69): success
test Defaults.testGetOrDefaultNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@11e612): success
test Defaults.testGetOrDefaultNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@d2fd3f): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@d94b56, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@4b45f4, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1c53e30, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@1a57968, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@481244, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@920c59, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@111ab1e, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@1cf8d9a, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@241d95, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@28d2ef, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@115d8d4, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@987353, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@184c2ab, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@36d305, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@b78c1c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2aa6da, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@f9560a, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@168676c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@b146e9, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@4d5764, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@9add43, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@12550d, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@29060a, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@912f16, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@15e0105, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1cdba39, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@163ee5b, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@11b7f19, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@1910c24, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@e542e8, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@13b3236, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@1154cca, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@591930, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@13a279b, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@9e9a90, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@97573e, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@11130d4, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1121bdc, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@19157ac, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@f8340b, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@924b91, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@f747b8, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@cb4a53, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@1ce5f6e, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@14849c1, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@124b5bc, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1ca609b, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@d7cb44, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5afc0e, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@1e638ce, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@87bc15, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@99b53a, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@186664, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@16c3115, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1022060, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@a5a9d0, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@e33a70, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@a4c9c6, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@337b47, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1753a04, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@19c31ab, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@1a67180, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@120a934, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@1e42d58, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@520be8, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@10ef552, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@1932d6, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1bd6dec, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@c36fc8, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@b5d9e5, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@a2b359, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@f38125, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@7f5ace, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@112dd32, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1002066, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMergeNullMerger("Hashtable", java.util.Hashtable@507bf4): success
test Defaults.testMergeNullMerger("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@2c9070): success
test Defaults.testMergeNullMerger("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@ce85d4): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@9e0b31): success
test Defaults.testMergeNullMerger("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1fde5a1): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@264418): success
test Defaults.testMergeNullMerger("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1b3a6a1): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@12a023b): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@30c7c8): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@110e184): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1517b94): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@169c33f): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5557f8): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@43833): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@216165): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@136c34a): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@267637): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@562bea): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@9d5479): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1148de): success
test Defaults.testMergeNullMerger("EnumMap", java.util.EnumMap@1fc6c60): success
test Defaults.testMergeNullMerger("TreeMap", java.util.TreeMap@185c4ac): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5cb00f): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1763888): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@4dfde6): success
test Defaults.testPutIfAbsent("Hashtable", java.util.Hashtable@1d06cf2): success
test Defaults.testPutIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1d302ff): success
test Defaults.testPutIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@17c81d7): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@19226fe): success
test Defaults.testPutIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@61fbdd): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1f5853a): success
test Defaults.testPutIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@5dd0dc): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@1068269): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@1e6a43d): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@4f58b8): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@1725283): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@b7d8a3): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@15dadcc): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@ee08c4): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@13c1ba4): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@1c8e526): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@c1f78b): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@113b620): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@14a9ef): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@418bec): success
test Defaults.testPutIfAbsent("EnumMap", java.util.EnumMap@cc1093): success
test Defaults.testPutIfAbsent("TreeMap", java.util.TreeMap@8f0fe3): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1812736): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@ed66c9): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1e96c83): success
test Defaults.testPutIfAbsentNulls("HashMap", java.util.HashMap@fb1d10): success
test Defaults.testPutIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@1407147): success
test Defaults.testPutIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@175e5dc): success
test Defaults.testPutIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@5ae04c): success
test Defaults.testPutIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@efb356): success
test Defaults.testPutIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@8d17ee): success
test Defaults.testPutIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@58a959): success
test Defaults.testRemove("Hashtable", java.util.Hashtable@389718): success
test Defaults.testRemove("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@13fe1a): success
test Defaults.testRemove("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2340b): success
test Defaults.testRemove("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@1161c9d): success
test Defaults.testRemove("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@105ffce): success
test Defaults.testRemove("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1a290ba): success
test Defaults.testRemove("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@152b611): success
test Defaults.testRemove("HashMap", java.util.HashMap@21f2f0): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@162f1eb): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@1059d23): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@da6aa8): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@165747): success
test Defaults.testRemove("HashMap", java.util.HashMap@2b16a6): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@12ef421): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@1e5d682): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@12a626c): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4e9e9): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1a29175): success
test Defaults.testRemove("EnumMap", java.util.EnumMap@1bd3174): success
test Defaults.testRemove("TreeMap", java.util.TreeMap@1647bff): success
test Defaults.testRemove("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@4af14c): success
test Defaults.testRemove("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1164c3c): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@38f5f5): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@13f3e30): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@8756ee): success
test Defaults.testRemoveNulls("HashMap", java.util.HashMap@5f181b): success
test Defaults.testRemoveNulls("IdentityHashMap", java.util.IdentityHashMap@1470a7b): success
test Defaults.testRemoveNulls("LinkedHashMap", java.util.LinkedHashMap@6e136b): success
test Defaults.testRemoveNulls("WeakHashMap", java.util.WeakHashMap@10e47d7): success
test Defaults.testRemoveNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@674fcc): success
test Defaults.testRemoveNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@fac94a): success
test Defaults.testRemoveNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@107a92e): success
test Defaults.testReplaceAll("Hashtable", java.util.Hashtable@167f7a5): success
test Defaults.testReplaceAll("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1aa5284): success
test Defaults.testReplaceAll("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7b7614): success
test Defaults.testReplaceAll("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@e06b26): success
test Defaults.testReplaceAll("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@72a3b4): success
test Defaults.testReplaceAll("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1209e63): success
test Defaults.testReplaceAll("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@12167b2): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@62235e): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@60b7af): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@9758bf): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@1c73c80): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@1467c2f): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@59aa10): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@1dd611d): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@18f883a): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@a3f201): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@e2b6b6): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@638d97): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@164a02b): success
test Defaults.testReplaceAll("TreeMap", java.util.TreeMap@8ba579): success
test Defaults.testReplaceAll("EnumMap", java.util.EnumMap@1dc9e0b): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1698360): success
test Defaults.testReplaceAll("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@15c4eb): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@121447e): success
test Defaults.testReplaceAll("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@35b8ed): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@173ebca): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4eaa2a): success
test Defaults.testReplaceAllNoNullReplacement("Hashtable", java.util.Hashtable@3450ca): success
test Defaults.testReplaceAllNoNullReplacement("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@16c517e): success
test Defaults.testReplaceAllNoNullReplacement("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1ece4b0): success
test Defaults.testReplaceAllNoNullReplacement("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1331804): success
test Defaults.testReplaceAllNoNullReplacement("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@19e2de4): success
test Defaults.testReplaceKV("Hashtable", java.util.Hashtable@62bcab): success
test Defaults.testReplaceKV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@b1f3d): success
test Defaults.testReplaceKV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@b802b8): success
test Defaults.testReplaceKV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@11e5df9): success
test Defaults.testReplaceKV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@66aaa1): success
test Defaults.testReplaceKV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@97c34c): success
test Defaults.testReplaceKV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1fba362): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@d8ca40): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@1fc8355): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@f11f18): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@1cc1523): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3303e5): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1e3ea6c): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@18af9d9): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@1add33e): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@1241358): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@9e809): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@15c5b11): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@15fb690): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@61fc93): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@74f76c): success
test Defaults.testReplaceKV("EnumMap", java.util.EnumMap@e03905): success
test Defaults.testReplaceKV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1361506): success
test Defaults.testReplaceKV("TreeMap", java.util.TreeMap@17049df): success
test Defaults.testReplaceKV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@b87f22): success
test Defaults.testReplaceKVNoNulls("Hashtable", java.util.Hashtable@1084edf): success
test Defaults.testReplaceKVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@18ab2d): success
test Defaults.testReplaceKVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1adccd3): success
test Defaults.testReplaceKVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@a68950): success
test Defaults.testReplaceKVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1227db8): success
test Defaults.testReplaceKVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@181d29a): success
test Defaults.testReplaceKVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@8b8916): success
test Defaults.testReplaceKVNulls("HashMap", java.util.HashMap@8a320b): success
test Defaults.testReplaceKVNulls("IdentityHashMap", java.util.IdentityHashMap@159bdc0): success
test Defaults.testReplaceKVNulls("LinkedHashMap", java.util.LinkedHashMap@15aceff): success
test Defaults.testReplaceKVNulls("WeakHashMap", java.util.WeakHashMap@1a0a470): success
test Defaults.testReplaceKVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@c491a6): success
test Defaults.testReplaceKVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6118bb): success
test Defaults.testReplaceKVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@25a7f5): success
test Defaults.testReplaceKVV("Hashtable", java.util.Hashtable@1d16040): success
test Defaults.testReplaceKVV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@e90104): success
test Defaults.testReplaceKVV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1e85b99): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@71dda0): success
test Defaults.testReplaceKVV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@172ea6d): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@14aa12b): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@1268cae): success
test Defaults.testReplaceKVV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@8832d2): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@ec6a7b): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1145be2): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@c39534): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1afc8e7): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@8dab46): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@1c11fb0): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@1e9ada0): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@e32635): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1c4f936): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@139adaf): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@51f563): success
test Defaults.testReplaceKVV("EnumMap", java.util.EnumMap@11ae303): success
test Defaults.testReplaceKVV("TreeMap", java.util.TreeMap@15ca785): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@144645e): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@925311): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@965783): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@1347848): success
test Defaults.testReplaceKVVNoNulls("Hashtable", java.util.Hashtable@5600f8): success
test Defaults.testReplaceKVVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@123451): success
test Defaults.testReplaceKVVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5acf37): success
test Defaults.testReplaceKVVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@1632d9f): success
test Defaults.testReplaceKVVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@d23271): success
test Defaults.testReplaceKVVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@102771c): success
test Defaults.testReplaceKVVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1aa71af): success
test Defaults.testReplaceKVVNulls("HashMap", java.util.HashMap@1181ce9): success
test Defaults.testReplaceKVVNulls("IdentityHashMap", java.util.IdentityHashMap@1ef02f2): success
test Defaults.testReplaceKVVNulls("LinkedHashMap", java.util.LinkedHashMap@4c0931): success
test Defaults.testReplaceKVVNulls("WeakHashMap", java.util.WeakHashMap@1beb22c): success
test Defaults.testReplaceKVVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@8c12b0): success
test Defaults.testReplaceKVVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@197295c): success
test Defaults.testReplaceKVVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@c74ea2): success

===============================================
java/util/Map/Defaults.java
Total tests run: 512, Passes: 512, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
