#Test Results (version 2)
#Fri Mar 01 15:08:08 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=1035 0\:00\:01.035
end=Fri Mar 01 15\:08\:08 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1198-260.olij14r4f4eezasrnq2weippdh.phxx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Fri Mar 01 15\:08\:07 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1015-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757338112,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=1036
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Collection

#section:script_messages
----------messages:(4/315)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-e22bbb87eb47c075e30a3ae770ba2979e9628e8f)
OpenJDK Server VM (build 23-internal-dubi253-e22bbb87eb47c075e30a3ae770ba2979e9628e8f, mixed mode, sharing)

#section:build
----------messages:(7/234)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Fri Mar 01 15:08:07 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Fri Mar 01 15:08:07 UTC 2024
elapsed time (seconds): 0.241
result: Passed. Build successful

#section:compile
----------messages:(7/292)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Fri Mar 01 15:08:07 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 15:08:07 UTC 2024
elapsed time (seconds): 0.241
----------configuration:(10/717)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d

----------rerun:(35/3426)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
----------direct:(7/585)----------
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/292)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Fri Mar 01 15:08:07 UTC 2024
Mode: agentvm
Agent id: 3
finished: Fri Mar 01 15:08:08 UTC 2024
elapsed time (seconds): 0.793
----------configuration:(13/962)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection

----------rerun:(28/2919)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis   Ratio
ArrayList iterate for loop                                         0   1.000
ArrayList iterator().forEachRemaining()                            0   4.302
ArrayList spliterator().tryAdvance()                               0   3.376
ArrayList spliterator().forEachRemaining()                         0   3.263
ArrayList contains                                                 0   4.421
ArrayList containsAll                                              0   0.582
ArrayList forEach                                                  0   2.928
ArrayList toArray()                                                0   0.179
ArrayList toArray(a)                                               0   0.163
ArrayList toArray(empty)                                           0   0.140
ArrayList stream().forEach                                         0   2.980
ArrayList stream().mapToInt                                        0  11.213
ArrayList stream().collect                                         0  13.356
ArrayList stream()::iterator                                       0   4.283
ArrayList parallelStream().forEach                                13 238.504
ArrayList parallelStream().mapToInt                                0  12.161
ArrayList parallelStream().collect                                 0   7.529
ArrayList parallelStream()::iterator                               0   3.369
ArrayList removeIf                                                 0   2.981
ArrayList remove(Object)                                           0   0.344
ArrayList listIterator forward loop                                0   0.515
ArrayList listIterator backward loop                               0   0.311
ArrayList indexOf                                                  0   0.398
ArrayList lastIndexOf                                              0   0.185
ArrayList equals                                                   0   0.351
ArrayList hashCode                                                 0   0.370
ArrayList replaceAll                                               0   3.506
ArrayList$SubList iterate for loop                                 0   0.320
ArrayList$SubList iterator().forEachRemaining()                    0   0.226
ArrayList$SubList spliterator().tryAdvance()                       0   2.571
ArrayList$SubList spliterator().forEachRemaining()                 0   0.114
ArrayList$SubList contains                                         0   0.317
ArrayList$SubList containsAll                                      0   0.110
ArrayList$SubList forEach                                          0   0.545
ArrayList$SubList toArray()                                        0   0.172
ArrayList$SubList toArray(a)                                       0   0.073
ArrayList$SubList toArray(empty)                                   0   0.133
ArrayList$SubList stream().forEach                                 0   0.155
ArrayList$SubList stream().mapToInt                                0   0.234
ArrayList$SubList stream().collect                                 0   0.192
ArrayList$SubList stream()::iterator                               0   0.157
ArrayList$SubList parallelStream().forEach                         0   3.299
ArrayList$SubList parallelStream().mapToInt                        0   3.522
ArrayList$SubList parallelStream().collect                         0   3.222
ArrayList$SubList parallelStream()::iterator                       0   0.192
ArrayList$SubList removeIf                                         0   0.085
ArrayList$SubList remove(Object)                                   0   0.146
ArrayList$SubList listIterator forward loop                        0   0.078
ArrayList$SubList listIterator backward loop                       0   0.085
ArrayList$SubList indexOf                                          0   0.049
ArrayList$SubList lastIndexOf                                      0   0.098
ArrayList$SubList equals                                           0   0.229
ArrayList$SubList hashCode                                         0   0.077
ArrayList$SubList replaceAll                                       0   0.112
Vector iterate for loop                                            0   0.091
Vector iterator().forEachRemaining()                               0   0.099
Vector spliterator().tryAdvance()                                  0   0.179
Vector spliterator().forEachRemaining()                            0   0.071
Vector contains                                                    0   0.376
Vector containsAll                                                 0   0.133
Vector forEach                                                     0   0.082
Vector toArray()                                                   0   0.044
Vector toArray(a)                                                  0   0.070
Vector toArray(empty)                                              0   0.049
Vector stream().forEach                                            0   0.114
Vector stream().mapToInt                                           0   0.218
Vector stream().collect                                            0   0.178
Vector stream()::iterator                                          0   0.164
Vector parallelStream().forEach                                    0   3.120
Vector parallelStream().mapToInt                                   0   4.383
Vector parallelStream().collect                                    0   3.298
Vector parallelStream()::iterator                                  0   0.180
Vector removeIf                                                    0   0.080
Vector remove(Object)                                              0   0.061
Vector listIterator forward loop                                   0   0.089
Vector listIterator backward loop                                  0   0.095
Vector indexOf                                                     0   0.041
Vector lastIndexOf                                                 0   0.126
Vector equals                                                      0   0.325
Vector hashCode                                                    0   0.113
Vector replaceAll                                                  0   0.141
SynchronizedRandomAccessList iterate for loop                      0   0.300
SynchronizedRandomAccessList iterator().forEachRemaining()         0   0.175
SynchronizedRandomAccessList spliterator().tryAdvance()            0   0.483
SynchronizedRandomAccessList spliterator().forEachRemaining()      0   0.152
SynchronizedRandomAccessList contains                              0   1.038
SynchronizedRandomAccessList containsAll                           0   0.261
SynchronizedRandomAccessList forEach                               0   0.318
SynchronizedRandomAccessList toArray()                             0   0.126
SynchronizedRandomAccessList toArray(a)                            0   0.131
SynchronizedRandomAccessList toArray(empty)                        0   0.101
SynchronizedRandomAccessList stream().forEach                      0   0.200
SynchronizedRandomAccessList stream().mapToInt                     0   0.279
SynchronizedRandomAccessList stream().collect                      0   0.241
SynchronizedRandomAccessList stream()::iterator                    0   0.225
SynchronizedRandomAccessList parallelStream().forEach              0   3.481
SynchronizedRandomAccessList parallelStream().mapToInt             0   3.950
SynchronizedRandomAccessList parallelStream().collect              0   3.659
SynchronizedRandomAccessList parallelStream()::iterator            0   0.281
SynchronizedRandomAccessList removeIf                              0   0.254
SynchronizedRandomAccessList remove(Object)                        0   0.155
SynchronizedRandomAccessList listIterator forward loop             0   0.124
SynchronizedRandomAccessList listIterator backward loop            0   0.165
SynchronizedRandomAccessList indexOf                               0   0.226
SynchronizedRandomAccessList lastIndexOf                           0   0.239
SynchronizedRandomAccessList equals                                0   0.321
SynchronizedRandomAccessList hashCode                              0   0.207
SynchronizedRandomAccessList replaceAll                            0   0.461
LinkedList iterate for loop                                        0   0.108
LinkedList iterator().forEachRemaining()                           0   0.151
LinkedList spliterator().tryAdvance()                              0   2.573
LinkedList spliterator().forEachRemaining()                        0   0.103
LinkedList contains                                                0   0.209
LinkedList containsAll                                             0   0.074
LinkedList forEach                                                 0   0.106
LinkedList toArray()                                               0   0.069
LinkedList toArray(a)                                              0   0.051
LinkedList toArray(empty)                                          0   0.044
LinkedList stream().forEach                                        0   0.110
LinkedList stream().mapToInt                                       0   0.211
LinkedList stream().collect                                        0   0.168
LinkedList stream()::iterator                                      0   0.154
LinkedList parallelStream().forEach                                0   2.220
LinkedList parallelStream().mapToInt                               0   2.689
LinkedList parallelStream().collect                                0   2.339
LinkedList parallelStream()::iterator                              0   0.199
LinkedList removeIf                                                0   0.115
LinkedList remove(Object)                                          0   0.073
LinkedList descendingIterator() loop                               0   2.052
LinkedList descendingIterator().forEachRemaining()                 0   3.093
LinkedList listIterator forward loop                               0   0.080
LinkedList listIterator backward loop                              0   0.080
LinkedList indexOf                                                 0   0.054
LinkedList lastIndexOf                                             0   0.064
LinkedList equals                                                  0   0.181
LinkedList hashCode                                                0   0.116
LinkedList replaceAll                                              0   0.141
AbstractList$SubList iterate for loop                              0   0.175
AbstractList$SubList iterator().forEachRemaining()                 0   0.139
AbstractList$SubList spliterator().tryAdvance()                    0   0.268
AbstractList$SubList spliterator().forEachRemaining()              0   0.148
AbstractList$SubList contains                                      0   0.127
AbstractList$SubList containsAll                                   0   0.141
AbstractList$SubList forEach                                       0   0.133
AbstractList$SubList toArray()                                     0   0.174
AbstractList$SubList toArray(a)                                    0   0.160
AbstractList$SubList toArray(empty)                                0   0.113
AbstractList$SubList stream().forEach                              0   0.189
AbstractList$SubList stream().mapToInt                             0   0.283
AbstractList$SubList stream().collect                              0   0.244
AbstractList$SubList stream()::iterator                            0   0.205
AbstractList$SubList parallelStream().forEach                      0   2.298
AbstractList$SubList parallelStream().mapToInt                     0   2.327
AbstractList$SubList parallelStream().collect                      0   2.247
AbstractList$SubList parallelStream()::iterator                    0   0.263
AbstractList$SubList removeIf                                      0   0.234
AbstractList$SubList remove(Object)                                0   0.127
AbstractList$SubList listIterator forward loop                     0   0.096
AbstractList$SubList listIterator backward loop                    0   0.176
AbstractList$SubList indexOf                                       0   0.118
AbstractList$SubList lastIndexOf                                   0   0.163
AbstractList$SubList equals                                        0   0.330
AbstractList$SubList hashCode                                      0   0.253
AbstractList$SubList replaceAll                                    0   0.174
CopyOnWriteArrayList iterate for loop                              0   0.093
CopyOnWriteArrayList iterator().forEachRemaining()                 0   0.192
CopyOnWriteArrayList spliterator().tryAdvance()                    0   0.151
CopyOnWriteArrayList spliterator().forEachRemaining()              0   0.071
CopyOnWriteArrayList contains                                      0   0.481
CopyOnWriteArrayList containsAll                                   0   0.208
CopyOnWriteArrayList forEach                                       0   0.080
CopyOnWriteArrayList toArray()                                     0   0.049
CopyOnWriteArrayList toArray(a)                                    0   0.064
CopyOnWriteArrayList toArray(empty)                                0   0.050
CopyOnWriteArrayList stream().forEach                              0   0.112
CopyOnWriteArrayList stream().mapToInt                             0   0.202
CopyOnWriteArrayList stream().collect                              0   0.166
CopyOnWriteArrayList stream()::iterator                            0   0.170
CopyOnWriteArrayList parallelStream().forEach                      0   3.296
CopyOnWriteArrayList parallelStream().mapToInt                     0   3.587
CopyOnWriteArrayList parallelStream().collect                      0   2.935
CopyOnWriteArrayList parallelStream()::iterator                    0   0.172
CopyOnWriteArrayList removeIf                                      0   0.092
CopyOnWriteArrayList remove(Object)                                0   0.663
CopyOnWriteArrayList listIterator forward loop                     0   0.081
CopyOnWriteArrayList listIterator backward loop                    0   0.131
CopyOnWriteArrayList indexOf                                       0   0.136
CopyOnWriteArrayList lastIndexOf                                   0   0.070
CopyOnWriteArrayList equals                                        0   0.176
CopyOnWriteArrayList hashCode                                      0   0.104
CopyOnWriteArrayList replaceAll                                    0   0.149
COWSubList iterate for loop                                        0   2.324
COWSubList iterator().forEachRemaining()                           0   0.236
COWSubList spliterator().tryAdvance()                              0   0.194
COWSubList spliterator().forEachRemaining()                        0   0.075
COWSubList contains                                                0   0.121
COWSubList containsAll                                             0   0.144
COWSubList forEach                                                 0   0.128
COWSubList toArray()                                               0   0.106
COWSubList toArray(a)                                              0   0.099
COWSubList toArray(empty)                                          0   0.074
COWSubList stream().forEach                                        0   0.103
COWSubList stream().mapToInt                                       0   0.230
COWSubList stream().collect                                        0   0.171
COWSubList stream()::iterator                                      0   0.143
COWSubList parallelStream().forEach                                0   3.047
COWSubList parallelStream().mapToInt                               0   2.948
COWSubList parallelStream().collect                                0  11.996
COWSubList parallelStream()::iterator                              0   0.195
COWSubList removeIf                                                0   0.199
COWSubList remove(Object)                                          0   0.087
COWSubList listIterator forward loop                               0   0.180
COWSubList listIterator backward loop                              0   0.247
COWSubList indexOf                                                 0   0.059
COWSubList lastIndexOf                                             0   0.085
COWSubList equals                                                  0   0.190
COWSubList hashCode                                                0   0.095
COWSubList replaceAll                                              0   0.138
ArrayDeque iterate for loop                                        0   0.087
ArrayDeque iterator().forEachRemaining()                           0   0.102
ArrayDeque spliterator().tryAdvance()                              0   0.275
ArrayDeque spliterator().forEachRemaining()                        0   0.084
ArrayDeque contains                                                0   0.239
ArrayDeque containsAll                                             0   0.070
ArrayDeque forEach                                                 0   0.082
ArrayDeque toArray()                                               0   0.065
ArrayDeque toArray(a)                                              0   0.082
ArrayDeque toArray(empty)                                          0   0.049
ArrayDeque stream().forEach                                        0   0.124
ArrayDeque stream().mapToInt                                       0   0.252
ArrayDeque stream().collect                                        0   0.187
ArrayDeque stream()::iterator                                      0   0.159
ArrayDeque parallelStream().forEach                                0   2.856
ArrayDeque parallelStream().mapToInt                               0   4.045
ArrayDeque parallelStream().collect                                0   3.475
ArrayDeque parallelStream()::iterator                              0   0.169
ArrayDeque removeIf                                                0   0.085
ArrayDeque remove(Object)                                          0   0.062
ArrayDeque descendingIterator() loop                               0   0.108
ArrayDeque descendingIterator().forEachRemaining()                 0   0.099
PriorityQueue iterate for loop                                     0   0.123
PriorityQueue iterator().forEachRemaining()                        0   0.096
PriorityQueue spliterator().tryAdvance()                           0   2.287
PriorityQueue spliterator().forEachRemaining()                     0   0.090
PriorityQueue contains                                             0   0.114
PriorityQueue containsAll                                          0   0.077
PriorityQueue forEach                                              0   0.137
PriorityQueue toArray()                                            0   0.077
PriorityQueue toArray(a)                                           0   0.091
PriorityQueue toArray(empty)                                       0   0.087
PriorityQueue stream().forEach                                     0   0.113
PriorityQueue stream().mapToInt                                    0   0.229
PriorityQueue stream().collect                                     0   0.164
PriorityQueue stream()::iterator                                   0   0.137
PriorityQueue parallelStream().forEach                             0   3.843
PriorityQueue parallelStream().mapToInt                            0   4.014
PriorityQueue parallelStream().collect                             0   4.241
PriorityQueue parallelStream()::iterator                           0   0.184
PriorityQueue removeIf                                             0   0.232
PriorityQueue remove(Object)                                       0   0.063
ConcurrentLinkedQueue iterate for loop                             0   0.106
ConcurrentLinkedQueue iterator().forEachRemaining()                0   0.090
ConcurrentLinkedQueue spliterator().tryAdvance()                   0   2.592
ConcurrentLinkedQueue spliterator().forEachRemaining()             0   0.138
ConcurrentLinkedQueue contains                                     0   0.169
ConcurrentLinkedQueue containsAll                                  0   0.099
ConcurrentLinkedQueue forEach                                      0   0.075
ConcurrentLinkedQueue toArray()                                    0   0.096
ConcurrentLinkedQueue toArray(a)                                   0   0.097
ConcurrentLinkedQueue toArray(empty)                               0   0.059
ConcurrentLinkedQueue stream().forEach                             0   0.128
ConcurrentLinkedQueue stream().mapToInt                            0   0.236
ConcurrentLinkedQueue stream().collect                             0   0.188
ConcurrentLinkedQueue stream()::iterator                           0   0.181
ConcurrentLinkedQueue parallelStream().forEach                     0   2.585
ConcurrentLinkedQueue parallelStream().mapToInt                    0   2.454
ConcurrentLinkedQueue parallelStream().collect                     0   2.598
ConcurrentLinkedQueue parallelStream()::iterator                   0   0.221
ConcurrentLinkedQueue removeIf                                     0   0.087
ConcurrentLinkedQueue remove(Object)                               0   0.074
ConcurrentLinkedDeque iterate for loop                             0   0.192
ConcurrentLinkedDeque iterator().forEachRemaining()                0   0.137
ConcurrentLinkedDeque spliterator().tryAdvance()                   0   2.465
ConcurrentLinkedDeque spliterator().forEachRemaining()             0   0.098
ConcurrentLinkedDeque contains                                     0   0.193
ConcurrentLinkedDeque containsAll                                  0   0.068
ConcurrentLinkedDeque forEach                                      0   0.080
ConcurrentLinkedDeque toArray()                                    0   0.084
ConcurrentLinkedDeque toArray(a)                                   0   0.087
ConcurrentLinkedDeque toArray(empty)                               0   0.053
ConcurrentLinkedDeque stream().forEach                             0   0.118
ConcurrentLinkedDeque stream().mapToInt                            0   0.271
ConcurrentLinkedDeque stream().collect                             0   0.182
ConcurrentLinkedDeque stream()::iterator                           0   0.168
ConcurrentLinkedDeque parallelStream().forEach                     0   2.501
ConcurrentLinkedDeque parallelStream().mapToInt                    0   2.691
ConcurrentLinkedDeque parallelStream().collect                     0   2.569
ConcurrentLinkedDeque parallelStream()::iterator                   0   0.240
ConcurrentLinkedDeque removeIf                                     0   0.081
ConcurrentLinkedDeque remove(Object)                               0   0.067
ConcurrentLinkedDeque descendingIterator() loop                    0   1.789
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0   0.147
ArrayBlockingQueue iterate for loop                                0   0.511
ArrayBlockingQueue iterator().forEachRemaining()                   0   0.279
ArrayBlockingQueue spliterator().tryAdvance()                      0   0.328
ArrayBlockingQueue spliterator().forEachRemaining()                0   0.148
ArrayBlockingQueue contains                                        0   0.428
ArrayBlockingQueue containsAll                                     0   0.143
ArrayBlockingQueue forEach                                         0   0.078
ArrayBlockingQueue toArray()                                       0   0.096
ArrayBlockingQueue toArray(a)                                      0   0.068
ArrayBlockingQueue toArray(empty)                                  0   0.050
ArrayBlockingQueue stream().forEach                                0   0.183
ArrayBlockingQueue stream().mapToInt                               0   0.260
ArrayBlockingQueue stream().collect                                0   0.231
ArrayBlockingQueue stream()::iterator                              0   0.196
ArrayBlockingQueue parallelStream().forEach                        0   2.474
ArrayBlockingQueue parallelStream().mapToInt                       0   4.147
ArrayBlockingQueue parallelStream().collect                        0   3.324
ArrayBlockingQueue parallelStream()::iterator                      0   0.247
ArrayBlockingQueue removeIf                                        0   0.090
ArrayBlockingQueue remove(Object)                                  0   0.062
LinkedBlockingQueue iterate for loop                               0   0.626
LinkedBlockingQueue iterator().forEachRemaining()                  0   0.423
LinkedBlockingQueue spliterator().tryAdvance()                     0   2.317
LinkedBlockingQueue spliterator().forEachRemaining()               0   0.171
LinkedBlockingQueue contains                                       0   0.615
LinkedBlockingQueue containsAll                                    0   0.231
LinkedBlockingQueue forEach                                        0   0.120
LinkedBlockingQueue toArray()                                      0   0.078
LinkedBlockingQueue toArray(a)                                     0   0.059
LinkedBlockingQueue toArray(empty)                                 0   0.068
LinkedBlockingQueue stream().forEach                               0   0.162
LinkedBlockingQueue stream().mapToInt                              0   0.247
LinkedBlockingQueue stream().collect                               0   0.213
LinkedBlockingQueue stream()::iterator                             0   0.199
LinkedBlockingQueue parallelStream().forEach                       0   3.873
LinkedBlockingQueue parallelStream().mapToInt                      0   3.877
LinkedBlockingQueue parallelStream().collect                       0   3.447
LinkedBlockingQueue parallelStream()::iterator                     0   0.215
LinkedBlockingQueue removeIf                                       0   0.131
LinkedBlockingQueue remove(Object)                                 0   0.062
LinkedBlockingDeque iterate for loop                               0   0.348
LinkedBlockingDeque iterator().forEachRemaining()                  0   0.289
LinkedBlockingDeque spliterator().tryAdvance()                    11 209.742
LinkedBlockingDeque spliterator().forEachRemaining()               0   0.211
LinkedBlockingDeque contains                                       0   0.563
LinkedBlockingDeque containsAll                                    0   0.373
LinkedBlockingDeque forEach                                        0   0.129
LinkedBlockingDeque toArray()                                      0   0.073
LinkedBlockingDeque toArray(a)                                     0   0.059
LinkedBlockingDeque toArray(empty)                                 0   0.184
LinkedBlockingDeque stream().forEach                               0   0.359
LinkedBlockingDeque stream().mapToInt                              0   0.983
LinkedBlockingDeque stream().collect                               0   0.658
LinkedBlockingDeque stream()::iterator                             0   0.273
LinkedBlockingDeque parallelStream().forEach                       0   2.694
LinkedBlockingDeque parallelStream().mapToInt                      0   2.095
LinkedBlockingDeque parallelStream().collect                       0   2.030
LinkedBlockingDeque parallelStream()::iterator                     0   0.241
LinkedBlockingDeque removeIf                                       0   0.132
LinkedBlockingDeque remove(Object)                                 0   0.059
LinkedBlockingDeque descendingIterator() loop                      0   2.158
LinkedBlockingDeque descendingIterator().forEachRemaining()        0   0.201
LinkedTransferQueue iterate for loop                               0   0.211
LinkedTransferQueue iterator().forEachRemaining()                  0   0.218
LinkedTransferQueue spliterator().tryAdvance()                     0   2.314
LinkedTransferQueue spliterator().forEachRemaining()               0   0.147
LinkedTransferQueue contains                                       0   0.270
LinkedTransferQueue containsAll                                    0   0.068
LinkedTransferQueue forEach                                        0   0.093
LinkedTransferQueue toArray()                                      0   0.133
LinkedTransferQueue toArray(a)                                     0   0.180
LinkedTransferQueue toArray(empty)                                 0   0.056
LinkedTransferQueue stream().forEach                               0   0.136
LinkedTransferQueue stream().mapToInt                              0   0.239
LinkedTransferQueue stream().collect                               0   0.202
LinkedTransferQueue stream()::iterator                             0   0.173
LinkedTransferQueue parallelStream().forEach                       0   1.411
LinkedTransferQueue parallelStream().mapToInt                      0   1.132
LinkedTransferQueue parallelStream().collect                       0   2.218
LinkedTransferQueue parallelStream()::iterator                     0   0.224
LinkedTransferQueue removeIf                                       0   0.131
LinkedTransferQueue remove(Object)                                 0   0.176
PriorityBlockingQueue iterate for loop                             0   1.932
PriorityBlockingQueue iterator().forEachRemaining()                0   0.165
PriorityBlockingQueue spliterator().tryAdvance()                   0   2.138
PriorityBlockingQueue spliterator().forEachRemaining()             0   0.090
PriorityBlockingQueue contains                                     0   0.111
PriorityBlockingQueue containsAll                                  0   0.079
PriorityBlockingQueue forEach                                      0   0.117
PriorityBlockingQueue toArray()                                    0   0.035
PriorityBlockingQueue toArray(a)                                   0   0.228
PriorityBlockingQueue toArray(empty)                               0   0.136
PriorityBlockingQueue stream().forEach                             0   0.114
PriorityBlockingQueue stream().mapToInt                            0   0.222
PriorityBlockingQueue stream().collect                             0   0.181
PriorityBlockingQueue stream()::iterator                           0   0.158
PriorityBlockingQueue parallelStream().forEach                     0   1.844
PriorityBlockingQueue parallelStream().mapToInt                    0   1.562
PriorityBlockingQueue parallelStream().collect                     0   1.370
PriorityBlockingQueue parallelStream()::iterator                   0   0.193
PriorityBlockingQueue removeIf                                     0   0.223
PriorityBlockingQueue remove(Object)                               0   0.077
ListN iterate for loop                                             0   0.234
ListN iterator().forEachRemaining()                                0   0.098
ListN spliterator().tryAdvance()                                   0   0.218
ListN spliterator().forEachRemaining()                             0   0.089
ListN contains                                                     0   0.345
ListN containsAll                                                  0   0.079
ListN forEach                                                      0   0.143
ListN toArray()                                                    0   0.043
ListN toArray(a)                                                   0   0.056
ListN toArray(empty)                                               0   0.049
ListN stream().forEach                                             0   0.137
ListN stream().mapToInt                                            0   0.215
ListN stream().collect                                             0   0.178
ListN stream()::iterator                                           0   0.166
ListN parallelStream().forEach                                     0   1.058
ListN parallelStream().mapToInt                                    0   1.116
ListN parallelStream().collect                                     0   1.277
ListN parallelStream()::iterator                                   0   0.193
ListN listIterator forward loop                                    0   0.163
ListN listIterator backward loop                                   0   0.217
ListN indexOf                                                      0   0.061
ListN lastIndexOf                                                  0   0.056
ListN equals                                                       0   0.337
ListN hashCode                                                     0   0.193
ImmutableCollections$SubList iterate for loop                      0   0.275
ImmutableCollections$SubList iterator().forEachRemaining()         0   0.120
ImmutableCollections$SubList spliterator().tryAdvance()            0   0.202
ImmutableCollections$SubList spliterator().forEachRemaining()      0   0.095
ImmutableCollections$SubList contains                              0   0.198
ImmutableCollections$SubList containsAll                           0   0.103
ImmutableCollections$SubList forEach                               0   0.109
ImmutableCollections$SubList toArray()                             0   0.091
ImmutableCollections$SubList toArray(a)                            0   0.073
ImmutableCollections$SubList toArray(empty)                        0   0.210
ImmutableCollections$SubList stream().forEach                      0   0.127
ImmutableCollections$SubList stream().mapToInt                     0   0.213
ImmutableCollections$SubList stream().collect                      0   0.196
ImmutableCollections$SubList stream()::iterator                    0   0.212
ImmutableCollections$SubList parallelStream().forEach              0   1.163
ImmutableCollections$SubList parallelStream().mapToInt             0   2.127
ImmutableCollections$SubList parallelStream().collect              0   2.728
ImmutableCollections$SubList parallelStream()::iterator            0   0.282
ImmutableCollections$SubList listIterator forward loop             0   0.193
ImmutableCollections$SubList listIterator backward loop            0   0.089
ImmutableCollections$SubList indexOf                               0   0.088
ImmutableCollections$SubList lastIndexOf                           0   0.080
ImmutableCollections$SubList equals                                0   0.196
ImmutableCollections$SubList hashCode                              0   0.114
----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
