#Test Results (version 2)
#Fri Apr 12 13:26:25 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=794 0\:00\:00.794
end=Fri Apr 12 13\:26\:25 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az773-806.an51pne1gm2ejjnmkprpigk40g.dx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1017-azure (amd64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Fri Apr 12 13\:26\:25 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1017-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1017-azure
totalTime=795
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Collection

#section:script_messages
----------messages:(4/315)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5)
OpenJDK Server VM (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5, mixed mode, sharing)

#section:build
----------messages:(7/234)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Fri Apr 12 13:26:25 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Fri Apr 12 13:26:25 UTC 2024
elapsed time (seconds): 0.257
result: Passed. Build successful

#section:compile
----------messages:(7/292)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:26:25 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Apr 12 13:26:25 UTC 2024
elapsed time (seconds): 0.255
----------configuration:(10/717)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d

----------rerun:(35/3426)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
----------direct:(7/585)----------
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/292)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Fri Apr 12 13:26:25 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Apr 12 13:26:25 UTC 2024
elapsed time (seconds): 0.536
----------configuration:(13/962)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection

----------rerun:(28/2919)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis   Ratio
ArrayList iterate for loop                                         0   1.000
ArrayList iterator().forEachRemaining()                            0  11.421
ArrayList spliterator().tryAdvance()                               0   5.416
ArrayList spliterator().forEachRemaining()                         0   4.456
ArrayList contains                                                 0  11.124
ArrayList containsAll                                              0   0.897
ArrayList forEach                                                  0   4.573
ArrayList toArray()                                                0   0.266
ArrayList toArray(a)                                               0   0.265
ArrayList toArray(empty)                                           0   0.232
ArrayList stream().forEach                                         0   6.064
ArrayList stream().mapToInt                                        6 167.008
ArrayList stream().collect                                         0  22.791
ArrayList stream()::iterator                                       0   7.539
ArrayList parallelStream().forEach                                 0  11.742
ArrayList parallelStream().mapToInt                                0  15.429
ArrayList parallelStream().collect                                 0   8.912
ArrayList parallelStream()::iterator                               0   6.316
ArrayList removeIf                                                 0   4.894
ArrayList remove(Object)                                           0   1.347
ArrayList listIterator forward loop                                0   0.869
ArrayList listIterator backward loop                               0   0.445
ArrayList indexOf                                                  0   0.829
ArrayList lastIndexOf                                              0   0.354
ArrayList equals                                                   0   0.321
ArrayList hashCode                                                 0   0.669
ArrayList replaceAll                                               0   6.191
ArrayList$SubList iterate for loop                                 0   5.869
ArrayList$SubList iterator().forEachRemaining()                    0   0.374
ArrayList$SubList spliterator().tryAdvance()                       0   3.089
ArrayList$SubList spliterator().forEachRemaining()                 0   0.154
ArrayList$SubList contains                                         0   0.221
ArrayList$SubList containsAll                                      0   0.252
ArrayList$SubList forEach                                          0   0.435
ArrayList$SubList toArray()                                        0   0.320
ArrayList$SubList toArray(a)                                       0   0.144
ArrayList$SubList toArray(empty)                                   0   0.128
ArrayList$SubList stream().forEach                                 0   0.202
ArrayList$SubList stream().mapToInt                                0   0.651
ArrayList$SubList stream().collect                                 0   0.411
ArrayList$SubList stream()::iterator                               0   0.303
ArrayList$SubList parallelStream().forEach                         0  15.441
ArrayList$SubList parallelStream().mapToInt                        0   3.770
ArrayList$SubList parallelStream().collect                         0   2.225
ArrayList$SubList parallelStream()::iterator                       0   0.307
ArrayList$SubList removeIf                                         0   0.282
ArrayList$SubList remove(Object)                                   0   0.193
ArrayList$SubList listIterator forward loop                        0   0.122
ArrayList$SubList listIterator backward loop                       0   0.165
ArrayList$SubList indexOf                                          0   0.083
ArrayList$SubList lastIndexOf                                      0   0.107
ArrayList$SubList equals                                           0   0.554
ArrayList$SubList hashCode                                         0   0.152
ArrayList$SubList replaceAll                                       0   0.166
Vector iterate for loop                                            0   0.214
Vector iterator().forEachRemaining()                               0   0.301
Vector spliterator().tryAdvance()                                  0   3.249
Vector spliterator().forEachRemaining()                            0   0.145
Vector contains                                                    0   1.449
Vector containsAll                                                 0   0.427
Vector forEach                                                     0   0.141
Vector toArray()                                                   0   0.076
Vector toArray(a)                                                  0   0.162
Vector toArray(empty)                                              0   0.105
Vector stream().forEach                                            0   0.186
Vector stream().mapToInt                                           0   0.424
Vector stream().collect                                            0   0.693
Vector stream()::iterator                                          0   0.284
Vector parallelStream().forEach                                    0   2.515
Vector parallelStream().mapToInt                                   0   2.416
Vector parallelStream().collect                                    0   2.357
Vector parallelStream()::iterator                                  0   0.233
Vector removeIf                                                    0   0.118
Vector remove(Object)                                              0   0.850
Vector listIterator forward loop                                   0   0.198
Vector listIterator backward loop                                  0   0.186
Vector indexOf                                                     0   0.078
Vector lastIndexOf                                                 0   0.160
Vector equals                                                      0   0.601
Vector hashCode                                                    0   0.306
Vector replaceAll                                                  0   0.189
SynchronizedRandomAccessList iterate for loop                      0   1.067
SynchronizedRandomAccessList iterator().forEachRemaining()         0   0.240
SynchronizedRandomAccessList spliterator().tryAdvance()            0   0.729
SynchronizedRandomAccessList spliterator().forEachRemaining()      0   0.189
SynchronizedRandomAccessList contains                              0   1.096
SynchronizedRandomAccessList containsAll                           0   0.297
SynchronizedRandomAccessList forEach                               0   0.205
SynchronizedRandomAccessList toArray()                             0   0.253
SynchronizedRandomAccessList toArray(a)                            0   0.221
SynchronizedRandomAccessList toArray(empty)                        0   0.264
SynchronizedRandomAccessList stream().forEach                      0   0.230
SynchronizedRandomAccessList stream().mapToInt                     0   0.406
SynchronizedRandomAccessList stream().collect                      0   0.310
SynchronizedRandomAccessList stream()::iterator                    0   0.316
SynchronizedRandomAccessList parallelStream().forEach              0   2.566
SynchronizedRandomAccessList parallelStream().mapToInt             0   5.704
SynchronizedRandomAccessList parallelStream().collect              0   4.911
SynchronizedRandomAccessList parallelStream()::iterator            0   0.347
SynchronizedRandomAccessList removeIf                              0   0.380
SynchronizedRandomAccessList remove(Object)                        0   0.246
SynchronizedRandomAccessList listIterator forward loop             0   0.256
SynchronizedRandomAccessList listIterator backward loop            0   0.394
SynchronizedRandomAccessList indexOf                               0   0.320
SynchronizedRandomAccessList lastIndexOf                           0   0.333
SynchronizedRandomAccessList equals                                0   0.512
SynchronizedRandomAccessList hashCode                              0   0.370
SynchronizedRandomAccessList replaceAll                            0   0.657
LinkedList iterate for loop                                        0   0.171
LinkedList iterator().forEachRemaining()                           0   0.197
LinkedList spliterator().tryAdvance()                              0   3.861
LinkedList spliterator().forEachRemaining()                        0   0.122
LinkedList contains                                                0   0.566
LinkedList containsAll                                             0   0.099
LinkedList forEach                                                 0   0.141
LinkedList toArray()                                               0   0.085
LinkedList toArray(a)                                              0   0.077
LinkedList toArray(empty)                                          0   0.068
LinkedList stream().forEach                                        0   0.140
LinkedList stream().mapToInt                                       0   0.332
LinkedList stream().collect                                        0   0.226
LinkedList stream()::iterator                                      0   0.216
LinkedList parallelStream().forEach                                0   3.338
LinkedList parallelStream().mapToInt                               0   3.538
LinkedList parallelStream().collect                                0   2.452
LinkedList parallelStream()::iterator                              0   0.253
LinkedList removeIf                                                0   0.141
LinkedList remove(Object)                                          0   0.098
LinkedList descendingIterator() loop                               0   3.053
LinkedList descendingIterator().forEachRemaining()                 0  10.140
LinkedList listIterator forward loop                               0   0.114
LinkedList listIterator backward loop                              0   0.110
LinkedList indexOf                                                 0   0.078
LinkedList lastIndexOf                                             0   0.081
LinkedList equals                                                  0   0.289
LinkedList hashCode                                                0   0.266
LinkedList replaceAll                                              0   0.190
AbstractList$SubList iterate for loop                              0   0.225
AbstractList$SubList iterator().forEachRemaining()                 0   0.189
AbstractList$SubList spliterator().tryAdvance()                    0   0.382
AbstractList$SubList spliterator().forEachRemaining()              0   0.242
AbstractList$SubList contains                                      0   0.182
AbstractList$SubList containsAll                                   0   0.261
AbstractList$SubList forEach                                       0   0.179
AbstractList$SubList toArray()                                     0   0.217
AbstractList$SubList toArray(a)                                    0   0.185
AbstractList$SubList toArray(empty)                                0   0.168
AbstractList$SubList stream().forEach                              0   0.246
AbstractList$SubList stream().mapToInt                             0   0.638
AbstractList$SubList stream().collect                              0   0.340
AbstractList$SubList stream()::iterator                            0   0.291
AbstractList$SubList parallelStream().forEach                      0  23.968
AbstractList$SubList parallelStream().mapToInt                     0  11.407
AbstractList$SubList parallelStream().collect                      0   4.394
AbstractList$SubList parallelStream()::iterator                    0   0.633
AbstractList$SubList removeIf                                      0   0.252
AbstractList$SubList remove(Object)                                0   0.195
AbstractList$SubList listIterator forward loop                     0   0.141
AbstractList$SubList listIterator backward loop                    0   0.297
AbstractList$SubList indexOf                                       0   0.182
AbstractList$SubList lastIndexOf                                   0   0.245
AbstractList$SubList equals                                        0   0.806
AbstractList$SubList hashCode                                      0   0.347
AbstractList$SubList replaceAll                                    0   0.281
CopyOnWriteArrayList iterate for loop                              0   0.157
CopyOnWriteArrayList iterator().forEachRemaining()                 0   0.445
CopyOnWriteArrayList spliterator().tryAdvance()                    0   0.176
CopyOnWriteArrayList spliterator().forEachRemaining()              0   0.098
CopyOnWriteArrayList contains                                      0   0.978
CopyOnWriteArrayList containsAll                                   0   0.337
CopyOnWriteArrayList forEach                                       0   0.122
CopyOnWriteArrayList toArray()                                     0   0.063
CopyOnWriteArrayList toArray(a)                                    0   0.125
CopyOnWriteArrayList toArray(empty)                                0   0.098
CopyOnWriteArrayList stream().forEach                              0   0.170
CopyOnWriteArrayList stream().mapToInt                             0   0.492
CopyOnWriteArrayList stream().collect                              0   0.329
CopyOnWriteArrayList stream()::iterator                            0   0.250
CopyOnWriteArrayList parallelStream().forEach                      0   4.380
CopyOnWriteArrayList parallelStream().mapToInt                     0   4.443
CopyOnWriteArrayList parallelStream().collect                      0   5.382
CopyOnWriteArrayList parallelStream()::iterator                    0   0.260
CopyOnWriteArrayList removeIf                                      0   0.145
CopyOnWriteArrayList remove(Object)                                0   0.810
CopyOnWriteArrayList listIterator forward loop                     0   0.115
CopyOnWriteArrayList listIterator backward loop                    0   0.224
CopyOnWriteArrayList indexOf                                       0   0.328
CopyOnWriteArrayList lastIndexOf                                   0   0.126
CopyOnWriteArrayList equals                                        0   0.357
CopyOnWriteArrayList hashCode                                      0   0.166
CopyOnWriteArrayList replaceAll                                    0   0.318
COWSubList iterate for loop                                        0   5.490
COWSubList iterator().forEachRemaining()                           0   0.287
COWSubList spliterator().tryAdvance()                              0   0.300
COWSubList spliterator().forEachRemaining()                        0   0.118
COWSubList contains                                                0   0.198
COWSubList containsAll                                             0   0.237
COWSubList forEach                                                 0   0.188
COWSubList toArray()                                               0   0.237
COWSubList toArray(a)                                              0   0.186
COWSubList toArray(empty)                                          0   0.112
COWSubList stream().forEach                                        0   0.151
COWSubList stream().mapToInt                                       0   0.327
COWSubList stream().collect                                        0   0.237
COWSubList stream()::iterator                                      0   0.230
COWSubList parallelStream().forEach                                0   4.195
COWSubList parallelStream().mapToInt                               0   4.465
COWSubList parallelStream().collect                                0   4.875
COWSubList parallelStream()::iterator                              0   0.220
COWSubList removeIf                                                0   0.253
COWSubList remove(Object)                                          0   0.113
COWSubList listIterator forward loop                               0   0.204
COWSubList listIterator backward loop                              0   0.332
COWSubList indexOf                                                 0   0.083
COWSubList lastIndexOf                                             0   0.115
COWSubList equals                                                  0   0.288
COWSubList hashCode                                                0   0.141
COWSubList replaceAll                                              0   0.191
ArrayDeque iterate for loop                                        0   0.163
ArrayDeque iterator().forEachRemaining()                           0   0.358
ArrayDeque spliterator().tryAdvance()                              3  84.583
ArrayDeque spliterator().forEachRemaining()                        0   0.361
ArrayDeque contains                                                0   0.183
ArrayDeque containsAll                                             0   0.510
ArrayDeque forEach                                                 0   0.158
ArrayDeque toArray()                                               0   0.190
ArrayDeque toArray(a)                                              0   0.238
ArrayDeque toArray(empty)                                          0   0.143
ArrayDeque stream().forEach                                        0   0.339
ArrayDeque stream().mapToInt                                       0   0.985
ArrayDeque stream().collect                                        0   0.786
ArrayDeque stream()::iterator                                      0   0.423
ArrayDeque parallelStream().forEach                                0   9.774
ArrayDeque parallelStream().mapToInt                               0   7.390
ArrayDeque parallelStream().collect                                0   9.918
ArrayDeque parallelStream()::iterator                              0   0.448
ArrayDeque removeIf                                                0   0.151
ArrayDeque remove(Object)                                          0   0.127
ArrayDeque descendingIterator() loop                               1  36.905
ArrayDeque descendingIterator().forEachRemaining()                 0   0.535
PriorityQueue iterate for loop                                     0   0.182
PriorityQueue iterator().forEachRemaining()                        0   0.203
PriorityQueue spliterator().tryAdvance()                           0   4.558
PriorityQueue spliterator().forEachRemaining()                     0   0.145
PriorityQueue contains                                             0   0.197
PriorityQueue containsAll                                          0   0.275
PriorityQueue forEach                                              0   0.243
PriorityQueue toArray()                                            0   0.091
PriorityQueue toArray(a)                                           0   0.267
PriorityQueue toArray(empty)                                       0   0.172
PriorityQueue stream().forEach                                     0   0.253
PriorityQueue stream().mapToInt                                    0   0.682
PriorityQueue stream().collect                                     0   0.376
PriorityQueue stream()::iterator                                   0   0.302
PriorityQueue parallelStream().forEach                             0   6.243
PriorityQueue parallelStream().mapToInt                            0   5.537
PriorityQueue parallelStream().collect                             0   6.185
PriorityQueue parallelStream()::iterator                           0   0.274
PriorityQueue removeIf                                             0   0.366
PriorityQueue remove(Object)                                       0   0.107
ConcurrentLinkedQueue iterate for loop                             0   0.175
ConcurrentLinkedQueue iterator().forEachRemaining()                0   0.149
ConcurrentLinkedQueue spliterator().tryAdvance()                   0   4.856
ConcurrentLinkedQueue spliterator().forEachRemaining()             0   0.217
ConcurrentLinkedQueue contains                                     0   0.635
ConcurrentLinkedQueue containsAll                                  0   0.970
ConcurrentLinkedQueue forEach                                      0   0.114
ConcurrentLinkedQueue toArray()                                    0   0.155
ConcurrentLinkedQueue toArray(a)                                   0   0.145
ConcurrentLinkedQueue toArray(empty)                               0   0.081
ConcurrentLinkedQueue stream().forEach                             0   0.201
ConcurrentLinkedQueue stream().mapToInt                            0   0.395
ConcurrentLinkedQueue stream().collect                             0   0.259
ConcurrentLinkedQueue stream()::iterator                           0   0.255
ConcurrentLinkedQueue parallelStream().forEach                     0  20.886
ConcurrentLinkedQueue parallelStream().mapToInt                    0   3.544
ConcurrentLinkedQueue parallelStream().collect                     0   3.722
ConcurrentLinkedQueue parallelStream()::iterator                   0   0.301
ConcurrentLinkedQueue removeIf                                     0   0.171
ConcurrentLinkedQueue remove(Object)                               0   0.101
ConcurrentLinkedDeque iterate for loop                             0   0.306
ConcurrentLinkedDeque iterator().forEachRemaining()                0   0.236
ConcurrentLinkedDeque spliterator().tryAdvance()                   0   4.196
ConcurrentLinkedDeque spliterator().forEachRemaining()             0   0.144
ConcurrentLinkedDeque contains                                     0   0.369
ConcurrentLinkedDeque containsAll                                  0   0.294
ConcurrentLinkedDeque forEach                                      0   0.138
ConcurrentLinkedDeque toArray()                                    0   0.134
ConcurrentLinkedDeque toArray(a)                                   0   0.127
ConcurrentLinkedDeque toArray(empty)                               0   0.078
ConcurrentLinkedDeque stream().forEach                             0   0.172
ConcurrentLinkedDeque stream().mapToInt                            0   1.148
ConcurrentLinkedDeque stream().collect                             0   0.273
ConcurrentLinkedDeque stream()::iterator                           0   0.256
ConcurrentLinkedDeque parallelStream().forEach                     0   3.362
ConcurrentLinkedDeque parallelStream().mapToInt                    0   4.342
ConcurrentLinkedDeque parallelStream().collect                     0   3.529
ConcurrentLinkedDeque parallelStream()::iterator                   0   0.262
ConcurrentLinkedDeque removeIf                                     0   0.152
ConcurrentLinkedDeque remove(Object)                               0   0.109
ConcurrentLinkedDeque descendingIterator() loop                    0   2.890
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0   0.215
ArrayBlockingQueue iterate for loop                                0   0.481
ArrayBlockingQueue iterator().forEachRemaining()                   0   0.407
ArrayBlockingQueue spliterator().tryAdvance()                      0   0.426
ArrayBlockingQueue spliterator().forEachRemaining()                0   0.193
ArrayBlockingQueue contains                                        0   0.835
ArrayBlockingQueue containsAll                                     0   0.113
ArrayBlockingQueue forEach                                         0   0.104
ArrayBlockingQueue toArray()                                       0   0.128
ArrayBlockingQueue toArray(a)                                      0   0.114
ArrayBlockingQueue toArray(empty)                                  0   0.101
ArrayBlockingQueue stream().forEach                                0   0.348
ArrayBlockingQueue stream().mapToInt                               0   0.443
ArrayBlockingQueue stream().collect                                0   0.335
ArrayBlockingQueue stream()::iterator                              0   0.375
ArrayBlockingQueue parallelStream().forEach                        0  14.481
ArrayBlockingQueue parallelStream().mapToInt                       0   4.930
ArrayBlockingQueue parallelStream().collect                        2  61.341
ArrayBlockingQueue parallelStream()::iterator                      0   0.586
ArrayBlockingQueue removeIf                                        0   0.185
ArrayBlockingQueue remove(Object)                                  0   0.146
LinkedBlockingQueue iterate for loop                               0   0.237
LinkedBlockingQueue iterator().forEachRemaining()                  0   0.633
LinkedBlockingQueue spliterator().tryAdvance()                     0   4.922
LinkedBlockingQueue spliterator().forEachRemaining()               0   0.271
LinkedBlockingQueue contains                                       0   0.900
LinkedBlockingQueue containsAll                                    0   0.183
LinkedBlockingQueue forEach                                        0   0.167
LinkedBlockingQueue toArray()                                      0   0.090
LinkedBlockingQueue toArray(a)                                     0   0.101
LinkedBlockingQueue toArray(empty)                                 0   0.118
LinkedBlockingQueue stream().forEach                               0   0.269
LinkedBlockingQueue stream().mapToInt                              0   0.562
LinkedBlockingQueue stream().collect                               0   0.380
LinkedBlockingQueue stream()::iterator                             0   0.301
LinkedBlockingQueue parallelStream().forEach                       0   6.249
LinkedBlockingQueue parallelStream().mapToInt                      0   6.978
LinkedBlockingQueue parallelStream().collect                       0   5.045
LinkedBlockingQueue parallelStream()::iterator                     0   0.303
LinkedBlockingQueue removeIf                                       0   0.193
LinkedBlockingQueue remove(Object)                                 0   0.094
LinkedBlockingDeque iterate for loop                               0   0.200
LinkedBlockingDeque iterator().forEachRemaining()                  0   0.614
LinkedBlockingDeque spliterator().tryAdvance()                     0   4.332
LinkedBlockingDeque spliterator().forEachRemaining()               0   0.238
LinkedBlockingDeque contains                                       0   0.701
LinkedBlockingDeque containsAll                                    0   0.130
LinkedBlockingDeque forEach                                        0   0.136
LinkedBlockingDeque toArray()                                      0   0.076
LinkedBlockingDeque toArray(a)                                     0   0.091
LinkedBlockingDeque toArray(empty)                                 0   0.086
LinkedBlockingDeque stream().forEach                               0   0.215
LinkedBlockingDeque stream().mapToInt                              0   0.359
LinkedBlockingDeque stream().collect                               0   0.306
LinkedBlockingDeque stream()::iterator                             0   0.259
LinkedBlockingDeque parallelStream().forEach                       0   4.365
LinkedBlockingDeque parallelStream().mapToInt                      0   4.633
LinkedBlockingDeque parallelStream().collect                       0   4.490
LinkedBlockingDeque parallelStream()::iterator                     0   0.318
LinkedBlockingDeque removeIf                                       0   0.180
LinkedBlockingDeque remove(Object)                                 0   0.094
LinkedBlockingDeque descendingIterator() loop                      0   2.627
LinkedBlockingDeque descendingIterator().forEachRemaining()        0   0.289
LinkedTransferQueue iterate for loop                               0   0.165
LinkedTransferQueue iterator().forEachRemaining()                  0   0.280
LinkedTransferQueue spliterator().tryAdvance()                     0   3.730
LinkedTransferQueue spliterator().forEachRemaining()               0   0.228
LinkedTransferQueue contains                                       0   0.269
LinkedTransferQueue containsAll                                    0   0.101
LinkedTransferQueue forEach                                        0   0.116
LinkedTransferQueue toArray()                                      0   0.133
LinkedTransferQueue toArray(a)                                     0   0.274
LinkedTransferQueue toArray(empty)                                 0   0.077
LinkedTransferQueue stream().forEach                               0   0.196
LinkedTransferQueue stream().mapToInt                              0   0.329
LinkedTransferQueue stream().collect                               0   0.261
LinkedTransferQueue stream()::iterator                             0   0.230
LinkedTransferQueue parallelStream().forEach                       0   4.090
LinkedTransferQueue parallelStream().mapToInt                      0   3.063
LinkedTransferQueue parallelStream().collect                       0   3.052
LinkedTransferQueue parallelStream()::iterator                     0   0.282
LinkedTransferQueue removeIf                                       0   0.170
LinkedTransferQueue remove(Object)                                 0   0.670
PriorityBlockingQueue iterate for loop                             0   2.674
PriorityBlockingQueue iterator().forEachRemaining()                0   0.211
PriorityBlockingQueue spliterator().tryAdvance()                   0   3.380
PriorityBlockingQueue spliterator().forEachRemaining()             0   0.116
PriorityBlockingQueue contains                                     0   0.186
PriorityBlockingQueue containsAll                                  0   0.115
PriorityBlockingQueue forEach                                      0   0.164
PriorityBlockingQueue toArray()                                    0   0.042
PriorityBlockingQueue toArray(a)                                   0   0.204
PriorityBlockingQueue toArray(empty)                               0   0.122
PriorityBlockingQueue stream().forEach                             0   0.159
PriorityBlockingQueue stream().mapToInt                            0   0.333
PriorityBlockingQueue stream().collect                             0   0.306
PriorityBlockingQueue stream()::iterator                           0   0.217
PriorityBlockingQueue parallelStream().forEach                     1  35.161
PriorityBlockingQueue parallelStream().mapToInt                    0   7.006
PriorityBlockingQueue parallelStream().collect                     0   5.381
PriorityBlockingQueue parallelStream()::iterator                   0   0.249
PriorityBlockingQueue removeIf                                     0   0.347
PriorityBlockingQueue remove(Object)                               0   0.201
ListN iterate for loop                                             0   0.371
ListN iterator().forEachRemaining()                                0   0.118
ListN spliterator().tryAdvance()                                   0   0.327
ListN spliterator().forEachRemaining()                             0   0.125
ListN contains                                                     0   0.274
ListN containsAll                                                  0   0.105
ListN forEach                                                      0   0.116
ListN toArray()                                                    0   0.066
ListN toArray(a)                                                   0   0.101
ListN toArray(empty)                                               0   0.077
ListN stream().forEach                                             0   0.201
ListN stream().mapToInt                                            0   0.301
ListN stream().collect                                             0   0.269
ListN stream()::iterator                                           0   0.246
ListN parallelStream().forEach                                     0   4.451
ListN parallelStream().mapToInt                                    0   4.461
ListN parallelStream().collect                                     0   4.527
ListN parallelStream()::iterator                                   0   0.300
ListN listIterator forward loop                                    0   0.291
ListN listIterator backward loop                                   0   0.156
ListN indexOf                                                      0   0.078
ListN lastIndexOf                                                  0   0.068
ListN equals                                                       0   0.246
ListN hashCode                                                     0   0.147
ImmutableCollections$SubList iterate for loop                      0   0.506
ImmutableCollections$SubList iterator().forEachRemaining()         0   0.149
ImmutableCollections$SubList spliterator().tryAdvance()            0   0.621
ImmutableCollections$SubList spliterator().forEachRemaining()      0   0.146
ImmutableCollections$SubList contains                              0   0.303
ImmutableCollections$SubList containsAll                           0   0.136
ImmutableCollections$SubList forEach                               0   0.129
ImmutableCollections$SubList toArray()                             0   0.147
ImmutableCollections$SubList toArray(a)                            0   0.120
ImmutableCollections$SubList toArray(empty)                        0   0.327
ImmutableCollections$SubList stream().forEach                      0   0.193
ImmutableCollections$SubList stream().mapToInt                     0   0.334
ImmutableCollections$SubList stream().collect                      0   0.259
ImmutableCollections$SubList stream()::iterator                    0   0.300
ImmutableCollections$SubList parallelStream().forEach              0   4.248
ImmutableCollections$SubList parallelStream().mapToInt             0   4.634
ImmutableCollections$SubList parallelStream().collect              0   5.992
ImmutableCollections$SubList parallelStream()::iterator            0   0.314
ImmutableCollections$SubList listIterator forward loop             0   0.248
ImmutableCollections$SubList listIterator backward loop            0   0.128
ImmutableCollections$SubList indexOf                               0   0.100
ImmutableCollections$SubList lastIndexOf                           0   0.095
ImmutableCollections$SubList equals                                0   0.263
ImmutableCollections$SubList hashCode                              0   0.157
----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
