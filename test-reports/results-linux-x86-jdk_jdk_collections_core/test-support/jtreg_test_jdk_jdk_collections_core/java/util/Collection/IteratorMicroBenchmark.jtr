#Test Results (version 2)
#Thu Feb 29 23:24:45 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=1185 0\:00\:01.185
end=Thu Feb 29 23\:24\:45 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az888-704.pbnfqiwlmsbu5gn45r0pdzho1a.cx.internal.cloudapp.net
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Thu Feb 29 23\:24\:43 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1015-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=1186
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Collection

#section:script_messages
----------messages:(4/315)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be)
OpenJDK Server VM (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be, mixed mode, sharing)

#section:build
----------messages:(7/234)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Thu Feb 29 23:24:43 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Thu Feb 29 23:24:44 UTC 2024
elapsed time (seconds): 0.359
result: Passed. Build successful

#section:compile
----------messages:(7/292)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:24:43 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 23:24:44 UTC 2024
elapsed time (seconds): 0.359
----------configuration:(10/717)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d

----------rerun:(35/3426)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
----------direct:(7/585)----------
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/292)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Thu Feb 29 23:24:44 UTC 2024
Mode: agentvm
Agent id: 3
finished: Thu Feb 29 23:24:45 UTC 2024
elapsed time (seconds): 0.825
----------configuration:(13/962)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection

----------rerun:(28/2919)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/35334)----------
Method                                                        Millis    Ratio
ArrayList iterate for loop                                         0    1.000
ArrayList iterator().forEachRemaining()                            0   12.343
ArrayList spliterator().tryAdvance()                               5  216.885
ArrayList spliterator().forEachRemaining()                         0    7.144
ArrayList contains                                                 0   10.656
ArrayList containsAll                                              0    1.297
ArrayList forEach                                                  0    8.704
ArrayList toArray()                                                0    0.453
ArrayList toArray(a)                                               0    0.430
ArrayList toArray(empty)                                           0    0.514
ArrayList stream().forEach                                         0    6.878
ArrayList stream().mapToInt                                        0   25.961
ArrayList stream().collect                                        11  480.475
ArrayList stream()::iterator                                       8  339.744
ArrayList parallelStream().forEach                                35 1523.764
ArrayList parallelStream().mapToInt                                0   25.061
ArrayList parallelStream().collect                                 0   13.491
ArrayList parallelStream()::iterator                               0    7.872
ArrayList removeIf                                                 0    7.609
ArrayList remove(Object)                                           0    0.525
ArrayList listIterator forward loop                                0    1.317
ArrayList listIterator backward loop                               0    0.726
ArrayList indexOf                                                  0    0.388
ArrayList lastIndexOf                                              0    0.390
ArrayList equals                                                   0    0.486
ArrayList hashCode                                                 0    0.816
ArrayList replaceAll                                               0    7.740
ArrayList$SubList iterate for loop                                 0    0.437
ArrayList$SubList iterator().forEachRemaining()                    0    0.542
ArrayList$SubList spliterator().tryAdvance()                       0    5.660
ArrayList$SubList spliterator().forEachRemaining()                 0    0.247
ArrayList$SubList contains                                         0    0.302
ArrayList$SubList containsAll                                      0    0.371
ArrayList$SubList forEach                                          0    0.356
ArrayList$SubList toArray()                                        0    0.097
ArrayList$SubList toArray(a)                                       0    0.164
ArrayList$SubList toArray(empty)                                   0    1.609
ArrayList$SubList stream().forEach                                 0    0.392
ArrayList$SubList stream().mapToInt                                0    0.943
ArrayList$SubList stream().collect                                 0    0.677
ArrayList$SubList stream()::iterator                               0    0.361
ArrayList$SubList parallelStream().forEach                         0   28.284
ArrayList$SubList parallelStream().mapToInt                        0    3.841
ArrayList$SubList parallelStream().collect                         0    4.045
ArrayList$SubList parallelStream()::iterator                       0    0.487
ArrayList$SubList removeIf                                         0    0.222
ArrayList$SubList remove(Object)                                   0    0.468
ArrayList$SubList listIterator forward loop                        0    0.210
ArrayList$SubList listIterator backward loop                       0    0.194
ArrayList$SubList indexOf                                          0    0.147
ArrayList$SubList lastIndexOf                                      0    0.223
ArrayList$SubList equals                                           0    0.654
ArrayList$SubList hashCode                                         0    0.222
ArrayList$SubList replaceAll                                       0    0.296
Vector iterate for loop                                            0    0.365
Vector iterator().forEachRemaining()                               0    0.222
Vector spliterator().tryAdvance()                                  0    0.418
Vector spliterator().forEachRemaining()                            0    0.174
Vector contains                                                    0    1.428
Vector containsAll                                                 0    1.012
Vector forEach                                                     0    0.222
Vector toArray()                                                   0    0.090
Vector toArray(a)                                                  0    0.211
Vector toArray(empty)                                              0    0.327
Vector stream().forEach                                            0    0.323
Vector stream().mapToInt                                           0    0.578
Vector stream().collect                                            0    0.865
Vector stream()::iterator                                          0    0.401
Vector parallelStream().forEach                                    0    5.020
Vector parallelStream().mapToInt                                   0    3.574
Vector parallelStream().collect                                    0    5.435
Vector parallelStream()::iterator                                  0    0.418
Vector removeIf                                                    0    0.193
Vector remove(Object)                                              0    1.339
Vector listIterator forward loop                                   0    0.361
Vector listIterator backward loop                                  0    0.263
Vector indexOf                                                     0    0.664
Vector lastIndexOf                                                 0    0.298
Vector equals                                                      0    0.595
Vector hashCode                                                    0    0.400
Vector replaceAll                                                  0    0.342
SynchronizedRandomAccessList iterate for loop                      0    1.207
SynchronizedRandomAccessList iterator().forEachRemaining()         0    0.353
SynchronizedRandomAccessList spliterator().tryAdvance()            0    7.159
SynchronizedRandomAccessList spliterator().forEachRemaining()      0    0.427
SynchronizedRandomAccessList contains                              0    0.523
SynchronizedRandomAccessList containsAll                           0    0.458
SynchronizedRandomAccessList forEach                               0    0.496
SynchronizedRandomAccessList toArray()                             0    0.384
SynchronizedRandomAccessList toArray(a)                            0    0.362
SynchronizedRandomAccessList toArray(empty)                        0    0.376
SynchronizedRandomAccessList stream().forEach                      0    0.447
SynchronizedRandomAccessList stream().mapToInt                     0    0.703
SynchronizedRandomAccessList stream().collect                      0    0.588
SynchronizedRandomAccessList stream()::iterator                    0    0.564
SynchronizedRandomAccessList parallelStream().forEach              0    5.642
SynchronizedRandomAccessList parallelStream().mapToInt             0    3.201
SynchronizedRandomAccessList parallelStream().collect              0    2.952
SynchronizedRandomAccessList parallelStream()::iterator            0    0.818
SynchronizedRandomAccessList removeIf                              0    0.885
SynchronizedRandomAccessList remove(Object)                        0    0.435
SynchronizedRandomAccessList listIterator forward loop             0    0.387
SynchronizedRandomAccessList listIterator backward loop            0    0.421
SynchronizedRandomAccessList indexOf                               0    0.570
SynchronizedRandomAccessList lastIndexOf                           0    0.599
SynchronizedRandomAccessList equals                                0    0.892
SynchronizedRandomAccessList hashCode                              0    0.754
SynchronizedRandomAccessList replaceAll                            0    1.117
LinkedList iterate for loop                                        0    0.753
LinkedList iterator().forEachRemaining()                           0    0.340
LinkedList spliterator().tryAdvance()                              0    5.313
LinkedList spliterator().forEachRemaining()                        0    0.205
LinkedList contains                                                0    0.272
LinkedList containsAll                                             0    0.178
LinkedList forEach                                                 0    0.334
LinkedList toArray()                                               0    0.128
LinkedList toArray(a)                                              0    0.138
LinkedList toArray(empty)                                          0    0.160
LinkedList stream().forEach                                        0    0.239
LinkedList stream().mapToInt                                       0    0.489
LinkedList stream().collect                                        0    0.397
LinkedList stream()::iterator                                      0    0.350
LinkedList parallelStream().forEach                                0   13.149
LinkedList parallelStream().mapToInt                               0    3.882
LinkedList parallelStream().collect                                0    3.594
LinkedList parallelStream()::iterator                              0    0.384
LinkedList removeIf                                                0    0.332
LinkedList remove(Object)                                          0    0.213
LinkedList descendingIterator() loop                               0    4.518
LinkedList descendingIterator().forEachRemaining()                 0   10.479
LinkedList listIterator forward loop                               0    0.255
LinkedList listIterator backward loop                              0    0.194
LinkedList indexOf                                                 0    0.128
LinkedList lastIndexOf                                             0    0.118
LinkedList equals                                                  0    0.494
LinkedList hashCode                                                0    0.333
LinkedList replaceAll                                              0    0.383
AbstractList$SubList iterate for loop                              0    0.431
AbstractList$SubList iterator().forEachRemaining()                 0    0.353
AbstractList$SubList spliterator().tryAdvance()                    0    0.596
AbstractList$SubList spliterator().forEachRemaining()              0    0.365
AbstractList$SubList contains                                      0    0.339
AbstractList$SubList containsAll                                   0    0.347
AbstractList$SubList forEach                                       0    0.319
AbstractList$SubList toArray()                                     0    0.420
AbstractList$SubList toArray(a)                                    0    0.353
AbstractList$SubList toArray(empty)                                0    0.351
AbstractList$SubList stream().forEach                              0    0.452
AbstractList$SubList stream().mapToInt                             0    1.224
AbstractList$SubList stream().collect                              0    0.622
AbstractList$SubList stream()::iterator                            0    0.533
AbstractList$SubList parallelStream().forEach                      0    3.724
AbstractList$SubList parallelStream().mapToInt                     0    3.681
AbstractList$SubList parallelStream().collect                      0    4.412
AbstractList$SubList parallelStream()::iterator                    0    0.639
AbstractList$SubList removeIf                                      0    0.343
AbstractList$SubList remove(Object)                                0    0.306
AbstractList$SubList listIterator forward loop                     0    0.283
AbstractList$SubList listIterator backward loop                    0    0.406
AbstractList$SubList indexOf                                       0    0.290
AbstractList$SubList lastIndexOf                                   0    0.402
AbstractList$SubList equals                                        0    0.792
AbstractList$SubList hashCode                                      0    0.594
AbstractList$SubList replaceAll                                    0    0.413
CopyOnWriteArrayList iterate for loop                              0    0.261
CopyOnWriteArrayList iterator().forEachRemaining()                 0    0.436
CopyOnWriteArrayList spliterator().tryAdvance()                    0    0.279
CopyOnWriteArrayList spliterator().forEachRemaining()              0    0.173
CopyOnWriteArrayList contains                                      0    1.077
CopyOnWriteArrayList containsAll                                   0    0.841
CopyOnWriteArrayList forEach                                       0    0.493
CopyOnWriteArrayList toArray()                                     0    0.085
CopyOnWriteArrayList toArray(a)                                    0    0.154
CopyOnWriteArrayList toArray(empty)                                0    0.216
CopyOnWriteArrayList stream().forEach                              0    0.219
CopyOnWriteArrayList stream().mapToInt                             0    0.356
CopyOnWriteArrayList stream().collect                              0    0.355
CopyOnWriteArrayList stream()::iterator                            0    0.288
CopyOnWriteArrayList parallelStream().forEach                      0    3.604
CopyOnWriteArrayList parallelStream().mapToInt                     0    3.720
CopyOnWriteArrayList parallelStream().collect                      0    6.393
CopyOnWriteArrayList parallelStream()::iterator                    0    0.352
CopyOnWriteArrayList removeIf                                      0    0.514
CopyOnWriteArrayList remove(Object)                                0    0.999
CopyOnWriteArrayList listIterator forward loop                     0    0.194
CopyOnWriteArrayList listIterator backward loop                    0    0.256
CopyOnWriteArrayList indexOf                                       0    0.594
CopyOnWriteArrayList lastIndexOf                                   0    0.173
CopyOnWriteArrayList equals                                        0    0.357
CopyOnWriteArrayList hashCode                                      0    0.255
CopyOnWriteArrayList replaceAll                                    0    0.373
COWSubList iterate for loop                                        0    5.371
COWSubList iterator().forEachRemaining()                           0    0.479
COWSubList spliterator().tryAdvance()                              0    0.406
COWSubList spliterator().forEachRemaining()                        0    0.166
COWSubList contains                                                0    0.285
COWSubList containsAll                                             0    0.305
COWSubList forEach                                                 0    0.283
COWSubList toArray()                                               0    0.172
COWSubList toArray(a)                                              0    0.265
COWSubList toArray(empty)                                          0    0.246
COWSubList stream().forEach                                        0    0.218
COWSubList stream().mapToInt                                       0    0.402
COWSubList stream().collect                                        0    0.382
COWSubList stream()::iterator                                      0    0.396
COWSubList parallelStream().forEach                                0    4.442
COWSubList parallelStream().mapToInt                               0    3.795
COWSubList parallelStream().collect                                0    6.914
COWSubList parallelStream()::iterator                              0    0.354
COWSubList removeIf                                                0    0.413
COWSubList remove(Object)                                          0    0.187
COWSubList listIterator forward loop                               0    0.362
COWSubList listIterator backward loop                              0    0.520
COWSubList indexOf                                                 0    0.123
COWSubList lastIndexOf                                             0    0.176
COWSubList equals                                                  0    0.387
COWSubList hashCode                                                0    0.216
COWSubList replaceAll                                              0    0.285
ArrayDeque iterate for loop                                        0    0.301
ArrayDeque iterator().forEachRemaining()                           0    0.218
ArrayDeque spliterator().tryAdvance()                              0    0.350
ArrayDeque spliterator().forEachRemaining()                        0    0.185
ArrayDeque contains                                                0    0.206
ArrayDeque containsAll                                             0    0.211
ArrayDeque forEach                                                 0    0.150
ArrayDeque toArray()                                               0    0.205
ArrayDeque toArray(a)                                              0    0.157
ArrayDeque toArray(empty)                                          0    0.216
ArrayDeque stream().forEach                                        0    0.246
ArrayDeque stream().mapToInt                                       0    0.448
ArrayDeque stream().collect                                        0    0.385
ArrayDeque stream()::iterator                                      0    0.349
ArrayDeque parallelStream().forEach                                0    8.023
ArrayDeque parallelStream().mapToInt                               0    7.589
ArrayDeque parallelStream().collect                                0    4.158
ArrayDeque parallelStream()::iterator                              0    0.395
ArrayDeque removeIf                                                0    0.192
ArrayDeque remove(Object)                                          0    0.297
ArrayDeque descendingIterator() loop                               0    0.264
ArrayDeque descendingIterator().forEachRemaining()                 0    0.218
PriorityQueue iterate for loop                                     0    0.251
PriorityQueue iterator().forEachRemaining()                        0    0.206
PriorityQueue spliterator().tryAdvance()                           0    6.441
PriorityQueue spliterator().forEachRemaining()                     0    0.200
PriorityQueue contains                                             0    0.268
PriorityQueue containsAll                                          0    0.167
PriorityQueue forEach                                              0    0.259
PriorityQueue toArray()                                            0    0.069
PriorityQueue toArray(a)                                           0    0.208
PriorityQueue toArray(empty)                                       0    0.213
PriorityQueue stream().forEach                                     0    0.230
PriorityQueue stream().mapToInt                                    0    0.460
PriorityQueue stream().collect                                     0    0.408
PriorityQueue stream()::iterator                                   0    0.301
PriorityQueue parallelStream().forEach                             0    6.308
PriorityQueue parallelStream().mapToInt                            7  337.658
PriorityQueue parallelStream().collect                             0    4.574
PriorityQueue parallelStream()::iterator                           0    0.729
PriorityQueue removeIf                                             0    0.652
PriorityQueue remove(Object)                                       0    0.149
ConcurrentLinkedQueue iterate for loop                             0    0.316
ConcurrentLinkedQueue iterator().forEachRemaining()                0    0.258
ConcurrentLinkedQueue spliterator().tryAdvance()                   0    5.952
ConcurrentLinkedQueue spliterator().forEachRemaining()             0    0.355
ConcurrentLinkedQueue contains                                     0    0.167
ConcurrentLinkedQueue containsAll                                  0    0.867
ConcurrentLinkedQueue forEach                                      0    0.226
ConcurrentLinkedQueue toArray()                                    0    0.212
ConcurrentLinkedQueue toArray(a)                                   0    0.231
ConcurrentLinkedQueue toArray(empty)                               0    0.146
ConcurrentLinkedQueue stream().forEach                             0    0.499
ConcurrentLinkedQueue stream().mapToInt                            0    0.523
ConcurrentLinkedQueue stream().collect                             0    0.420
ConcurrentLinkedQueue stream()::iterator                           0    0.395
ConcurrentLinkedQueue parallelStream().forEach                     0    4.384
ConcurrentLinkedQueue parallelStream().mapToInt                    0    4.673
ConcurrentLinkedQueue parallelStream().collect                     0    4.341
ConcurrentLinkedQueue parallelStream()::iterator                   0    0.422
ConcurrentLinkedQueue removeIf                                     0    0.419
ConcurrentLinkedQueue remove(Object)                               0    0.196
ConcurrentLinkedDeque iterate for loop                             0    6.640
ConcurrentLinkedDeque iterator().forEachRemaining()                0    0.359
ConcurrentLinkedDeque spliterator().tryAdvance()                   0    4.190
ConcurrentLinkedDeque spliterator().forEachRemaining()             0    0.198
ConcurrentLinkedDeque contains                                     0    0.242
ConcurrentLinkedDeque containsAll                                  0    0.167
ConcurrentLinkedDeque forEach                                      0    0.231
ConcurrentLinkedDeque toArray()                                    0    0.182
ConcurrentLinkedDeque toArray(a)                                   0    0.200
ConcurrentLinkedDeque toArray(empty)                               0    0.123
ConcurrentLinkedDeque stream().forEach                             0    0.230
ConcurrentLinkedDeque stream().mapToInt                            0    0.398
ConcurrentLinkedDeque stream().collect                             0    0.370
ConcurrentLinkedDeque stream()::iterator                           0    0.366
ConcurrentLinkedDeque parallelStream().forEach                     0    5.305
ConcurrentLinkedDeque parallelStream().mapToInt                    0    4.034
ConcurrentLinkedDeque parallelStream().collect                     0    5.344
ConcurrentLinkedDeque parallelStream()::iterator                   0    0.416
ConcurrentLinkedDeque removeIf                                     0    0.428
ConcurrentLinkedDeque remove(Object)                               0    0.205
ConcurrentLinkedDeque descendingIterator() loop                    0    3.322
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0    0.354
ArrayBlockingQueue iterate for loop                                0   14.524
ArrayBlockingQueue iterator().forEachRemaining()                   0    0.575
ArrayBlockingQueue spliterator().tryAdvance()                      0    0.795
ArrayBlockingQueue spliterator().forEachRemaining()                0    0.344
ArrayBlockingQueue contains                                        0    0.167
ArrayBlockingQueue containsAll                                     0    0.152
ArrayBlockingQueue forEach                                         0    0.256
ArrayBlockingQueue toArray()                                       0    0.201
ArrayBlockingQueue toArray(a)                                      0    0.219
ArrayBlockingQueue toArray(empty)                                  0    0.326
ArrayBlockingQueue stream().forEach                                0    0.407
ArrayBlockingQueue stream().mapToInt                               0    0.557
ArrayBlockingQueue stream().collect                                0    0.530
ArrayBlockingQueue stream()::iterator                              0    0.838
ArrayBlockingQueue parallelStream().forEach                        0    5.675
ArrayBlockingQueue parallelStream().mapToInt                       0    4.221
ArrayBlockingQueue parallelStream().collect                        0    4.450
ArrayBlockingQueue parallelStream()::iterator                      0    0.786
ArrayBlockingQueue removeIf                                        0    0.475
ArrayBlockingQueue remove(Object)                                  0    0.127
LinkedBlockingQueue iterate for loop                               0    4.794
LinkedBlockingQueue iterator().forEachRemaining()                  0    0.571
LinkedBlockingQueue spliterator().tryAdvance()                     0    4.394
LinkedBlockingQueue spliterator().forEachRemaining()               0    0.462
LinkedBlockingQueue contains                                       0    0.150
LinkedBlockingQueue containsAll                                    0    0.160
LinkedBlockingQueue forEach                                        0    0.315
LinkedBlockingQueue toArray()                                      0    0.125
LinkedBlockingQueue toArray(a)                                     0    0.154
LinkedBlockingQueue toArray(empty)                                 0    0.407
LinkedBlockingQueue stream().forEach                               0    0.342
LinkedBlockingQueue stream().mapToInt                              0    0.507
LinkedBlockingQueue stream().collect                               0    0.467
LinkedBlockingQueue stream()::iterator                             0    0.453
LinkedBlockingQueue parallelStream().forEach                       0    5.266
LinkedBlockingQueue parallelStream().mapToInt                      0    4.099
LinkedBlockingQueue parallelStream().collect                       0    4.798
LinkedBlockingQueue parallelStream()::iterator                     0    0.530
LinkedBlockingQueue removeIf                                       0    0.718
LinkedBlockingQueue remove(Object)                                 0    0.127
LinkedBlockingDeque iterate for loop                               0    7.367
LinkedBlockingDeque iterator().forEachRemaining()                  0    0.568
LinkedBlockingDeque spliterator().tryAdvance()                     0    4.674
LinkedBlockingDeque spliterator().forEachRemaining()               0    0.477
LinkedBlockingDeque contains                                       0    0.155
LinkedBlockingDeque containsAll                                    0    0.148
LinkedBlockingDeque forEach                                        0    0.280
LinkedBlockingDeque toArray()                                      0    0.107
LinkedBlockingDeque toArray(a)                                     0    0.145
LinkedBlockingDeque toArray(empty)                                 0    0.321
LinkedBlockingDeque stream().forEach                               0    0.343
LinkedBlockingDeque stream().mapToInt                              0    0.507
LinkedBlockingDeque stream().collect                               0    0.472
LinkedBlockingDeque stream()::iterator                             0    0.915
LinkedBlockingDeque parallelStream().forEach                       0    4.020
LinkedBlockingDeque parallelStream().mapToInt                      0    2.378
LinkedBlockingDeque parallelStream().collect                       0    3.915
LinkedBlockingDeque parallelStream()::iterator                     0    0.467
LinkedBlockingDeque removeIf                                       0    0.671
LinkedBlockingDeque remove(Object)                                 0    0.168
LinkedBlockingDeque descendingIterator() loop                      0    3.698
LinkedBlockingDeque descendingIterator().forEachRemaining()        0    0.361
LinkedTransferQueue iterate for loop                               0    4.071
LinkedTransferQueue iterator().forEachRemaining()                  0    0.442
LinkedTransferQueue spliterator().tryAdvance()                     0    4.051
LinkedTransferQueue spliterator().forEachRemaining()               0    0.368
LinkedTransferQueue contains                                       0    0.170
LinkedTransferQueue containsAll                                    0    0.154
LinkedTransferQueue forEach                                        0    0.223
LinkedTransferQueue toArray()                                      0    0.189
LinkedTransferQueue toArray(a)                                     0    0.419
LinkedTransferQueue toArray(empty)                                 0    0.126
LinkedTransferQueue stream().forEach                               0    0.293
LinkedTransferQueue stream().mapToInt                              0    0.461
LinkedTransferQueue stream().collect                               0    0.425
LinkedTransferQueue stream()::iterator                             0    0.801
LinkedTransferQueue parallelStream().forEach                       0    4.383
LinkedTransferQueue parallelStream().mapToInt                      0    3.202
LinkedTransferQueue parallelStream().collect                       0    2.623
LinkedTransferQueue parallelStream()::iterator                     0    0.427
LinkedTransferQueue removeIf                                       0    0.530
LinkedTransferQueue remove(Object)                                 0    0.120
PriorityBlockingQueue iterate for loop                             0    4.782
PriorityBlockingQueue iterator().forEachRemaining()                0    0.315
PriorityBlockingQueue spliterator().tryAdvance()                   0    3.951
PriorityBlockingQueue spliterator().forEachRemaining()             0    0.176
PriorityBlockingQueue contains                                     0    0.251
PriorityBlockingQueue containsAll                                  0    0.159
PriorityBlockingQueue forEach                                      0    0.236
PriorityBlockingQueue toArray()                                    0    0.067
PriorityBlockingQueue toArray(a)                                   0    0.232
PriorityBlockingQueue toArray(empty)                               0    0.225
PriorityBlockingQueue stream().forEach                             0    0.225
PriorityBlockingQueue stream().mapToInt                            0    0.411
PriorityBlockingQueue stream().collect                             0    0.369
PriorityBlockingQueue stream()::iterator                           0    0.310
PriorityBlockingQueue parallelStream().forEach                     0    4.899
PriorityBlockingQueue parallelStream().mapToInt                    0    3.675
PriorityBlockingQueue parallelStream().collect                     0    2.642
PriorityBlockingQueue parallelStream()::iterator                   0    0.479
PriorityBlockingQueue removeIf                                     0    0.412
PriorityBlockingQueue remove(Object)                               0    0.116
ListN iterate for loop                                             0    0.283
ListN iterator().forEachRemaining()                                0    0.238
ListN spliterator().tryAdvance()                                   0    0.420
ListN spliterator().forEachRemaining()                             0    0.191
ListN contains                                                     0    0.359
ListN containsAll                                                  0    0.159
ListN forEach                                                      0    0.206
ListN toArray()                                                    0    0.082
ListN toArray(a)                                                   0    0.121
ListN toArray(empty)                                               0    0.167
ListN stream().forEach                                             0    0.237
ListN stream().mapToInt                                            0    0.384
ListN stream().collect                                             0    0.383
ListN stream()::iterator                                           0    0.393
ListN parallelStream().forEach                                     0    3.572
ListN parallelStream().mapToInt                                    0    3.105
ListN parallelStream().collect                                     0    4.591
ListN parallelStream()::iterator                                   0    0.398
ListN listIterator forward loop                                    0    0.396
ListN listIterator backward loop                                   0    0.192
ListN indexOf                                                      0    0.101
ListN lastIndexOf                                                  0    0.088
ListN equals                                                       0    0.323
ListN hashCode                                                     0    0.206
ImmutableCollections$SubList iterate for loop                      0    0.696
ImmutableCollections$SubList iterator().forEachRemaining()         0    0.254
ImmutableCollections$SubList spliterator().tryAdvance()            0    0.406
ImmutableCollections$SubList spliterator().forEachRemaining()      0    0.223
ImmutableCollections$SubList contains                              0    0.394
ImmutableCollections$SubList containsAll                           0    0.211
ImmutableCollections$SubList forEach                               0    0.245
ImmutableCollections$SubList toArray()                             0    0.201
ImmutableCollections$SubList toArray(a)                            0    0.166
ImmutableCollections$SubList toArray(empty)                        0    0.347
ImmutableCollections$SubList stream().forEach                      0    0.290
ImmutableCollections$SubList stream().mapToInt                     0    0.431
ImmutableCollections$SubList stream().collect                      0    0.425
ImmutableCollections$SubList stream()::iterator                    0    0.394
ImmutableCollections$SubList parallelStream().forEach              0    4.026
ImmutableCollections$SubList parallelStream().mapToInt             0    6.170
ImmutableCollections$SubList parallelStream().collect              0    5.319
ImmutableCollections$SubList parallelStream()::iterator            0    0.446
ImmutableCollections$SubList listIterator forward loop             0    0.576
ImmutableCollections$SubList listIterator backward loop            0    0.190
ImmutableCollections$SubList indexOf                               0    0.156
ImmutableCollections$SubList lastIndexOf                           0    0.142
ImmutableCollections$SubList equals                                0    0.359
ImmutableCollections$SubList hashCode                              0    0.251
----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
