#Test Results (version 2)
#Thu Feb 29 16:02:03 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=1066 0\:00\:01.066
end=Thu Feb 29 16\:02\:03 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az569-784
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Thu Feb 29 16\:02\:02 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1015-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=1066
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Collection

#section:script_messages
----------messages:(4/315)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183)
OpenJDK Server VM (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183, mixed mode, sharing)

#section:build
----------messages:(7/234)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Thu Feb 29 16:02:02 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Thu Feb 29 16:02:02 UTC 2024
elapsed time (seconds): 0.342
result: Passed. Build successful

#section:compile
----------messages:(7/292)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Thu Feb 29 16:02:02 UTC 2024
Mode: agentvm
Agent id: 2
finished: Thu Feb 29 16:02:02 UTC 2024
elapsed time (seconds): 0.342
----------configuration:(10/717)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d

----------rerun:(35/3426)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
----------direct:(7/585)----------
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/292)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Thu Feb 29 16:02:02 UTC 2024
Mode: agentvm
Agent id: 4
finished: Thu Feb 29 16:02:03 UTC 2024
elapsed time (seconds): 0.723
----------configuration:(13/962)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection

----------rerun:(28/2919)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/35334)----------
Method                                                        Millis    Ratio
ArrayList iterate for loop                                         0    1.000
ArrayList iterator().forEachRemaining()                            0    9.164
ArrayList spliterator().tryAdvance()                               0    8.898
ArrayList spliterator().forEachRemaining()                         0    8.351
ArrayList contains                                                 0    9.009
ArrayList containsAll                                              0    4.833
ArrayList forEach                                                  0    7.059
ArrayList toArray()                                                0    0.298
ArrayList toArray(a)                                               0    0.303
ArrayList toArray(empty)                                           0    0.259
ArrayList stream().forEach                                         0    6.867
ArrayList stream().mapToInt                                        0   26.899
ArrayList stream().collect                                         4  160.114
ArrayList stream()::iterator                                       0    9.597
ArrayList parallelStream().forEach                                31 1033.079
ArrayList parallelStream().mapToInt                                0   21.908
ArrayList parallelStream().collect                                 0   11.345
ArrayList parallelStream()::iterator                               0    7.373
ArrayList removeIf                                                 0    6.712
ArrayList remove(Object)                                           0    0.640
ArrayList listIterator forward loop                                0    1.103
ArrayList listIterator backward loop                               0    0.583
ArrayList indexOf                                                  0    0.288
ArrayList lastIndexOf                                              0    0.322
ArrayList equals                                                   0    0.375
ArrayList hashCode                                                 0    0.547
ArrayList replaceAll                                               0    7.130
ArrayList$SubList iterate for loop                                 0    0.556
ArrayList$SubList iterator().forEachRemaining()                    0    0.390
ArrayList$SubList spliterator().tryAdvance()                       0    5.081
ArrayList$SubList spliterator().forEachRemaining()                 0    0.187
ArrayList$SubList contains                                         0    0.220
ArrayList$SubList containsAll                                      0    0.196
ArrayList$SubList forEach                                          0    0.536
ArrayList$SubList toArray()                                        0    0.097
ArrayList$SubList toArray(a)                                       0    0.129
ArrayList$SubList toArray(empty)                                   0    0.244
ArrayList$SubList stream().forEach                                 0    0.253
ArrayList$SubList stream().mapToInt                                0    0.496
ArrayList$SubList stream().collect                                 0    0.453
ArrayList$SubList stream()::iterator                               0    0.327
ArrayList$SubList parallelStream().forEach                         0    2.714
ArrayList$SubList parallelStream().mapToInt                        0    2.215
ArrayList$SubList parallelStream().collect                         0    2.554
ArrayList$SubList parallelStream()::iterator                       0    0.327
ArrayList$SubList removeIf                                         0    0.161
ArrayList$SubList remove(Object)                                   0    0.240
ArrayList$SubList listIterator forward loop                        0    0.142
ArrayList$SubList listIterator backward loop                       0    0.153
ArrayList$SubList indexOf                                          0    0.097
ArrayList$SubList lastIndexOf                                      0    0.166
ArrayList$SubList equals                                           0    0.455
ArrayList$SubList hashCode                                         0    0.180
ArrayList$SubList replaceAll                                       0    0.217
Vector iterate for loop                                            0    0.171
Vector iterator().forEachRemaining()                               0    0.208
Vector spliterator().tryAdvance()                                  0    0.315
Vector spliterator().forEachRemaining()                            0    0.135
Vector contains                                                    0    0.483
Vector containsAll                                                 0    0.220
Vector forEach                                                     0    0.147
Vector toArray()                                                   0    0.077
Vector toArray(a)                                                  0    0.108
Vector toArray(empty)                                              0    0.092
Vector stream().forEach                                            0    0.204
Vector stream().mapToInt                                           0    0.395
Vector stream().collect                                            0    0.381
Vector stream()::iterator                                          0    0.290
Vector parallelStream().forEach                                    0    2.254
Vector parallelStream().mapToInt                                   0    2.092
Vector parallelStream().collect                                    0    2.438
Vector parallelStream()::iterator                                  0    0.315
Vector removeIf                                                    0    0.155
Vector remove(Object)                                              0    0.122
Vector listIterator forward loop                                   0    0.152
Vector listIterator backward loop                                  0    0.180
Vector indexOf                                                     0    0.075
Vector lastIndexOf                                                 0    0.201
Vector equals                                                      0    0.579
Vector hashCode                                                    0    0.220
Vector replaceAll                                                  0    0.239
SynchronizedRandomAccessList iterate for loop                      0    0.330
SynchronizedRandomAccessList iterator().forEachRemaining()         0    0.220
SynchronizedRandomAccessList spliterator().tryAdvance()            0    5.811
SynchronizedRandomAccessList spliterator().forEachRemaining()      0    0.341
SynchronizedRandomAccessList contains                              0    1.622
SynchronizedRandomAccessList containsAll                           0    0.383
SynchronizedRandomAccessList forEach                               1   60.837
SynchronizedRandomAccessList toArray()                             0    0.322
SynchronizedRandomAccessList toArray(a)                            0    0.406
SynchronizedRandomAccessList toArray(empty)                        0    0.198
SynchronizedRandomAccessList stream().forEach                      0    0.479
SynchronizedRandomAccessList stream().mapToInt                     0    0.669
SynchronizedRandomAccessList stream().collect                      0    0.554
SynchronizedRandomAccessList stream()::iterator                    0    0.426
SynchronizedRandomAccessList parallelStream().forEach              0    2.658
SynchronizedRandomAccessList parallelStream().mapToInt             0    2.327
SynchronizedRandomAccessList parallelStream().collect              0    2.205
SynchronizedRandomAccessList parallelStream()::iterator            0    0.462
SynchronizedRandomAccessList removeIf                              0    0.418
SynchronizedRandomAccessList remove(Object)                        0    0.309
SynchronizedRandomAccessList listIterator forward loop             0    0.227
SynchronizedRandomAccessList listIterator backward loop            0    0.329
SynchronizedRandomAccessList indexOf                               0    0.359
SynchronizedRandomAccessList lastIndexOf                           0    0.553
SynchronizedRandomAccessList equals                                0    0.613
SynchronizedRandomAccessList hashCode                              0    0.404
SynchronizedRandomAccessList replaceAll                            0    0.883
LinkedList iterate for loop                                        0    1.267
LinkedList iterator().forEachRemaining()                           0    0.350
LinkedList spliterator().tryAdvance()                              0    4.727
LinkedList spliterator().forEachRemaining()                        0    0.170
LinkedList contains                                                0    1.113
LinkedList containsAll                                             0    0.130
LinkedList forEach                                                 0    0.194
LinkedList toArray()                                               0    0.112
LinkedList toArray(a)                                              0    0.104
LinkedList toArray(empty)                                          0    0.140
LinkedList stream().forEach                                        0    0.205
LinkedList stream().mapToInt                                       0   14.052
LinkedList stream().collect                                        0    0.600
LinkedList stream()::iterator                                      0    0.310
LinkedList parallelStream().forEach                                0    2.929
LinkedList parallelStream().mapToInt                               0    7.840
LinkedList parallelStream().collect                                0    3.121
LinkedList parallelStream()::iterator                              0    0.342
LinkedList removeIf                                                0    0.259
LinkedList remove(Object)                                          0    0.131
LinkedList descendingIterator() loop                               0    3.602
LinkedList descendingIterator().forEachRemaining()                 0    8.605
LinkedList listIterator forward loop                               0    0.109
LinkedList listIterator backward loop                              0    0.148
LinkedList indexOf                                                 0    0.094
LinkedList lastIndexOf                                             0    0.099
LinkedList equals                                                  0    0.317
LinkedList hashCode                                                0    0.196
LinkedList replaceAll                                              0    0.238
AbstractList$SubList iterate for loop                              0    0.264
AbstractList$SubList iterator().forEachRemaining()                 0    0.213
AbstractList$SubList spliterator().tryAdvance()                    0    0.526
AbstractList$SubList spliterator().forEachRemaining()              0    0.233
AbstractList$SubList contains                                      0    0.183
AbstractList$SubList containsAll                                   0    0.207
AbstractList$SubList forEach                                       0    0.191
AbstractList$SubList toArray()                                     0    0.699
AbstractList$SubList toArray(a)                                    0    0.212
AbstractList$SubList toArray(empty)                                0    0.180
AbstractList$SubList stream().forEach                              0    0.311
AbstractList$SubList stream().mapToInt                             0    0.510
AbstractList$SubList stream().collect                              0    0.487
AbstractList$SubList stream()::iterator                            0    0.362
AbstractList$SubList parallelStream().forEach                      0   12.896
AbstractList$SubList parallelStream().mapToInt                     0    8.269
AbstractList$SubList parallelStream().collect                      0    8.258
AbstractList$SubList parallelStream()::iterator                    0    0.489
AbstractList$SubList removeIf                                      0    0.182
AbstractList$SubList remove(Object)                                0    0.159
AbstractList$SubList listIterator forward loop                     0    0.105
AbstractList$SubList listIterator backward loop                    0    1.057
AbstractList$SubList indexOf                                       0    0.162
AbstractList$SubList lastIndexOf                                   0    0.295
AbstractList$SubList equals                                        0    0.507
AbstractList$SubList hashCode                                      0    0.291
AbstractList$SubList replaceAll                                    0    0.253
CopyOnWriteArrayList iterate for loop                              0    0.164
CopyOnWriteArrayList iterator().forEachRemaining()                 0    0.384
CopyOnWriteArrayList spliterator().tryAdvance()                    0    0.262
CopyOnWriteArrayList spliterator().forEachRemaining()              0    0.120
CopyOnWriteArrayList contains                                      0    1.814
CopyOnWriteArrayList containsAll                                   0    0.928
CopyOnWriteArrayList forEach                                       0    0.157
CopyOnWriteArrayList toArray()                                     0    0.128
CopyOnWriteArrayList toArray(a)                                    0    0.129
CopyOnWriteArrayList toArray(empty)                                0    0.084
CopyOnWriteArrayList stream().forEach                              0    0.201
CopyOnWriteArrayList stream().mapToInt                             0    1.273
CopyOnWriteArrayList stream().collect                              0    0.531
CopyOnWriteArrayList stream()::iterator                            0    0.309
CopyOnWriteArrayList parallelStream().forEach                      0   18.767
CopyOnWriteArrayList parallelStream().mapToInt                     0   10.730
CopyOnWriteArrayList parallelStream().collect                      0    3.275
CopyOnWriteArrayList parallelStream()::iterator                    0    0.301
CopyOnWriteArrayList removeIf                                      0    0.172
CopyOnWriteArrayList remove(Object)                                0    0.178
CopyOnWriteArrayList listIterator forward loop                     0    0.148
CopyOnWriteArrayList listIterator backward loop                    0    0.427
CopyOnWriteArrayList indexOf                                       0    0.245
CopyOnWriteArrayList lastIndexOf                                   0    0.127
CopyOnWriteArrayList equals                                        0    0.384
CopyOnWriteArrayList hashCode                                      0    0.201
CopyOnWriteArrayList replaceAll                                    0    0.301
COWSubList iterate for loop                                        0    4.355
COWSubList iterator().forEachRemaining()                           0    0.442
COWSubList spliterator().tryAdvance()                              0    0.361
COWSubList spliterator().forEachRemaining()                        0    0.137
COWSubList contains                                                0    0.217
COWSubList containsAll                                             0    0.257
COWSubList forEach                                                 0    0.225
COWSubList toArray()                                               0    0.172
COWSubList toArray(a)                                              0    0.201
COWSubList toArray(empty)                                          0    0.138
COWSubList stream().forEach                                        0    0.199
COWSubList stream().mapToInt                                       0    0.417
COWSubList stream().collect                                        0    0.385
COWSubList stream()::iterator                                      0    0.269
COWSubList parallelStream().forEach                                0    7.563
COWSubList parallelStream().mapToInt                               0    2.794
COWSubList parallelStream().collect                                0    2.312
COWSubList parallelStream()::iterator                              0    0.332
COWSubList removeIf                                                0    0.365
COWSubList remove(Object)                                          0    0.131
COWSubList listIterator forward loop                               0    0.262
COWSubList listIterator backward loop                              0    0.437
COWSubList indexOf                                                 0    0.084
COWSubList lastIndexOf                                             0    0.127
COWSubList equals                                                  0    0.370
COWSubList hashCode                                                0    0.175
COWSubList replaceAll                                              0    0.241
ArrayDeque iterate for loop                                        0    0.204
ArrayDeque iterator().forEachRemaining()                           0    0.194
ArrayDeque spliterator().tryAdvance()                              0    0.339
ArrayDeque spliterator().forEachRemaining()                        0    0.176
ArrayDeque contains                                                0    0.431
ArrayDeque containsAll                                             0    0.093
ArrayDeque forEach                                                 0    0.142
ArrayDeque toArray()                                               0    0.145
ArrayDeque toArray(a)                                              0    0.153
ArrayDeque toArray(empty)                                          0    0.098
ArrayDeque stream().forEach                                        0    0.211
ArrayDeque stream().mapToInt                                       0    0.465
ArrayDeque stream().collect                                        0    0.446
ArrayDeque stream()::iterator                                      0    0.293
ArrayDeque parallelStream().forEach                                0   10.492
ArrayDeque parallelStream().mapToInt                               0   25.581
ArrayDeque parallelStream().collect                                1   35.390
ArrayDeque parallelStream()::iterator                              0    0.388
ArrayDeque removeIf                                                0    0.173
ArrayDeque remove(Object)                                          0    0.110
ArrayDeque descendingIterator() loop                               0    0.242
ArrayDeque descendingIterator().forEachRemaining()                 0    0.185
PriorityQueue iterate for loop                                     0    0.253
PriorityQueue iterator().forEachRemaining()                        0    0.175
PriorityQueue spliterator().tryAdvance()                           0    4.304
PriorityQueue spliterator().forEachRemaining()                     0    0.186
PriorityQueue contains                                             0    0.224
PriorityQueue containsAll                                          0    0.124
PriorityQueue forEach                                              0    0.254
PriorityQueue toArray()                                            0    0.142
PriorityQueue toArray(a)                                           0    0.192
PriorityQueue toArray(empty)                                       0    0.150
PriorityQueue stream().forEach                                     0    0.204
PriorityQueue stream().mapToInt                                    0    0.818
PriorityQueue stream().collect                                     0    0.436
PriorityQueue stream()::iterator                                   0    0.269
PriorityQueue parallelStream().forEach                             0    2.895
PriorityQueue parallelStream().mapToInt                            0    3.207
PriorityQueue parallelStream().collect                             0    2.278
PriorityQueue parallelStream()::iterator                           0    0.302
PriorityQueue removeIf                                             0    0.383
PriorityQueue remove(Object)                                       0    0.097
ConcurrentLinkedQueue iterate for loop                             0    0.191
ConcurrentLinkedQueue iterator().forEachRemaining()                0    0.168
ConcurrentLinkedQueue spliterator().tryAdvance()                   0    4.473
ConcurrentLinkedQueue spliterator().forEachRemaining()             0    0.630
ConcurrentLinkedQueue contains                                     0    0.464
ConcurrentLinkedQueue containsAll                                  0    0.098
ConcurrentLinkedQueue forEach                                      0    0.116
ConcurrentLinkedQueue toArray()                                    0    0.165
ConcurrentLinkedQueue toArray(a)                                   0    0.160
ConcurrentLinkedQueue toArray(empty)                               0    0.101
ConcurrentLinkedQueue stream().forEach                             0    0.802
ConcurrentLinkedQueue stream().mapToInt                            0    0.673
ConcurrentLinkedQueue stream().collect                             0    0.439
ConcurrentLinkedQueue stream()::iterator                           0    0.339
ConcurrentLinkedQueue parallelStream().forEach                     0    2.427
ConcurrentLinkedQueue parallelStream().mapToInt                    0   17.271
ConcurrentLinkedQueue parallelStream().collect                     0    3.429
ConcurrentLinkedQueue parallelStream()::iterator                   0    0.551
ConcurrentLinkedQueue removeIf                                     0    0.176
ConcurrentLinkedQueue remove(Object)                               0    0.101
ConcurrentLinkedDeque iterate for loop                             0    0.245
ConcurrentLinkedDeque iterator().forEachRemaining()                0    0.167
ConcurrentLinkedDeque spliterator().tryAdvance()                   0    4.431
ConcurrentLinkedDeque spliterator().forEachRemaining()             0    0.176
ConcurrentLinkedDeque contains                                     0    0.597
ConcurrentLinkedDeque containsAll                                  0    0.105
ConcurrentLinkedDeque forEach                                      0    0.228
ConcurrentLinkedDeque toArray()                                    0    0.158
ConcurrentLinkedDeque toArray(a)                                   0    0.148
ConcurrentLinkedDeque toArray(empty)                               0    0.095
ConcurrentLinkedDeque stream().forEach                             0    0.357
ConcurrentLinkedDeque stream().mapToInt                            0    0.522
ConcurrentLinkedDeque stream().collect                             1   40.810
ConcurrentLinkedDeque stream()::iterator                           0    0.811
ConcurrentLinkedDeque parallelStream().forEach                     0    3.408
ConcurrentLinkedDeque parallelStream().mapToInt                    0    2.499
ConcurrentLinkedDeque parallelStream().collect                     0    2.480
ConcurrentLinkedDeque parallelStream()::iterator                   0    0.367
ConcurrentLinkedDeque removeIf                                     0    0.169
ConcurrentLinkedDeque remove(Object)                               0    0.115
ConcurrentLinkedDeque descendingIterator() loop                    0    4.231
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0    0.297
ArrayBlockingQueue iterate for loop                                0    0.580
ArrayBlockingQueue iterator().forEachRemaining()                   0    0.503
ArrayBlockingQueue spliterator().tryAdvance()                      0    0.623
ArrayBlockingQueue spliterator().forEachRemaining()                0    0.274
ArrayBlockingQueue contains                                        0    0.983
ArrayBlockingQueue containsAll                                     0    0.117
ArrayBlockingQueue forEach                                         0    0.157
ArrayBlockingQueue toArray()                                       0    0.206
ArrayBlockingQueue toArray(a)                                      0    0.138
ArrayBlockingQueue toArray(empty)                                  0    0.098
ArrayBlockingQueue stream().forEach                                0    0.361
ArrayBlockingQueue stream().mapToInt                               0    0.425
ArrayBlockingQueue stream().collect                                0    0.475
ArrayBlockingQueue stream()::iterator                              0    0.414
ArrayBlockingQueue parallelStream().forEach                        5  196.706
ArrayBlockingQueue parallelStream().mapToInt                       1   40.940
ArrayBlockingQueue parallelStream().collect                        0    5.336
ArrayBlockingQueue parallelStream()::iterator                      0    0.564
ArrayBlockingQueue removeIf                                        0    0.182
ArrayBlockingQueue remove(Object)                                  0    0.099
LinkedBlockingQueue iterate for loop                               0    0.253
LinkedBlockingQueue iterator().forEachRemaining()                  0    0.553
LinkedBlockingQueue spliterator().tryAdvance()                     0    4.650
LinkedBlockingQueue spliterator().forEachRemaining()               0    0.288
LinkedBlockingQueue contains                                       0    1.294
LinkedBlockingQueue containsAll                                    0    0.122
LinkedBlockingQueue forEach                                        0    0.195
LinkedBlockingQueue toArray()                                      0    0.128
LinkedBlockingQueue toArray(a)                                     0    0.132
LinkedBlockingQueue toArray(empty)                                 0    0.165
LinkedBlockingQueue stream().forEach                               0    0.366
LinkedBlockingQueue stream().mapToInt                              0    0.517
LinkedBlockingQueue stream().collect                               0    0.555
LinkedBlockingQueue stream()::iterator                             0    0.504
LinkedBlockingQueue parallelStream().forEach                       0    2.805
LinkedBlockingQueue parallelStream().mapToInt                      0    2.435
LinkedBlockingQueue parallelStream().collect                       0    2.628
LinkedBlockingQueue parallelStream()::iterator                     0    0.354
LinkedBlockingQueue removeIf                                       0    0.217
LinkedBlockingQueue remove(Object)                                 0    0.089
LinkedBlockingDeque iterate for loop                               0    0.760
LinkedBlockingDeque iterator().forEachRemaining()                  0    0.479
LinkedBlockingDeque spliterator().tryAdvance()                     0    4.281
LinkedBlockingDeque spliterator().forEachRemaining()               0    0.291
LinkedBlockingDeque contains                                       0    0.852
LinkedBlockingDeque containsAll                                    0    0.109
LinkedBlockingDeque forEach                                        0    1.032
LinkedBlockingDeque toArray()                                      0    0.127
LinkedBlockingDeque toArray(a)                                     0    0.097
LinkedBlockingDeque toArray(empty)                                 0    0.123
LinkedBlockingDeque stream().forEach                               0    0.294
LinkedBlockingDeque stream().mapToInt                              0    0.383
LinkedBlockingDeque stream().collect                               0    0.442
LinkedBlockingDeque stream()::iterator                             0    0.333
LinkedBlockingDeque parallelStream().forEach                       0    3.011
LinkedBlockingDeque parallelStream().mapToInt                      0    2.726
LinkedBlockingDeque parallelStream().collect                       0    6.767
LinkedBlockingDeque parallelStream()::iterator                     0    0.409
LinkedBlockingDeque removeIf                                       0    0.260
LinkedBlockingDeque remove(Object)                                 0    0.090
LinkedBlockingDeque descendingIterator() loop                      0    3.644
LinkedBlockingDeque descendingIterator().forEachRemaining()        0    0.381
LinkedTransferQueue iterate for loop                               0    0.170
LinkedTransferQueue iterator().forEachRemaining()                  0    0.402
LinkedTransferQueue spliterator().tryAdvance()                     0    4.070
LinkedTransferQueue spliterator().forEachRemaining()               0    0.444
LinkedTransferQueue contains                                       0    0.511
LinkedTransferQueue containsAll                                    0    0.103
LinkedTransferQueue forEach                                        0    0.180
LinkedTransferQueue toArray()                                      0    0.166
LinkedTransferQueue toArray(a)                                     0    0.328
LinkedTransferQueue toArray(empty)                                 0    0.102
LinkedTransferQueue stream().forEach                               0    0.265
LinkedTransferQueue stream().mapToInt                              0    0.383
LinkedTransferQueue stream().collect                               0    0.441
LinkedTransferQueue stream()::iterator                             0    0.330
LinkedTransferQueue parallelStream().forEach                       0    2.399
LinkedTransferQueue parallelStream().mapToInt                      0    2.120
LinkedTransferQueue parallelStream().collect                       0    1.807
LinkedTransferQueue parallelStream()::iterator                     0    0.409
LinkedTransferQueue removeIf                                       0    0.232
LinkedTransferQueue remove(Object)                                 0    0.101
PriorityBlockingQueue iterate for loop                             0    3.419
PriorityBlockingQueue iterator().forEachRemaining()                0    0.311
PriorityBlockingQueue spliterator().tryAdvance()                   0    3.735
PriorityBlockingQueue spliterator().forEachRemaining()             0    0.184
PriorityBlockingQueue contains                                     0    0.205
PriorityBlockingQueue containsAll                                  0    0.130
PriorityBlockingQueue forEach                                      0    0.228
PriorityBlockingQueue toArray()                                    0    0.061
PriorityBlockingQueue toArray(a)                                   0    0.197
PriorityBlockingQueue toArray(empty)                               0    0.165
PriorityBlockingQueue stream().forEach                             0    0.207
PriorityBlockingQueue stream().mapToInt                            0    0.610
PriorityBlockingQueue stream().collect                             0    0.536
PriorityBlockingQueue stream()::iterator                           0    0.291
PriorityBlockingQueue parallelStream().forEach                     0    3.207
PriorityBlockingQueue parallelStream().mapToInt                    0    2.474
PriorityBlockingQueue parallelStream().collect                     0    2.823
PriorityBlockingQueue parallelStream()::iterator                   0    0.346
PriorityBlockingQueue removeIf                                     0    0.366
PriorityBlockingQueue remove(Object)                               0    0.109
ListN iterate for loop                                             0    0.201
ListN iterator().forEachRemaining()                                0    0.167
ListN spliterator().tryAdvance()                                   0    0.385
ListN spliterator().forEachRemaining()                             0    0.158
ListN contains                                                     0    0.546
ListN containsAll                                                  0    0.134
ListN forEach                                                      0    0.204
ListN toArray()                                                    0    0.074
ListN toArray(a)                                                   0    0.115
ListN toArray(empty)                                               0    0.086
ListN stream().forEach                                             0    0.229
ListN stream().mapToInt                                            0    0.347
ListN stream().collect                                             0    0.407
ListN stream()::iterator                                           0    0.398
ListN parallelStream().forEach                                     0    2.020
ListN parallelStream().mapToInt                                    0    2.070
ListN parallelStream().collect                                    10  339.895
ListN parallelStream()::iterator                                   0    0.438
ListN listIterator forward loop                                    0    0.439
ListN listIterator backward loop                                   0    0.192
ListN indexOf                                                      0    0.118
ListN lastIndexOf                                                  0    0.091
ListN equals                                                       0    0.311
ListN hashCode                                                     0    0.159
ImmutableCollections$SubList iterate for loop                      0    0.463
ImmutableCollections$SubList iterator().forEachRemaining()         0    0.292
ImmutableCollections$SubList spliterator().tryAdvance()            0    0.373
ImmutableCollections$SubList spliterator().forEachRemaining()      0    0.199
ImmutableCollections$SubList contains                              0    0.386
ImmutableCollections$SubList containsAll                           0    0.175
ImmutableCollections$SubList forEach                               0    0.233
ImmutableCollections$SubList toArray()                             0    0.176
ImmutableCollections$SubList toArray(a)                            0    0.156
ImmutableCollections$SubList toArray(empty)                        0    0.418
ImmutableCollections$SubList stream().forEach                      0    0.274
ImmutableCollections$SubList stream().mapToInt                     0    0.392
ImmutableCollections$SubList stream().collect                      0    0.710
ImmutableCollections$SubList stream()::iterator                    0    0.374
ImmutableCollections$SubList parallelStream().forEach              0    6.753
ImmutableCollections$SubList parallelStream().mapToInt             0    6.125
ImmutableCollections$SubList parallelStream().collect              0    7.838
ImmutableCollections$SubList parallelStream()::iterator            0    0.722
ImmutableCollections$SubList listIterator forward loop             0    0.310
ImmutableCollections$SubList listIterator backward loop            0    0.165
ImmutableCollections$SubList indexOf                               0    0.154
ImmutableCollections$SubList lastIndexOf                           0    0.149
ImmutableCollections$SubList equals                                0    0.356
ImmutableCollections$SubList hashCode                              0    0.221
----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
