#Test Results (version 2)
#Fri Mar 01 16:33:30 UTC 2024
#-----testdescription-----
$file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
$root=/home/runner/work/openjdk/openjdk/test/jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=1021 0\:00\:01.021
end=Fri Mar 01 16\:33\:30 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az659-319
javatestOS=Linux 6.5.0-1015-azure (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Fri Mar 01 16\:33\:29 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
testJDK_OS=[name\:Linux,arch\:i386,version\:6.5.0-1015-azure,family\:linux,simple_arch\:i586,simple_version\:6.5,processors\:4,maxMemory\:16757342208,maxSwap\:4294963200]
testJDK_os.arch=i386
testJDK_os.name=Linux
testJDK_os.version=6.5.0-1015-azure
totalTime=1022
user.name=runner
work=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Collection

#section:script_messages
----------messages:(4/315)----------
JDK under test: /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b)
OpenJDK Server VM (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b, mixed mode, sharing)

#section:build
----------messages:(7/234)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Fri Mar 01 16:33:29 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Fri Mar 01 16:33:30 UTC 2024
elapsed time (seconds): 0.298
result: Passed. Build successful

#section:compile
----------messages:(7/292)----------
command: compile /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Fri Mar 01 16:33:29 UTC 2024
Mode: agentvm
Agent id: 2
finished: Fri Mar 01 16:33:30 UTC 2024
elapsed time (seconds): 0.298
----------configuration:(10/717)----------
Boot Layer (javac runtime environment)
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
  class path:  /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection
               /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d

----------rerun:(35/3426)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -J-Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -J-Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -d /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -sourcepath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
----------direct:(7/585)----------
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/292)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Fri Mar 01 16:33:30 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 01 16:33:30 UTC 2024
elapsed time (seconds): 0.722
----------configuration:(13/962)----------
Boot Layer
  class path: /home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /home/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d
              /home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection

----------rerun:(28/2919)*----------
cd /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/0 && \\
HOME=/home/runner \\
LANG=C.UTF-8 \\
LC_ALL=C \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/home/runner/work/openjdk/openjdk/bundles/tests \\
XDG_CONFIG_HOME=/home/runner/.config \\
XDG_RUNTIME_DIR=/run/user/1001 \\
_JVM_DWARF_PATH=/home/runner/work/openjdk/openjdk/bundles/symbols/jdk-23 \\
    /home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/home/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dcompile.jdk=/home/runner/work/openjdk/openjdk/bundles/jdk/jdk-23 \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/home/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/home/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.src=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.src.path=/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -Dtest.classes=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d \\
        -Dtest.class.path.prefix=/home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection \\
        -classpath /home/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/Collection/IteratorMicroBenchmark.d:/home/runner/work/openjdk/openjdk/test/jdk/java/util/Collection:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/home/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis   Ratio
ArrayList iterate for loop                                         0   1.000
ArrayList iterator().forEachRemaining()                            3 137.140
ArrayList spliterator().tryAdvance()                               0   8.186
ArrayList spliterator().forEachRemaining()                         0   6.293
ArrayList contains                                                 0   8.929
ArrayList containsAll                                              0   1.048
ArrayList forEach                                                  0   5.519
ArrayList toArray()                                                0   0.325
ArrayList toArray(a)                                               0   0.331
ArrayList toArray(empty)                                           0   0.283
ArrayList stream().forEach                                         0  20.700
ArrayList stream().mapToInt                                        1  39.129
ArrayList stream().collect                                         1  38.822
ArrayList stream()::iterator                                       0   7.535
ArrayList parallelStream().forEach                                12 430.144
ArrayList parallelStream().mapToInt                                0  22.627
ArrayList parallelStream().collect                                 0  13.377
ArrayList parallelStream()::iterator                               0   6.095
ArrayList removeIf                                                 0   5.940
ArrayList remove(Object)                                           0   1.392
ArrayList listIterator forward loop                                0   1.029
ArrayList listIterator backward loop                               0   0.523
ArrayList indexOf                                                  0   0.693
ArrayList lastIndexOf                                              0   0.332
ArrayList equals                                                   0   0.381
ArrayList hashCode                                                 0   0.717
ArrayList replaceAll                                               0   6.143
ArrayList$SubList iterate for loop                                 0   6.134
ArrayList$SubList iterator().forEachRemaining()                    0   0.435
ArrayList$SubList spliterator().tryAdvance()                       0   3.840
ArrayList$SubList spliterator().forEachRemaining()                 0   0.201
ArrayList$SubList contains                                         0   0.203
ArrayList$SubList containsAll                                      0   0.265
ArrayList$SubList forEach                                          0   0.537
ArrayList$SubList toArray()                                        0   0.500
ArrayList$SubList toArray(a)                                       0   0.143
ArrayList$SubList toArray(empty)                                   0   0.157
ArrayList$SubList stream().forEach                                 0   0.268
ArrayList$SubList stream().mapToInt                                0   0.516
ArrayList$SubList stream().collect                                 0   0.350
ArrayList$SubList stream()::iterator                               0   0.303
ArrayList$SubList parallelStream().forEach                         0   6.061
ArrayList$SubList parallelStream().mapToInt                        0   3.630
ArrayList$SubList parallelStream().collect                         0   2.034
ArrayList$SubList parallelStream()::iterator                       0   0.330
ArrayList$SubList removeIf                                         0   0.297
ArrayList$SubList remove(Object)                                   0   0.240
ArrayList$SubList listIterator forward loop                        0   0.156
ArrayList$SubList listIterator backward loop                       0   0.192
ArrayList$SubList indexOf                                          0   0.088
ArrayList$SubList lastIndexOf                                      0   0.137
ArrayList$SubList equals                                           0  12.902
ArrayList$SubList hashCode                                         0   0.349
ArrayList$SubList replaceAll                                       0   0.289
Vector iterate for loop                                            0   0.261
Vector iterator().forEachRemaining()                               0   0.440
Vector spliterator().tryAdvance()                                  0   4.044
Vector spliterator().forEachRemaining()                            0   0.165
Vector contains                                                    0   0.400
Vector containsAll                                                 0   0.221
Vector forEach                                                     0   0.146
Vector toArray()                                                   0   0.083
Vector toArray(a)                                                  0   0.124
Vector toArray(empty)                                              0   0.090
Vector stream().forEach                                            0   0.207
Vector stream().mapToInt                                           0   0.477
Vector stream().collect                                            0   0.324
Vector stream()::iterator                                          0   0.293
Vector parallelStream().forEach                                    0   2.527
Vector parallelStream().mapToInt                                   0   8.427
Vector parallelStream().collect                                    0  10.527
Vector parallelStream()::iterator                                  0   0.371
Vector removeIf                                                    0   0.153
Vector remove(Object)                                              0   0.121
Vector listIterator forward loop                                   0   0.243
Vector listIterator backward loop                                  0   0.178
Vector indexOf                                                     0   0.077
Vector lastIndexOf                                                 0   0.246
Vector equals                                                      0   0.429
Vector hashCode                                                    0   0.394
Vector replaceAll                                                  0   0.240
SynchronizedRandomAccessList iterate for loop                      0   1.359
SynchronizedRandomAccessList iterator().forEachRemaining()         0   0.280
SynchronizedRandomAccessList spliterator().tryAdvance()            0   0.852
SynchronizedRandomAccessList spliterator().forEachRemaining()      0   0.250
SynchronizedRandomAccessList contains                              0   3.083
SynchronizedRandomAccessList containsAll                           0   0.861
SynchronizedRandomAccessList forEach                               0   0.351
SynchronizedRandomAccessList toArray()                             0   0.410
SynchronizedRandomAccessList toArray(a)                            0   0.322
SynchronizedRandomAccessList toArray(empty)                        0   1.070
SynchronizedRandomAccessList stream().forEach                      0  15.600
SynchronizedRandomAccessList stream().mapToInt                     0   0.673
SynchronizedRandomAccessList stream().collect                      0   0.539
SynchronizedRandomAccessList stream()::iterator                    0   0.430
SynchronizedRandomAccessList parallelStream().forEach              0   7.322
SynchronizedRandomAccessList parallelStream().mapToInt             0   6.563
SynchronizedRandomAccessList parallelStream().collect              0   8.096
SynchronizedRandomAccessList parallelStream()::iterator            0   0.568
SynchronizedRandomAccessList removeIf                              0   1.016
SynchronizedRandomAccessList remove(Object)                        0   0.300
SynchronizedRandomAccessList listIterator forward loop             0   0.296
SynchronizedRandomAccessList listIterator backward loop            0   0.578
SynchronizedRandomAccessList indexOf                               0   0.404
SynchronizedRandomAccessList lastIndexOf                           0   0.455
SynchronizedRandomAccessList equals                                0   0.566
SynchronizedRandomAccessList hashCode                              0   0.348
SynchronizedRandomAccessList replaceAll                            0   0.834
LinkedList iterate for loop                                        0   0.196
LinkedList iterator().forEachRemaining()                           0   0.283
LinkedList spliterator().tryAdvance()                              0   4.688
LinkedList spliterator().forEachRemaining()                        0   0.160
LinkedList contains                                                0   0.378
LinkedList containsAll                                             0   0.129
LinkedList forEach                                                 0   0.188
LinkedList toArray()                                               0   0.127
LinkedList toArray(a)                                              0   0.086
LinkedList toArray(empty)                                          0   0.091
LinkedList stream().forEach                                        0   0.196
LinkedList stream().mapToInt                                       0   0.460
LinkedList stream().collect                                        0   0.478
LinkedList stream()::iterator                                      0   0.285
LinkedList parallelStream().forEach                                0   4.313
LinkedList parallelStream().mapToInt                               0  10.274
LinkedList parallelStream().collect                                0  10.710
LinkedList parallelStream()::iterator                              0   0.381
LinkedList removeIf                                                0   0.217
LinkedList remove(Object)                                          0   0.173
LinkedList descendingIterator() loop                               0   3.519
LinkedList descendingIterator().forEachRemaining()                 0   5.999
LinkedList listIterator forward loop                               0   0.148
LinkedList listIterator backward loop                              0   0.145
LinkedList indexOf                                                 0   0.094
LinkedList lastIndexOf                                             0   0.106
LinkedList equals                                                  0   0.351
LinkedList hashCode                                                0   0.203
LinkedList replaceAll                                              0   0.242
AbstractList$SubList iterate for loop                              0   0.302
AbstractList$SubList iterator().forEachRemaining()                 0   6.682
AbstractList$SubList spliterator().tryAdvance()                    0   0.897
AbstractList$SubList spliterator().forEachRemaining()              0   0.317
AbstractList$SubList contains                                      0   0.256
AbstractList$SubList containsAll                                   0   4.012
AbstractList$SubList forEach                                       0   0.317
AbstractList$SubList toArray()                                     0  14.874
AbstractList$SubList toArray(a)                                    0   0.243
AbstractList$SubList toArray(empty)                                0   0.171
AbstractList$SubList stream().forEach                              0   0.352
AbstractList$SubList stream().mapToInt                             0   0.551
AbstractList$SubList stream().collect                              0   0.405
AbstractList$SubList stream()::iterator                            0   0.406
AbstractList$SubList parallelStream().forEach                      0   9.632
AbstractList$SubList parallelStream().mapToInt                     0   8.277
AbstractList$SubList parallelStream().collect                      0   4.357
AbstractList$SubList parallelStream()::iterator                    0   0.549
AbstractList$SubList removeIf                                      0   0.210
AbstractList$SubList remove(Object)                                0   0.182
AbstractList$SubList listIterator forward loop                     0   0.176
AbstractList$SubList listIterator backward loop                    0   0.347
AbstractList$SubList indexOf                                       0   0.184
AbstractList$SubList lastIndexOf                                   0   0.326
AbstractList$SubList equals                                        0   0.577
AbstractList$SubList hashCode                                      0   0.333
AbstractList$SubList replaceAll                                    0   0.301
CopyOnWriteArrayList iterate for loop                              0   0.185
CopyOnWriteArrayList iterator().forEachRemaining()                 0   0.449
CopyOnWriteArrayList spliterator().tryAdvance()                    0   0.321
CopyOnWriteArrayList spliterator().forEachRemaining()              0   0.134
CopyOnWriteArrayList contains                                      0   0.890
CopyOnWriteArrayList containsAll                                   0   0.848
CopyOnWriteArrayList forEach                                       0   0.172
CopyOnWriteArrayList toArray()                                     0   0.108
CopyOnWriteArrayList toArray(a)                                    0   0.127
CopyOnWriteArrayList toArray(empty)                                0   0.088
CopyOnWriteArrayList stream().forEach                              0   0.300
CopyOnWriteArrayList stream().mapToInt                             0   0.529
CopyOnWriteArrayList stream().collect                              0   0.328
CopyOnWriteArrayList stream()::iterator                            0   0.302
CopyOnWriteArrayList parallelStream().forEach                      0   2.154
CopyOnWriteArrayList parallelStream().mapToInt                     0   4.975
CopyOnWriteArrayList parallelStream().collect                      0   3.415
CopyOnWriteArrayList parallelStream()::iterator                    0   0.392
CopyOnWriteArrayList removeIf                                      0   0.201
CopyOnWriteArrayList remove(Object)                                0   0.257
CopyOnWriteArrayList listIterator forward loop                     0   0.131
CopyOnWriteArrayList listIterator backward loop                    0   0.275
CopyOnWriteArrayList indexOf                                       0   0.272
CopyOnWriteArrayList lastIndexOf                                   0   0.126
CopyOnWriteArrayList equals                                        0   0.407
CopyOnWriteArrayList hashCode                                      0   0.226
CopyOnWriteArrayList replaceAll                                    0   0.302
COWSubList iterate for loop                                        0   4.561
COWSubList iterator().forEachRemaining()                           0   0.396
COWSubList spliterator().tryAdvance()                              0   0.377
COWSubList spliterator().forEachRemaining()                        0   0.513
COWSubList contains                                                0   0.235
COWSubList containsAll                                             0   0.274
COWSubList forEach                                                 0   0.254
COWSubList toArray()                                               0   0.149
COWSubList toArray(a)                                              0   0.236
COWSubList toArray(empty)                                          0   0.147
COWSubList stream().forEach                                        0   0.355
COWSubList stream().mapToInt                                       0   0.435
COWSubList stream().collect                                        0   0.291
COWSubList stream()::iterator                                      0   0.265
COWSubList parallelStream().forEach                                0   1.897
COWSubList parallelStream().mapToInt                               0   2.669
COWSubList parallelStream().collect                                0   3.493
COWSubList parallelStream()::iterator                              0   0.373
COWSubList removeIf                                                0   0.353
COWSubList remove(Object)                                          0   0.134
COWSubList listIterator forward loop                               0   0.286
COWSubList listIterator backward loop                              0   0.460
COWSubList indexOf                                                 0   0.095
COWSubList lastIndexOf                                             0   0.140
COWSubList equals                                                  0   0.374
COWSubList hashCode                                                0   0.204
COWSubList replaceAll                                              0   0.283
ArrayDeque iterate for loop                                        0   0.192
ArrayDeque iterator().forEachRemaining()                           0   0.454
ArrayDeque spliterator().tryAdvance()                              0   4.628
ArrayDeque spliterator().forEachRemaining()                        0   0.305
ArrayDeque contains                                                0   0.406
ArrayDeque containsAll                                             0   0.103
ArrayDeque forEach                                                 0   0.148
ArrayDeque toArray()                                               0   0.199
ArrayDeque toArray(a)                                              0   0.144
ArrayDeque toArray(empty)                                          0   0.108
ArrayDeque stream().forEach                                        0   0.225
ArrayDeque stream().mapToInt                                       0   0.559
ArrayDeque stream().collect                                        0   0.360
ArrayDeque stream()::iterator                                      0   0.313
ArrayDeque parallelStream().forEach                                0   2.807
ArrayDeque parallelStream().mapToInt                               0   3.506
ArrayDeque parallelStream().collect                                0   4.101
ArrayDeque parallelStream()::iterator                              0   0.368
ArrayDeque removeIf                                                0   0.158
ArrayDeque remove(Object)                                          0   0.098
ArrayDeque descendingIterator() loop                               0  25.762
ArrayDeque descendingIterator().forEachRemaining()                 0   0.462
PriorityQueue iterate for loop                                     0   0.210
PriorityQueue iterator().forEachRemaining()                        0   0.186
PriorityQueue spliterator().tryAdvance()                           0   3.933
PriorityQueue spliterator().forEachRemaining()                     0   0.156
PriorityQueue contains                                             0   0.207
PriorityQueue containsAll                                          0   0.139
PriorityQueue forEach                                              0   0.222
PriorityQueue toArray()                                            0   0.127
PriorityQueue toArray(a)                                           0   0.176
PriorityQueue toArray(empty)                                       0   0.162
PriorityQueue stream().forEach                                     0   0.211
PriorityQueue stream().mapToInt                                    0   0.529
PriorityQueue stream().collect                                     0   0.345
PriorityQueue stream()::iterator                                   0   0.277
PriorityQueue parallelStream().forEach                             0   9.861
PriorityQueue parallelStream().mapToInt                            0   8.278
PriorityQueue parallelStream().collect                             0   7.510
PriorityQueue parallelStream()::iterator                           0   0.847
PriorityQueue removeIf                                             0   0.529
PriorityQueue remove(Object)                                       0   0.107
ConcurrentLinkedQueue iterate for loop                             0   0.213
ConcurrentLinkedQueue iterator().forEachRemaining()                0   0.167
ConcurrentLinkedQueue spliterator().tryAdvance()                   0   4.637
ConcurrentLinkedQueue spliterator().forEachRemaining()             0   0.273
ConcurrentLinkedQueue contains                                     0   0.326
ConcurrentLinkedQueue containsAll                                  0   0.109
ConcurrentLinkedQueue forEach                                      0   0.121
ConcurrentLinkedQueue toArray()                                    0   0.171
ConcurrentLinkedQueue toArray(a)                                   0   0.246
ConcurrentLinkedQueue toArray(empty)                               0   0.115
ConcurrentLinkedQueue stream().forEach                             0   0.237
ConcurrentLinkedQueue stream().mapToInt                            0   0.575
ConcurrentLinkedQueue stream().collect                             0   0.333
ConcurrentLinkedQueue stream()::iterator                           0   0.334
ConcurrentLinkedQueue parallelStream().forEach                     0   5.523
ConcurrentLinkedQueue parallelStream().mapToInt                    0   3.905
ConcurrentLinkedQueue parallelStream().collect                     0   3.607
ConcurrentLinkedQueue parallelStream()::iterator                   0   0.374
ConcurrentLinkedQueue removeIf                                     0   0.173
ConcurrentLinkedQueue remove(Object)                               0   0.098
ConcurrentLinkedDeque iterate for loop                             0   0.367
ConcurrentLinkedDeque iterator().forEachRemaining()                0   0.249
ConcurrentLinkedDeque spliterator().tryAdvance()                   0   4.427
ConcurrentLinkedDeque spliterator().forEachRemaining()             0   0.179
ConcurrentLinkedDeque contains                                     0   0.331
ConcurrentLinkedDeque containsAll                                  0   0.108
ConcurrentLinkedDeque forEach                                      0   0.148
ConcurrentLinkedDeque toArray()                                    0   0.166
ConcurrentLinkedDeque toArray(a)                                   0   0.158
ConcurrentLinkedDeque toArray(empty)                               0   0.101
ConcurrentLinkedDeque stream().forEach                             0   0.200
ConcurrentLinkedDeque stream().mapToInt                            0   0.556
ConcurrentLinkedDeque stream().collect                             0   0.558
ConcurrentLinkedDeque stream()::iterator                           0   0.342
ConcurrentLinkedDeque parallelStream().forEach                     0   5.400
ConcurrentLinkedDeque parallelStream().mapToInt                    0   4.569
ConcurrentLinkedDeque parallelStream().collect                     0   4.692
ConcurrentLinkedDeque parallelStream()::iterator                   0   0.416
ConcurrentLinkedDeque removeIf                                     0   0.156
ConcurrentLinkedDeque remove(Object)                               0   0.108
ConcurrentLinkedDeque descendingIterator() loop                    0   3.415
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0   0.249
ArrayBlockingQueue iterate for loop                                0   0.547
ArrayBlockingQueue iterator().forEachRemaining()                   0   0.607
ArrayBlockingQueue spliterator().tryAdvance()                      0   0.570
ArrayBlockingQueue spliterator().forEachRemaining()                0   0.264
ArrayBlockingQueue contains                                        0   0.667
ArrayBlockingQueue containsAll                                     0   0.111
ArrayBlockingQueue forEach                                         0   0.152
ArrayBlockingQueue toArray()                                       0   0.193
ArrayBlockingQueue toArray(a)                                      0   0.153
ArrayBlockingQueue toArray(empty)                                  0   0.104
ArrayBlockingQueue stream().forEach                                0   0.343
ArrayBlockingQueue stream().mapToInt                               0   0.574
ArrayBlockingQueue stream().collect                                0   0.429
ArrayBlockingQueue stream()::iterator                              0   1.866
ArrayBlockingQueue parallelStream().forEach                        0   4.544
ArrayBlockingQueue parallelStream().mapToInt                       0   4.410
ArrayBlockingQueue parallelStream().collect                        0   3.936
ArrayBlockingQueue parallelStream()::iterator                      0   0.936
ArrayBlockingQueue removeIf                                        0   0.182
ArrayBlockingQueue remove(Object)                                  0   0.096
LinkedBlockingQueue iterate for loop                               0   0.267
LinkedBlockingQueue iterator().forEachRemaining()                  0   0.559
LinkedBlockingQueue spliterator().tryAdvance()                     0   4.469
LinkedBlockingQueue spliterator().forEachRemaining()               0   0.294
LinkedBlockingQueue contains                                       0   0.805
LinkedBlockingQueue containsAll                                    0   0.110
LinkedBlockingQueue forEach                                        0   0.197
LinkedBlockingQueue toArray()                                      0   0.122
LinkedBlockingQueue toArray(a)                                     0   0.110
LinkedBlockingQueue toArray(empty)                                 0   0.130
LinkedBlockingQueue stream().forEach                               0   0.273
LinkedBlockingQueue stream().mapToInt                              0   0.496
LinkedBlockingQueue stream().collect                               0   0.375
LinkedBlockingQueue stream()::iterator                             0   0.535
LinkedBlockingQueue parallelStream().forEach                       0   5.343
LinkedBlockingQueue parallelStream().mapToInt                      0   6.678
LinkedBlockingQueue parallelStream().collect                       0   6.973
LinkedBlockingQueue parallelStream()::iterator                     0   0.467
LinkedBlockingQueue removeIf                                       0   0.240
LinkedBlockingQueue remove(Object)                                 0   0.096
LinkedBlockingDeque iterate for loop                               0   0.258
LinkedBlockingDeque iterator().forEachRemaining()                  0   0.623
LinkedBlockingDeque spliterator().tryAdvance()                     8 301.161
LinkedBlockingDeque spliterator().forEachRemaining()               0   0.386
LinkedBlockingDeque contains                                       0   0.706
LinkedBlockingDeque containsAll                                    0   0.152
LinkedBlockingDeque forEach                                        0   0.221
LinkedBlockingDeque toArray()                                      0   0.129
LinkedBlockingDeque toArray(a)                                     0   0.117
LinkedBlockingDeque toArray(empty)                                 0   0.129
LinkedBlockingDeque stream().forEach                               0   0.341
LinkedBlockingDeque stream().mapToInt                              0   0.612
LinkedBlockingDeque stream().collect                               0   0.451
LinkedBlockingDeque stream()::iterator                             0   0.384
LinkedBlockingDeque parallelStream().forEach                       0   7.252
LinkedBlockingDeque parallelStream().mapToInt                      0   3.436
LinkedBlockingDeque parallelStream().collect                       0   2.438
LinkedBlockingDeque parallelStream()::iterator                     0   0.764
LinkedBlockingDeque removeIf                                       0   0.287
LinkedBlockingDeque remove(Object)                                 0   0.108
LinkedBlockingDeque descendingIterator() loop                      0   3.550
LinkedBlockingDeque descendingIterator().forEachRemaining()        0   0.395
LinkedTransferQueue iterate for loop                               0   0.213
LinkedTransferQueue iterator().forEachRemaining()                  0   0.434
LinkedTransferQueue spliterator().tryAdvance()                     0   4.691
LinkedTransferQueue spliterator().forEachRemaining()               0   0.589
LinkedTransferQueue contains                                       0   0.331
LinkedTransferQueue containsAll                                    0   0.112
LinkedTransferQueue forEach                                        0   0.182
LinkedTransferQueue toArray()                                      0   0.170
LinkedTransferQueue toArray(a)                                     0   0.345
LinkedTransferQueue toArray(empty)                                 0   0.099
LinkedTransferQueue stream().forEach                               0   0.266
LinkedTransferQueue stream().mapToInt                              0   0.597
LinkedTransferQueue stream().collect                               0   0.430
LinkedTransferQueue stream()::iterator                             0   0.358
LinkedTransferQueue parallelStream().forEach                       0   2.736
LinkedTransferQueue parallelStream().mapToInt                      8 288.852
LinkedTransferQueue parallelStream().collect                       0   4.929
LinkedTransferQueue parallelStream()::iterator                     0   0.681
LinkedTransferQueue removeIf                                       0   0.315
LinkedTransferQueue remove(Object)                                 0   0.126
PriorityBlockingQueue iterate for loop                             0   4.359
PriorityBlockingQueue iterator().forEachRemaining()                0   0.401
PriorityBlockingQueue spliterator().tryAdvance()                   0   4.309
PriorityBlockingQueue spliterator().forEachRemaining()             0   0.213
PriorityBlockingQueue contains                                     0   0.236
PriorityBlockingQueue containsAll                                  0   0.160
PriorityBlockingQueue forEach                                      0   0.231
PriorityBlockingQueue toArray()                                    0   0.074
PriorityBlockingQueue toArray(a)                                   0   0.241
PriorityBlockingQueue toArray(empty)                               0   0.200
PriorityBlockingQueue stream().forEach                             0   0.237
PriorityBlockingQueue stream().mapToInt                            0   0.553
PriorityBlockingQueue stream().collect                             0   0.840
PriorityBlockingQueue stream()::iterator                           0   0.290
PriorityBlockingQueue parallelStream().forEach                     0   2.763
PriorityBlockingQueue parallelStream().mapToInt                    0   2.653
PriorityBlockingQueue parallelStream().collect                     0   3.265
PriorityBlockingQueue parallelStream()::iterator                   0   0.305
PriorityBlockingQueue removeIf                                     0   0.363
PriorityBlockingQueue remove(Object)                               0   0.100
ListN iterate for loop                                             0   0.430
ListN iterator().forEachRemaining()                                0   0.185
ListN spliterator().tryAdvance()                                   0   0.436
ListN spliterator().forEachRemaining()                             0   0.164
ListN contains                                                     0   0.545
ListN containsAll                                                  0   0.147
ListN forEach                                                      0   0.238
ListN toArray()                                                    0   0.069
ListN toArray(a)                                                   0   0.105
ListN toArray(empty)                                               0   0.083
ListN stream().forEach                                             0   0.274
ListN stream().mapToInt                                            0   0.624
ListN stream().collect                                             0   0.351
ListN stream()::iterator                                           0   0.318
ListN parallelStream().forEach                                     0   1.979
ListN parallelStream().mapToInt                                    0   3.133
ListN parallelStream().collect                                     0   2.271
ListN parallelStream()::iterator                                   0   0.358
ListN listIterator forward loop                                    0   0.363
ListN listIterator backward loop                                   0   0.185
ListN indexOf                                                      0   0.108
ListN lastIndexOf                                                  0   0.082
ListN equals                                                       0   0.355
ListN hashCode                                                     0   0.187
ImmutableCollections$SubList iterate for loop                      0   0.512
ImmutableCollections$SubList iterator().forEachRemaining()         0   0.238
ImmutableCollections$SubList spliterator().tryAdvance()            0   0.410
ImmutableCollections$SubList spliterator().forEachRemaining()      0   0.201
ImmutableCollections$SubList contains                              0   0.385
ImmutableCollections$SubList containsAll                           0   0.183
ImmutableCollections$SubList forEach                               0   0.237
ImmutableCollections$SubList toArray()                             0   0.176
ImmutableCollections$SubList toArray(a)                            0   0.145
ImmutableCollections$SubList toArray(empty)                        0   0.433
ImmutableCollections$SubList stream().forEach                      0   0.281
ImmutableCollections$SubList stream().mapToInt                     0   0.646
ImmutableCollections$SubList stream().collect                      0   0.390
ImmutableCollections$SubList stream()::iterator                    0   0.431
ImmutableCollections$SubList parallelStream().forEach              0   1.977
ImmutableCollections$SubList parallelStream().mapToInt             0   4.960
ImmutableCollections$SubList parallelStream().collect              0   2.942
ImmutableCollections$SubList parallelStream()::iterator            0   0.415
ImmutableCollections$SubList listIterator forward loop             0   0.382
ImmutableCollections$SubList listIterator backward loop            0   0.170
ImmutableCollections$SubList indexOf                               0   0.142
ImmutableCollections$SubList lastIndexOf                           0   0.128
ImmutableCollections$SubList equals                                0   0.389
ImmutableCollections$SubList hashCode                              0   0.238
----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
