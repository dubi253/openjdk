#Test Results (version 2)
#Mon Apr 29 01:03:11 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign\\TestSegmentOverlap.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=othervm testng
run=USER_SPECIFIED testng/othervm TestSegmentOverlap\r\n
source=TestSegmentOverlap.java
title=\ 

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/foreign/TestSegmentOverlap.java
elapsed=610 0\:00\:00.610
end=Mon Apr 29 01\:03\:11 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az978-691.aqccnys5fsauxnvc2cwlk3lemf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-29-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Mon Apr 29 01\:03\:11 UTC 2024
test=java/foreign/TestSegmentOverlap.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=610
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\foreign

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/233)----------
command: build TestSegmentOverlap
reason: Named class compiled on demand
started: Mon Apr 29 01:03:11 UTC 2024
Test directory:
  compile: TestSegmentOverlap
finished: Mon Apr 29 01:03:11 UTC 2024
elapsed time (seconds): 0.047
result: Passed. Build successful

#section:compile
----------messages:(7/282)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign\\TestSegmentOverlap.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:03:11 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 01:03:11 UTC 2024
elapsed time (seconds): 0.047
----------configuration:(13/882)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\foreign\\TestSegmentOverlap.d
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3542)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/foreign/TestSegmentOverlap.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign\\TestSegmentOverlap.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\foreign\\TestSegmentOverlap.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\foreign\\TestSegmentOverlap.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\foreign\\TestSegmentOverlap.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\foreign\\TestSegmentOverlap.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\foreign\\TestSegmentOverlap.d;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign\\TestSegmentOverlap.java'
result: Passed. Compilation successful

#section:testng
----------messages:(6/253)----------
command: testng TestSegmentOverlap
reason: User specified action: run testng/othervm TestSegmentOverlap 
started: Mon Apr 29 01:03:11 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 01:03:11 UTC 2024
elapsed time (seconds): 0.563
----------configuration:(0/0)----------
----------System.out:(87/14192)----------
testBasic s1:MemorySegment{ address: 0x17e5d62ea40, byteSize: 16 }, s2:MemorySegment{ address: 0x17e5d62f640, byteSize: 16 }, sOther:MemorySegment{ heapBase: [B@1ead888a, address: 0x0, byteSize: 1 }
test TestSegmentOverlap.testBasic(TestSegmentOverlap$$Lambda/0x0000017e190cfc08@73018c16): success
testBasic s1:MemorySegment{ address: 0x17e17e40000, byteSize: 16 }, s2:MemorySegment{ address: 0x17e17e50000, byteSize: 16 }, sOther:MemorySegment{ heapBase: [B@129d75b8, address: 0x0, byteSize: 1 }
test TestSegmentOverlap.testBasic(TestSegmentOverlap$$Lambda/0x0000017e190cd000@33cdd454): success
testBasic s1:MemorySegment{ heapBase: [B@304800ac, address: 0x0, byteSize: 4 }, s2:MemorySegment{ heapBase: [B@498193a8, address: 0x0, byteSize: 4 }, sOther:MemorySegment{ address: 0x17e5d62ff60, byteSize: 16 }
test TestSegmentOverlap.testBasic(TestSegmentOverlap$$Lambda/0x0000017e190cd228@14b381b8): success
testBasic s1:MemorySegment{ heapBase: [C@764a8645, address: 0x0, byteSize: 8 }, s2:MemorySegment{ heapBase: [C@7e7c6775, address: 0x0, byteSize: 8 }, sOther:MemorySegment{ address: 0x17e5d6303c0, byteSize: 16 }
test TestSegmentOverlap.testBasic(TestSegmentOverlap$$Lambda/0x0000017e190cd450@4e35430d): success
testBasic s1:MemorySegment{ heapBase: [D@58f55622, address: 0x0, byteSize: 32 }, s2:MemorySegment{ heapBase: [D@3c3c5b1a, address: 0x0, byteSize: 32 }, sOther:MemorySegment{ address: 0x17e5d62ff40, byteSize: 16 }
test TestSegmentOverlap.testBasic(TestSegmentOverlap$$Lambda/0x0000017e190cd678@73e704e9): success
testBasic s1:MemorySegment{ heapBase: [F@644e4925, address: 0x0, byteSize: 16 }, s2:MemorySegment{ heapBase: [F@2fc5c909, address: 0x0, byteSize: 16 }, sOther:MemorySegment{ address: 0x17e5d6305a0, byteSize: 16 }
test TestSegmentOverlap.testBasic(TestSegmentOverlap$$Lambda/0x0000017e190cd8a0@768a507d): success
testBasic s1:MemorySegment{ heapBase: [I@7a77ac39, address: 0x0, byteSize: 16 }, s2:MemorySegment{ heapBase: [I@5eda12b2, address: 0x0, byteSize: 16 }, sOther:MemorySegment{ address: 0x17e5d630100, byteSize: 16 }
test TestSegmentOverlap.testBasic(TestSegmentOverlap$$Lambda/0x0000017e190cdac8@652abe22): success
testBasic s1:MemorySegment{ heapBase: [J@a995f01, address: 0x0, byteSize: 32 }, s2:MemorySegment{ heapBase: [J@3af23bde, address: 0x0, byteSize: 32 }, sOther:MemorySegment{ address: 0x17e5d6302e0, byteSize: 16 }
test TestSegmentOverlap.testBasic(TestSegmentOverlap$$Lambda/0x0000017e190cdcf0@3633b95e): success
testBasic s1:MemorySegment{ heapBase: [S@1d1879a7, address: 0x0, byteSize: 8 }, s2:MemorySegment{ heapBase: [S@364ada13, address: 0x0, byteSize: 8 }, sOther:MemorySegment{ address: 0x17e5d630260, byteSize: 16 }
test TestSegmentOverlap.testBasic(TestSegmentOverlap$$Lambda/0x0000017e190cc800@3570c59a): success
testIdentical s1:MemorySegment{ address: 0x17e5d630520, byteSize: 16 }, s2:MemorySegment{ address: 0x17e5d630520, byteSize: 16 }
test TestSegmentOverlap.testIdentical(TestSegmentOverlap$$Lambda/0x0000017e190cfc08@73018c16): success
testIdentical s1:MemorySegment{ address: 0x17e17e60000, byteSize: 16 }, s2:MemorySegment{ address: 0x17e17e60000, byteSize: 16 }
test TestSegmentOverlap.testIdentical(TestSegmentOverlap$$Lambda/0x0000017e190cd000@33cdd454): success
testIdentical s1:MemorySegment{ heapBase: [B@3daf38b3, address: 0x0, byteSize: 4 }, s2:MemorySegment{ address: 0x0, byteSize: 4 }
test TestSegmentOverlap.testIdentical(TestSegmentOverlap$$Lambda/0x0000017e190cd228@14b381b8): success
testIdentical s1:MemorySegment{ heapBase: [C@b001453, address: 0x0, byteSize: 8 }, s2:MemorySegment{ address: 0x0, byteSize: 8 }
test TestSegmentOverlap.testIdentical(TestSegmentOverlap$$Lambda/0x0000017e190cd450@4e35430d): success
testIdentical s1:MemorySegment{ heapBase: [D@7dac11e7, address: 0x0, byteSize: 32 }, s2:MemorySegment{ address: 0x0, byteSize: 32 }
test TestSegmentOverlap.testIdentical(TestSegmentOverlap$$Lambda/0x0000017e190cd678@73e704e9): success
testIdentical s1:MemorySegment{ heapBase: [F@4e51f4a7, address: 0x0, byteSize: 16 }, s2:MemorySegment{ address: 0x0, byteSize: 16 }
test TestSegmentOverlap.testIdentical(TestSegmentOverlap$$Lambda/0x0000017e190cd8a0@768a507d): success
testIdentical s1:MemorySegment{ heapBase: [I@7c2463b8, address: 0x0, byteSize: 16 }, s2:MemorySegment{ address: 0x0, byteSize: 16 }
test TestSegmentOverlap.testIdentical(TestSegmentOverlap$$Lambda/0x0000017e190cdac8@652abe22): success
testIdentical s1:MemorySegment{ heapBase: [J@3efccf03, address: 0x0, byteSize: 32 }, s2:MemorySegment{ address: 0x0, byteSize: 32 }
test TestSegmentOverlap.testIdentical(TestSegmentOverlap$$Lambda/0x0000017e190cdcf0@3633b95e): success
testIdentical s1:MemorySegment{ heapBase: [S@53983ec0, address: 0x0, byteSize: 8 }, s2:MemorySegment{ address: 0x0, byteSize: 8 }
test TestSegmentOverlap.testIdentical(TestSegmentOverlap$$Lambda/0x0000017e190cc800@3570c59a): success
testSlices s1:MemorySegment{ address: 0x17e5d630640, byteSize: 16 }, s2:MemorySegment{ address: 0x17e5d630320, byteSize: 16 }, slice:MemorySegment{ address: 0x17e5d630640, byteSize: 16 }, offset:0
testSlices s1:MemorySegment{ address: 0x17e5d630640, byteSize: 16 }, s2:MemorySegment{ address: 0x17e5d630320, byteSize: 16 }, slice:MemorySegment{ address: 0x17e5d630641, byteSize: 15 }, offset:1
testSlices s1:MemorySegment{ address: 0x17e5d630640, byteSize: 16 }, s2:MemorySegment{ address: 0x17e5d630320, byteSize: 16 }, slice:MemorySegment{ address: 0x17e5d630642, byteSize: 14 }, offset:2
testSlices s1:MemorySegment{ address: 0x17e5d630640, byteSize: 16 }, s2:MemorySegment{ address: 0x17e5d630320, byteSize: 16 }, slice:MemorySegment{ address: 0x17e5d630643, byteSize: 13 }, offset:3
test TestSegmentOverlap.testSlices(TestSegmentOverlap$$Lambda/0x0000017e190cfc08@73018c16): success
testSlices s1:MemorySegment{ address: 0x17e17e70000, byteSize: 16 }, s2:MemorySegment{ address: 0x17e17e80000, byteSize: 16 }, slice:MemorySegment{ address: 0x17e17e70000, byteSize: 16 }, offset:0
testSlices s1:MemorySegment{ address: 0x17e17e70000, byteSize: 16 }, s2:MemorySegment{ address: 0x17e17e80000, byteSize: 16 }, slice:MemorySegment{ address: 0x17e17e70001, byteSize: 15 }, offset:1
testSlices s1:MemorySegment{ address: 0x17e17e70000, byteSize: 16 }, s2:MemorySegment{ address: 0x17e17e80000, byteSize: 16 }, slice:MemorySegment{ address: 0x17e17e70002, byteSize: 14 }, offset:2
testSlices s1:MemorySegment{ address: 0x17e17e70000, byteSize: 16 }, s2:MemorySegment{ address: 0x17e17e80000, byteSize: 16 }, slice:MemorySegment{ address: 0x17e17e70003, byteSize: 13 }, offset:3
test TestSegmentOverlap.testSlices(TestSegmentOverlap$$Lambda/0x0000017e190cd000@33cdd454): success
testSlices s1:MemorySegment{ heapBase: [B@538b374c, address: 0x0, byteSize: 4 }, s2:MemorySegment{ heapBase: [B@257ba63d, address: 0x0, byteSize: 4 }, slice:MemorySegment{ heapBase: [B@538b374c, address: 0x0, byteSize: 4 }, offset:0
testSlices s1:MemorySegment{ heapBase: [B@538b374c, address: 0x0, byteSize: 4 }, s2:MemorySegment{ heapBase: [B@257ba63d, address: 0x0, byteSize: 4 }, slice:MemorySegment{ heapBase: [B@538b374c, address: 0x1, byteSize: 3 }, offset:1
testSlices s1:MemorySegment{ heapBase: [B@538b374c, address: 0x0, byteSize: 4 }, s2:MemorySegment{ heapBase: [B@257ba63d, address: 0x0, byteSize: 4 }, slice:MemorySegment{ heapBase: [B@538b374c, address: 0x2, byteSize: 2 }, offset:2
testSlices s1:MemorySegment{ heapBase: [B@538b374c, address: 0x0, byteSize: 4 }, s2:MemorySegment{ heapBase: [B@257ba63d, address: 0x0, byteSize: 4 }, slice:MemorySegment{ heapBase: [B@538b374c, address: 0x3, byteSize: 1 }, offset:3
test TestSegmentOverlap.testSlices(TestSegmentOverlap$$Lambda/0x0000017e190cd228@14b381b8): success
testSlices s1:MemorySegment{ heapBase: [C@437e5b8c, address: 0x0, byteSize: 8 }, s2:MemorySegment{ heapBase: [C@494535f8, address: 0x0, byteSize: 8 }, slice:MemorySegment{ heapBase: [C@437e5b8c, address: 0x0, byteSize: 8 }, offset:0
testSlices s1:MemorySegment{ heapBase: [C@437e5b8c, address: 0x0, byteSize: 8 }, s2:MemorySegment{ heapBase: [C@494535f8, address: 0x0, byteSize: 8 }, slice:MemorySegment{ heapBase: [C@437e5b8c, address: 0x1, byteSize: 7 }, offset:1
testSlices s1:MemorySegment{ heapBase: [C@437e5b8c, address: 0x0, byteSize: 8 }, s2:MemorySegment{ heapBase: [C@494535f8, address: 0x0, byteSize: 8 }, slice:MemorySegment{ heapBase: [C@437e5b8c, address: 0x2, byteSize: 6 }, offset:2
testSlices s1:MemorySegment{ heapBase: [C@437e5b8c, address: 0x0, byteSize: 8 }, s2:MemorySegment{ heapBase: [C@494535f8, address: 0x0, byteSize: 8 }, slice:MemorySegment{ heapBase: [C@437e5b8c, address: 0x3, byteSize: 5 }, offset:3
test TestSegmentOverlap.testSlices(TestSegmentOverlap$$Lambda/0x0000017e190cd450@4e35430d): success
testSlices s1:MemorySegment{ heapBase: [D@414043c, address: 0x0, byteSize: 32 }, s2:MemorySegment{ heapBase: [D@35078d09, address: 0x0, byteSize: 32 }, slice:MemorySegment{ heapBase: [D@414043c, address: 0x0, byteSize: 32 }, offset:0
testSlices s1:MemorySegment{ heapBase: [D@414043c, address: 0x0, byteSize: 32 }, s2:MemorySegment{ heapBase: [D@35078d09, address: 0x0, byteSize: 32 }, slice:MemorySegment{ heapBase: [D@414043c, address: 0x1, byteSize: 31 }, offset:1
testSlices s1:MemorySegment{ heapBase: [D@414043c, address: 0x0, byteSize: 32 }, s2:MemorySegment{ heapBase: [D@35078d09, address: 0x0, byteSize: 32 }, slice:MemorySegment{ heapBase: [D@414043c, address: 0x2, byteSize: 30 }, offset:2
testSlices s1:MemorySegment{ heapBase: [D@414043c, address: 0x0, byteSize: 32 }, s2:MemorySegment{ heapBase: [D@35078d09, address: 0x0, byteSize: 32 }, slice:MemorySegment{ heapBase: [D@414043c, address: 0x3, byteSize: 29 }, offset:3
test TestSegmentOverlap.testSlices(TestSegmentOverlap$$Lambda/0x0000017e190cd678@73e704e9): success
testSlices s1:MemorySegment{ heapBase: [F@5db78c96, address: 0x0, byteSize: 16 }, s2:MemorySegment{ heapBase: [F@79a656f8, address: 0x0, byteSize: 16 }, slice:MemorySegment{ heapBase: [F@5db78c96, address: 0x0, byteSize: 16 }, offset:0
testSlices s1:MemorySegment{ heapBase: [F@5db78c96, address: 0x0, byteSize: 16 }, s2:MemorySegment{ heapBase: [F@79a656f8, address: 0x0, byteSize: 16 }, slice:MemorySegment{ heapBase: [F@5db78c96, address: 0x1, byteSize: 15 }, offset:1
testSlices s1:MemorySegment{ heapBase: [F@5db78c96, address: 0x0, byteSize: 16 }, s2:MemorySegment{ heapBase: [F@79a656f8, address: 0x0, byteSize: 16 }, slice:MemorySegment{ heapBase: [F@5db78c96, address: 0x2, byteSize: 14 }, offset:2
testSlices s1:MemorySegment{ heapBase: [F@5db78c96, address: 0x0, byteSize: 16 }, s2:MemorySegment{ heapBase: [F@79a656f8, address: 0x0, byteSize: 16 }, slice:MemorySegment{ heapBase: [F@5db78c96, address: 0x3, byteSize: 13 }, offset:3
test TestSegmentOverlap.testSlices(TestSegmentOverlap$$Lambda/0x0000017e190cd8a0@768a507d): success
testSlices s1:MemorySegment{ heapBase: [I@49d16108, address: 0x0, byteSize: 16 }, s2:MemorySegment{ heapBase: [I@28e38798, address: 0x0, byteSize: 16 }, slice:MemorySegment{ heapBase: [I@49d16108, address: 0x0, byteSize: 16 }, offset:0
testSlices s1:MemorySegment{ heapBase: [I@49d16108, address: 0x0, byteSize: 16 }, s2:MemorySegment{ heapBase: [I@28e38798, address: 0x0, byteSize: 16 }, slice:MemorySegment{ heapBase: [I@49d16108, address: 0x1, byteSize: 15 }, offset:1
testSlices s1:MemorySegment{ heapBase: [I@49d16108, address: 0x0, byteSize: 16 }, s2:MemorySegment{ heapBase: [I@28e38798, address: 0x0, byteSize: 16 }, slice:MemorySegment{ heapBase: [I@49d16108, address: 0x2, byteSize: 14 }, offset:2
testSlices s1:MemorySegment{ heapBase: [I@49d16108, address: 0x0, byteSize: 16 }, s2:MemorySegment{ heapBase: [I@28e38798, address: 0x0, byteSize: 16 }, slice:MemorySegment{ heapBase: [I@49d16108, address: 0x3, byteSize: 13 }, offset:3
test TestSegmentOverlap.testSlices(TestSegmentOverlap$$Lambda/0x0000017e190cdac8@652abe22): success
testSlices s1:MemorySegment{ heapBase: [J@1496a26e, address: 0x0, byteSize: 32 }, s2:MemorySegment{ heapBase: [J@568d48d5, address: 0x0, byteSize: 32 }, slice:MemorySegment{ heapBase: [J@1496a26e, address: 0x0, byteSize: 32 }, offset:0
testSlices s1:MemorySegment{ heapBase: [J@1496a26e, address: 0x0, byteSize: 32 }, s2:MemorySegment{ heapBase: [J@568d48d5, address: 0x0, byteSize: 32 }, slice:MemorySegment{ heapBase: [J@1496a26e, address: 0x1, byteSize: 31 }, offset:1
testSlices s1:MemorySegment{ heapBase: [J@1496a26e, address: 0x0, byteSize: 32 }, s2:MemorySegment{ heapBase: [J@568d48d5, address: 0x0, byteSize: 32 }, slice:MemorySegment{ heapBase: [J@1496a26e, address: 0x2, byteSize: 30 }, offset:2
testSlices s1:MemorySegment{ heapBase: [J@1496a26e, address: 0x0, byteSize: 32 }, s2:MemorySegment{ heapBase: [J@568d48d5, address: 0x0, byteSize: 32 }, slice:MemorySegment{ heapBase: [J@1496a26e, address: 0x3, byteSize: 29 }, offset:3
test TestSegmentOverlap.testSlices(TestSegmentOverlap$$Lambda/0x0000017e190cdcf0@3633b95e): success
testSlices s1:MemorySegment{ heapBase: [S@49db9528, address: 0x0, byteSize: 8 }, s2:MemorySegment{ heapBase: [S@687fdbaf, address: 0x0, byteSize: 8 }, slice:MemorySegment{ heapBase: [S@49db9528, address: 0x0, byteSize: 8 }, offset:0
testSlices s1:MemorySegment{ heapBase: [S@49db9528, address: 0x0, byteSize: 8 }, s2:MemorySegment{ heapBase: [S@687fdbaf, address: 0x0, byteSize: 8 }, slice:MemorySegment{ heapBase: [S@49db9528, address: 0x1, byteSize: 7 }, offset:1
testSlices s1:MemorySegment{ heapBase: [S@49db9528, address: 0x0, byteSize: 8 }, s2:MemorySegment{ heapBase: [S@687fdbaf, address: 0x0, byteSize: 8 }, slice:MemorySegment{ heapBase: [S@49db9528, address: 0x2, byteSize: 6 }, offset:2
testSlices s1:MemorySegment{ heapBase: [S@49db9528, address: 0x0, byteSize: 8 }, s2:MemorySegment{ heapBase: [S@687fdbaf, address: 0x0, byteSize: 8 }, slice:MemorySegment{ heapBase: [S@49db9528, address: 0x3, byteSize: 5 }, offset:3
test TestSegmentOverlap.testSlices(TestSegmentOverlap$$Lambda/0x0000017e190cc800@3570c59a): success

===============================================
java/foreign/TestSegmentOverlap.java
Total tests run: 27, Passes: 27, Failures: 0, Skips: 0
===============================================

----------System.err:(1/16)----------
STATUS:Passed.
----------rerun:(37/3692)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
CLASSPATH='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\foreign\\TestSegmentOverlap.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/foreign/TestSegmentOverlap.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign\\TestSegmentOverlap.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\foreign\\TestSegmentOverlap.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\foreign\\TestSegmentOverlap.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\foreign\\TestSegmentOverlap.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\foreign' \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=25 \\
        '-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        '-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -XX:+CreateCoredumpOnCrash \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        '-Djava.library.path=d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        com.sun.javatest.regtest.agent.MainWrapper 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\foreign\\TestSegmentOverlap.d\\testng.0.jta' java/foreign/TestSegmentOverlap.java false TestSegmentOverlap
result: Passed. Execution successful


test result: Passed. Execution successful
