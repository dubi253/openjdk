#Test Results (version 2)
#Mon Apr 29 01:24:12 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
author=danielfuchs
keywords=bug8140364 othervm
modules=java.base/sun.util.logging java.base/jdk.internal.logger
run=USER_SPECIFIED build CustomSystemClassLoader BaseLoggerFinder BaseLoggerBridgeTest\r\nUSER_SPECIFIED main/othervm -Djava.system.class.loader\=CustomSystemClassLoader BaseLoggerBridgeTest NOSECURITY\r\nUSER_SPECIFIED main/othervm -Djava.security.manager\=allow -Djava.system.class.loader\=CustomSystemClassLoader BaseLoggerBridgeTest NOPERMISSIONS\r\nUSER_SPECIFIED main/othervm -Djava.security.manager\=allow -Djava.system.class.loader\=CustomSystemClassLoader BaseLoggerBridgeTest WITHPERMISSIONS\r\n
source=BaseLoggerBridgeTest.java
title=JDK implementation specific unit test for JDK internal artifacts.

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/lang/System/LoggerFinder/internal/BaseLoggerBridgeTest/BaseLoggerBridgeTest.java
elapsed=953 0\:00\:00.953
end=Mon Apr 29 01\:24\:12 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az978-691.aqccnys5fsauxnvc2cwlk3lemf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-29-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
modules=java.base/sun.util.logging java.base/jdk.internal.logger
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build main build main build main
start=Mon Apr 29 01\:24\:11 UTC 2024
test=java/lang/System/LoggerFinder/internal/BaseLoggerBridgeTest/BaseLoggerBridgeTest.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=953
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/386)----------
command: build CustomSystemClassLoader BaseLoggerFinder BaseLoggerBridgeTest
reason: User specified action: run build CustomSystemClassLoader BaseLoggerFinder BaseLoggerBridgeTest 
started: Mon Apr 29 01:24:11 UTC 2024
Test directory:
  compile: CustomSystemClassLoader, BaseLoggerFinder, BaseLoggerBridgeTest
finished: Mon Apr 29 01:24:11 UTC 2024
elapsed time (seconds): 0.109
result: Passed. Build successful

#section:compile
----------messages:(8/758)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\CustomSystemClassLoader.java D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerFinder.java D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:24:11 UTC 2024
Additional options from @modules: --add-modules java.base --add-exports java.base/sun.util.logging=ALL-UNNAMED --add-exports java.base/jdk.internal.logger=ALL-UNNAMED
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 01:24:11 UTC 2024
elapsed time (seconds): 0.109
----------configuration:(13/958)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\patches\\java.base

javac compilation environment
  add modules: java.base                     
  add exports: java.base/jdk.internal.logger ALL-UNNAMED
               java.base/sun.util.logging    ALL-UNNAMED
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest 
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest 
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d 

----------rerun:(40/4536)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/lang/System/LoggerFinder/internal/BaseLoggerBridgeTest/BaseLoggerBridgeTest.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -J-Dtest.modules='java.base/sun.util.logging java.base/jdk.internal.logger' \\
        --add-modules java.base \\
        --add-exports java.base/sun.util.logging=ALL-UNNAMED \\
        --add-exports java.base/jdk.internal.logger=ALL-UNNAMED \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\CustomSystemClassLoader.java' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerFinder.java' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java'
----------direct:(46/4745)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerFinder.java:35: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
        SecurityManager sm = System.getSecurityManager();
        ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerFinder.java:35: warning: [removal] getSecurityManager() in System has been deprecated and marked for removal
        SecurityManager sm = System.getSecurityManager();
                                   ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerFinder.java:40: warning: [removal] AccessController in java.security has been deprecated and marked for removal
        ClassLoader callerLoader = AccessController.doPrivileged(pa);
                                   ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java:368: warning: [removal] getSecurityManager() in System has been deprecated and marked for removal
        if (System.getSecurityManager() == null) {
                  ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java:374: warning: [removal] Policy in java.security has been deprecated and marked for removal
            Policy.setPolicy(new SimplePolicy(allowControl, allowAccess, allowAll));
            ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java:375: warning: [removal] SecurityManager in java.lang has been deprecated and marked for removal
            System.setSecurityManager(new SecurityManager());
                                          ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java:375: warning: [removal] setSecurityManager(SecurityManager) in System has been deprecated and marked for removal
            System.setSecurityManager(new SecurityManager());
                  ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java:403: warning: [removal] AccessControlException in java.security has been deprecated and marked for removal
                    } catch (AccessControlException x) {
                             ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java:449: warning: [removal] AccessControlException in java.security has been deprecated and marked for removal
        } catch (AccessControlException acx) {
                 ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java:473: warning: [removal] AccessControlException in java.security has been deprecated and marked for removal
        } catch (AccessControlException acx) {
                 ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java:516: warning: [removal] AccessControlException in java.security has been deprecated and marked for removal
        } catch (AccessControlException acx) {
                 ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java:557: warning: [removal] AccessControlException in java.security has been deprecated and marked for removal
        } catch (AccessControlException acx) {
                 ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java:979: warning: [removal] Policy in java.security has been deprecated and marked for removal
    public static class SimplePolicy extends Policy {
                                             ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java:984: warning: [removal] Policy in java.security has been deprecated and marked for removal
        static final Policy DEFAULT_POLICY = Policy.getPolicy();
                     ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java:984: warning: [removal] Policy in java.security has been deprecated and marked for removal
        static final Policy DEFAULT_POLICY = Policy.getPolicy();
                                             ^
15 warnings
result: Passed. Compilation successful

#section:build
----------messages:(5/185)----------
command: build BaseLoggerBridgeTest
reason: Named class compiled on demand
started: Mon Apr 29 01:24:11 UTC 2024
finished: Mon Apr 29 01:24:11 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:main
----------messages:(7/544)----------
command: main -Djava.system.class.loader=CustomSystemClassLoader BaseLoggerBridgeTest NOSECURITY
reason: User specified action: run main/othervm -Djava.system.class.loader=CustomSystemClassLoader BaseLoggerBridgeTest NOSECURITY 
started: Mon Apr 29 01:24:11 UTC 2024
Mode: othervm [/othervm specified]
Additional options from @modules: --add-modules java.base --add-exports java.base/sun.util.logging=ALL-UNNAMED --add-exports java.base/jdk.internal.logger=ALL-UNNAMED
finished: Mon Apr 29 01:24:11 UTC 2024
elapsed time (seconds): 0.25
----------configuration:(5/177)----------
Boot Layer
  add modules: java.base                     
  add exports: java.base/jdk.internal.logger ALL-UNNAMED
               java.base/sun.util.logging    ALL-UNNAMED

----------System.out:(76/4323)----------
[0.010s][warning][cds] Archived non-system classes are disabled because the java.system.class.loader property is specified (value = "CustomSystemClassLoader"). To use archived non-system classes, this property must not be set
Loaded BaseLoggerFinder

*** Without Security Manager

Testing PlatformLogger.Bridge.convert(System.getLogger("foo")) [jdk.internal.logger.LoggerWrapper@7ad4b71f]
	logger.log(messageLevel, fooMsg)
	logger.<level>(fooMsg)
	logger.log(messageLevel, supplier)
	logger.<level>(supplier)
	logger.log(messageLevel, format, arg1, arg2)
	logger.log(messageLevel, fooMsg, thrown)
	logger.log(messageLevel, thrown, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg)
	logger.logp(messageLevel, sourceClass, sourceMethod, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, format, arg1, arg2)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg, thrown)
	logger.logp(messageLevel, sourceClass, sourceMethod, thrown, supplier)
	logger.logrb(messageLevel, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, bundle, msg, thrown)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, msg, thrown)
Testing jdk.internal.logger.LazyLoggers.getLogger("foo", Thread.class.getModule()) [jdk.internal.logger.LazyLoggers$JdkLazyLogger@5c93a31d]
	logger.log(messageLevel, fooMsg)
	logger.<level>(fooMsg)
	logger.log(messageLevel, supplier)
	logger.<level>(supplier)
	logger.log(messageLevel, format, arg1, arg2)
	logger.log(messageLevel, fooMsg, thrown)
	logger.log(messageLevel, thrown, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg)
	logger.logp(messageLevel, sourceClass, sourceMethod, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, format, arg1, arg2)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg, thrown)
	logger.logp(messageLevel, sourceClass, sourceMethod, thrown, supplier)
	logger.logrb(messageLevel, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, bundle, msg, thrown)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, msg, thrown)
Testing System.getLogger("foo", loggerBundle) [jdk.internal.logger.LocalizedLoggerWrapper@30163206]
	logger.log(messageLevel, fooMsg)
	logger.<level>(fooMsg)
	logger.log(messageLevel, supplier)
	logger.<level>(supplier)
	logger.log(messageLevel, format, arg1, arg2)
	logger.log(messageLevel, fooMsg, thrown)
	logger.log(messageLevel, thrown, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg)
	logger.logp(messageLevel, sourceClass, sourceMethod, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, format, arg1, arg2)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg, thrown)
	logger.logp(messageLevel, sourceClass, sourceMethod, thrown, supplier)
	logger.logrb(messageLevel, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, bundle, msg, thrown)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, msg, thrown)
Testing provider.getLocalizedLogger("foo", loggerBundle, Thread.class.getModule()) [jdk.internal.logger.LocalizedLoggerWrapper@23e630b1]
	logger.log(messageLevel, fooMsg)
	logger.<level>(fooMsg)
	logger.log(messageLevel, supplier)
	logger.<level>(supplier)
	logger.log(messageLevel, format, arg1, arg2)
	logger.log(messageLevel, fooMsg, thrown)
	logger.log(messageLevel, thrown, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg)
	logger.logp(messageLevel, sourceClass, sourceMethod, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, format, arg1, arg2)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg, thrown)
	logger.logp(messageLevel, sourceClass, sourceMethod, thrown, supplier)
	logger.logrb(messageLevel, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, bundle, msg, thrown)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, msg, thrown)
Tetscase count: 3094

PASSED: Tested 3094 cases.
----------System.err:(1/16)----------
STATUS:Passed.
----------rerun:(42/4331)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
CLASSPATH='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/lang/System/LoggerFinder/internal/BaseLoggerBridgeTest/BaseLoggerBridgeTest.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -Dtest.modules='java.base/sun.util.logging java.base/jdk.internal.logger' \\
        --add-modules java.base \\
        --add-exports java.base/sun.util.logging=ALL-UNNAMED \\
        --add-exports java.base/jdk.internal.logger=ALL-UNNAMED \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=25 \\
        '-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        '-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -XX:+CreateCoredumpOnCrash \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        '-Djava.library.path=d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Djava.system.class.loader=CustomSystemClassLoader \\
        com.sun.javatest.regtest.agent.MainWrapper 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d\\main.0.jta' NOSECURITY
result: Passed. Execution successful

#section:build
----------messages:(5/185)----------
command: build BaseLoggerBridgeTest
reason: Named class compiled on demand
started: Mon Apr 29 01:24:11 UTC 2024
finished: Mon Apr 29 01:24:11 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:main
----------messages:(7/611)----------
command: main -Djava.security.manager=allow -Djava.system.class.loader=CustomSystemClassLoader BaseLoggerBridgeTest NOPERMISSIONS
reason: User specified action: run main/othervm -Djava.security.manager=allow -Djava.system.class.loader=CustomSystemClassLoader BaseLoggerBridgeTest NOPERMISSIONS 
started: Mon Apr 29 01:24:11 UTC 2024
Mode: othervm [/othervm specified]
Additional options from @modules: --add-modules java.base --add-exports java.base/sun.util.logging=ALL-UNNAMED --add-exports java.base/jdk.internal.logger=ALL-UNNAMED
finished: Mon Apr 29 01:24:12 UTC 2024
elapsed time (seconds): 0.281
----------configuration:(5/177)----------
Boot Layer
  add modules: java.base                     
  add exports: java.base/jdk.internal.logger ALL-UNNAMED
               java.base/sun.util.logging    ALL-UNNAMED

----------System.out:(47/2918)----------
[0.009s][warning][cds] Archived non-system classes are disabled because the java.system.class.loader property is specified (value = "CustomSystemClassLoader"). To use archived non-system classes, this property must not be set
Loaded BaseLoggerFinder

*** With Security Manager, without permissions

debug: Setting security manager
Got expected exception for logger: java.security.AccessControlException: access denied ("java.lang.RuntimePermission" "loggerFinder")
Got expected exception for system logger: java.security.AccessControlException: access denied ("java.lang.RuntimePermission" "loggerFinder")
Testing PlatformLogger.Bridge.convert(System.getLogger("foo")) [jdk.internal.logger.LoggerWrapper@572f40e8]
	logger.log(messageLevel, fooMsg)
	logger.<level>(fooMsg)
	logger.log(messageLevel, supplier)
	logger.<level>(supplier)
	logger.log(messageLevel, format, arg1, arg2)
	logger.log(messageLevel, fooMsg, thrown)
	logger.log(messageLevel, thrown, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg)
	logger.logp(messageLevel, sourceClass, sourceMethod, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, format, arg1, arg2)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg, thrown)
	logger.logp(messageLevel, sourceClass, sourceMethod, thrown, supplier)
	logger.logrb(messageLevel, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, bundle, msg, thrown)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, msg, thrown)
Got expected exception for system logger: java.security.AccessControlException: access denied ("java.lang.RuntimePermission" "loggerFinder")
Testing System.getLogger("foo", loggerBundle) [jdk.internal.logger.LocalizedLoggerWrapper@44753569]
	logger.log(messageLevel, fooMsg)
	logger.<level>(fooMsg)
	logger.log(messageLevel, supplier)
	logger.<level>(supplier)
	logger.log(messageLevel, format, arg1, arg2)
	logger.log(messageLevel, fooMsg, thrown)
	logger.log(messageLevel, thrown, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg)
	logger.logp(messageLevel, sourceClass, sourceMethod, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, format, arg1, arg2)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg, thrown)
	logger.logp(messageLevel, sourceClass, sourceMethod, thrown, supplier)
	logger.logrb(messageLevel, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, bundle, msg, thrown)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, msg, thrown)
Got expected exception for localized system logger: java.security.AccessControlException: access denied ("java.lang.RuntimePermission" "loggerFinder")
Tetscase count: 1547

PASSED: Tested 1547 cases.
----------System.err:(5/506)----------
WARNING: A terminally deprecated method in java.lang.System has been called
WARNING: System::setSecurityManager has been called by BaseLoggerBridgeTest (file:/D:/a/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/java/lang/System/LoggerFinder/internal/BaseLoggerBridgeTest/BaseLoggerBridgeTest.d/)
WARNING: Please consider reporting this to the maintainers of BaseLoggerBridgeTest
WARNING: System::setSecurityManager will be removed in a future release
STATUS:Passed.
----------rerun:(43/4376)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
CLASSPATH='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/lang/System/LoggerFinder/internal/BaseLoggerBridgeTest/BaseLoggerBridgeTest.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -Dtest.modules='java.base/sun.util.logging java.base/jdk.internal.logger' \\
        --add-modules java.base \\
        --add-exports java.base/sun.util.logging=ALL-UNNAMED \\
        --add-exports java.base/jdk.internal.logger=ALL-UNNAMED \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=25 \\
        '-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        '-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -XX:+CreateCoredumpOnCrash \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        '-Djava.library.path=d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Djava.security.manager=allow \\
        -Djava.system.class.loader=CustomSystemClassLoader \\
        com.sun.javatest.regtest.agent.MainWrapper 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d\\main.1.jta' NOPERMISSIONS
result: Passed. Execution successful

#section:build
----------messages:(5/185)----------
command: build BaseLoggerBridgeTest
reason: Named class compiled on demand
started: Mon Apr 29 01:24:12 UTC 2024
finished: Mon Apr 29 01:24:12 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:main
----------messages:(7/615)----------
command: main -Djava.security.manager=allow -Djava.system.class.loader=CustomSystemClassLoader BaseLoggerBridgeTest WITHPERMISSIONS
reason: User specified action: run main/othervm -Djava.security.manager=allow -Djava.system.class.loader=CustomSystemClassLoader BaseLoggerBridgeTest WITHPERMISSIONS 
started: Mon Apr 29 01:24:12 UTC 2024
Mode: othervm [/othervm specified]
Additional options from @modules: --add-modules java.base --add-exports java.base/sun.util.logging=ALL-UNNAMED --add-exports java.base/jdk.internal.logger=ALL-UNNAMED
finished: Mon Apr 29 01:24:12 UTC 2024
elapsed time (seconds): 0.313
----------configuration:(5/177)----------
Boot Layer
  add modules: java.base                     
  add exports: java.base/jdk.internal.logger ALL-UNNAMED
               java.base/sun.util.logging    ALL-UNNAMED

----------System.out:(76/4356)----------
[0.009s][warning][cds] Archived non-system classes are disabled because the java.system.class.loader property is specified (value = "CustomSystemClassLoader"). To use archived non-system classes, this property must not be set
Loaded BaseLoggerFinder

*** With Security Manager, with control permission

debug: Setting security manager
Testing PlatformLogger.Bridge.convert(System.getLogger("foo")) [jdk.internal.logger.LoggerWrapper@3795c5aa]
	logger.log(messageLevel, fooMsg)
	logger.<level>(fooMsg)
	logger.log(messageLevel, supplier)
	logger.<level>(supplier)
	logger.log(messageLevel, format, arg1, arg2)
	logger.log(messageLevel, fooMsg, thrown)
	logger.log(messageLevel, thrown, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg)
	logger.logp(messageLevel, sourceClass, sourceMethod, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, format, arg1, arg2)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg, thrown)
	logger.logp(messageLevel, sourceClass, sourceMethod, thrown, supplier)
	logger.logrb(messageLevel, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, bundle, msg, thrown)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, msg, thrown)
Testing jdk.internal.logger.LazyLoggers.getLogger("foo", Thread.class.getModule()) [jdk.internal.logger.LazyLoggers$JdkLazyLogger@1017fb6d]
	logger.log(messageLevel, fooMsg)
	logger.<level>(fooMsg)
	logger.log(messageLevel, supplier)
	logger.<level>(supplier)
	logger.log(messageLevel, format, arg1, arg2)
	logger.log(messageLevel, fooMsg, thrown)
	logger.log(messageLevel, thrown, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg)
	logger.logp(messageLevel, sourceClass, sourceMethod, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, format, arg1, arg2)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg, thrown)
	logger.logp(messageLevel, sourceClass, sourceMethod, thrown, supplier)
	logger.logrb(messageLevel, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, bundle, msg, thrown)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, msg, thrown)
Testing System.getLogger("foo", loggerBundle) [jdk.internal.logger.LocalizedLoggerWrapper@3c00b132]
	logger.log(messageLevel, fooMsg)
	logger.<level>(fooMsg)
	logger.log(messageLevel, supplier)
	logger.<level>(supplier)
	logger.log(messageLevel, format, arg1, arg2)
	logger.log(messageLevel, fooMsg, thrown)
	logger.log(messageLevel, thrown, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg)
	logger.logp(messageLevel, sourceClass, sourceMethod, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, format, arg1, arg2)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg, thrown)
	logger.logp(messageLevel, sourceClass, sourceMethod, thrown, supplier)
	logger.logrb(messageLevel, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, bundle, msg, thrown)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, msg, thrown)
Testing provider.getLocalizedLogger("foo", loggerBundle, Thread.class.getModule()) [jdk.internal.logger.LocalizedLoggerWrapper@62a255a1]
	logger.log(messageLevel, fooMsg)
	logger.<level>(fooMsg)
	logger.log(messageLevel, supplier)
	logger.<level>(supplier)
	logger.log(messageLevel, format, arg1, arg2)
	logger.log(messageLevel, fooMsg, thrown)
	logger.log(messageLevel, thrown, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg)
	logger.logp(messageLevel, sourceClass, sourceMethod, supplier)
	logger.logp(messageLevel, sourceClass, sourceMethod, format, arg1, arg2)
	logger.logp(messageLevel, sourceClass, sourceMethod, fooMsg, thrown)
	logger.logp(messageLevel, sourceClass, sourceMethod, thrown, supplier)
	logger.logrb(messageLevel, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, bundle, msg, thrown)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, format, arg1, arg2)
	logger.logrb(messageLevel, sourceClass, sourceMethod, bundle, msg, thrown)

PASSED: Tested 3094 cases.
----------System.err:(5/506)----------
WARNING: A terminally deprecated method in java.lang.System has been called
WARNING: System::setSecurityManager has been called by BaseLoggerBridgeTest (file:/D:/a/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/java/lang/System/LoggerFinder/internal/BaseLoggerBridgeTest/BaseLoggerBridgeTest.d/)
WARNING: Please consider reporting this to the maintainers of BaseLoggerBridgeTest
WARNING: System::setSecurityManager will be removed in a future release
STATUS:Passed.
----------rerun:(43/4378)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
CLASSPATH='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/lang/System/LoggerFinder/internal/BaseLoggerBridgeTest/BaseLoggerBridgeTest.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest' \\
        -Dtest.modules='java.base/sun.util.logging java.base/jdk.internal.logger' \\
        --add-modules java.base \\
        --add-exports java.base/sun.util.logging=ALL-UNNAMED \\
        --add-exports java.base/jdk.internal.logger=ALL-UNNAMED \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=25 \\
        '-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        '-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -XX:+CreateCoredumpOnCrash \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        '-Djava.library.path=d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Djava.security.manager=allow \\
        -Djava.system.class.loader=CustomSystemClassLoader \\
        com.sun.javatest.regtest.agent.MainWrapper 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\lang\\System\\LoggerFinder\\internal\\BaseLoggerBridgeTest\\BaseLoggerBridgeTest.d\\main.2.jta' WITHPERMISSIONS
result: Passed. Execution successful


test result: Passed. Execution successful
