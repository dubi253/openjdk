#Test Results (version 2)
#Mon Apr 29 01:22:22 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString\\RegionMatches.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8077559 bug8248655 bug8264544 othervm testng
run=USER_SPECIFIED testng/othervm -XX\:+CompactStrings RegionMatches\r\nUSER_SPECIFIED testng/othervm -XX\:-CompactStrings RegionMatches\r\n
source=RegionMatches.java
title=Tests Compact String.

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/lang/String/CompactString/RegionMatches.java
elapsed=1377 0\:00\:01.377
end=Mon Apr 29 01\:22\:22 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az978-691.aqccnys5fsauxnvc2cwlk3lemf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-29-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng build testng
start=Mon Apr 29 01\:22\:20 UTC 2024
test=java/lang/String/CompactString/RegionMatches.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=1377
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\lang\\String\\CompactString

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/223)----------
command: build RegionMatches
reason: Named class compiled on demand
started: Mon Apr 29 01:22:20 UTC 2024
Test directory:
  compile: RegionMatches
finished: Mon Apr 29 01:22:20 UTC 2024
elapsed time (seconds): 0.032
result: Passed. Build successful

#section:compile
----------messages:(7/297)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString\\RegionMatches.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:22:20 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 01:22:20 UTC 2024
elapsed time (seconds): 0.032
----------configuration:(13/937)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3760)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/lang/String/CompactString/RegionMatches.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString\\RegionMatches.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString\\RegionMatches.java'
result: Passed. Compilation successful

#section:testng
----------messages:(6/283)----------
command: testng -XX:+CompactStrings RegionMatches
reason: User specified action: run testng/othervm -XX:+CompactStrings RegionMatches 
started: Mon Apr 29 01:22:20 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 01:22:21 UTC 2024
elapsed time (seconds): 0.641
----------configuration:(0/0)----------
----------System.out:(110/8736)*----------
====== The platform's default charset is "UTF-8", we're using "UTF-8" for testing.
config CompactString.setUp(): success
test RegionMatches.testRegionMatches("", true, 0, "", 0, 0, true): success
test RegionMatches.testRegionMatches("", true, 0, "", 0, 1, false): success
test RegionMatches.testRegionMatches("", true, 0, "A", 0, 0, true): success
test RegionMatches.testRegionMatches("", true, 0, "", 0, 0, true): success
test RegionMatches.testRegionMatches("", true, 0, "", 0, 1, false): success
test RegionMatches.testRegionMatches("A", false, 0, "a", 0, 1, false): success
test RegionMatches.testRegionMatches("A", false, 0, "BA", 1, 1, true): success
test RegionMatches.testRegionMatches("A", false, 0, "Ba", 1, 1, false): success
test RegionMatches.testRegionMatches("A", true, 0, "a", 0, 1, true): success
test RegionMatches.testRegionMatches("A", true, 0, "BA", 1, 1, true): success
test RegionMatches.testRegionMatches("A", true, 0, "Ba", 1, 1, true): success
test RegionMatches.testRegionMatches("AB", true, 1, "b", 0, 1, true): success
test RegionMatches.testRegionMatches("AB", true, 1, "B", 0, 1, true): success
test RegionMatches.testRegionMatches("AB", true, 0, "xaBc", 1, 2, true): success
test RegionMatches.testRegionMatches("AB", false, 0, "AB", 0, 2, true): success
test RegionMatches.testRegionMatches("AB", false, 0, "Ab", 0, 2, false): success
test RegionMatches.testRegionMatches("AB", false, 1, "BAB", 2, 1, true): success
test RegionMatches.testRegionMatches("ABCDEFGH", true, 1, "bCdEF", 0, 5, true): success
test RegionMatches.testRegionMatches("ABCDEFGH", false, 2, "CDEFG", 0, 5, true): success
test RegionMatches.testRegionMatches("ABCDEFGH", true, 2, "CDEFg", 0, 5, true): success
test RegionMatches.testRegionMatches("?", true, 0, "?", 0, 1, true): success
test RegionMatches.testRegionMatches("?", false, 0, "?", 0, 1, false): success
test RegionMatches.testRegionMatches("?A?A?A?A?A", true, 0, "?a?", 0, 3, true): success
test RegionMatches.testRegionMatches("?A?A?A?A?A", false, 0, "?a?", 0, 3, false): success
test RegionMatches.testRegionMatches("???A", true, 0, "??", 0, 4, true): success
test RegionMatches.testRegionMatches("???A", true, 1, "??", 0, 2, true): success
test RegionMatches.testRegionMatches("???A", true, 1, "?", 0, 1, false): success
test RegionMatches.testRegionMatches("???A", true, 4, "?", 0, 1, true): success
test RegionMatches.testRegionMatches("???A", true, 5, "A", 0, 1, true): success
test RegionMatches.testRegionMatches("???A", true, 0, "???A", 0, 2, false): success
test RegionMatches.testRegionMatches("???a", false, 0, "??", 0, 4, true): success
test RegionMatches.testRegionMatches("???a", true, 0, "??", 0, 4, true): success
test RegionMatches.testRegionMatches("???a", true, 1, "??", 0, 2, true): success
test RegionMatches.testRegionMatches("???a", true, 1, "?", 0, 1, false): success
test RegionMatches.testRegionMatches("???a", true, 1, "??", 0, 2, false): success
test RegionMatches.testRegionMatches("???a", true, 4, "?", 0, 1, true): success
test RegionMatches.testRegionMatches("???a", false, 4, "?", 0, 1, false): success
test RegionMatches.testRegionMatches("???a", false, 4, "?", 0, 1, true): success
test RegionMatches.testRegionMatches("?", false, 0, "i", 0, 1, false): success
test RegionMatches.testRegionMatches("?", true, 0, "i", 0, 1, true): success
test RegionMatches.testRegionMatches("?", false, 0, "I", 0, 1, false): success
test RegionMatches.testRegionMatches("?", true, 0, "I", 0, 1, true): success
test RegionMatches.testRegionMatches("?", false, 0, "i", 0, 1, false): success
test RegionMatches.testRegionMatches("?", true, 0, "i", 0, 1, true): success
test RegionMatches.testRegionMatches("?", false, 0, "I", 0, 1, false): success
test RegionMatches.testRegionMatches("?", true, 0, "I", 0, 1, true): success
test RegionMatches.testRegionMatches("A", true, 0, "a", 0, 1, true): success
test RegionMatches.testRegionMatches("B", true, 0, "b", 0, 1, true): success
test RegionMatches.testRegionMatches("C", true, 0, "c", 0, 1, true): success
test RegionMatches.testRegionMatches("D", true, 0, "d", 0, 1, true): success
test RegionMatches.testRegionMatches("E", true, 0, "e", 0, 1, true): success
test RegionMatches.testRegionMatches("F", true, 0, "f", 0, 1, true): success
test RegionMatches.testRegionMatches("G", true, 0, "g", 0, 1, true): success
test RegionMatches.testRegionMatches("H", true, 0, "h", 0, 1, true): success
test RegionMatches.testRegionMatches("I", true, 0, "i", 0, 1, true): success
test RegionMatches.testRegionMatches("J", true, 0, "j", 0, 1, true): success
test RegionMatches.testRegionMatches("K", true, 0, "k", 0, 1, true): success
test RegionMatches.testRegionMatches("L", true, 0, "l", 0, 1, true): success
test RegionMatches.testRegionMatches("M", true, 0, "m", 0, 1, true): success
test RegionMatches.testRegionMatches("N", true, 0, "n", 0, 1, true): success
test RegionMatches.testRegionMatches("O", true, 0, "o", 0, 1, true): success
test RegionMatches.testRegionMatches("P", true, 0, "p", 0, 1, true): success
test RegionMatches.testRegionMatches("Q", true, 0, "q", 0, 1, true): success
test RegionMatches.testRegionMatches("R", true, 0, "r", 0, 1, true): success
test RegionMatches.testRegionMatches("S", true, 0, "s", 0, 1, true): success
test RegionMatches.testRegionMatches("T", true, 0, "t", 0, 1, true): success
test RegionMatches.testRegionMatches("U", true, 0, "u", 0, 1, true): success
test RegionMatches.testRegionMatches("V", true, 0, "v", 0, 1, true): success
test RegionMatches.testRegionMatches("W", true, 0, "w", 0, 1, true): success
test RegionMatches.testRegionMatches("X", true, 0, "x", 0, 1, true): success
test RegionMatches.testRegionMatches("Y", true, 0, "y", 0, 1, true): success
test RegionMatches.testRegionMatches("Z", true, 0, "z", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success

===============================================
java/lang/String/CompactString/RegionMatches.java
Total tests run: 102, Passes: 102, Failures: 0, Skips: 0
===============================================

----------System.err:(1/16)----------
STATUS:Passed.
----------rerun:(38/3915)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
CLASSPATH='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/lang/String/CompactString/RegionMatches.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString\\RegionMatches.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString' \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=25 \\
        '-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        '-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -XX:+CreateCoredumpOnCrash \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        '-Djava.library.path=d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -XX:+CompactStrings \\
        com.sun.javatest.regtest.agent.MainWrapper 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\lang\\String\\CompactString\\RegionMatches.d\\testng.0.jta' java/lang/String/CompactString/RegionMatches.java false RegionMatches
result: Passed. Execution successful

#section:build
----------messages:(5/178)----------
command: build RegionMatches
reason: Named class compiled on demand
started: Mon Apr 29 01:22:21 UTC 2024
finished: Mon Apr 29 01:22:21 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:testng
----------messages:(6/283)----------
command: testng -XX:-CompactStrings RegionMatches
reason: User specified action: run testng/othervm -XX:-CompactStrings RegionMatches 
started: Mon Apr 29 01:22:21 UTC 2024
Mode: othervm [/othervm specified]
finished: Mon Apr 29 01:22:22 UTC 2024
elapsed time (seconds): 0.704
----------configuration:(0/0)----------
----------System.out:(110/8736)*----------
====== The platform's default charset is "UTF-8", we're using "UTF-8" for testing.
config CompactString.setUp(): success
test RegionMatches.testRegionMatches("", true, 0, "", 0, 0, true): success
test RegionMatches.testRegionMatches("", true, 0, "", 0, 1, false): success
test RegionMatches.testRegionMatches("", true, 0, "A", 0, 0, true): success
test RegionMatches.testRegionMatches("", true, 0, "", 0, 0, true): success
test RegionMatches.testRegionMatches("", true, 0, "", 0, 1, false): success
test RegionMatches.testRegionMatches("A", false, 0, "a", 0, 1, false): success
test RegionMatches.testRegionMatches("A", false, 0, "BA", 1, 1, true): success
test RegionMatches.testRegionMatches("A", false, 0, "Ba", 1, 1, false): success
test RegionMatches.testRegionMatches("A", true, 0, "a", 0, 1, true): success
test RegionMatches.testRegionMatches("A", true, 0, "BA", 1, 1, true): success
test RegionMatches.testRegionMatches("A", true, 0, "Ba", 1, 1, true): success
test RegionMatches.testRegionMatches("AB", true, 1, "b", 0, 1, true): success
test RegionMatches.testRegionMatches("AB", true, 1, "B", 0, 1, true): success
test RegionMatches.testRegionMatches("AB", true, 0, "xaBc", 1, 2, true): success
test RegionMatches.testRegionMatches("AB", false, 0, "AB", 0, 2, true): success
test RegionMatches.testRegionMatches("AB", false, 0, "Ab", 0, 2, false): success
test RegionMatches.testRegionMatches("AB", false, 1, "BAB", 2, 1, true): success
test RegionMatches.testRegionMatches("ABCDEFGH", true, 1, "bCdEF", 0, 5, true): success
test RegionMatches.testRegionMatches("ABCDEFGH", false, 2, "CDEFG", 0, 5, true): success
test RegionMatches.testRegionMatches("ABCDEFGH", true, 2, "CDEFg", 0, 5, true): success
test RegionMatches.testRegionMatches("?", true, 0, "?", 0, 1, true): success
test RegionMatches.testRegionMatches("?", false, 0, "?", 0, 1, false): success
test RegionMatches.testRegionMatches("?A?A?A?A?A", true, 0, "?a?", 0, 3, true): success
test RegionMatches.testRegionMatches("?A?A?A?A?A", false, 0, "?a?", 0, 3, false): success
test RegionMatches.testRegionMatches("???A", true, 0, "??", 0, 4, true): success
test RegionMatches.testRegionMatches("???A", true, 1, "??", 0, 2, true): success
test RegionMatches.testRegionMatches("???A", true, 1, "?", 0, 1, false): success
test RegionMatches.testRegionMatches("???A", true, 4, "?", 0, 1, true): success
test RegionMatches.testRegionMatches("???A", true, 5, "A", 0, 1, true): success
test RegionMatches.testRegionMatches("???A", true, 0, "???A", 0, 2, false): success
test RegionMatches.testRegionMatches("???a", false, 0, "??", 0, 4, true): success
test RegionMatches.testRegionMatches("???a", true, 0, "??", 0, 4, true): success
test RegionMatches.testRegionMatches("???a", true, 1, "??", 0, 2, true): success
test RegionMatches.testRegionMatches("???a", true, 1, "?", 0, 1, false): success
test RegionMatches.testRegionMatches("???a", true, 1, "??", 0, 2, false): success
test RegionMatches.testRegionMatches("???a", true, 4, "?", 0, 1, true): success
test RegionMatches.testRegionMatches("???a", false, 4, "?", 0, 1, false): success
test RegionMatches.testRegionMatches("???a", false, 4, "?", 0, 1, true): success
test RegionMatches.testRegionMatches("?", false, 0, "i", 0, 1, false): success
test RegionMatches.testRegionMatches("?", true, 0, "i", 0, 1, true): success
test RegionMatches.testRegionMatches("?", false, 0, "I", 0, 1, false): success
test RegionMatches.testRegionMatches("?", true, 0, "I", 0, 1, true): success
test RegionMatches.testRegionMatches("?", false, 0, "i", 0, 1, false): success
test RegionMatches.testRegionMatches("?", true, 0, "i", 0, 1, true): success
test RegionMatches.testRegionMatches("?", false, 0, "I", 0, 1, false): success
test RegionMatches.testRegionMatches("?", true, 0, "I", 0, 1, true): success
test RegionMatches.testRegionMatches("A", true, 0, "a", 0, 1, true): success
test RegionMatches.testRegionMatches("B", true, 0, "b", 0, 1, true): success
test RegionMatches.testRegionMatches("C", true, 0, "c", 0, 1, true): success
test RegionMatches.testRegionMatches("D", true, 0, "d", 0, 1, true): success
test RegionMatches.testRegionMatches("E", true, 0, "e", 0, 1, true): success
test RegionMatches.testRegionMatches("F", true, 0, "f", 0, 1, true): success
test RegionMatches.testRegionMatches("G", true, 0, "g", 0, 1, true): success
test RegionMatches.testRegionMatches("H", true, 0, "h", 0, 1, true): success
test RegionMatches.testRegionMatches("I", true, 0, "i", 0, 1, true): success
test RegionMatches.testRegionMatches("J", true, 0, "j", 0, 1, true): success
test RegionMatches.testRegionMatches("K", true, 0, "k", 0, 1, true): success
test RegionMatches.testRegionMatches("L", true, 0, "l", 0, 1, true): success
test RegionMatches.testRegionMatches("M", true, 0, "m", 0, 1, true): success
test RegionMatches.testRegionMatches("N", true, 0, "n", 0, 1, true): success
test RegionMatches.testRegionMatches("O", true, 0, "o", 0, 1, true): success
test RegionMatches.testRegionMatches("P", true, 0, "p", 0, 1, true): success
test RegionMatches.testRegionMatches("Q", true, 0, "q", 0, 1, true): success
test RegionMatches.testRegionMatches("R", true, 0, "r", 0, 1, true): success
test RegionMatches.testRegionMatches("S", true, 0, "s", 0, 1, true): success
test RegionMatches.testRegionMatches("T", true, 0, "t", 0, 1, true): success
test RegionMatches.testRegionMatches("U", true, 0, "u", 0, 1, true): success
test RegionMatches.testRegionMatches("V", true, 0, "v", 0, 1, true): success
test RegionMatches.testRegionMatches("W", true, 0, "w", 0, 1, true): success
test RegionMatches.testRegionMatches("X", true, 0, "x", 0, 1, true): success
test RegionMatches.testRegionMatches("Y", true, 0, "y", 0, 1, true): success
test RegionMatches.testRegionMatches("Z", true, 0, "z", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success
test RegionMatches.testRegionMatches("\ufffd", true, 0, "\ufffd", 0, 1, true): success

===============================================
java/lang/String/CompactString/RegionMatches.java
Total tests run: 102, Passes: 102, Failures: 0, Skips: 0
===============================================

----------System.err:(1/16)----------
STATUS:Passed.
----------rerun:(38/3915)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
CLASSPATH='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/lang/String/CompactString/RegionMatches.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString\\RegionMatches.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\CompactString\\RegionMatches.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\CompactString' \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=25 \\
        '-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        '-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -XX:+CreateCoredumpOnCrash \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        '-Djava.library.path=d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -XX:-CompactStrings \\
        com.sun.javatest.regtest.agent.MainWrapper 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\lang\\String\\CompactString\\RegionMatches.d\\testng.1.jta' java/lang/String/CompactString/RegionMatches.java false RegionMatches
result: Passed. Execution successful


test result: Passed. Execution successful
