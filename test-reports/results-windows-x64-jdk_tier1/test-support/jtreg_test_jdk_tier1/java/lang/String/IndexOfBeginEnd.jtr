#Test Results (version 2)
#Mon Apr 29 01:23:02 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\IndexOfBeginEnd.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8302590 bug8303648 testng
run=USER_SPECIFIED testng IndexOfBeginEnd\r\n
source=IndexOfBeginEnd.java
title=This one is for String.indexOf([int|String],int,int).

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/lang/String/IndexOfBeginEnd.java
elapsed=484 0\:00\:00.484
end=Mon Apr 29 01\:23\:02 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az978-691.aqccnys5fsauxnvc2cwlk3lemf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-29-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Mon Apr 29 01\:23\:02 UTC 2024
test=java/lang/String/IndexOfBeginEnd.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=484
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\lang\\String

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/227)----------
command: build IndexOfBeginEnd
reason: Named class compiled on demand
started: Mon Apr 29 01:23:02 UTC 2024
Test directory:
  compile: IndexOfBeginEnd
finished: Mon Apr 29 01:23:02 UTC 2024
elapsed time (seconds): 0.031
result: Passed. Build successful

#section:compile
----------messages:(7/284)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\IndexOfBeginEnd.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:23:02 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 01:23:02 UTC 2024
elapsed time (seconds): 0.031
----------configuration:(13/894)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\IndexOfBeginEnd.d
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3582)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/lang/String/IndexOfBeginEnd.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\IndexOfBeginEnd.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\IndexOfBeginEnd.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\IndexOfBeginEnd.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\IndexOfBeginEnd.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\IndexOfBeginEnd.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\IndexOfBeginEnd.d;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\IndexOfBeginEnd.java'
result: Passed. Compilation successful

#section:testng
----------messages:(7/232)----------
command: testng IndexOfBeginEnd
reason: User specified action: run testng IndexOfBeginEnd 
started: Mon Apr 29 01:23:02 UTC 2024
Mode: agentvm
Agent id: 25
finished: Mon Apr 29 01:23:02 UTC 2024
elapsed time (seconds): 0.453
----------configuration:(13/882)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\IndexOfBeginEnd.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String

----------rerun:(28/3140)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/lang/String/IndexOfBeginEnd.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String\\IndexOfBeginEnd.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\IndexOfBeginEnd.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\IndexOfBeginEnd.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\IndexOfBeginEnd.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\lang\\String\\IndexOfBeginEnd.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\lang\\String;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/lang/String/IndexOfBeginEnd.java false IndexOfBeginEnd
----------System.out:(238/26850)*----------
test IndexOfBeginEnd.testIndexOf("ABABABABAB", A, -1, 0): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", A, 0, 100): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", A, -1, 100): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", A, 3, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", A, -1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", A, 0, 100): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", A, -1, 100): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", A, 3, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A", A, -1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A", A, 0, 100): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A", A, -1, 100): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A", A, 3, 1): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1", A, -1, 0): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1", A, 0, 100): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1", A, -1, 100): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1", A, 3, 1): success
test IndexOfBeginEnd.testIndexOf("", 90, 0, 0, -1): success
test IndexOfBeginEnd.testIndexOf("A", 65, 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("A", 65, 1, 1, -1): success
test IndexOfBeginEnd.testIndexOf("A", 90, 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("AB", 65, 0, 2, 0): success
test IndexOfBeginEnd.testIndexOf("AB", 65, 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("AB", 65, 1, 1, -1): success
test IndexOfBeginEnd.testIndexOf("AB", 65, 1, 2, -1): success
test IndexOfBeginEnd.testIndexOf("AB", 66, 0, 2, 1): success
test IndexOfBeginEnd.testIndexOf("AB", 66, 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("AB", 66, 1, 1, -1): success
test IndexOfBeginEnd.testIndexOf("AB", 66, 1, 2, 1): success
test IndexOfBeginEnd.testIndexOf("AB", 66, 2, 2, -1): success
test IndexOfBeginEnd.testIndexOf("AB", 90, 0, 2, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", 65, 0, 4, 0): success
test IndexOfBeginEnd.testIndexOf("ABCD", 65, 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("ABCD", 65, 1, 4, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", 68, 0, 4, 3): success
test IndexOfBeginEnd.testIndexOf("ABCD", 68, 0, 3, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", 68, 3, 4, 3): success
test IndexOfBeginEnd.testIndexOf("ABCD", 68, 4, 4, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", 90, 0, 4, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", 65, 0, 8, 0): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", 65, 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", 65, 1, 1, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", 65, 1, 8, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", 72, 0, 8, 7): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", 72, 0, 7, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", 72, 7, 8, 7): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", 72, 8, 8, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", 90, 0, 8, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1", 65313, 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1", 65313, 0, 0, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1", 65313, 1, 1, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1", 65, 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65313, 0, 2, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65313, 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65313, 1, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65314, 0, 2, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65314, 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65314, 1, 2, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65314, 2, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65338, 0, 2, -1): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", 65, 0, 10, 0): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", 65, 1, 3, 2): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", 65, 3, 3, -1): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", 65, 3, 5, 4): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", 66, 0, 10, 1): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", 66, 2, 4, 3): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", 66, 4, 6, 5): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", 65, 0, 2, 0): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", 65, 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", 65, 1, 2, -1): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", 65, 2, 2, -1): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", 65313, 0, 2, 1): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", 65313, 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", 65313, 1, 2, 1): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", 65313, 2, 2, -1): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", 65338, 0, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", 65313, 0, 2, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", 65313, 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", 65313, 1, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", 65313, 2, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", 65, 0, 2, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", 65, 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", 65, 1, 2, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", 65, 2, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", 65338, 0, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65313, 0, 10, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65313, 1, 3, 2): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65313, 3, 3, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65313, 3, 5, 4): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65314, 0, 10, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65314, 2, 4, 3): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 65314, 4, 6, 5): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", A, 0, 6, 5): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", A, 2, 6, 5): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", A, 2, 4, -1): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", A, 4, 4, -1): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", \u00ef\u00bc\u00a1, 0, 6, 4): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", \u00ef\u00bc\u00a1, 2, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", \u00ef\u00bc\u00a1, 2, 6, 4): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", \u00ef\u00bc\u00a1, 2, 4, -1): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", 66560, 0, 6, 0): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", 66560, 0, 3, 0): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", 66560, 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", 66560, 1, 4, -1): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", 66561, 0, 6, 2): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", 66561, 2, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", 66561, 2, 5, 2): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", 66561, 2, 3, -1): success
test IndexOfBeginEnd.testIndexOf("\u00f0\ufffd\ufffd\u20ac\u00f0\ufffd\ufffd\ufffd\u00ef\u00bc\u00a1A", 66561, 3, 6, -1): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", "", -1, 0): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", "", 0, 100): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", "", -1, 100): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", "", 3, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "", -1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "", 0, 100): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "", -1, 100): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "", 3, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A", "", -1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A", "", 0, 100): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A", "", -1, 100): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A", "", 3, 1): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1", "", -1, 0): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1", "", 0, 100): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1", "", -1, 100): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1", "", 3, 1): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", "A", -1, 0): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", "A", 0, 100): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", "A", -1, 100): success
test IndexOfBeginEnd.testIndexOf("ABABABABAB", "A", 3, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "A", -1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "A", 0, 100): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "A", -1, 100): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "A", 3, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A", "A", -1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A", "A", 0, 100): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A", "A", -1, 100): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A", "A", 3, 1): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1", "A", -1, 0): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1", "A", 0, 100): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1", "A", -1, 100): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1A\u00ef\u00bc\u00a1", "A", 3, 1): success
test IndexOfBeginEnd.testIndexOf("", "A", 0, 0, -1): success
test IndexOfBeginEnd.testIndexOf("", "", 0, 0, 0): success
test IndexOfBeginEnd.testIndexOf("A", "A", 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("A", "A", 1, 1, -1): success
test IndexOfBeginEnd.testIndexOf("A", "AB", 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("A", "", 0, 0, 0): success
test IndexOfBeginEnd.testIndexOf("A", "", 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("A", "", 1, 1, 1): success
test IndexOfBeginEnd.testIndexOf("AB", "A", 0, 2, 0): success
test IndexOfBeginEnd.testIndexOf("AB", "A", 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("AB", "A", 1, 2, -1): success
test IndexOfBeginEnd.testIndexOf("AB", "B", 0, 2, 1): success
test IndexOfBeginEnd.testIndexOf("AB", "B", 1, 2, 1): success
test IndexOfBeginEnd.testIndexOf("AB", "B", 0, 0, -1): success
test IndexOfBeginEnd.testIndexOf("AB", "AB", 0, 2, 0): success
test IndexOfBeginEnd.testIndexOf("AB", "AB", 1, 2, -1): success
test IndexOfBeginEnd.testIndexOf("AB", "AB", 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("AB", "", 0, 2, 0): success
test IndexOfBeginEnd.testIndexOf("AB", "", 1, 2, 1): success
test IndexOfBeginEnd.testIndexOf("AB", "", 2, 2, 2): success
test IndexOfBeginEnd.testIndexOf("ABCD", "ABCD", 0, 4, 0): success
test IndexOfBeginEnd.testIndexOf("ABCD", "ABCD", 0, 3, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", "ABCD", 1, 4, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", "BC", 0, 4, 1): success
test IndexOfBeginEnd.testIndexOf("ABCD", "BC", 0, 3, 1): success
test IndexOfBeginEnd.testIndexOf("ABCD", "BC", 1, 4, 1): success
test IndexOfBeginEnd.testIndexOf("ABCD", "BC", 1, 2, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", "BC", 2, 4, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", "A", 0, 4, 0): success
test IndexOfBeginEnd.testIndexOf("ABCD", "A", 1, 4, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", "CD", 0, 4, 2): success
test IndexOfBeginEnd.testIndexOf("ABCD", "CD", 2, 4, 2): success
test IndexOfBeginEnd.testIndexOf("ABCD", "CD", 1, 4, 2): success
test IndexOfBeginEnd.testIndexOf("ABCD", "CD", 0, 3, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", "A", 2, 4, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", "A", 2, 2, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", "A", 4, 4, -1): success
test IndexOfBeginEnd.testIndexOf("ABCD", "ABCDE", 0, 4, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "ABCDEFGH", 0, 8, 0): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "ABCDEFGH", 1, 8, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "ABCDEFGH", 0, 7, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "DEFGH", 0, 8, 3): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "DEFGH", 3, 8, 3): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "DEFGH", 4, 8, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "DEFGH", 0, 7, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "A", 0, 8, 0): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "A", 1, 8, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "A", 0, 0, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "GHI", 0, 8, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "GHI", 8, 8, -1): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "", 4, 4, 4): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "", 4, 8, 4): success
test IndexOfBeginEnd.testIndexOf("ABCDEFGH", "", 8, 8, 8): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1", "\u00ef\u00bc\u00a1", 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1", "\u00ef\u00bc\u00a1", 0, 0, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1", "\u00ef\u00bc\u00a1", 1, 1, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1", "\u00ef\u00bc\u00a1A", 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 0, 2, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 1, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a2", 0, 2, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a2", 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a2", 1, 2, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a1", 1, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a1", 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "", 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "", 1, 1, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "", 2, 2, 2): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", "\u00ef\u00bc\u00a1A", 0, 2, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", "\u00ef\u00bc\u00a1A", 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", "\u00ef\u00bc\u00a1A", 1, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", "A", 1, 2, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", "A", 0, 2, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", "A", 0, 1, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", "\u00ef\u00bc\u00a1", 0, 2, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", "\u00ef\u00bc\u00a1", 0, 1, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1A", "\u00ef\u00bc\u00a1", 1, 2, -1): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", "A\u00ef\u00bc\u00a1", 0, 2, 0): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", "\u00ef\u00bc\u00a1", 1, 2, 1): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", "A\u00ef\u00bc\u00a1", 1, 2, -1): success
test IndexOfBeginEnd.testIndexOf("A\u00ef\u00bc\u00a1", "A\u00ef\u00bc\u00a1A", 0, 2, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 0, 10, 0): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 0, 9, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 1, 10, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 1, 10, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 0, 10, 1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 0, 9, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 4, 10, 4): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 3, 8, 4): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 2, 7, 2): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", 7, 10, -1): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "", 7, 10, 7): success
test IndexOfBeginEnd.testIndexOf("\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2\u00ef\u00bc\u00a1\u00ef\u00bc\u00a2", "", 10, 10, 10): success

===============================================
java/lang/String/IndexOfBeginEnd.java
Total tests run: 232, Passes: 232, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
