#Test Results (version 2)
#Mon Apr 29 01:40:41 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
author=Mike Duigou
keywords=bug8010122 bug8004518 bug8024331 bug8024688 testng
run=USER_SPECIFIED testng Defaults\r\n
source=Defaults.java
title=Test Map default methods

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
elapsed=716 0\:00\:00.716
end=Mon Apr 29 01\:40\:41 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az978-691.aqccnys5fsauxnvc2cwlk3lemf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-29-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Mon Apr 29 01\:40\:40 UTC 2024
test=java/util/Map/Defaults.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=716
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\util\\Map

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/213)----------
command: build Defaults
reason: Named class compiled on demand
started: Mon Apr 29 01:40:40 UTC 2024
Test directory:
  compile: Defaults
finished: Mon Apr 29 01:40:41 UTC 2024
elapsed time (seconds): 0.125
result: Passed. Build successful

#section:compile
----------messages:(7/274)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:40:40 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 01:40:41 UTC 2024
elapsed time (seconds): 0.125
----------configuration:(13/878)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Map\\Defaults.d
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3487)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Map/Defaults.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Map\\Defaults.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Map\\Defaults.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Map\\Defaults.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Map\\Defaults.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Map\\Defaults.d;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java'
----------direct:(12/1018)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java:624: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(0L), map.compute(new Long(3L), fun));
                                                   ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java:625: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(3L), map.compute(new Long(3L), fun));
                                                   ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java:626: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(6L), map.compute(new Long(3L), fun));
                                                   ^
Note: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 warnings
result: Passed. Compilation successful

#section:testng
----------messages:(7/218)----------
command: testng Defaults
reason: User specified action: run testng Defaults 
started: Mon Apr 29 01:40:41 UTC 2024
Mode: agentvm
Agent id: 38
finished: Mon Apr 29 01:40:41 UTC 2024
elapsed time (seconds): 0.591
----------configuration:(13/869)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Map\\Defaults.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map

----------rerun:(28/3051)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Map/Defaults.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Map\\Defaults.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Map\\Defaults.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Map\\Defaults.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Map\\Defaults.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/Map/Defaults.java false Defaults
----------System.out:(518/56909)----------
test Defaults.testCompute("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2754be24): success
test Defaults.testCompute("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@51e4caf9): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@76ccd262): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4dacc7cc): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@25384b0a): success
test Defaults.testCompute("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@6f68feb9): success
test Defaults.testCompute("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@12ba095f): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@53870364): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@629eb0eb): success
test Defaults.testCompute("HashMap", java.util.HashMap@74c9a1ee): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@33a8fc2b): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7cc3680e): success
test Defaults.testCompute("EnumMap", java.util.EnumMap@7087b99e): success
test Defaults.testCompute("TreeMap", java.util.TreeMap@2c1f4a28): success
test Defaults.testCompute("HashMap", java.util.HashMap@94187ca): success
test Defaults.testCompute("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@487c8df1): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@4f8a175a): success
test Defaults.testCompute("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@459d819): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@2f9beddf): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@61e536e5): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2c66f236): success
test Defaults.testCompute("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@6d514a2f): success
test Defaults.testCompute("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@6bf054a0): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@1d6a6315): success
test Defaults.testCompute("Hashtable", java.util.Hashtable@36c4daec): success
test Defaults.testComputeIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@4bcf3d68): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@7a4e568a): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@279b251b): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@27286fd): success
test Defaults.testComputeIfAbsent("Hashtable", java.util.Hashtable@199ddeaa): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@284ea5e3): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@79b221e5): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@75547f7f): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@7dfc3cfe): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@46b1864a): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3131459): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1ca29235): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3e217084): success
test Defaults.testComputeIfAbsent("EnumMap", java.util.EnumMap@3e921593): success
test Defaults.testComputeIfAbsent("TreeMap", java.util.TreeMap@76b9b059): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@26aca58c): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1463ac61): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@9f7f4af): success
test Defaults.testComputeIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1cb38ebd): success
test Defaults.testComputeIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@6ebaec81): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@52f83501): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3c8a65b6): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@45a57f75): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@1d0f3bf4): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@49102b59): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@70c38d28): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@106d2492): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@687869fd): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2cde1580): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@737c0102): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@d0ea6ed): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@43b7e70b): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@6c5bcb2a): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@44ec699c): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3377686c): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@56dcb111): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@ca2b27f): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@60169b97): success
test Defaults.testComputeIfAbsentNullFunction("TreeMap", java.util.TreeMap@7e3667c6): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@1981345d): success
test Defaults.testComputeIfAbsentNullFunction("EnumMap", java.util.EnumMap@4d9fb844): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1768eeb6): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@58bc3e66): success
test Defaults.testComputeIfAbsentNullFunction("Hashtable", java.util.Hashtable@5a3166ff): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@ec33389): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@23738bf1): success
test Defaults.testComputeIfAbsentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4b26a53): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@420cd3a6): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@3ed2dbdb): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@43b3a5a9): success
test Defaults.testComputeIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@46d8b477): success
test Defaults.testComputeIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@822e875): success
test Defaults.testComputeIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@778791e6): success
test Defaults.testComputeIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@41e36b18): success
test Defaults.testComputeIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@46b4eb20): success
test Defaults.testComputeIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@7505231b): success
test Defaults.testComputeIfAbsentNulls("HashMap", java.util.HashMap@7d9c50fe): success
test Defaults.testComputeIfPresent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5f596434): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@6ecc9d0b): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3f769b7b): success
test Defaults.testComputeIfPresent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@47179a59): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4ae95e48): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3b38c0a4): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@46a5769b): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@7a7e39a3): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@22d15d1d): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@59072b66): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@51c5d39a): success
test Defaults.testComputeIfPresent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4512bc72): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@42fb649): success
test Defaults.testComputeIfPresent("EnumMap", java.util.EnumMap@35e172c9): success
test Defaults.testComputeIfPresent("TreeMap", java.util.TreeMap@64004906): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@3a700a96): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1ef4081e): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@4a516131): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@604e51a7): success
test Defaults.testComputeIfPresent("Hashtable", java.util.Hashtable@39077586): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@443d90bc): success
test Defaults.testComputeIfPresent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4a4d4220): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@288d0659): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@389c0bac): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@3fce94f5): success
test Defaults.testComputeIfPresentNullFunction("Hashtable", java.util.Hashtable@585df6cb): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@63e97df1): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1b541e76): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@55de6041): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3ffb0bf7): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@ed9e591): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@4fe4efaa): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@acd81fa): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@4bf08bc1): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7af147a2): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2bdf748e): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@50d607): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@5450d2ec): success
test Defaults.testComputeIfPresentNullFunction("EnumMap", java.util.EnumMap@5f44ae3c): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@4f6caa1): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@7727b247): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3578a826): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7dbca287): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@7e61a3b9): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@69385f6c): success
test Defaults.testComputeIfPresentNullFunction("TreeMap", java.util.TreeMap@2c8a703c): success
test Defaults.testComputeIfPresentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@163f47d2): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@b9285ae): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@77e6c2e6): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@18336974): success
test Defaults.testComputeIfPresentNulls("HashMap", java.util.HashMap@6588c51): success
test Defaults.testComputeIfPresentNulls("IdentityHashMap", java.util.IdentityHashMap@1515c759): success
test Defaults.testComputeIfPresentNulls("LinkedHashMap", java.util.LinkedHashMap@4533472c): success
test Defaults.testComputeIfPresentNulls("WeakHashMap", java.util.WeakHashMap@67c541a): success
test Defaults.testComputeIfPresentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@70c1e841): success
test Defaults.testComputeIfPresentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5137b1fa): success
test Defaults.testComputeIfPresentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1ff5fe3a): success
test Defaults.testComputeNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@4172eb9c): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@1b620054): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@63c65dea): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6fb44ee6): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@78c294a4): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@2d1fbbe5): success
test Defaults.testComputeNullFunction("Hashtable", java.util.Hashtable@6a72f519): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@3df97309): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@1bbddc62): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@5c38de7): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6332aac7): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3733feec): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3a740239): success
test Defaults.testComputeNullFunction("EnumMap", java.util.EnumMap@653f80fe): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2974e90e): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@18466151): success
test Defaults.testComputeNullFunction("TreeMap", java.util.TreeMap@78364081): success
test Defaults.testComputeNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1ebe3cf9): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@59f98382): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@26807453): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@2543fb48): success
test Defaults.testComputeNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5d96e301): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@fa11e8e): success
test Defaults.testComputeNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@beca7f4): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@69b0cec2): success
test Defaults.testComputeNulls("HashMap", java.util.HashMap@4f1232f3): success
test Defaults.testComputeNulls("LinkedHashMap", java.util.LinkedHashMap@ef4aa84): success
test Defaults.testComputeNulls("IdentityHashMap", java.util.IdentityHashMap@596ab9ad): success
test Defaults.testComputeNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@21904606): success
test Defaults.testComputeNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@549628e3): success
test Defaults.testComputeNulls("WeakHashMap", java.util.WeakHashMap@26d049d): success
test Defaults.testComputeNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5b35a13): success
test Defaults.testConcurrentMap_computeIfAbsent_racy(): success
test Defaults.testConcurrentMap_computeIfPresent_racy(): success
test Defaults.testConcurrentMap_compute_racy(): success
test Defaults.testConcurrentMap_compute_simple(): success
test Defaults.testConcurrentMap_merge_racy(): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@56a1634e): success
test Defaults.testForEach("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3aff783c): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@7bc27207): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@4af3acb9): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1bed8d48): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2710ce65): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@28d477d7): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1fa37214): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@475c0e30): success
test Defaults.testForEach("HashMap", java.util.HashMap@2f5d1c90): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@32e56331): success
test Defaults.testForEach("Hashtable", java.util.Hashtable@63991c16): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7d8f0ae): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@57100e09): success
test Defaults.testForEach("EnumMap", java.util.EnumMap@4a073755): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3c6cecff): success
test Defaults.testForEach("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@4ea9ca17): success
test Defaults.testForEach("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@7f667264): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@7af054c): success
test Defaults.testForEach("TreeMap", java.util.TreeMap@4c1426e9): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@22a4162d): success
test Defaults.testForEach("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@142a92d2): success
test Defaults.testForEach("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6b5ffea1): success
test Defaults.testForEach("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3d050d65): success
test Defaults.testForEach("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@74708ac9): success
test Defaults.testForEach("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4d7a03ee): success
test Defaults.testForEach("HashMap", java.util.HashMap@54546e10): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@470c47e8): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@6314dd3): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@37fd8dae): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@661eb29c): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@72a93ef7): success
test Defaults.testGetOrDefault("Hashtable", java.util.Hashtable@5366ad55): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@125ba76e): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6250a83b): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@23831199): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@62583739): success
test Defaults.testGetOrDefault("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7cf0f415): success
test Defaults.testGetOrDefault("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5a43bcdc): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@72745821): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@28523152): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@44a7d599): success
test Defaults.testGetOrDefault("TreeMap", java.util.TreeMap@763a46f4): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@6bde6afd): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@14492801): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1b7eb6e7): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@3fab7060): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3dcdfe2e): success
test Defaults.testGetOrDefault("EnumMap", java.util.EnumMap@696f3b69): success
test Defaults.testGetOrDefault("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@626d7a0d): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@566ba364): success
test Defaults.testGetOrDefault("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@5a15844c): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@177332bd): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@10514494): success
test Defaults.testGetOrDefaultNulls("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@22495364): success
test Defaults.testGetOrDefaultNulls("WeakHashMap", java.util.WeakHashMap@718a6804): success
test Defaults.testGetOrDefaultNulls("LinkedHashMap", java.util.LinkedHashMap@18f33728): success
test Defaults.testGetOrDefaultNulls("IdentityHashMap", java.util.IdentityHashMap@71d48df): success
test Defaults.testGetOrDefaultNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@d9f743e): success
test Defaults.testGetOrDefaultNulls("HashMap", java.util.HashMap@5baa650c): success
test Defaults.testGetOrDefaultNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@41cabb1d): success
test Defaults.testGetOrDefaultNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6a719b0c): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@730b0cb0, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@ac84590, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@fc29770, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@32d1e079, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@58ae8578, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@57a366f7, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@5f7926f1, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@1d6c4707, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@7f55f4aa, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@71038a22, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@20e1a4f9, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6b911ea, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@549b047f, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@47199b9d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@37af3fcb, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@3aeebd43, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@14eb4963, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@61c1c63, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@47211658, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@76ac9776, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2eacf7f5, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@6b9e7500, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@13d50179, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@132fd10e, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@8d12ff9, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@6285fb75, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@717da358, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4c30eaa2, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@37dc0623, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@270ee917, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@ef55df8, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@2340b2b0, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@1860f1c7, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@78dfcf5b, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@62f2e3ec, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2647e92b, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@19858f91, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@19572346, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@2fe63746, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@65875c3a, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@365678d3, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@4ed6e43b, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@45bf4987, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@55d20990, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7ba817c8, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@74dddaaf, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7ad45928, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@2aecae0f, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@69572a89, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@11181ae9, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@5f12aa6a, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@a1c3029, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@41841bf0, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6489743a, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@73c294a7, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@2fcd4d6c, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@18d19eb9, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@b21c348, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@6ae7365b, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3349809a, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@248714e3, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5439dd01, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@32f3e307, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@5d6bda56, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2063bc70, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@620b9266, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@74c01225, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@22633fab, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@283860df, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@28b69fb6, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@207f64d8, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6a5d6776, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@b29737f, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@2f191312, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@2ef99346, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMergeNullMerger("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@412dad06): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@612cbbc2): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1908216d): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@60f691e1): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@20c6864): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@34e320d8): success
test Defaults.testMergeNullMerger("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2eca78fe): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@6ff772c5): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@5e521d4c): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@fd88d8a): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@76d962e7): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@b96f6e3): success
test Defaults.testMergeNullMerger("EnumMap", java.util.EnumMap@7309fb88): success
test Defaults.testMergeNullMerger("TreeMap", java.util.TreeMap@434cbe78): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@62f538bd): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@30bd4438): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@36315d78): success
test Defaults.testMergeNullMerger("Hashtable", java.util.Hashtable@215c2d57): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@13aa4f46): success
test Defaults.testMergeNullMerger("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6803e086): success
test Defaults.testMergeNullMerger("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@71020895): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@6070f01b): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@27794afb): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@64daa917): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@1eaf1ab6): success
test Defaults.testPutIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1ccc4720): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@5df14d1b): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6ce696bd): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3ddeb254): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1e77d7ea): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@39906b2b): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@38b219cb): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@525f745c): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@30361a11): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@15d8cf94): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1c71e025): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@16ddeb71): success
test Defaults.testPutIfAbsent("EnumMap", java.util.EnumMap@25b05e8e): success
test Defaults.testPutIfAbsent("TreeMap", java.util.TreeMap@4830027c): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@46ac83e2): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@40ccd7a3): success
test Defaults.testPutIfAbsent("Hashtable", java.util.Hashtable@1d08a6e4): success
test Defaults.testPutIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@3a3cf9e7): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5a3b656d): success
test Defaults.testPutIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@39abf3a): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3dd31257): success
test Defaults.testPutIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@6c750ccb): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@3247a78b): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@31250f86): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@1db60c45): success
test Defaults.testPutIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@508951d2): success
test Defaults.testPutIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@3ae1ba44): success
test Defaults.testPutIfAbsentNulls("HashMap", java.util.HashMap@69ae293c): success
test Defaults.testPutIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@df4a128): success
test Defaults.testPutIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4a5370f9): success
test Defaults.testPutIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@e58d84b): success
test Defaults.testPutIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@63bfc40): success
test Defaults.testRemove("Hashtable", java.util.Hashtable@10d8a4d3): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@6830942a): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7d452340): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7334194d): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@782b518a): success
test Defaults.testRemove("HashMap", java.util.HashMap@7e6078df): success
test Defaults.testRemove("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2f9d89a1): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@71abf8d0): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@60e616de): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@4eed2ba4): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@18ac42f8): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@418091b3): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5a305a17): success
test Defaults.testRemove("EnumMap", java.util.EnumMap@65feb39f): success
test Defaults.testRemove("TreeMap", java.util.TreeMap@3a86d59): success
test Defaults.testRemove("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5349a4a8): success
test Defaults.testRemove("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@5646805a): success
test Defaults.testRemove("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@66ec1e2a): success
test Defaults.testRemove("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@4c65a872): success
test Defaults.testRemove("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@2b91f49b): success
test Defaults.testRemove("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@48ac2c3a): success
test Defaults.testRemove("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1c93fbfa): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@5d0c1502): success
test Defaults.testRemove("HashMap", java.util.HashMap@6a5e0950): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@4ee024d7): success
test Defaults.testRemoveNulls("IdentityHashMap", java.util.IdentityHashMap@45d5f737): success
test Defaults.testRemoveNulls("HashMap", java.util.HashMap@5e4f33cb): success
test Defaults.testRemoveNulls("LinkedHashMap", java.util.LinkedHashMap@50fa361): success
test Defaults.testRemoveNulls("WeakHashMap", java.util.WeakHashMap@3a1c17a9): success
test Defaults.testRemoveNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@b6f31f6): success
test Defaults.testRemoveNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@32903c43): success
test Defaults.testRemoveNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@40eef744): success
test Defaults.testReplaceAll("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@774da861): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@7f61faef): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@43a8e667): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7c1022bd): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4d5dfc1b): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@33192906): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@7a1322d2): success
test Defaults.testReplaceAll("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7fc1d4bd): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@24b139de): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4fac2bb): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1f5bc36a): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@49b74a40): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@4ef40da6): success
test Defaults.testReplaceAll("TreeMap", java.util.TreeMap@40445cf1): success
test Defaults.testReplaceAll("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1ba0d0ad): success
test Defaults.testReplaceAll("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@4d1b769d): success
test Defaults.testReplaceAll("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@607f04d1): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@3f1fd7dc): success
test Defaults.testReplaceAll("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@36ea68d2): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@65dbb962): success
test Defaults.testReplaceAll("Hashtable", java.util.Hashtable@1b171fa0): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@10787dbd): success
test Defaults.testReplaceAll("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@75a37f65): success
test Defaults.testReplaceAll("EnumMap", java.util.EnumMap@3f7f49bc): success
test Defaults.testReplaceAll("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@43d8aa42): success
test Defaults.testReplaceAllNoNullReplacement("Hashtable", java.util.Hashtable@3cfff68c): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1b975d97): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@664c2ac5): success
test Defaults.testReplaceAllNoNullReplacement("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@3a3e4791): success
test Defaults.testReplaceAllNoNullReplacement("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@4d3babe): success
test Defaults.testReplaceAllNoNullReplacement("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3c228e7c): success
test Defaults.testReplaceAllNoNullReplacement("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@2a8b2ae): success
test Defaults.testReplaceKV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@17f14540): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@56cc4f7b): success
test Defaults.testReplaceKV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@420b5e46): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@336547d): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@327f160e): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6319ab32): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@77ff08df): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@67573492): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@43ccc7): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@5de1219a): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@60ac05e5): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@540f3196): success
test Defaults.testReplaceKV("EnumMap", java.util.EnumMap@1483b3a0): success
test Defaults.testReplaceKV("TreeMap", java.util.TreeMap@8450b04): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@67503aeb): success
test Defaults.testReplaceKV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@15b904bd): success
test Defaults.testReplaceKV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@36e3b034): success
test Defaults.testReplaceKV("Hashtable", java.util.Hashtable@15f3d0f8): success
test Defaults.testReplaceKV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@4c29e954): success
test Defaults.testReplaceKV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@26ec5cc7): success
test Defaults.testReplaceKV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5837a81e): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@7882d95a): success
test Defaults.testReplaceKV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4a8a9b4a): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@43f198f): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@4f034af9): success
test Defaults.testReplaceKVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@2b40af30): success
test Defaults.testReplaceKVNoNulls("Hashtable", java.util.Hashtable@3e2e585a): success
test Defaults.testReplaceKVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7a1de502): success
test Defaults.testReplaceKVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2b79cccd): success
test Defaults.testReplaceKVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7168d5e4): success
test Defaults.testReplaceKVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@2df0ada7): success
test Defaults.testReplaceKVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@2c7a691d): success
test Defaults.testReplaceKVNulls("HashMap", java.util.HashMap@7b8045e6): success
test Defaults.testReplaceKVNulls("IdentityHashMap", java.util.IdentityHashMap@2d17fa7f): success
test Defaults.testReplaceKVNulls("LinkedHashMap", java.util.LinkedHashMap@78358460): success
test Defaults.testReplaceKVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4f356299): success
test Defaults.testReplaceKVNulls("WeakHashMap", java.util.WeakHashMap@2fe3770b): success
test Defaults.testReplaceKVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@194ab636): success
test Defaults.testReplaceKVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@53973a8c): success
test Defaults.testReplaceKVV("Hashtable", java.util.Hashtable@96e7dff): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@485377c4): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@79511bf8): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@287c888b): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@a85a588): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@2c325446): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@279456b5): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@4c297628): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@19113d69): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@50a5a334): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7344c33c): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@9868749): success
test Defaults.testReplaceKVV("EnumMap", java.util.EnumMap@4d33bf5c): success
test Defaults.testReplaceKVV("TreeMap", java.util.TreeMap@3d8f338d): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2b797675): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1d522ef6): success
test Defaults.testReplaceKVV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1ce7dbe3): success
test Defaults.testReplaceKVV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2a4c110d): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@448443bb): success
test Defaults.testReplaceKVV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5afa376e): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@60b62048): success
test Defaults.testReplaceKVV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@60610e2a): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@2beaa261): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@385318e4): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@5bd13d75): success
test Defaults.testReplaceKVVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@311f7e6c): success
test Defaults.testReplaceKVVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3450f616): success
test Defaults.testReplaceKVVNoNulls("Hashtable", java.util.Hashtable@6e0246d6): success
test Defaults.testReplaceKVVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2784c3e5): success
test Defaults.testReplaceKVVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7a5a1f54): success
test Defaults.testReplaceKVVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@4a5696aa): success
test Defaults.testReplaceKVVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@17dc4df): success
test Defaults.testReplaceKVVNulls("WeakHashMap", java.util.WeakHashMap@2d4adcb6): success
test Defaults.testReplaceKVVNulls("LinkedHashMap", java.util.LinkedHashMap@307c9a6a): success
test Defaults.testReplaceKVVNulls("IdentityHashMap", java.util.IdentityHashMap@5aa200f4): success
test Defaults.testReplaceKVVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@62611cba): success
test Defaults.testReplaceKVVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@35da4d16): success
test Defaults.testReplaceKVVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@74a2bfe8): success
test Defaults.testReplaceKVVNulls("HashMap", java.util.HashMap@33bc271a): success

===============================================
java/util/Map/Defaults.java
Total tests run: 512, Passes: 512, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
