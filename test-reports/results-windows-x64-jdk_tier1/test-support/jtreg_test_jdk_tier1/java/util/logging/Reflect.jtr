#Test Results (version 2)
#Mon Apr 29 01:39:59 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging\\Reflect.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8004931
modules=java.logging
run=ASSUMED_ACTION main Reflect\r\n
source=Reflect.java
title=Invoke getDeclaredMethods on LogManager to ensure that all types referenced in the method signatures is present.

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/logging/Reflect.java
elapsed=31 0\:00\:00.031
end=Mon Apr 29 01\:39\:59 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az978-691.aqccnys5fsauxnvc2cwlk3lemf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-29-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
modules=java.logging
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Mon Apr 29 01\:39\:59 UTC 2024
test=java/util/logging/Reflect.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=31
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\util\\logging

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/211)----------
command: build Reflect
reason: Named class compiled on demand
started: Mon Apr 29 01:39:59 UTC 2024
Test directory:
  compile: Reflect
finished: Mon Apr 29 01:39:59 UTC 2024
elapsed time (seconds): 0.016
result: Passed. Build successful

#section:compile
----------messages:(8/339)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging\\Reflect.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:39:59 UTC 2024
Additional options from @modules: --add-modules java.logging
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 01:39:59 UTC 2024
elapsed time (seconds): 0.016
----------configuration:(11/673)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\patches\\java.base

javac compilation environment
  add modules: java.logging
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\logging\\Reflect.d

----------rerun:(38/3415)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/logging/Reflect.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging\\Reflect.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\logging\\Reflect.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\logging\\Reflect.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\logging\\Reflect.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging' \\
        -J-Dtest.modules=java.logging \\
        --add-modules java.logging \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\logging\\Reflect.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\logging\\Reflect.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging\\Reflect.java'
result: Passed. Compilation successful

#section:main
----------messages:(7/224)----------
command: main Reflect
reason: Assumed action based on file name: run main Reflect 
started: Mon Apr 29 01:39:59 UTC 2024
Mode: agentvm
Agent id: 37
finished: Mon Apr 29 01:39:59 UTC 2024
elapsed time (seconds): 0.015
----------configuration:(13/876)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\logging\\Reflect.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging

----------rerun:(29/2849)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/logging/Reflect.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging\\Reflect.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\logging\\Reflect.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\logging\\Reflect.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\logging\\Reflect.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging' \\
        -Dtest.modules=java.logging \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\logging\\Reflect.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\logging;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        Reflect
----------System.out:(110/11366)----------
class java.util.logging.LogManager
    public static java.util.logging.LogManager java.util.logging.LogManager.getLogManager()
    public void java.util.logging.LogManager.reset() throws java.lang.SecurityException
    public java.lang.String java.util.logging.LogManager.getProperty(java.lang.String)
    private static java.lang.String java.util.logging.LogManager.trim(java.lang.String)
    void java.util.logging.LogManager.checkPermission()
    public java.util.logging.Logger java.util.logging.LogManager.getLogger(java.lang.String)
    public void java.util.logging.LogManager.checkAccess() throws java.lang.SecurityException
    int java.util.logging.LogManager.getIntProperty(java.lang.String,int)
    long java.util.logging.LogManager.getLongProperty(java.lang.String,long)
    private void java.util.logging.LogManager.initializeGlobalHandlers()
    public static synchronized java.util.logging.LoggingMXBean java.util.logging.LogManager.getLoggingMXBean()
    public void java.util.logging.LogManager.removeConfigurationListener(java.lang.Runnable)
    private static void java.util.logging.LogManager.lambda$addConfigurationListener$4(java.security.PrivilegedAction,java.security.AccessControlContext)
    private static java.lang.Void java.util.logging.LogManager.lambda$addConfigurationListener$3(java.lang.Runnable)
    private static boolean java.util.logging.LogManager.lambda$updateConfiguration$2(java.util.logging.Logger,java.util.logging.LogManager$CloseOnReset)
    private static boolean java.util.logging.LogManager.lambda$updateConfiguration$1(java.util.Properties,java.util.Properties,java.lang.String)
    private static void java.util.logging.LogManager.lambda$updateConfiguration$0(java.util.Properties,java.util.Properties,java.util.function.Function,java.lang.String)
    java.util.logging.Logger java.util.logging.LogManager.demandSystemLogger(java.lang.String,java.lang.String,java.lang.Class)
    java.util.logging.Logger java.util.logging.LogManager.demandSystemLogger(java.lang.String,java.lang.String,java.lang.Module)
    java.util.logging.Logger java.util.logging.LogManager.demandLogger(java.lang.String,java.lang.String,java.lang.Module)
    java.util.logging.Logger java.util.logging.LogManager.demandLogger(java.lang.String,java.lang.String,java.lang.Class)
    final void java.util.logging.LogManager.drainLoggerRefQueueBounded()
    private static void java.util.logging.LogManager.doSetParent(java.util.logging.Logger,java.util.logging.Logger)
    public java.util.logging.LogManager java.util.logging.LogManager.addConfigurationListener(java.lang.Runnable)
    java.util.logging.Level java.util.logging.LogManager.getLevelProperty(java.lang.String,java.util.logging.Level)
    java.util.logging.Filter java.util.logging.LogManager.getFilterProperty(java.lang.String,java.util.logging.Filter)
    java.util.logging.Formatter java.util.logging.LogManager.getFormatterProperty(java.lang.String,java.util.logging.Formatter)
    java.lang.String java.util.logging.LogManager.getStringProperty(java.lang.String,java.lang.String)
    private static java.lang.Void java.util.logging.LogManager.checkSubclassPermissions()
    final void java.util.logging.LogManager.ensureLogManagerInitialized()
    private void java.util.logging.LogManager.readPrimordialConfiguration()
    public void java.util.logging.LogManager.readConfiguration(java.io.InputStream) throws java.io.IOException,java.lang.SecurityException
    public void java.util.logging.LogManager.readConfiguration() throws java.io.IOException,java.lang.SecurityException
    final java.util.logging.LogManager$LoggerContext java.util.logging.LogManager.getSystemContext()
    private java.util.logging.LogManager$LoggerContext java.util.logging.LogManager.getUserContext()
    public boolean java.util.logging.LogManager.addLogger(java.util.logging.Logger)
    boolean java.util.logging.LogManager.getBooleanProperty(java.lang.String,boolean)
    private java.lang.String[] java.util.logging.LogManager.parseClassNames(java.lang.String)
    private boolean java.util.logging.LogManager.forceLoadHandlers(java.util.logging.Logger)
    private void java.util.logging.LogManager.loadLoggerHandlers(java.util.logging.Logger,java.lang.String,java.lang.String)
    public java.util.Enumeration java.util.logging.LogManager.getLoggerNames()
    java.lang.String java.util.logging.LogManager.getConfigurationFileName() throws java.io.IOException
    private java.util.List java.util.logging.LogManager.contexts()
    private void java.util.logging.LogManager.resetLoggerContext(java.util.logging.LogManager$LoggerContext)
    private void java.util.logging.LogManager.resetLogger(java.util.logging.Logger)
    private void java.util.logging.LogManager.closeHandlers(java.util.logging.Logger)
    private void java.util.logging.LogManager.setLevelsOnExistingLoggers()
    private void java.util.logging.LogManager.invokeConfigurationListeners()
    public void java.util.logging.LogManager.updateConfiguration(java.util.function.Function) throws java.io.IOException
    public void java.util.logging.LogManager.updateConfiguration(java.io.InputStream,java.util.function.Function) throws java.io.IOException
    private java.util.List java.util.logging.LogManager.createLoggerHandlers(java.lang.String,java.lang.String)
    private void java.util.logging.LogManager.setLoggerHandlers(java.util.logging.Logger,java.lang.String,java.lang.String,java.util.List)
    private static void java.util.logging.LogManager.initStatic()
    private static void java.util.logging.LogManager.doSetLevel(java.util.logging.Logger,java.util.logging.Level)
class java.util.logging.LogManager
    public static java.util.logging.LogManager java.util.logging.LogManager.getLogManager()
    public void java.util.logging.LogManager.reset() throws java.lang.SecurityException
    public java.lang.String java.util.logging.LogManager.getProperty(java.lang.String)
    private static java.lang.String java.util.logging.LogManager.trim(java.lang.String)
    void java.util.logging.LogManager.checkPermission()
    public java.util.logging.Logger java.util.logging.LogManager.getLogger(java.lang.String)
    public void java.util.logging.LogManager.checkAccess() throws java.lang.SecurityException
    int java.util.logging.LogManager.getIntProperty(java.lang.String,int)
    long java.util.logging.LogManager.getLongProperty(java.lang.String,long)
    private void java.util.logging.LogManager.initializeGlobalHandlers()
    public static synchronized java.util.logging.LoggingMXBean java.util.logging.LogManager.getLoggingMXBean()
    public void java.util.logging.LogManager.removeConfigurationListener(java.lang.Runnable)
    private static void java.util.logging.LogManager.lambda$addConfigurationListener$4(java.security.PrivilegedAction,java.security.AccessControlContext)
    private static java.lang.Void java.util.logging.LogManager.lambda$addConfigurationListener$3(java.lang.Runnable)
    private static boolean java.util.logging.LogManager.lambda$updateConfiguration$2(java.util.logging.Logger,java.util.logging.LogManager$CloseOnReset)
    private static boolean java.util.logging.LogManager.lambda$updateConfiguration$1(java.util.Properties,java.util.Properties,java.lang.String)
    private static void java.util.logging.LogManager.lambda$updateConfiguration$0(java.util.Properties,java.util.Properties,java.util.function.Function,java.lang.String)
    java.util.logging.Logger java.util.logging.LogManager.demandSystemLogger(java.lang.String,java.lang.String,java.lang.Class)
    java.util.logging.Logger java.util.logging.LogManager.demandSystemLogger(java.lang.String,java.lang.String,java.lang.Module)
    java.util.logging.Logger java.util.logging.LogManager.demandLogger(java.lang.String,java.lang.String,java.lang.Module)
    java.util.logging.Logger java.util.logging.LogManager.demandLogger(java.lang.String,java.lang.String,java.lang.Class)
    final void java.util.logging.LogManager.drainLoggerRefQueueBounded()
    private static void java.util.logging.LogManager.doSetParent(java.util.logging.Logger,java.util.logging.Logger)
    public java.util.logging.LogManager java.util.logging.LogManager.addConfigurationListener(java.lang.Runnable)
    java.util.logging.Level java.util.logging.LogManager.getLevelProperty(java.lang.String,java.util.logging.Level)
    java.util.logging.Filter java.util.logging.LogManager.getFilterProperty(java.lang.String,java.util.logging.Filter)
    java.util.logging.Formatter java.util.logging.LogManager.getFormatterProperty(java.lang.String,java.util.logging.Formatter)
    java.lang.String java.util.logging.LogManager.getStringProperty(java.lang.String,java.lang.String)
    private static java.lang.Void java.util.logging.LogManager.checkSubclassPermissions()
    final void java.util.logging.LogManager.ensureLogManagerInitialized()
    private void java.util.logging.LogManager.readPrimordialConfiguration()
    public void java.util.logging.LogManager.readConfiguration(java.io.InputStream) throws java.io.IOException,java.lang.SecurityException
    public void java.util.logging.LogManager.readConfiguration() throws java.io.IOException,java.lang.SecurityException
    final java.util.logging.LogManager$LoggerContext java.util.logging.LogManager.getSystemContext()
    private java.util.logging.LogManager$LoggerContext java.util.logging.LogManager.getUserContext()
    public boolean java.util.logging.LogManager.addLogger(java.util.logging.Logger)
    boolean java.util.logging.LogManager.getBooleanProperty(java.lang.String,boolean)
    private java.lang.String[] java.util.logging.LogManager.parseClassNames(java.lang.String)
    private boolean java.util.logging.LogManager.forceLoadHandlers(java.util.logging.Logger)
    private void java.util.logging.LogManager.loadLoggerHandlers(java.util.logging.Logger,java.lang.String,java.lang.String)
    public java.util.Enumeration java.util.logging.LogManager.getLoggerNames()
    java.lang.String java.util.logging.LogManager.getConfigurationFileName() throws java.io.IOException
    private java.util.List java.util.logging.LogManager.contexts()
    private void java.util.logging.LogManager.resetLoggerContext(java.util.logging.LogManager$LoggerContext)
    private void java.util.logging.LogManager.resetLogger(java.util.logging.Logger)
    private void java.util.logging.LogManager.closeHandlers(java.util.logging.Logger)
    private void java.util.logging.LogManager.setLevelsOnExistingLoggers()
    private void java.util.logging.LogManager.invokeConfigurationListeners()
    public void java.util.logging.LogManager.updateConfiguration(java.util.function.Function) throws java.io.IOException
    public void java.util.logging.LogManager.updateConfiguration(java.io.InputStream,java.util.function.Function) throws java.io.IOException
    private java.util.List java.util.logging.LogManager.createLoggerHandlers(java.lang.String,java.lang.String)
    private void java.util.logging.LogManager.setLoggerHandlers(java.util.logging.Logger,java.lang.String,java.lang.String,java.util.List)
    private static void java.util.logging.LogManager.initStatic()
    private static void java.util.logging.LogManager.doSetLevel(java.util.logging.Logger,java.util.logging.Level)
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
