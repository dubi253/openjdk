#Test Results (version 2)
#Mon Apr 29 01:54:12 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex\\PatternStreamTest.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8016846 bug8024341 bug8071479 bug8145006 othervm testng
library=/lib/testlibrary/bootlib
run=USER_SPECIFIED build java.base/java.util.stream.OpTestCase\r\nUSER_SPECIFIED testng/othervm PatternStreamTest\r\n
source=PatternStreamTest.java
title=Unit tests stream and lambda-based methods on Pattern and Matcher

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/regex/PatternStreamTest.java
elapsed=955 0\:00\:00.955
end=Mon Apr 29 01\:54\:12 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az978-691.aqccnys5fsauxnvc2cwlk3lemf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-29-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build build compile testng
start=Mon Apr 29 01\:54\:11 UTC 2024
test=java/util/regex/PatternStreamTest.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=955
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\util\\regex

#section:script_messages
----------messages:(7/607)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)
Library /lib/testlibrary/bootlib; kind: system module patches
   source directory: D:\\a\\openjdk\\openjdk\\test\\jdk\\lib\\testlibrary\\bootlib
   class directory: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\lib\\testlibrary\\bootlib

#section:build
----------messages:(5/243)----------
command: build java.base/java.util.stream.OpTestCase
reason: User specified action: run build java.base/java.util.stream.OpTestCase 
started: Mon Apr 29 01:54:11 UTC 2024
finished: Mon Apr 29 01:54:11 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:build
----------messages:(7/231)----------
command: build PatternStreamTest
reason: Named class compiled on demand
started: Mon Apr 29 01:54:11 UTC 2024
Test directory:
  compile: PatternStreamTest
finished: Mon Apr 29 01:54:11 UTC 2024
elapsed time (seconds): 0.047
result: Passed. Build successful

#section:compile
----------messages:(7/285)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex\\PatternStreamTest.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:54:11 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 01:54:11 UTC 2024
elapsed time (seconds): 0.047
----------configuration:(15/1096)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\patches\\java.base

javac compilation environment
  add reads:   java.base ALL-UNNAMED
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex 
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex 
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\regex\\PatternStreamTest.d 
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:       java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\lib\\testlibrary\\bootlib\\java.base

----------rerun:(39/3959)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/regex/PatternStreamTest.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex\\PatternStreamTest.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\regex\\PatternStreamTest.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\regex\\PatternStreamTest.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\regex\\PatternStreamTest.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex' \\
        -J-Dtest.patch.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\lib\\testlibrary\\bootlib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\regex\\PatternStreamTest.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\regex\\PatternStreamTest.d;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' \\
        --patch-module 'java.base=D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\lib\\testlibrary\\bootlib\\java.base' \\
        --add-reads java.base=ALL-UNNAMED 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex\\PatternStreamTest.java'
result: Passed. Compilation successful

#section:testng
----------messages:(6/294)----------
command: testng PatternStreamTest
reason: User specified action: run testng/othervm PatternStreamTest 
started: Mon Apr 29 01:54:11 UTC 2024
Mode: othervm [/othervm specified, test or library overrides a system module]
finished: Mon Apr 29 01:54:12 UTC 2024
elapsed time (seconds): 0.908
----------configuration:(4/207)*----------
Boot Layer
  add reads: java.base ALL-UNNAMED
  patch:     java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\lib\\testlibrary\\bootlib\\java.base

----------System.out:(195/15965)*----------
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testFailfastMatchResults(): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3bb1cbc2): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testFailfastReplace(): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4d5f0352): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testLateBinding(): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2a7c11f0): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("All matches", "XXXXXX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@461a7451): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Bounded every other match", "XYXYXYYXYX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6183550a): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Every other match", "YXYXYXYYXYXY", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@b2d9fab): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("", "awgqwefg1fefw4vssv1vvv1", 4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@17a55ef5): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("", "afbfq\ufffdabgwgb\ufffdawngnwggw\ufffda\ufffdahjrnhneerh", \ufffda): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@47aad66d): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("", "awgqwefg1fefw4vssv1vvv1", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@51e37ea0): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("", "a?fg1fefw?4?vssv?1v??vv", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7d559f34): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("", "1?23?456?7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6740e9a2): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("", "1?23????456???7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@56d212a6): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Empty input", "", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@534232bf): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Empty input with empty pattern", "", ): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5f640e3e): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Multiple separators", "This is,testing: with	different separators.", [ 	,:.]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@68d18cc8): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Repeated separators within and at end", "boo:and:foo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@2fdc1821): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Many repeated separators within and at end", "booooo:and:fooooo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@52846b3c): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testMatchResults("Many repeated separators before last match", "fooooo:", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@69c15915): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("All matches", "XXXXXX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@43213182): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Bounded every other match", "XYXYXYYXYX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5f73b1f8): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Every other match", "YXYXYXYYXYXY", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6534f616): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("", "awgqwefg1fefw4vssv1vvv1", 4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3f1402b2): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("", "afbfq\ufffdabgwgb\ufffdawngnwggw\ufffda\ufffdahjrnhneerh", \ufffda): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6004f929): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("", "awgqwefg1fefw4vssv1vvv1", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@370cd6a6): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("", "a?fg1fefw?4?vssv?1v??vv", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@16703b69): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("", "1?23?456?7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5bd30bd6): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("", "1?23????456???7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@24c1e237): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Empty input", "", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3c3ee46d): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Empty input with empty pattern", "", ): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6358b53c): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Multiple separators", "This is,testing: with	different separators.", [ 	,:.]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@33dafb51): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Repeated separators within and at end", "boo:and:foo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@340ecd3): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Many repeated separators within and at end", "booooo:and:fooooo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@287527d8): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testPatternSplitAsStream("Many repeated separators before last match", "fooooo:", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@17832dde): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("All matches", "XXXXXX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3fba6a61): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Bounded every other match", "XYXYXYYXYX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@25896e7): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Every other match", "YXYXYXYYXYXY", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1ebc7bbe): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("", "awgqwefg1fefw4vssv1vvv1", 4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@10094c53): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("", "afbfq\ufffdabgwgb\ufffdawngnwggw\ufffda\ufffdahjrnhneerh", \ufffda): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5961e414): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("", "awgqwefg1fefw4vssv1vvv1", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@19a2802a): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("", "a?fg1fefw?4?vssv?1v??vv", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3ee60647): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("", "1?23?456?7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@151de100): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("", "1?23????456???7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@5bdda2f1): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Empty input", "", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@ca7dbd7): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Empty input with empty pattern", "", ): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4b215bbc): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Multiple separators", "This is,testing: with	different separators.", [ 	,:.]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1cbc1447): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Repeated separators within and at end", "boo:and:foo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@59bbf96a): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Many repeated separators within and at end", "booooo:and:fooooo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@1e37b502): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceAll("Many repeated separators before last match", "fooooo:", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@489db5be): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("All matches", "XXXXXX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@151e75b0): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Bounded every other match", "XYXYXYYXYX", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@8f437eb): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Every other match", "YXYXYXYYXYXY", X): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@6f6e72c9): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("", "awgqwefg1fefw4vssv1vvv1", 4): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@555616e4): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("", "afbfq\ufffdabgwgb\ufffdawngnwggw\ufffda\ufffdahjrnhneerh", \ufffda): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@22fc2bf6): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("", "awgqwefg1fefw4vssv1vvv1", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4b1f732e): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("", "a?fg1fefw?4?vssv?1v??vv", 1): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@14b0d88a): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("", "1?23?456?7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@78b3020c): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("", "1?23????456???7890", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7d99001f): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Empty input", "", ?): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4645d718): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Empty input with empty pattern", "", ): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@750b3c36): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Multiple separators", "This is,testing: with	different separators.", [ 	,:.]): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@69eeaf59): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Repeated separators within and at end", "boo:and:foo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@4bec0e27): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Many repeated separators within and at end", "booooo:and:fooooo", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@3261f6c2): success
config java.util.stream.LoggingTestCase.before(): success
test PatternStreamTest.testReplaceFirst("Many repeated separators before last match", "fooooo:", o): success
config java.util.stream.LoggingTestCase.after(org.testng.internal.TestResult@7330c88f): success

===============================================
java/util/regex/PatternStreamTest.java
Total tests run: 63, Passes: 63, Failures: 0, Skips: 0
===============================================

----------System.err:(1/16)----------
STATUS:Passed.
----------rerun:(41/4133)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
CLASSPATH='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\regex\\PatternStreamTest.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/regex/PatternStreamTest.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex\\PatternStreamTest.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\regex\\PatternStreamTest.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\regex\\PatternStreamTest.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\regex\\PatternStreamTest.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\regex' \\
        -Dtest.patch.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\lib\\testlibrary\\bootlib' \\
        '-Xbootclasspath/a:D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' \\
        --patch-module 'java.base=D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\lib\\testlibrary\\bootlib\\java.base' \\
        --add-reads java.base=ALL-UNNAMED \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=25 \\
        '-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        '-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -XX:+CreateCoredumpOnCrash \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        '-Djava.library.path=d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        com.sun.javatest.regtest.agent.MainWrapper 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\util\\regex\\PatternStreamTest.d\\testng.0.jta' java/util/regex/PatternStreamTest.java false PatternStreamTest
result: Passed. Execution successful


test result: Passed. Execution successful
