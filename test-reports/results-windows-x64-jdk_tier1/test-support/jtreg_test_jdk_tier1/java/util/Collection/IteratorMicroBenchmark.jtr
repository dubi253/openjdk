#Test Results (version 2)
#Mon Apr 29 01:31:51 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\r\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=390 0\:00\:00.390
end=Mon Apr 29 01\:31\:51 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az978-691.aqccnys5fsauxnvc2cwlk3lemf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-29-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Mon Apr 29 01\:31\:50 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=390
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\java\\util\\Collection

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/241)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Mon Apr 29 01:31:50 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Mon Apr 29 01:31:50 UTC 2024
elapsed time (seconds): 0.109
result: Passed. Build successful

#section:compile
----------messages:(7/295)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:31:50 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 01:31:50 UTC 2024
elapsed time (seconds): 0.109
----------configuration:(10/668)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d

----------rerun:(36/3493)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java'
----------direct:(7/584)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/300)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Mon Apr 29 01:31:50 UTC 2024
Mode: agentvm
Agent id: 35
finished: Mon Apr 29 01:31:51 UTC 2024
elapsed time (seconds): 0.281
----------configuration:(13/897)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection

----------rerun:(28/2973)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_tier1\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0  9.984
ArrayList spliterator().tryAdvance()                               0 11.594
ArrayList spliterator().forEachRemaining()                         0  8.546
ArrayList contains                                                 0 10.418
ArrayList containsAll                                              0  1.147
ArrayList forEach                                                  0  8.813
ArrayList toArray()                                                0  0.347
ArrayList toArray(a)                                               0  0.347
ArrayList toArray(empty)                                           0  0.303
ArrayList stream().forEach                                         0  9.665
ArrayList stream().mapToInt                                        1 44.741
ArrayList stream().collect                                         0 31.590
ArrayList stream()::iterator                                       0  9.653
ArrayList parallelStream().forEach                                 1 68.120
ArrayList parallelStream().mapToInt                                0 25.833
ArrayList parallelStream().collect                                 0 13.450
ArrayList parallelStream()::iterator                               0  6.163
ArrayList removeIf                                                 0  5.510
ArrayList remove(Object)                                           0  0.566
ArrayList listIterator forward loop                                0  1.394
ArrayList listIterator backward loop                               0  0.291
ArrayList indexOf                                                  0  0.673
ArrayList lastIndexOf                                              0  0.247
ArrayList equals                                                   0  0.331
ArrayList hashCode                                                 0  0.454
ArrayList replaceAll                                               0  6.446
ArrayList$SubList iterate for loop                                 0  0.231
ArrayList$SubList iterator().forEachRemaining()                    0  0.303
ArrayList$SubList spliterator().tryAdvance()                       0  6.127
ArrayList$SubList spliterator().forEachRemaining()                 0  0.143
ArrayList$SubList contains                                         0  0.183
ArrayList$SubList containsAll                                      0  0.159
ArrayList$SubList forEach                                          0  0.147
ArrayList$SubList toArray()                                        0  0.139
ArrayList$SubList toArray(a)                                       0  0.155
ArrayList$SubList toArray(empty)                                   0  0.092
ArrayList$SubList stream().forEach                                 0  0.155
ArrayList$SubList stream().mapToInt                                0  0.510
ArrayList$SubList stream().collect                                 0  0.590
ArrayList$SubList stream()::iterator                               0  0.219
ArrayList$SubList parallelStream().forEach                         0  3.367
ArrayList$SubList parallelStream().mapToInt                        0  3.167
ArrayList$SubList parallelStream().collect                         0  3.426
ArrayList$SubList parallelStream()::iterator                       0  0.335
ArrayList$SubList removeIf                                         0  0.438
ArrayList$SubList remove(Object)                                   0  0.179
ArrayList$SubList listIterator forward loop                        0  0.088
ArrayList$SubList listIterator backward loop                       0  0.187
ArrayList$SubList indexOf                                          0  0.096
ArrayList$SubList lastIndexOf                                      0  0.159
ArrayList$SubList equals                                           0  0.554
ArrayList$SubList hashCode                                         0  0.147
ArrayList$SubList replaceAll                                       0  0.179
Vector iterate for loop                                            0  0.235
Vector iterator().forEachRemaining()                               0  0.426
Vector spliterator().tryAdvance()                                  0  5.442
Vector spliterator().forEachRemaining()                            0  0.124
Vector contains                                                    0  1.259
Vector containsAll                                                 0  0.450
Vector forEach                                                     0  0.096
Vector toArray()                                                   0  0.056
Vector toArray(a)                                                  0  0.120
Vector toArray(empty)                                              0  0.088
Vector stream().forEach                                            0  0.151
Vector stream().mapToInt                                           0  0.410
Vector stream().collect                                            0  0.243
Vector stream()::iterator                                          0  0.271
Vector parallelStream().forEach                                    0  4.020
Vector parallelStream().mapToInt                                   0  3.052
Vector parallelStream().collect                                    0  2.853
Vector parallelStream()::iterator                                  0  1.275
Vector removeIf                                                    0  0.151
Vector remove(Object)                                              0  1.645
Vector listIterator forward loop                                   0  0.259
Vector listIterator backward loop                                  0  0.195
Vector indexOf                                                     0  0.717
Vector lastIndexOf                                                 0  0.139
Vector equals                                                      0  0.637
Vector hashCode                                                    0  0.331
Vector replaceAll                                                  0  0.211
SynchronizedRandomAccessList iterate for loop                      0  1.960
SynchronizedRandomAccessList iterator().forEachRemaining()         0  1.303
SynchronizedRandomAccessList spliterator().tryAdvance()            0  2.187
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  1.665
SynchronizedRandomAccessList contains                              0  1.303
SynchronizedRandomAccessList containsAll                           0  0.402
SynchronizedRandomAccessList forEach                               0  0.171
SynchronizedRandomAccessList toArray()                             0  0.247
SynchronizedRandomAccessList toArray(a)                            0  0.363
SynchronizedRandomAccessList toArray(empty)                        0  0.717
SynchronizedRandomAccessList stream().forEach                      0  0.510
SynchronizedRandomAccessList stream().mapToInt                     0  0.785
SynchronizedRandomAccessList stream().collect                      0  0.570
SynchronizedRandomAccessList stream()::iterator                    0  1.255
SynchronizedRandomAccessList parallelStream().forEach              0  2.406
SynchronizedRandomAccessList parallelStream().mapToInt             0  1.876
SynchronizedRandomAccessList parallelStream().collect              0  3.227
SynchronizedRandomAccessList parallelStream()::iterator            0  0.773
SynchronizedRandomAccessList removeIf                              0  0.606
SynchronizedRandomAccessList remove(Object)                        0  0.211
SynchronizedRandomAccessList listIterator forward loop             0  0.283
SynchronizedRandomAccessList listIterator backward loop            0  0.386
SynchronizedRandomAccessList indexOf                               0  0.283
SynchronizedRandomAccessList lastIndexOf                           0  0.259
SynchronizedRandomAccessList equals                                0  0.398
SynchronizedRandomAccessList hashCode                              0  0.275
SynchronizedRandomAccessList replaceAll                            0  0.586
LinkedList iterate for loop                                        0  0.187
LinkedList iterator().forEachRemaining()                           0  0.227
LinkedList spliterator().tryAdvance()                              0  5.805
LinkedList spliterator().forEachRemaining()                        0  0.127
LinkedList contains                                                0  1.235
LinkedList containsAll                                             0  0.104
LinkedList forEach                                                 0  0.131
LinkedList toArray()                                               0  0.104
LinkedList toArray(a)                                              0  0.076
LinkedList toArray(empty)                                          0  0.131
LinkedList stream().forEach                                        0  0.131
LinkedList stream().mapToInt                                       0  0.394
LinkedList stream().collect                                        0  0.243
LinkedList stream()::iterator                                      0  0.382
LinkedList parallelStream().forEach                                0  3.080
LinkedList parallelStream().mapToInt                               0  3.705
LinkedList parallelStream().collect                                0  2.928
LinkedList parallelStream()::iterator                              0  0.315
LinkedList removeIf                                                0  0.187
LinkedList remove(Object)                                          0  0.135
LinkedList descendingIterator() loop                               0  5.068
LinkedList descendingIterator().forEachRemaining()                 0  9.618
LinkedList listIterator forward loop                               0  0.120
LinkedList listIterator backward loop                              0  0.100
LinkedList indexOf                                                 0  0.080
LinkedList lastIndexOf                                             0  0.080
LinkedList equals                                                  0  0.279
LinkedList hashCode                                                0  0.151
LinkedList replaceAll                                              0  0.167
AbstractList$SubList iterate for loop                              0  0.231
AbstractList$SubList iterator().forEachRemaining()                 0  0.689
AbstractList$SubList spliterator().tryAdvance()                    0  0.530
AbstractList$SubList spliterator().forEachRemaining()              0  1.016
AbstractList$SubList contains                                      0  0.135
AbstractList$SubList containsAll                                   0  1.092
AbstractList$SubList forEach                                       0  0.339
AbstractList$SubList toArray()                                     0  0.275
AbstractList$SubList toArray(a)                                    0  0.203
AbstractList$SubList toArray(empty)                                0  0.203
AbstractList$SubList stream().forEach                              0  0.283
AbstractList$SubList stream().mapToInt                             0  0.725
AbstractList$SubList stream().collect                              0  0.450
AbstractList$SubList stream()::iterator                            0  0.367
AbstractList$SubList parallelStream().forEach                      0  3.470
AbstractList$SubList parallelStream().mapToInt                     0  4.259
AbstractList$SubList parallelStream().collect                      0  3.000
AbstractList$SubList parallelStream()::iterator                    0  0.414
AbstractList$SubList removeIf                                      0  0.199
AbstractList$SubList remove(Object)                                0  0.199
AbstractList$SubList listIterator forward loop                     0  0.147
AbstractList$SubList listIterator backward loop                    0  0.295
AbstractList$SubList indexOf                                       0  0.195
AbstractList$SubList lastIndexOf                                   0  0.243
AbstractList$SubList equals                                        0  0.701
AbstractList$SubList hashCode                                      0  0.402
AbstractList$SubList replaceAll                                    0  0.271
CopyOnWriteArrayList iterate for loop                              0  0.135
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.446
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.199
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.092
CopyOnWriteArrayList contains                                      0  5.817
CopyOnWriteArrayList containsAll                                   0  0.673
CopyOnWriteArrayList forEach                                       0  0.155
CopyOnWriteArrayList toArray()                                     0  0.068
CopyOnWriteArrayList toArray(a)                                    0  0.155
CopyOnWriteArrayList toArray(empty)                                0  0.096
CopyOnWriteArrayList stream().forEach                              0  0.159
CopyOnWriteArrayList stream().mapToInt                             0  0.478
CopyOnWriteArrayList stream().collect                              0  0.299
CopyOnWriteArrayList stream()::iterator                            0  0.275
CopyOnWriteArrayList parallelStream().forEach                      0  2.287
CopyOnWriteArrayList parallelStream().mapToInt                     0  2.841
CopyOnWriteArrayList parallelStream().collect                      0  2.187
CopyOnWriteArrayList parallelStream()::iterator                    0  0.219
CopyOnWriteArrayList removeIf                                      0  0.171
CopyOnWriteArrayList remove(Object)                                0  3.179
CopyOnWriteArrayList listIterator forward loop                     0  0.151
CopyOnWriteArrayList listIterator backward loop                    0  0.291
CopyOnWriteArrayList indexOf                                       0  0.375
CopyOnWriteArrayList lastIndexOf                                   0  0.147
CopyOnWriteArrayList equals                                        0  0.434
CopyOnWriteArrayList hashCode                                      0  0.223
CopyOnWriteArrayList replaceAll                                    0  0.363
COWSubList iterate for loop                                        0  7.339
COWSubList iterator().forEachRemaining()                           0  0.410
COWSubList spliterator().tryAdvance()                              0  0.315
COWSubList spliterator().forEachRemaining()                        0  0.096
COWSubList contains                                                0  0.287
COWSubList containsAll                                             0  0.299
COWSubList forEach                                                 0  0.243
COWSubList toArray()                                               0  0.271
COWSubList toArray(a)                                              0  0.211
COWSubList toArray(empty)                                          0  0.199
COWSubList stream().forEach                                        0  0.127
COWSubList stream().mapToInt                                       0  0.438
COWSubList stream().collect                                        0  0.283
COWSubList stream()::iterator                                      0  0.199
COWSubList parallelStream().forEach                                0  2.283
COWSubList parallelStream().mapToInt                               0  3.430
COWSubList parallelStream().collect                                0  2.303
COWSubList parallelStream()::iterator                              0  0.199
COWSubList removeIf                                                0  0.339
COWSubList remove(Object)                                          0  0.139
COWSubList listIterator forward loop                               0  0.231
COWSubList listIterator backward loop                              0  0.398
COWSubList indexOf                                                 0  0.096
COWSubList lastIndexOf                                             0  0.143
COWSubList equals                                                  0  0.438
COWSubList hashCode                                                0  0.219
COWSubList replaceAll                                              0  0.247
ArrayDeque iterate for loop                                        0  0.175
ArrayDeque iterator().forEachRemaining()                           0  0.538
ArrayDeque spliterator().tryAdvance()                              0 14.363
ArrayDeque spliterator().forEachRemaining()                        0  0.311
ArrayDeque contains                                                0  0.462
ArrayDeque containsAll                                             0  0.135
ArrayDeque forEach                                                 0  0.116
ArrayDeque toArray()                                               0  0.586
ArrayDeque toArray(a)                                              0  0.155
ArrayDeque toArray(empty)                                          0  0.159
ArrayDeque stream().forEach                                        0  0.211
ArrayDeque stream().mapToInt                                       0  0.590
ArrayDeque stream().collect                                        0  0.347
ArrayDeque stream()::iterator                                      0  0.287
ArrayDeque parallelStream().forEach                                0  3.323
ArrayDeque parallelStream().mapToInt                               0  4.036
ArrayDeque parallelStream().collect                                0  3.147
ArrayDeque parallelStream()::iterator                              0  0.287
ArrayDeque removeIf                                                0  0.135
ArrayDeque remove(Object)                                          0  0.112
ArrayDeque descendingIterator() loop                               0  5.785
ArrayDeque descendingIterator().forEachRemaining()                 0  0.454
PriorityQueue iterate for loop                                     0  0.179
PriorityQueue iterator().forEachRemaining()                        0  0.171
PriorityQueue spliterator().tryAdvance()                           0  8.777
PriorityQueue spliterator().forEachRemaining()                     0  0.163
PriorityQueue contains                                             0  0.267
PriorityQueue containsAll                                          0  0.151
PriorityQueue forEach                                              0  0.259
PriorityQueue toArray()                                            0  0.518
PriorityQueue toArray(a)                                           0  0.227
PriorityQueue toArray(empty)                                       0  0.151
PriorityQueue stream().forEach                                     0  0.191
PriorityQueue stream().mapToInt                                    0  0.888
PriorityQueue stream().collect                                     0  0.347
PriorityQueue stream()::iterator                                   0  0.251
PriorityQueue parallelStream().forEach                             0  3.586
PriorityQueue parallelStream().mapToInt                            0  3.873
PriorityQueue parallelStream().collect                             0  3.458
PriorityQueue parallelStream()::iterator                           0  0.251
PriorityQueue removeIf                                             0  0.422
PriorityQueue remove(Object)                                       0  0.275
ConcurrentLinkedQueue iterate for loop                             0  0.219
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.163
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  7.426
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  1.363
ConcurrentLinkedQueue contains                                     0  0.546
ConcurrentLinkedQueue containsAll                                  0  1.299
ConcurrentLinkedQueue forEach                                      0  0.139
ConcurrentLinkedQueue toArray()                                    0  0.195
ConcurrentLinkedQueue toArray(a)                                   0  0.191
ConcurrentLinkedQueue toArray(empty)                               0  0.116
ConcurrentLinkedQueue stream().forEach                             0  0.199
ConcurrentLinkedQueue stream().mapToInt                            0  0.980
ConcurrentLinkedQueue stream().collect                             0  0.355
ConcurrentLinkedQueue stream()::iterator                           0  0.367
ConcurrentLinkedQueue parallelStream().forEach                     0  3.060
ConcurrentLinkedQueue parallelStream().mapToInt                    0  3.371
ConcurrentLinkedQueue parallelStream().collect                     0  2.936
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.837
ConcurrentLinkedQueue removeIf                                     0  0.187
ConcurrentLinkedQueue remove(Object)                               0  0.382
ConcurrentLinkedDeque iterate for loop                             0  0.223
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.155
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  7.904
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.219
ConcurrentLinkedDeque contains                                     0  0.466
ConcurrentLinkedDeque containsAll                                  0  0.120
ConcurrentLinkedDeque forEach                                      0  0.502
ConcurrentLinkedDeque toArray()                                    0  0.179
ConcurrentLinkedDeque toArray(a)                                   0  0.187
ConcurrentLinkedDeque toArray(empty)                               0  0.112
ConcurrentLinkedDeque stream().forEach                             0  0.195
ConcurrentLinkedDeque stream().mapToInt                            0  1.275
ConcurrentLinkedDeque stream().collect                             0  0.351
ConcurrentLinkedDeque stream()::iterator                           0  0.279
ConcurrentLinkedDeque parallelStream().forEach                     0  2.661
ConcurrentLinkedDeque parallelStream().mapToInt                    0  2.622
ConcurrentLinkedDeque parallelStream().collect                     0  2.514
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.311
ConcurrentLinkedDeque removeIf                                     0  0.135
ConcurrentLinkedDeque remove(Object)                               0  0.104
ConcurrentLinkedDeque descendingIterator() loop                    0  8.614
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.283
ArrayBlockingQueue iterate for loop                                0  0.578
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.598
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.430
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.753
ArrayBlockingQueue contains                                        0  1.566
ArrayBlockingQueue containsAll                                     0  0.135
ArrayBlockingQueue forEach                                         0  0.139
ArrayBlockingQueue toArray()                                       0  0.199
ArrayBlockingQueue toArray(a)                                      0  0.155
ArrayBlockingQueue toArray(empty)                                  0  0.143
ArrayBlockingQueue stream().forEach                                0  0.315
ArrayBlockingQueue stream().mapToInt                               0  0.896
ArrayBlockingQueue stream().collect                                0  0.462
ArrayBlockingQueue stream()::iterator                              0  0.359
ArrayBlockingQueue parallelStream().forEach                        0 13.143
ArrayBlockingQueue parallelStream().mapToInt                       0  8.701
ArrayBlockingQueue parallelStream().collect                        0  5.522
ArrayBlockingQueue parallelStream()::iterator                      0  0.438
ArrayBlockingQueue removeIf                                        0  0.147
ArrayBlockingQueue remove(Object)                                  0  0.100
LinkedBlockingQueue iterate for loop                               0  0.283
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.721
LinkedBlockingQueue spliterator().tryAdvance()                     0  7.012
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.339
LinkedBlockingQueue contains                                       0  2.060
LinkedBlockingQueue containsAll                                    0  0.231
LinkedBlockingQueue forEach                                        0  0.187
LinkedBlockingQueue toArray()                                      0  0.104
LinkedBlockingQueue toArray(a)                                     0  0.112
LinkedBlockingQueue toArray(empty)                                 0  0.143
LinkedBlockingQueue stream().forEach                               0  0.251
LinkedBlockingQueue stream().mapToInt                              0  0.498
LinkedBlockingQueue stream().collect                               0  0.371
LinkedBlockingQueue stream()::iterator                             0  0.299
LinkedBlockingQueue parallelStream().forEach                       0  4.645
LinkedBlockingQueue parallelStream().mapToInt                      0  3.000
LinkedBlockingQueue parallelStream().collect                       0  2.717
LinkedBlockingQueue parallelStream()::iterator                     0  0.335
LinkedBlockingQueue removeIf                                       0  0.207
LinkedBlockingQueue remove(Object)                                 0  0.080
LinkedBlockingDeque iterate for loop                               0  0.239
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.677
LinkedBlockingDeque spliterator().tryAdvance()                     0  6.996
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.347
LinkedBlockingDeque contains                                       0  1.689
LinkedBlockingDeque containsAll                                    0  0.124
LinkedBlockingDeque forEach                                        0  0.167
LinkedBlockingDeque toArray()                                      0  0.100
LinkedBlockingDeque toArray(a)                                     0  0.108
LinkedBlockingDeque toArray(empty)                                 0  0.139
LinkedBlockingDeque stream().forEach                               0  0.231
LinkedBlockingDeque stream().mapToInt                              0  0.462
LinkedBlockingDeque stream().collect                               0  0.343
LinkedBlockingDeque stream()::iterator                             0  0.339
LinkedBlockingDeque parallelStream().forEach                       0  3.649
LinkedBlockingDeque parallelStream().mapToInt                      0  2.191
LinkedBlockingDeque parallelStream().collect                       0  1.602
LinkedBlockingDeque parallelStream()::iterator                     0  0.315
LinkedBlockingDeque removeIf                                       0  0.251
LinkedBlockingDeque remove(Object)                                 0  0.104
LinkedBlockingDeque descendingIterator() loop                      0  4.884
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.315
LinkedTransferQueue iterate for loop                               0  0.171
LinkedTransferQueue iterator().forEachRemaining()                  0  0.355
LinkedTransferQueue spliterator().tryAdvance()                     0  5.606
LinkedTransferQueue spliterator().forEachRemaining()               0  0.299
LinkedTransferQueue contains                                       0  0.375
LinkedTransferQueue containsAll                                    0  0.112
LinkedTransferQueue forEach                                        0  0.147
LinkedTransferQueue toArray()                                      0  0.159
LinkedTransferQueue toArray(a)                                     0  0.355
LinkedTransferQueue toArray(empty)                                 0  0.096
LinkedTransferQueue stream().forEach                               0  0.211
LinkedTransferQueue stream().mapToInt                              0  0.462
LinkedTransferQueue stream().collect                               0  0.339
LinkedTransferQueue stream()::iterator                             0  0.267
LinkedTransferQueue parallelStream().forEach                       0  3.187
LinkedTransferQueue parallelStream().mapToInt                      0  2.219
LinkedTransferQueue parallelStream().collect                       0  3.888
LinkedTransferQueue parallelStream()::iterator                     0  0.339
LinkedTransferQueue removeIf                                       0  0.219
LinkedTransferQueue remove(Object)                                 0  0.088
PriorityBlockingQueue iterate for loop                             0  5.546
PriorityBlockingQueue iterator().forEachRemaining()                0  0.291
PriorityBlockingQueue spliterator().tryAdvance()                   0  5.283
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.151
PriorityBlockingQueue contains                                     0  0.227
PriorityBlockingQueue containsAll                                  0  0.135
PriorityBlockingQueue forEach                                      0  0.219
PriorityBlockingQueue toArray()                                    0  0.056
PriorityBlockingQueue toArray(a)                                   0  0.223
PriorityBlockingQueue toArray(empty)                               0  0.139
PriorityBlockingQueue stream().forEach                             0  0.155
PriorityBlockingQueue stream().mapToInt                            0  1.502
PriorityBlockingQueue stream().collect                             0  0.801
PriorityBlockingQueue stream()::iterator                           0  0.239
PriorityBlockingQueue parallelStream().forEach                     0  3.072
PriorityBlockingQueue parallelStream().mapToInt                    0  4.235
PriorityBlockingQueue parallelStream().collect                     0  1.888
PriorityBlockingQueue parallelStream()::iterator                   0  0.299
PriorityBlockingQueue removeIf                                     0  0.450
PriorityBlockingQueue remove(Object)                               0  0.124
ListN iterate for loop                                             0  0.510
ListN iterator().forEachRemaining()                                0  0.135
ListN spliterator().tryAdvance()                                   0  1.645
ListN spliterator().forEachRemaining()                             0  0.124
ListN contains                                                     0  0.367
ListN containsAll                                                  0  0.135
ListN forEach                                                      0  0.124
ListN toArray()                                                    0  0.072
ListN toArray(a)                                                   0  0.135
ListN toArray(empty)                                               0  0.104
ListN stream().forEach                                             0  0.143
ListN stream().mapToInt                                            0  0.462
ListN stream().collect                                             0  0.510
ListN stream()::iterator                                           0  0.259
ListN parallelStream().forEach                                     0  3.088
ListN parallelStream().mapToInt                                    0  5.255
ListN parallelStream().collect                                     0  3.239
ListN parallelStream()::iterator                                   0  1.084
ListN listIterator forward loop                                    0  0.442
ListN listIterator backward loop                                   0  0.175
ListN indexOf                                                      0  0.100
ListN lastIndexOf                                                  0  0.072
ListN equals                                                       0  1.562
ListN hashCode                                                     0  0.219
ImmutableCollections$SubList iterate for loop                      0  1.127
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.235
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.873
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.163
ImmutableCollections$SubList contains                              0  0.371
ImmutableCollections$SubList containsAll                           0  0.171
ImmutableCollections$SubList forEach                               0  0.159
ImmutableCollections$SubList toArray()                             0  0.175
ImmutableCollections$SubList toArray(a)                            0  0.147
ImmutableCollections$SubList toArray(empty)                        0  0.462
ImmutableCollections$SubList stream().forEach                      0  0.211
ImmutableCollections$SubList stream().mapToInt                     0  0.442
ImmutableCollections$SubList stream().collect                      0  0.323
ImmutableCollections$SubList stream()::iterator                    0  0.283
ImmutableCollections$SubList parallelStream().forEach              0  3.048
ImmutableCollections$SubList parallelStream().mapToInt             0  2.797
ImmutableCollections$SubList parallelStream().collect              0  2.685
ImmutableCollections$SubList parallelStream()::iterator            0  1.470
ImmutableCollections$SubList listIterator forward loop             0  0.327
ImmutableCollections$SubList listIterator backward loop            0  0.143
ImmutableCollections$SubList indexOf                               0  0.131
ImmutableCollections$SubList lastIndexOf                           0  0.104
ImmutableCollections$SubList equals                                0  4.036
ImmutableCollections$SubList hashCode                              0  0.390
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
