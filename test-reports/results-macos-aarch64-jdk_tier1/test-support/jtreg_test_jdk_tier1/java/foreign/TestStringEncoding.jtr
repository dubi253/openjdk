#Test Results (version 2)
#Mon Apr 29 00:26:16 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=testng
modules=java.base/jdk.internal.foreign
run=USER_SPECIFIED testng TestStringEncoding\n
source=TestStringEncoding.java
title=\ 

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java
elapsed=540 0\:00\:00.540
end=Mon Apr 29 00\:26\:16 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.15
javatestOS=Mac OS X 14.4.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
modules=java.base/jdk.internal.foreign
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Mon Apr 29 00\:26\:16 UTC 2024
test=java/foreign/TestStringEncoding.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.4.1,family\:mac,simple_arch\:aarch64,simple_version\:14.4,processors\:3,maxMemory\:7516192768,maxSwap\:1073741824]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.4.1
totalTime=541
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/foreign

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/226)----------
command: build TestStringEncoding
reason: Named class compiled on demand
started: Mon Apr 29 00:26:16 UTC 2024
Test directory:
  compile: TestStringEncoding
finished: Mon Apr 29 00:26:16 UTC 2024
elapsed time (seconds): 0.043
result: Passed. Build successful

#section:compile
----------messages:(8/396)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:26:16 UTC 2024
Additional options from @modules: --add-modules java.base --add-exports java.base/jdk.internal.foreign=ALL-UNNAMED
Mode: agentvm
Agent id: 2
finished: Mon Apr 29 00:26:16 UTC 2024
elapsed time (seconds): 0.043
----------configuration:(15/1039)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  add modules: java.base                      
  add exports: java.base/jdk.internal.foreign ALL-UNNAMED
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign 
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign 
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d 
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 

----------rerun:(36/3493)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/foreign/TestStringEncoding.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -J-Dtest.modules=java.base/jdk.internal.foreign \\
        --add-modules java.base \\
        --add-exports java.base/jdk.internal.foreign=ALL-UNNAMED \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java
result: Passed. Compilation successful

#section:testng
----------messages:(8/314)----------
command: testng TestStringEncoding
reason: User specified action: run testng TestStringEncoding 
started: Mon Apr 29 00:26:16 UTC 2024
Mode: agentvm
Agent id: 7
Additional exports to unnamed modules from @modules: java.base/jdk.internal.foreign
finished: Mon Apr 29 00:26:16 UTC 2024
elapsed time (seconds): 0.495
----------configuration:(14/983)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

Test Layer
  add exports: java.base/jdk.internal.foreign ALL-UNNAMED
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d 
               /Users/runner/work/openjdk/openjdk/test/jdk/java/foreign 

----------rerun:(27/2994)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/foreign/TestStringEncoding.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign/TestStringEncoding.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign \\
        -Dtest.modules=java.base/jdk.internal.foreign \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/1/java/foreign/TestStringEncoding.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/foreign:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/foreign/TestStringEncoding.java false TestStringEncoding
----------System.out:(319/32453)*----------
test TestStringEncoding.chunked_strlen_byte(): success
test TestStringEncoding.chunked_strlen_short(): success
test TestStringEncoding.expandedSegment("testing"): success
test TestStringEncoding.expandedSegment(""): success
test TestStringEncoding.expandedSegment("X"): success
test TestStringEncoding.expandedSegment("12345"): success
test TestStringEncoding.expandedSegment("yen \u00a5"): success
test TestStringEncoding.expandedSegment("snowman \u26c4"): success
test TestStringEncoding.expandedSegment("rainbow \ud83c\udf08"): success
test TestStringEncoding.expandedSegment("0"): success
test TestStringEncoding.expandedSegment("01"): success
test TestStringEncoding.expandedSegment("012"): success
test TestStringEncoding.expandedSegment("0123"): success
test TestStringEncoding.expandedSegment("01234"): success
test TestStringEncoding.expandedSegment("012345"): success
test TestStringEncoding.expandedSegment("0123456"): success
test TestStringEncoding.expandedSegment("01234567"): success
test TestStringEncoding.expandedSegment("012345678"): success
test TestStringEncoding.expandedSegment("0123456789"): success
test TestStringEncoding.nativeSegFromNativeCall("testing"): success
test TestStringEncoding.nativeSegFromNativeCall(""): success
test TestStringEncoding.nativeSegFromNativeCall("X"): success
test TestStringEncoding.nativeSegFromNativeCall("12345"): success
test TestStringEncoding.nativeSegFromNativeCall("yen \u00a5"): success
test TestStringEncoding.nativeSegFromNativeCall("snowman \u26c4"): success
test TestStringEncoding.nativeSegFromNativeCall("rainbow \ud83c\udf08"): success
test TestStringEncoding.nativeSegFromNativeCall("0"): success
test TestStringEncoding.nativeSegFromNativeCall("01"): success
test TestStringEncoding.nativeSegFromNativeCall("012"): success
test TestStringEncoding.nativeSegFromNativeCall("0123"): success
test TestStringEncoding.nativeSegFromNativeCall("01234"): success
test TestStringEncoding.nativeSegFromNativeCall("012345"): success
test TestStringEncoding.nativeSegFromNativeCall("0123456"): success
test TestStringEncoding.nativeSegFromNativeCall("01234567"): success
test TestStringEncoding.nativeSegFromNativeCall("012345678"): success
test TestStringEncoding.nativeSegFromNativeCall("0123456789"): success
test TestStringEncoding.segmentationFault(): success
test TestStringEncoding.strlen_int(): success
test TestStringEncoding.testOffset("testing"): success
test TestStringEncoding.testOffset(""): success
test TestStringEncoding.testOffset("X"): success
test TestStringEncoding.testOffset("12345"): success
test TestStringEncoding.testOffset("yen \u00a5"): success
test TestStringEncoding.testOffset("snowman \u26c4"): success
test TestStringEncoding.testOffset("rainbow \ud83c\udf08"): success
test TestStringEncoding.testOffset("0"): success
test TestStringEncoding.testOffset("01"): success
test TestStringEncoding.testOffset("012"): success
test TestStringEncoding.testOffset("0123"): success
test TestStringEncoding.testOffset("01234"): success
test TestStringEncoding.testOffset("012345"): success
test TestStringEncoding.testOffset("0123456"): success
test TestStringEncoding.testOffset("01234567"): success
test TestStringEncoding.testOffset("012345678"): success
test TestStringEncoding.testOffset("0123456789"): success
test TestStringEncoding.testPeculiarContentSingleByte(): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@164e3e22): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@5219dd59): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@56cef24f): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@71ea6c84): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1b67a9a4): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@532cdb8e): success
test TestStringEncoding.testStringAllocateFromWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@5763e0e5): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@4b882535): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@72d3743e): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@6ce0e893): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@255e81d5): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@533e383f): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@525ea57): success
test TestStringEncoding.testStringAllocateFromWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@2a8f0cc0): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@2c0dce1f): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@14c0cda8): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@7eded163): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@7cfb1988): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@7627d3cc): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@57d5025): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@153bf8d4): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@67282613): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@2753f8b2): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@3ea6fe8a): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@7e9d8c8d): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@1630089a): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@5215c234): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@4c14e69f): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@1ed4f54f): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@4622208b): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@3c1d50ef): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@41d62b0a): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@6595d4e): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@27c12ca8): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1d8e9b2e): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@2393693f): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@5d10b618): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@48f4fea5): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1d61cba0): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@4fb0d0c): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@7ae25d47): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@58a65e8f): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@1db0ffdb): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@11cbe9ae): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@1962c611): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@bb31e65): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@2dde66db): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@6028e8a6): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@4ee94f06): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@2ae1ade6): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@7ddfb7ed): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@6b0a0774): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@17665783): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@404ce109): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@31c332cf): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@6fa0abd): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@e541f07): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@18e0f29d): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@5448d2d8): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@62ad99e5): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@4325c061): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@72ec4ba): success
test TestStringEncoding.testStringAllocateFromWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1598d264): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@55295074): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@4cedcf5e): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@7de89d15): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@53e45fd9): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@15a7b61f): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@3d0fc7ca): success
test TestStringEncoding.testStringGetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@54439673): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@26042cc9): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@3e10b3b4): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@74d9790b): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@7c2a838b): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@6b593f8a): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@40aaf2b8): success
test TestStringEncoding.testStringGetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1b59c341): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@4e796f1e): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@32174150): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@47ed19de): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@624008d6): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@549a6f58): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@5987b960): success
test TestStringEncoding.testStringGetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@640781f2): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@5aca4710): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@79f6bdcf): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@ba5078): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@21004083): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@668679ab): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@1438a24e): success
test TestStringEncoding.testStringGetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@a86061): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@1f507e80): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@32b02597): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@2d6f714d): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@105ca283): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@6d731b77): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@13a75336): success
test TestStringEncoding.testStringGetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@776daf71): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@12dabc8): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@79a4abfd): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@3172a4e8): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@679e0670): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@adf8756): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@425ff3d9): success
test TestStringEncoding.testStringGetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@650fce77): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@3f660148): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@44fdd10e): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@13c4ad63): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@5772a20f): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@69a9050d): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@696588a6): success
test TestStringEncoding.testStringGetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@43229c6e): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@22722663): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@5bbb920c): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@1a8ae82e): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@2f460fd0): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@3c2b64d4): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@7fe9edfc): success
test TestStringEncoding.testStringGetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1d64c0fb): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@206ba7ec): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@4d574052): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@4c4fbb79): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@bc5b2ff): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@b5052ac): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@5c65425b): success
test TestStringEncoding.testStringGetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@e667e67): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@76a9df69): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@4e526682): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@373783fb): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1a2739c3): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@514d438d): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@172f0661): success
test TestStringEncoding.testStringSetWithCharset(ISO-8859-1, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@6aed8b6e): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@56454d84): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@4908423d): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@2a9eaeba): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@2c91286): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@78acf250): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@6609f02): success
test TestStringEncoding.testStringSetWithCharset(US-ASCII, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@844cea3): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@71cd9f31): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@3278ca9): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@796bf886): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@617dccfb): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@7827ab97): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@684b49c9): success
test TestStringEncoding.testStringSetWithCharset(UTF-16, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1e64ebf6): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@575fe516): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@7224e2ec): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@53df8e87): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@29ab2ba0): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@42b63dbf): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@2c739a59): success
test TestStringEncoding.testStringSetWithCharset(UTF-16BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@4d3bdacb): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@786a6de4): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@614ce2e9): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@4b860e56): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@115a4580): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@44c4e6e6): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@401343a6): success
test TestStringEncoding.testStringSetWithCharset(UTF-16LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@8802de4): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@778a400b): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@3b7e5635): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@6b9132d): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@6951bb94): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@69e3187f): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@7b6773d1): success
test TestStringEncoding.testStringSetWithCharset(UTF-32, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@154694a3): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@67b3539b): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@3ee8ad34): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@5489712f): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@2ba729a): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@7a6ac323): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@63bd4590): success
test TestStringEncoding.testStringSetWithCharset(UTF-32BE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@1b9fd41b): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@20d142df): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@a7c8913): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@de3fccc): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@2363abd9): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@22bbeebd): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@8dbc5ca): success
test TestStringEncoding.testStringSetWithCharset(UTF-32LE, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@7fc28900): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfByte@6de05db1): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfChar@41e8fb42): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfShort@189b4fe2): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfInt@1de41940): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfFloat@4968cbfa): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfLong@289fa758): success
test TestStringEncoding.testStringSetWithCharset(UTF-8, jdk.internal.foreign.HeapMemorySegmentImpl$OfDouble@7e0735e5): success
test TestStringEncoding.testStrings("testing"): success
test TestStringEncoding.testStrings(""): success
test TestStringEncoding.testStrings("X"): success
test TestStringEncoding.testStrings("12345"): success
test TestStringEncoding.testStrings("yen \u00a5"): success
test TestStringEncoding.testStrings("snowman \u26c4"): success
test TestStringEncoding.testStrings("rainbow \ud83c\udf08"): success
test TestStringEncoding.testStrings("0"): success
test TestStringEncoding.testStrings("01"): success
test TestStringEncoding.testStrings("012"): success
test TestStringEncoding.testStrings("0123"): success
test TestStringEncoding.testStrings("01234"): success
test TestStringEncoding.testStrings("012345"): success
test TestStringEncoding.testStrings("0123456"): success
test TestStringEncoding.testStrings("01234567"): success
test TestStringEncoding.testStrings("012345678"): success
test TestStringEncoding.testStrings("0123456789"): success
test TestStringEncoding.testStringsHeap("testing"): success
test TestStringEncoding.testStringsHeap(""): success
test TestStringEncoding.testStringsHeap("X"): success
test TestStringEncoding.testStringsHeap("12345"): success
test TestStringEncoding.testStringsHeap("yen \u00a5"): success
test TestStringEncoding.testStringsHeap("snowman \u26c4"): success
test TestStringEncoding.testStringsHeap("rainbow \ud83c\udf08"): success
test TestStringEncoding.testStringsHeap("0"): success
test TestStringEncoding.testStringsHeap("01"): success
test TestStringEncoding.testStringsHeap("012"): success
test TestStringEncoding.testStringsHeap("0123"): success
test TestStringEncoding.testStringsHeap("01234"): success
test TestStringEncoding.testStringsHeap("012345"): success
test TestStringEncoding.testStringsHeap("0123456"): success
test TestStringEncoding.testStringsHeap("01234567"): success
test TestStringEncoding.testStringsHeap("012345678"): success
test TestStringEncoding.testStringsHeap("0123456789"): success
test TestStringEncoding.unalignedSegmentSingleByte("testing"): success
test TestStringEncoding.unalignedSegmentSingleByte(""): success
test TestStringEncoding.unalignedSegmentSingleByte("X"): success
test TestStringEncoding.unalignedSegmentSingleByte("12345"): success
test TestStringEncoding.unalignedSegmentSingleByte("yen \u00a5"): success
test TestStringEncoding.unalignedSegmentSingleByte("snowman \u26c4"): success
test TestStringEncoding.unalignedSegmentSingleByte("rainbow \ud83c\udf08"): success
test TestStringEncoding.unalignedSegmentSingleByte("0"): success
test TestStringEncoding.unalignedSegmentSingleByte("01"): success
test TestStringEncoding.unalignedSegmentSingleByte("012"): success
test TestStringEncoding.unalignedSegmentSingleByte("0123"): success
test TestStringEncoding.unalignedSegmentSingleByte("01234"): success
test TestStringEncoding.unalignedSegmentSingleByte("012345"): success
test TestStringEncoding.unalignedSegmentSingleByte("0123456"): success
test TestStringEncoding.unalignedSegmentSingleByte("01234567"): success
test TestStringEncoding.unalignedSegmentSingleByte("012345678"): success
test TestStringEncoding.unalignedSegmentSingleByte("0123456789"): success
test TestStringEncoding.unboundedSegment("testing"): success
test TestStringEncoding.unboundedSegment(""): success
test TestStringEncoding.unboundedSegment("X"): success
test TestStringEncoding.unboundedSegment("12345"): success
test TestStringEncoding.unboundedSegment("yen \u00a5"): success
test TestStringEncoding.unboundedSegment("snowman \u26c4"): success
test TestStringEncoding.unboundedSegment("rainbow \ud83c\udf08"): success
test TestStringEncoding.unboundedSegment("0"): success
test TestStringEncoding.unboundedSegment("01"): success
test TestStringEncoding.unboundedSegment("012"): success
test TestStringEncoding.unboundedSegment("0123"): success
test TestStringEncoding.unboundedSegment("01234"): success
test TestStringEncoding.unboundedSegment("012345"): success
test TestStringEncoding.unboundedSegment("0123456"): success
test TestStringEncoding.unboundedSegment("01234567"): success
test TestStringEncoding.unboundedSegment("012345678"): success
test TestStringEncoding.unboundedSegment("0123456789"): success

===============================================
java/foreign/TestStringEncoding.java
Total tests run: 313, Passes: 313, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
