#Test Results (version 2)
#Mon Apr 29 00:48:05 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=315 0\:00\:00.315
end=Mon Apr 29 00\:48\:05 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.15
javatestOS=Mac OS X 14.4.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-04-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build build compile testng
start=Mon Apr 29 00\:48\:04 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.4.1,family\:mac,simple_arch\:aarch64,simple_version\:14.4,processors\:3,maxMemory\:7516192768,maxSwap\:1073741824]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.4.1
totalTime=315
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/java/util/List

#section:script_messages
----------messages:(7/572)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/test/lib

#section:build
----------messages:(5/216)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Mon Apr 29 00:48:04 UTC 2024
finished: Mon Apr 29 00:48:04 UTC 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:build
----------messages:(7/203)----------
command: build SubList
reason: Named class compiled on demand
started: Mon Apr 29 00:48:04 UTC 2024
Test directory:
  compile: SubList
finished: Mon Apr 29 00:48:04 UTC 2024
elapsed time (seconds): 0.04
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:48:04 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:48:04 UTC 2024
elapsed time (seconds): 0.04
----------configuration:(15/1109)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3693)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/209)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Mon Apr 29 00:48:04 UTC 2024
Mode: agentvm
Agent id: 34
finished: Mon Apr 29 00:48:05 UTC 2024
elapsed time (seconds): 0.273
----------configuration:(15/1098)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3295)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/scratch/0 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_tier1/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91956)----------
Seed from RandomFactory = -4616282786053108803L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -268544519], 0, 1): success
test SubList.testAdd([42, 235497344], 0, 1): success
test SubList.testAdd([42, -1940811488], 0, 1): success
test SubList.testAdd([42, -542139993], 0, 1): success
test SubList.testAdd([42, -1609533531], 0, 1): success
test SubList.testAdd([42, 676930070], 0, 1): success
test SubList.testAdd([42, 731270192], 0, 1): success
test SubList.testAdd([42, -918837211], 0, 1): success
test SubList.testAdd([42, -1805397195], 0, 1): success
test SubList.testAdd(java.util.ArrayList@6b47f80f, 2, 5): success
test SubList.testAdd(java.util.LinkedList@403099c4, 2, 5): success
test SubList.testAdd(java.util.Vector@287756, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@5e014e2, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@4917b31b, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@5f419ed0, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@16fff2bd, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@16f05ed, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@2afe5f77, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@5cf07dd5, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@2ec79568, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1e878940, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([1367743053, 42], 0, 1): success
test SubList.testAddAtPos([42, -292749692], 0, 1): success
test SubList.testAddAtPos([42, 434018958], 0, 1): success
test SubList.testAddAtPos([-406882697, 42], 0, 1): success
test SubList.testAddAtPos([42, -978535704], 0, 1): success
test SubList.testAddAtPos([535110325, 42], 0, 1): success
test SubList.testAddAtPos([42, -912288199], 0, 1): success
test SubList.testAddAtPos([108938260, 42], 0, 1): success
test SubList.testAddAtPos([-1860724907, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@796fc6b4, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@30a7bfff, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@5a4f228d, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@7406842d, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@1a0eccc4, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3f7a8174, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@5cd681b6, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@226e81e4, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@6ab312d9, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@535bdfd8, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@24c96865, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4c915423, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@7f6bbd8b, 2, 5): success
test SubList.testClear(java.util.LinkedList@6ff1eafe, 2, 5): success
test SubList.testClear(java.util.Vector@78ea4d51, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@5c5f19ae, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@ed5ff1, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@66cad30a, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@efff059, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@1dc6fd89, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@31df3af4, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@e90b6b8, 2, 5): success
test SubList.testEquals(java.util.LinkedList@10c8c955, 2, 5): success
test SubList.testEquals(java.util.Vector@2fdaecd7, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@143374, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@79f96046, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@893782b, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@57cdace5, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@67c4df2, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@79f7a6f0, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@612b6d49, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@5ab00cf9, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@69fd87, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@1d080741, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@26ccb9d, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@67defe57, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@67b477b6, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@377f2431, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@2aeaec24, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@2aeaec24, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@7778b512, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5027cb7, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1bc98496, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@70ab8216, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@2d92ff72, 2, 5): success
test SubList.testGet(java.util.LinkedList@2e69bc68, 2, 5): success
test SubList.testGet(java.util.Vector@7ffc1435, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@60d8e0bf, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@425c8f71, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6a2a2684, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@62319ac7, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@13dabd27, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3c33cbc3, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2fe9ed0e, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@b3dd2a0, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@607f59f6, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@30b98fc, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@55b94a03, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@39513e93, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@2746e7d0, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@4a85101b, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@28e0cb55, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@28e0cb55, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1ef011be, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@55dee65e, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@46603cd8, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@72061178, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@76fab789, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@7d87fff5, 2, 5): success
test SubList.testIndexOf(java.util.Vector@25b5a847, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@2555f133, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@2b73108d, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@3840e835, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@4b5151ca, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@74207cb8, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@63f41dbe, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2ec70c00, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@193aa2e8, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7dfdbd2e, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@2e53630b, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@111e2358, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@474c2169, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@6235e39e, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@62183a15, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@66ca6f90, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@66ca6f90, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@75cec29d, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6aa33812, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@5a1d542d, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@546a018, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@250e9e91, 2, 5): success
test SubList.testIterator(java.util.LinkedList@14c652dc, 2, 5): success
test SubList.testIterator(java.util.Vector@5d3c1c91, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@489daa98, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@46503abd, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@574ac077, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@40237f5a, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@62ebc0, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@55495bc9, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@15c8f177, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@5dbbd733, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@14e2ab42, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@1e4308c, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@6a762183, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2220995e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@5dcb4d28, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@12b13cf, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@38511f4f, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@38511f4f, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@51391638, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@669e8cd, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@7d9f0878, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@43ad7280, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@796ad8c0, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@686b510, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@49e8c837, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@667b792d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@520aeb52, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@9402f4a, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@30485b71, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@70aa7dc3, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@5cbfa2ea, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@46c62c15, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@3e74f0c6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@24e1cfc1, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@7eb10335, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3284f5e8, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7ef98e3c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@9d6657, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@216f898a, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6d027436, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6d027436, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@6484d54f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@27ca14fa, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@42d116bb, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@62345b81, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@479d5668, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@14bea806, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@444bc484, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@2848e00d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@47c66e98, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@35c8c21, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@63459f0b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@325b5b44, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@76afc44c, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@42bd7edf, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@1aacd973, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@327a6733, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@a1e5a0e, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@35324cfb, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@104b2318, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@64af6f72, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@2b9fb1bd, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1a947718, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6f76503, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@4023f356, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@349cf0ce, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@63662ef2, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1380ae7d, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@65d53698, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@47acecae, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5281b2aa, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@23ecc29b, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@23ecc29b, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@59e26318, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@6ff810e4, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1c0a02cd, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5330e913, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@1b995da7, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6914ceb1, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@360bd081, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@7acce2b2, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@243e4a32, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@70c20adb, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@70c20adb, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@3a7e2dcc, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@5e7c6f1b, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@771b01d6, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@4345f1f0, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@6a20a45b, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@38102b5d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@57279e19, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@47a25378, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@4302f33c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@66668adf, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@69f7cb28, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@59cf3395, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@71d4d03e, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@3168a3fc, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@2f0449b6, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@1118507a, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@550e8144, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@38a08ddc, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@10169923, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3f9cef9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@f4edb98, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@263723eb, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@586c6d32, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@95296ef, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2c71860a, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@5615cc78, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@798df432, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@73773cc4, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@5249f46b, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@5075b4f, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@7029eca0, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@7029eca0, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@5b4abf34, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@3df74e94, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2c7b5d04, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@74a2075, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@4e9c6353, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@6f11a51f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@5bf2e0cc, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7aab172f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@3552b85d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@506dfe06, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@a3acf87, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@2b335ff2, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@d0fef5f, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@69940b7, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@2901c11a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@46e3eecd, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@5917934e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@11a092f0, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@73f0c3a7, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7c9a3f81, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@5a37b205, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@5e574365, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1096223929], 0, 1): success
test SubList.testListIteratorSet([1009950626], 0, 1): success
test SubList.testListIteratorSet([1259351204], 0, 1): success
test SubList.testListIteratorSet([1596930634], 0, 1): success
test SubList.testListIteratorSet([-1247304214], 0, 1): success
test SubList.testListIteratorSet([1286701414], 0, 1): success
test SubList.testListIteratorSet([-820829250], 0, 1): success
test SubList.testListIteratorSet([-2007525405], 0, 1): success
test SubList.testListIteratorSet([-2086488721], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@213080f, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@121f2d3a, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@711e4e63, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@2b97e368, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@78fd466b, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7f7974fd, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@d4728ba, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@589fb321, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@2c2b0854, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4a583276, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@49a7a13a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@71bf8fbc, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-439665437], 0, 1): success
test SubList.testListIteratorSetPrevious([-231744611], 0, 1): success
test SubList.testListIteratorSetPrevious([1719718525], 0, 1): success
test SubList.testListIteratorSetPrevious([-1172679321], 0, 1): success
test SubList.testListIteratorSetPrevious([1691506846], 0, 1): success
test SubList.testListIteratorSetPrevious([-1560538904], 0, 1): success
test SubList.testListIteratorSetPrevious([-25823031], 0, 1): success
test SubList.testListIteratorSetPrevious([731832624], 0, 1): success
test SubList.testListIteratorSetPrevious([-45361545], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@6b958a50, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@4f903ba5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@6c819900, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@27ab15f4, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@662bc863, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3260994d, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@1ce52856, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@3efb2e8c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@3f71aae, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@576a8fba, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@73147fed, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@52e3fab4, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@5a270edb, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@64fee918, 2, 5): success
test SubList.testModAdd(java.util.Vector@30082471, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@5e955427, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@20b2415f, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1f1ce78b, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3a0cdd85, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@4c937038, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@2efcca24, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@12552395, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@2e0c13f1, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5462e592, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@15a64c44, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@668da86a, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@2eaf9666, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@696edf6b, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@537f5840, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@71cecea2, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@56f04c0b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@19cc0900, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@17818bff, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@73ece709, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@33b79a8, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1631220e, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@7c4f237b, 2, 5): success
test SubList.testModClear(java.util.LinkedList@198d2548, 2, 5): success
test SubList.testModClear(java.util.Vector@1d7f1f43, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@365c2988, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@3ee19532, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@70af3cd5, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@116736ae, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@7d24880f, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1df44837, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1225279c, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@6e311dec, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@5b55a0c5, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@42be03cd, 2, 5): success
test SubList.testModGet(java.util.LinkedList@6cad6d73, 2, 5): success
test SubList.testModGet(java.util.Vector@155a3ed0, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@1a61694e, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@3e2dba22, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@3063595e, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@3466ffb0, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@74af3d53, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@5d7a1639, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6f9250e4, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@2bb6ceac, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@61d171f4, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@155325b9, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1fa63065, 2, 5): success
test SubList.testModHashCode(java.util.Vector@543a602a, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@151eb808, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@d367b57, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7a1af068, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1d13c7ca, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@c91d6fd, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@23b315cb, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@2f648234, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@594e0985, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7b230689, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@16c6e528, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@7c2849f6, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@7c1532a2, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@5ff7a76b, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@ce30164, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7ed9899e, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@6391522, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@15844feb, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@67524fc4, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@6ab85f73, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@50dca832, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7a361e, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@f67e858, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@ae46259, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@6c5f8cac, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@6960b29a, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@71da5f2f, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@227144d9, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@644e0b3a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@4c87dd2e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@6f433833, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@39d4eaef, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@33c171f1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@279ea1d9, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@26c92158, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@7086df99, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@157fc44, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@2b58568a, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@258188e9, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@994cb8, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@65a0bbf9, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@23de0dc0, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@729d1644, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@bba7820, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@13cb4ffc, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5d500efb, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@7d139db0, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@6c9ae150, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@245d5fd6, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@f6baf4f, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@1132211f, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@75c00edf, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@51b71e53, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@1d2b4b12, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@4a8968f5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@254c2a32, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@2a52f586, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@48a06541, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@dd2eb9e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@296091f3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@6dd7a1f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@682de16e, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@56b7397b, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6c3d585f, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@573dfd3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@f8c6185, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7c6a59ed, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3029147f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@1da1bf6a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@17552d1c, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@1b6d0f7c, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@6d52b55f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@68e819d0, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@6ab500e1, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@365b5675, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4b9cecc0, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@16ab34c1, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@51c20cf9, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1d44af26, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1c2c76d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@5f83074b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3dcc8567, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@fb56511, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@4563c390, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@3bb30db8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@583bacd0, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@37f51fc0, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4d4e7d20, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6f7b460, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@40aebc8e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@7f3a98ed, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@fffb84c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@4b9690ed, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@2a87110, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@2875e967, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@2f41147, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@3f1dbaaa, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@7a815b6a, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@32b5dce5, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@72ca81ee, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@71a16c59, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@53a0f6c1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@3ada2c5e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5d39502, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@34a4bfd0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7735fc19, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@2fde4ce, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@716ce487, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@3c5cc493, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@74d1ce90, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@2b13aea6, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@49ef7b70, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@2d173c6, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@7e6fab5, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@367266a9, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@32395e66, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@b9dc39e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2038362d, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@48c047c3, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@5f5ee234, 2, 5): success
test SubList.testModRemove(java.util.Vector@27674e1c, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@707a1c09, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@1fc0cbe5, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@f04a721, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@4709099a, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@31186e2b, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1b8a1d88, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@d84601c, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@56e31808, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@7ed7b495, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@443a8c97, 2, 5): success
test SubList.testModSet(java.util.LinkedList@4028e9b4, 2, 5): success
test SubList.testModSet(java.util.Vector@68e9c87d, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@5ceb4a6f, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@3febfc34, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@29a3e7e1, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@6b26254c, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@1997010e, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@2bf701d6, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4e8f3a09, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@2608f5e6, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@70fce067, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@35e5d5e4, 2, 5): success
test SubList.testRemove(java.util.LinkedList@71b3f281, 2, 5): success
test SubList.testRemove(java.util.Vector@6b6e7d0c, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@7da61c99, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@799fb364, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@63e1b1fc, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@54070870, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@65250397, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@654a44cd, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([752375128], 0, 1): success
test SubList.testSet([833024461], 0, 1): success
test SubList.testSet([596472287], 0, 1): success
test SubList.testSet([2132112584], 0, 1): success
test SubList.testSet([1884199583], 0, 1): success
test SubList.testSet([1926905870], 0, 1): success
test SubList.testSet([-2061145746], 0, 1): success
test SubList.testSet([-378675801], 0, 1): success
test SubList.testSet([1440767534], 0, 1): success
test SubList.testSet(java.util.ArrayList@1c329a89, 2, 5): success
test SubList.testSet(java.util.LinkedList@708a182a, 2, 5): success
test SubList.testSet(java.util.Vector@5b295304, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@14bc3be4, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@6d5a8f69, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@15e69ff1, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@23ec85c, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@44491928, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3a213f8f, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5b6aca3d, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@6db9fa7e, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@743dd31, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@47c98283, 2, 5): success
test SubList.testSubList(java.util.LinkedList@7e7e8a63, 2, 5): success
test SubList.testSubList(java.util.Vector@21dd6202, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@759443f2, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@4c698b57, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7bf9b8c1, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@c749b4c, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@39f0df7d, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@21548464, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5bd39fb2, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@416b12ea, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5fc7ab94, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@349f1df2, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@dee15c7, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@722b51fd, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@36e72dd6, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4827e19f, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@292c00c1, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@292c00c1, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@2cdb921a, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@3a691b1e, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@69a8e646, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3bd9df18, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@170edf8c, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@26bfb8d2, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@55c608a8, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@2cdbe35f, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6938d8c8, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@169b929c, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@169b929c, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1e7ef26b, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@5f395eb6, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@6716470, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@1b79c2b4, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@11524088, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@14708e2c, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@382de93a, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@4b071e9, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6a4e4563, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@7f3a5ee3, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@7f3a5ee3, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@5b91881b, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@4537f786, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@2320f6a2, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2798ea8e, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@77192dbb, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@50b8c11c, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@76a5b326, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@43466728, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@647d0521, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@2a15adc1, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@2a15adc1, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@7354774e, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2bc74b29, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@2bb0eece, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@b9cd037, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@5821718f, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@5b2c33b8, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2c09a887, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@397241b3, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@44f27b3e, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@2d8882ee, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@2d8882ee, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@57c636ff, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@11c09322, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@54ee8f6e, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7d26e3dd, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@599d5bbe, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7bd24d52, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6c7928fd, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@22d5b528, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@42636acc, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@49c189e1, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@49c189e1, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@2453ae0a, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@66cb5f42, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6b15bfe8, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@730b5722, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@9ebaa61, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@33e5d2c0, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3cd29c26, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@1f6947e3, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1e21111a, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@4f285d8a, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@4f285d8a, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@4ede52dc, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@44c2c1ab, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1fc70ed7, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@3226c618, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@13bc315b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@23a17123, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@65498636, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@783dee53, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2d229fad, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@72836b76, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@72836b76, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@4fb59a45, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@322c9a4e, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@3bb50d66, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6f9bedfc, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@5a01938e, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@7f09245b, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2c3465d9, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@361bdb9d, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2596aa9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@17c18083, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@16052f17, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@78da9a12, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@7215422, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@7d8c8327, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@9775fb7, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@460bc1b0, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@387e9ad3, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@6f8d4ff9, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@431ac6ab, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@7e3c11ee, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@7e3c11ee, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@572a17b6, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@3611b808, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@5e04212b, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@126050c9, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
