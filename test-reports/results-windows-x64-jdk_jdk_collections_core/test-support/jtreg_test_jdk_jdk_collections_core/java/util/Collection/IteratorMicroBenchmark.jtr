#Test Results (version 2)
#Thu Feb 29 16:24:09 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\r\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=532 0\:00\:00.532
end=Thu Feb 29 16\:24\:09 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1201-883.bqzjtvoehc0u5c4z3cleewhyhf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Thu Feb 29 16\:24\:09 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=532
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Collection

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183, mixed mode, sharing)

#section:build
----------messages:(7/241)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Thu Feb 29 16:24:09 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Thu Feb 29 16:24:09 UTC 2024
elapsed time (seconds): 0.157
result: Passed. Build successful

#section:compile
----------messages:(7/295)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Thu Feb 29 16:24:09 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 16:24:09 UTC 2024
elapsed time (seconds): 0.157
----------configuration:(10/698)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d

----------rerun:(36/3628)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java'
----------direct:(7/584)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/299)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Thu Feb 29 16:24:09 UTC 2024
Mode: agentvm
Agent id: 4
finished: Thu Feb 29 16:24:09 UTC 2024
elapsed time (seconds): 0.375
----------configuration:(13/927)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection

----------rerun:(28/3078)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0  6.944
ArrayList spliterator().tryAdvance()                               0  5.715
ArrayList spliterator().forEachRemaining()                         0  4.949
ArrayList contains                                                 0  9.425
ArrayList containsAll                                              0  0.843
ArrayList forEach                                                  0  5.043
ArrayList toArray()                                                0  0.232
ArrayList toArray(a)                                               0  0.227
ArrayList toArray(empty)                                           0  0.198
ArrayList stream().forEach                                         0  4.879
ArrayList stream().mapToInt                                        1 27.495
ArrayList stream().collect                                         0 20.778
ArrayList stream()::iterator                                       0  6.553
ArrayList parallelStream().forEach                                 1 37.423
ArrayList parallelStream().mapToInt                                0 15.534
ArrayList parallelStream().collect                                 0  9.430
ArrayList parallelStream()::iterator                               0  5.019
ArrayList removeIf                                                 0  5.123
ArrayList remove(Object)                                           0  0.437
ArrayList listIterator forward loop                                0  0.630
ArrayList listIterator backward loop                               0  0.321
ArrayList indexOf                                                  0  0.188
ArrayList lastIndexOf                                              0  0.215
ArrayList equals                                                   0  0.283
ArrayList hashCode                                                 0  0.399
ArrayList replaceAll                                               0  4.853
ArrayList$SubList iterate for loop                                 0  4.529
ArrayList$SubList iterator().forEachRemaining()                    0  0.271
ArrayList$SubList spliterator().tryAdvance()                       0  3.568
ArrayList$SubList spliterator().forEachRemaining()                 0  0.114
ArrayList$SubList contains                                         0  0.147
ArrayList$SubList containsAll                                      0  0.111
ArrayList$SubList forEach                                          0  0.394
ArrayList$SubList toArray()                                        0  0.167
ArrayList$SubList toArray(a)                                       0  0.099
ArrayList$SubList toArray(empty)                                   0  0.159
ArrayList$SubList stream().forEach                                 0  0.135
ArrayList$SubList stream().mapToInt                                0  0.312
ArrayList$SubList stream().collect                                 0  0.242
ArrayList$SubList stream()::iterator                               0  0.181
ArrayList$SubList parallelStream().forEach                         0  2.966
ArrayList$SubList parallelStream().mapToInt                        0  5.903
ArrayList$SubList parallelStream().collect                         0  2.449
ArrayList$SubList parallelStream()::iterator                       0  0.222
ArrayList$SubList removeIf                                         0  0.268
ArrayList$SubList remove(Object)                                   0  0.143
ArrayList$SubList listIterator forward loop                        0  0.087
ArrayList$SubList listIterator backward loop                       0  0.111
ArrayList$SubList indexOf                                          0  0.056
ArrayList$SubList lastIndexOf                                      0  0.094
ArrayList$SubList equals                                           0  0.350
ArrayList$SubList hashCode                                         0  0.128
ArrayList$SubList replaceAll                                       0  0.126
Vector iterate for loop                                            0  0.167
Vector iterator().forEachRemaining()                               0  0.507
Vector spliterator().tryAdvance()                                  0  4.082
Vector spliterator().forEachRemaining()                            0  0.106
Vector contains                                                    0  0.925
Vector containsAll                                                 0  0.191
Vector forEach                                                     0  0.085
Vector toArray()                                                   0  0.046
Vector toArray(a)                                                  0  0.123
Vector toArray(empty)                                              0  0.070
Vector stream().forEach                                            0  0.130
Vector stream().mapToInt                                           0  0.297
Vector stream().collect                                            0  0.237
Vector stream()::iterator                                          0  0.171
Vector parallelStream().forEach                                    0  2.198
Vector parallelStream().mapToInt                                   0  2.865
Vector parallelStream().collect                                    0  2.167
Vector parallelStream()::iterator                                  0  0.208
Vector removeIf                                                    0  0.097
Vector remove(Object)                                              0  1.080
Vector listIterator forward loop                                   0  0.181
Vector listIterator backward loop                                  0  0.145
Vector indexOf                                                     0  0.063
Vector lastIndexOf                                                 0  0.147
Vector equals                                                      0  0.505
Vector hashCode                                                    0  0.365
Vector replaceAll                                                  0  0.174
SynchronizedRandomAccessList iterate for loop                      0  4.232
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.198
SynchronizedRandomAccessList spliterator().tryAdvance()            0  5.022
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.239
SynchronizedRandomAccessList contains                              0  0.932
SynchronizedRandomAccessList containsAll                           0  0.242
SynchronizedRandomAccessList forEach                               0  0.147
SynchronizedRandomAccessList toArray()                             0  0.205
SynchronizedRandomAccessList toArray(a)                            0  0.150
SynchronizedRandomAccessList toArray(empty)                        0  3.519
SynchronizedRandomAccessList stream().forEach                      0  0.217
SynchronizedRandomAccessList stream().mapToInt                     0  0.355
SynchronizedRandomAccessList stream().collect                      0  0.283
SynchronizedRandomAccessList stream()::iterator                    0  0.225
SynchronizedRandomAccessList parallelStream().forEach              0  3.273
SynchronizedRandomAccessList parallelStream().mapToInt             0  3.372
SynchronizedRandomAccessList parallelStream().collect              0  3.239
SynchronizedRandomAccessList parallelStream()::iterator            0  0.239
SynchronizedRandomAccessList removeIf                              0  0.853
SynchronizedRandomAccessList remove(Object)                        0  0.179
SynchronizedRandomAccessList listIterator forward loop             0  0.159
SynchronizedRandomAccessList listIterator backward loop            0  0.321
SynchronizedRandomAccessList indexOf                               0  0.225
SynchronizedRandomAccessList lastIndexOf                           0  0.232
SynchronizedRandomAccessList equals                                0  0.314
SynchronizedRandomAccessList hashCode                              0  0.222
SynchronizedRandomAccessList replaceAll                            0  0.476
LinkedList iterate for loop                                        0  0.138
LinkedList iterator().forEachRemaining()                           0  0.176
LinkedList spliterator().tryAdvance()                              0  4.159
LinkedList spliterator().forEachRemaining()                        0  0.101
LinkedList contains                                                0  0.802
LinkedList containsAll                                             0  0.085
LinkedList forEach                                                 0  0.116
LinkedList toArray()                                               0  0.089
LinkedList toArray(a)                                              0  0.060
LinkedList toArray(empty)                                          0  0.089
LinkedList stream().forEach                                        0  0.118
LinkedList stream().mapToInt                                       0  0.285
LinkedList stream().collect                                        0  0.227
LinkedList stream()::iterator                                      0  0.164
LinkedList parallelStream().forEach                                0  3.292
LinkedList parallelStream().mapToInt                               0  7.415
LinkedList parallelStream().collect                                0  2.493
LinkedList parallelStream()::iterator                              0  0.205
LinkedList removeIf                                                0  0.118
LinkedList remove(Object)                                          0  0.109
LinkedList descendingIterator() loop                               0  3.430
LinkedList descendingIterator().forEachRemaining()                 0  5.012
LinkedList listIterator forward loop                               0  0.097
LinkedList listIterator backward loop                              0  0.075
LinkedList indexOf                                                 0  0.058
LinkedList lastIndexOf                                             0  0.063
LinkedList equals                                                  0  0.227
LinkedList hashCode                                                0  0.123
LinkedList replaceAll                                              0  0.143
AbstractList$SubList iterate for loop                              0  0.524
AbstractList$SubList iterator().forEachRemaining()                 0  0.147
AbstractList$SubList spliterator().tryAdvance()                    0  0.302
AbstractList$SubList spliterator().forEachRemaining()              0  0.140
AbstractList$SubList contains                                      0  0.123
AbstractList$SubList containsAll                                   0  2.454
AbstractList$SubList forEach                                       0  2.268
AbstractList$SubList toArray()                                     0  1.739
AbstractList$SubList toArray(a)                                    0  1.082
AbstractList$SubList toArray(empty)                                0  0.367
AbstractList$SubList stream().forEach                              0  0.215
AbstractList$SubList stream().mapToInt                             0  0.370
AbstractList$SubList stream().collect                              0  0.302
AbstractList$SubList stream()::iterator                            0  0.341
AbstractList$SubList parallelStream().forEach                      0  2.524
AbstractList$SubList parallelStream().mapToInt                     0  3.080
AbstractList$SubList parallelStream().collect                      0  7.597
AbstractList$SubList parallelStream()::iterator                    0  0.278
AbstractList$SubList removeIf                                      0  0.145
AbstractList$SubList remove(Object)                                0  0.097
AbstractList$SubList listIterator forward loop                     0  0.065
AbstractList$SubList listIterator backward loop                    0  0.193
AbstractList$SubList indexOf                                       0  0.082
AbstractList$SubList lastIndexOf                                   0  0.145
AbstractList$SubList equals                                        0  0.307
AbstractList$SubList hashCode                                      0  0.174
AbstractList$SubList replaceAll                                    0  0.128
CopyOnWriteArrayList iterate for loop                              0  0.094
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.251
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.121
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.065
CopyOnWriteArrayList contains                                      0  0.829
CopyOnWriteArrayList containsAll                                   0  2.498
CopyOnWriteArrayList forEach                                       0  0.087
CopyOnWriteArrayList toArray()                                     0  0.041
CopyOnWriteArrayList toArray(a)                                    0  0.087
CopyOnWriteArrayList toArray(empty)                                0  0.060
CopyOnWriteArrayList stream().forEach                              0  0.111
CopyOnWriteArrayList stream().mapToInt                             0  0.254
CopyOnWriteArrayList stream().collect                              0  0.208
CopyOnWriteArrayList stream()::iterator                            0  0.140
CopyOnWriteArrayList parallelStream().forEach                      0  9.138
CopyOnWriteArrayList parallelStream().mapToInt                     0 11.744
CopyOnWriteArrayList parallelStream().collect                      0  6.821
CopyOnWriteArrayList parallelStream()::iterator                    0  1.872
CopyOnWriteArrayList removeIf                                      0  0.128
CopyOnWriteArrayList remove(Object)                                0  1.319
CopyOnWriteArrayList listIterator forward loop                     0  0.118
CopyOnWriteArrayList listIterator backward loop                    0  0.179
CopyOnWriteArrayList indexOf                                       0  0.249
CopyOnWriteArrayList lastIndexOf                                   0  0.097
CopyOnWriteArrayList equals                                        0  0.254
CopyOnWriteArrayList hashCode                                      0  0.145
CopyOnWriteArrayList replaceAll                                    0  0.258
COWSubList iterate for loop                                        0  4.246
COWSubList iterator().forEachRemaining()                           0  0.261
COWSubList spliterator().tryAdvance()                              0  0.244
COWSubList spliterator().forEachRemaining()                        0  0.082
COWSubList contains                                                0  0.162
COWSubList containsAll                                             0  0.181
COWSubList forEach                                                 0  0.152
COWSubList toArray()                                               0  0.123
COWSubList toArray(a)                                              0  0.133
COWSubList toArray(empty)                                          0  0.118
COWSubList stream().forEach                                        0  0.123
COWSubList stream().mapToInt                                       0  0.278
COWSubList stream().collect                                        0  0.234
COWSubList stream()::iterator                                      0  0.203
COWSubList parallelStream().forEach                                0  4.746
COWSubList parallelStream().mapToInt                               0  3.961
COWSubList parallelStream().collect                                0  4.565
COWSubList parallelStream()::iterator                              0  0.587
COWSubList removeIf                                                0  0.278
COWSubList remove(Object)                                          0  0.089
COWSubList listIterator forward loop                               0  0.159
COWSubList listIterator backward loop                              0  0.278
COWSubList indexOf                                                 0  0.056
COWSubList lastIndexOf                                             0  0.097
COWSubList equals                                                  0  0.290
COWSubList hashCode                                                0  0.145
COWSubList replaceAll                                              0  0.167
ArrayDeque iterate for loop                                        0  0.121
ArrayDeque iterator().forEachRemaining()                           0  0.333
ArrayDeque spliterator().tryAdvance()                              0  4.121
ArrayDeque spliterator().forEachRemaining()                        0  0.222
ArrayDeque contains                                                0  0.065
ArrayDeque containsAll                                             0  0.077
ArrayDeque forEach                                                 0  0.077
ArrayDeque toArray()                                               0  0.155
ArrayDeque toArray(a)                                              0  0.104
ArrayDeque toArray(empty)                                          0  0.101
ArrayDeque stream().forEach                                        0  0.140
ArrayDeque stream().mapToInt                                       0  0.331
ArrayDeque stream().collect                                        0  0.249
ArrayDeque stream()::iterator                                      0  0.159
ArrayDeque parallelStream().forEach                                0 14.829
ArrayDeque parallelStream().mapToInt                               0  3.773
ArrayDeque parallelStream().collect                                0  5.732
ArrayDeque parallelStream()::iterator                              0  0.210
ArrayDeque removeIf                                                0  0.104
ArrayDeque remove(Object)                                          0  0.065
ArrayDeque descendingIterator() loop                               0  4.553
ArrayDeque descendingIterator().forEachRemaining()                 0  0.333
PriorityQueue iterate for loop                                     0  0.123
PriorityQueue iterator().forEachRemaining()                        0  0.101
PriorityQueue spliterator().tryAdvance()                           0  3.867
PriorityQueue spliterator().forEachRemaining()                     0  0.104
PriorityQueue contains                                             0  0.150
PriorityQueue containsAll                                          0  0.082
PriorityQueue forEach                                              0  0.138
PriorityQueue toArray()                                            0  0.043
PriorityQueue toArray(a)                                           0  0.133
PriorityQueue toArray(empty)                                       0  0.097
PriorityQueue stream().forEach                                     0  0.121
PriorityQueue stream().mapToInt                                    0  0.341
PriorityQueue stream().collect                                     0  0.244
PriorityQueue stream()::iterator                                   0  0.157
PriorityQueue parallelStream().forEach                             0  1.744
PriorityQueue parallelStream().mapToInt                            0  4.778
PriorityQueue parallelStream().collect                             0  1.845
PriorityQueue parallelStream()::iterator                           0  0.164
PriorityQueue removeIf                                             0  0.256
PriorityQueue remove(Object)                                       0  0.565
ConcurrentLinkedQueue iterate for loop                             0  0.258
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.099
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  3.884
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.184
ConcurrentLinkedQueue contains                                     0  0.669
ConcurrentLinkedQueue containsAll                                  0  0.080
ConcurrentLinkedQueue forEach                                      0  0.077
ConcurrentLinkedQueue toArray()                                    0  0.126
ConcurrentLinkedQueue toArray(a)                                   0  0.126
ConcurrentLinkedQueue toArray(empty)                               0  0.065
ConcurrentLinkedQueue stream().forEach                             0  0.147
ConcurrentLinkedQueue stream().mapToInt                            0  0.403
ConcurrentLinkedQueue stream().collect                             0  0.268
ConcurrentLinkedQueue stream()::iterator                           0  0.179
ConcurrentLinkedQueue parallelStream().forEach                     0  2.239
ConcurrentLinkedQueue parallelStream().mapToInt                    0  1.964
ConcurrentLinkedQueue parallelStream().collect                     0  1.208
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.188
ConcurrentLinkedQueue removeIf                                     0  0.097
ConcurrentLinkedQueue remove(Object)                               0  0.053
ConcurrentLinkedDeque iterate for loop                             0  0.162
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.097
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  4.208
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.109
ConcurrentLinkedDeque contains                                     0  0.353
ConcurrentLinkedDeque containsAll                                  0  0.225
ConcurrentLinkedDeque forEach                                      0  0.476
ConcurrentLinkedDeque toArray()                                    0  0.114
ConcurrentLinkedDeque toArray(a)                                   0  0.109
ConcurrentLinkedDeque toArray(empty)                               0  0.060
ConcurrentLinkedDeque stream().forEach                             0  0.123
ConcurrentLinkedDeque stream().mapToInt                            0  0.432
ConcurrentLinkedDeque stream().collect                             0  0.225
ConcurrentLinkedDeque stream()::iterator                           0  0.174
ConcurrentLinkedDeque parallelStream().forEach                     0  1.522
ConcurrentLinkedDeque parallelStream().mapToInt                    0  1.882
ConcurrentLinkedDeque parallelStream().collect                     0  1.176
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.193
ConcurrentLinkedDeque removeIf                                     0  0.085
ConcurrentLinkedDeque remove(Object)                               0  0.063
ConcurrentLinkedDeque descendingIterator() loop                    0  3.572
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.171
ArrayBlockingQueue iterate for loop                                0  0.324
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.758
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.343
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.157
ArrayBlockingQueue contains                                        0  0.604
ArrayBlockingQueue containsAll                                     0  0.082
ArrayBlockingQueue forEach                                         0  0.094
ArrayBlockingQueue toArray()                                       0  0.123
ArrayBlockingQueue toArray(a)                                      0  0.109
ArrayBlockingQueue toArray(empty)                                  0  0.087
ArrayBlockingQueue stream().forEach                                0  0.217
ArrayBlockingQueue stream().mapToInt                               0  1.017
ArrayBlockingQueue stream().collect                                0  0.285
ArrayBlockingQueue stream()::iterator                              0  0.213
ArrayBlockingQueue parallelStream().forEach                        0  1.428
ArrayBlockingQueue parallelStream().mapToInt                       0 11.089
ArrayBlockingQueue parallelStream().collect                        0  4.510
ArrayBlockingQueue parallelStream()::iterator                      0  0.370
ArrayBlockingQueue removeIf                                        0  0.104
ArrayBlockingQueue remove(Object)                                  0  0.060
LinkedBlockingQueue iterate for loop                               0  0.184
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.430
LinkedBlockingQueue spliterator().tryAdvance()                     0  4.159
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.239
LinkedBlockingQueue contains                                       0  1.386
LinkedBlockingQueue containsAll                                    0  0.087
LinkedBlockingQueue forEach                                        0  0.133
LinkedBlockingQueue toArray()                                      0  0.063
LinkedBlockingQueue toArray(a)                                     0  0.068
LinkedBlockingQueue toArray(empty)                                 0  0.099
LinkedBlockingQueue stream().forEach                               0  0.176
LinkedBlockingQueue stream().mapToInt                              0  0.297
LinkedBlockingQueue stream().collect                               0  3.558
LinkedBlockingQueue stream()::iterator                             0  0.266
LinkedBlockingQueue parallelStream().forEach                       0  1.662
LinkedBlockingQueue parallelStream().mapToInt                      0  1.478
LinkedBlockingQueue parallelStream().collect                       0  7.070
LinkedBlockingQueue parallelStream()::iterator                     0  0.251
LinkedBlockingQueue removeIf                                       0  0.155
LinkedBlockingQueue remove(Object)                                 0  0.063
LinkedBlockingDeque iterate for loop                               0  0.169
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.418
LinkedBlockingDeque spliterator().tryAdvance()                     0  4.618
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.220
LinkedBlockingDeque contains                                       0  1.053
LinkedBlockingDeque containsAll                                    0  0.094
LinkedBlockingDeque forEach                                        0  0.138
LinkedBlockingDeque toArray()                                      0  0.063
LinkedBlockingDeque toArray(a)                                     0  0.068
LinkedBlockingDeque toArray(empty)                                 0  0.099
LinkedBlockingDeque stream().forEach                               0  0.179
LinkedBlockingDeque stream().mapToInt                              0  0.309
LinkedBlockingDeque stream().collect                               0  1.261
LinkedBlockingDeque stream()::iterator                             0  0.213
LinkedBlockingDeque parallelStream().forEach                       0  1.732
LinkedBlockingDeque parallelStream().mapToInt                      0  1.664
LinkedBlockingDeque parallelStream().collect                       0  1.502
LinkedBlockingDeque parallelStream()::iterator                     0  0.208
LinkedBlockingDeque removeIf                                       0  0.143
LinkedBlockingDeque remove(Object)                                 0  0.053
LinkedBlockingDeque descendingIterator() loop                      0  3.539
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.203
LinkedTransferQueue iterate for loop                               0  0.118
LinkedTransferQueue iterator().forEachRemaining()                  0  0.242
LinkedTransferQueue spliterator().tryAdvance()                     0  3.787
LinkedTransferQueue spliterator().forEachRemaining()               0  0.222
LinkedTransferQueue contains                                       0  0.691
LinkedTransferQueue containsAll                                    0  0.082
LinkedTransferQueue forEach                                        0  0.128
LinkedTransferQueue toArray()                                      0  0.114
LinkedTransferQueue toArray(a)                                     0  0.283
LinkedTransferQueue toArray(empty)                                 0  0.070
LinkedTransferQueue stream().forEach                               0  0.171
LinkedTransferQueue stream().mapToInt                              0  0.300
LinkedTransferQueue stream().collect                               0  0.758
LinkedTransferQueue stream()::iterator                             0  0.312
LinkedTransferQueue parallelStream().forEach                       0  1.167
LinkedTransferQueue parallelStream().mapToInt                      0  1.087
LinkedTransferQueue parallelStream().collect                       0  1.065
LinkedTransferQueue parallelStream()::iterator                     0  0.184
LinkedTransferQueue removeIf                                       0  0.126
LinkedTransferQueue remove(Object)                                 0  0.063
PriorityBlockingQueue iterate for loop                             0  3.292
PriorityBlockingQueue iterator().forEachRemaining()                0  0.196
PriorityBlockingQueue spliterator().tryAdvance()                   0  3.041
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.111
PriorityBlockingQueue contains                                     0  0.169
PriorityBlockingQueue containsAll                                  0  0.087
PriorityBlockingQueue forEach                                      0  0.152
PriorityBlockingQueue toArray()                                    0  0.041
PriorityBlockingQueue toArray(a)                                   0  0.147
PriorityBlockingQueue toArray(empty)                               0  0.109
PriorityBlockingQueue stream().forEach                             0  0.118
PriorityBlockingQueue stream().mapToInt                            0  0.266
PriorityBlockingQueue stream().collect                             0  0.225
PriorityBlockingQueue stream()::iterator                           0  0.162
PriorityBlockingQueue parallelStream().forEach                     0  1.493
PriorityBlockingQueue parallelStream().mapToInt                    0  1.362
PriorityBlockingQueue parallelStream().collect                     0  1.193
PriorityBlockingQueue parallelStream()::iterator                   0  0.157
PriorityBlockingQueue removeIf                                     0  0.215
PriorityBlockingQueue remove(Object)                               0  0.063
ListN iterate for loop                                             0  0.123
ListN iterator().forEachRemaining()                                0  0.094
ListN spliterator().tryAdvance()                                   0  0.159
ListN spliterator().forEachRemaining()                             0  0.089
ListN contains                                                     0  0.147
ListN containsAll                                                  0  0.075
ListN forEach                                                      0  0.099
ListN toArray()                                                    0  0.039
ListN toArray(a)                                                   0  0.065
ListN toArray(empty)                                               0  0.051
ListN stream().forEach                                             0  0.109
ListN stream().mapToInt                                            0  0.215
ListN stream().collect                                             0  0.203
ListN stream()::iterator                                           0  0.205
ListN parallelStream().forEach                                     0  1.019
ListN parallelStream().mapToInt                                    0  1.145
ListN parallelStream().collect                                     0  1.135
ListN parallelStream()::iterator                                   0  0.179
ListN listIterator forward loop                                    0  0.193
ListN listIterator backward loop                                   0  0.111
ListN indexOf                                                      0  0.048
ListN lastIndexOf                                                  0  0.043
ListN equals                                                       0  0.152
ListN hashCode                                                     0  0.097
ImmutableCollections$SubList iterate for loop                      0  0.278
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.111
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.164
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.092
ImmutableCollections$SubList contains                              0  0.203
ImmutableCollections$SubList containsAll                           0  0.092
ImmutableCollections$SubList forEach                               0  0.249
ImmutableCollections$SubList toArray()                             0  0.099
ImmutableCollections$SubList toArray(a)                            0  0.077
ImmutableCollections$SubList toArray(empty)                        0  0.225
ImmutableCollections$SubList stream().forEach                      0  0.135
ImmutableCollections$SubList stream().mapToInt                     0  0.234
ImmutableCollections$SubList stream().collect                      0  0.217
ImmutableCollections$SubList stream()::iterator                    0  0.184
ImmutableCollections$SubList parallelStream().forEach              0  1.118
ImmutableCollections$SubList parallelStream().mapToInt             0  1.331
ImmutableCollections$SubList parallelStream().collect              0  1.251
ImmutableCollections$SubList parallelStream()::iterator            0  0.208
ImmutableCollections$SubList listIterator forward loop             0  0.181
ImmutableCollections$SubList listIterator backward loop            0  0.089
ImmutableCollections$SubList indexOf                               0  0.072
ImmutableCollections$SubList lastIndexOf                           0  0.065
ImmutableCollections$SubList equals                                0  0.179
ImmutableCollections$SubList hashCode                              0  0.126
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
