#Test Results (version 2)
#Mon Apr 29 00:59:55 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\r\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=587 0\:00\:00.587
end=Mon Apr 29 00\:59\:55 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az978-691.aqccnys5fsauxnvc2cwlk3lemf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-29-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Mon Apr 29 00\:59\:55 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=587
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Collection

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)

#section:build
----------messages:(7/241)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Mon Apr 29 00:59:55 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Mon Apr 29 00:59:55 UTC 2024
elapsed time (seconds): 0.162
result: Passed. Build successful

#section:compile
----------messages:(7/295)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Mon Apr 29 00:59:55 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 00:59:55 UTC 2024
elapsed time (seconds): 0.162
----------configuration:(10/698)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d

----------rerun:(36/3628)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java'
----------direct:(7/584)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/299)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Mon Apr 29 00:59:55 UTC 2024
Mode: agentvm
Agent id: 4
finished: Mon Apr 29 00:59:55 UTC 2024
elapsed time (seconds): 0.425
----------configuration:(13/927)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection

----------rerun:(28/3078)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0 18.966
ArrayList spliterator().tryAdvance()                               0 10.475
ArrayList spliterator().forEachRemaining()                         0  6.327
ArrayList contains                                                 0 12.357
ArrayList containsAll                                              0  1.068
ArrayList forEach                                                  0  6.042
ArrayList toArray()                                                0  0.236
ArrayList toArray(a)                                               0  0.243
ArrayList toArray(empty)                                           0  0.194
ArrayList stream().forEach                                         0  6.791
ArrayList stream().mapToInt                                        1 39.236
ArrayList stream().collect                                         0 27.654
ArrayList stream()::iterator                                       0 10.087
ArrayList parallelStream().forEach                                 1 65.319
ArrayList parallelStream().mapToInt                                0 22.331
ArrayList parallelStream().collect                                 0 12.160
ArrayList parallelStream()::iterator                               0 10.240
ArrayList removeIf                                                 0  6.274
ArrayList remove(Object)                                           0  1.103
ArrayList listIterator forward loop                                0  0.810
ArrayList listIterator backward loop                               0  0.342
ArrayList indexOf                                                  0  0.202
ArrayList lastIndexOf                                              0  0.213
ArrayList equals                                                   0  0.540
ArrayList hashCode                                                 0  0.897
ArrayList replaceAll                                               0 10.114
ArrayList$SubList iterate for loop                                 0  6.662
ArrayList$SubList iterator().forEachRemaining()                    0  0.331
ArrayList$SubList spliterator().tryAdvance()                       0  4.068
ArrayList$SubList spliterator().forEachRemaining()                 0  0.129
ArrayList$SubList contains                                         0  0.156
ArrayList$SubList containsAll                                      0  0.179
ArrayList$SubList forEach                                          0  0.951
ArrayList$SubList toArray()                                        0  0.247
ArrayList$SubList toArray(a)                                       0  0.141
ArrayList$SubList toArray(empty)                                   0  0.095
ArrayList$SubList stream().forEach                                 0  0.167
ArrayList$SubList stream().mapToInt                                0  0.407
ArrayList$SubList stream().collect                                 0  0.285
ArrayList$SubList stream()::iterator                               0  0.327
ArrayList$SubList parallelStream().forEach                         0  5.414
ArrayList$SubList parallelStream().mapToInt                        0  3.867
ArrayList$SubList parallelStream().collect                         0  1.703
ArrayList$SubList parallelStream()::iterator                       0  0.274
ArrayList$SubList removeIf                                         0  0.338
ArrayList$SubList remove(Object)                                   0  0.179
ArrayList$SubList listIterator forward loop                        0  0.103
ArrayList$SubList listIterator backward loop                       0  0.240
ArrayList$SubList indexOf                                          0  0.068
ArrayList$SubList lastIndexOf                                      0  0.114
ArrayList$SubList equals                                           0  0.513
ArrayList$SubList hashCode                                         0  0.183
ArrayList$SubList replaceAll                                       0  0.171
Vector iterate for loop                                            0  1.091
Vector iterator().forEachRemaining()                               0  0.608
Vector spliterator().tryAdvance()                                  0  5.859
Vector spliterator().forEachRemaining()                            0  0.144
Vector contains                                                    0  1.859
Vector containsAll                                                 0  0.323
Vector forEach                                                     0  0.137
Vector toArray()                                                   0  0.437
Vector toArray(a)                                                  0  0.148
Vector toArray(empty)                                              0  0.114
Vector stream().forEach                                            0  0.209
Vector stream().mapToInt                                           0  0.399
Vector stream().collect                                            0  0.262
Vector stream()::iterator                                          0  0.198
Vector parallelStream().forEach                                    0  3.787
Vector parallelStream().mapToInt                                   0  1.779
Vector parallelStream().collect                                    0  1.859
Vector parallelStream()::iterator                                  0  0.281
Vector removeIf                                                    0  0.137
Vector remove(Object)                                              0  3.376
Vector listIterator forward loop                                   0  0.297
Vector listIterator backward loop                                  0  0.232
Vector indexOf                                                     0  0.110
Vector lastIndexOf                                                 0  0.221
Vector equals                                                      0  5.517
Vector hashCode                                                    0  0.658
Vector replaceAll                                                  0  0.335
SynchronizedRandomAccessList iterate for loop                      0  1.989
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.297
SynchronizedRandomAccessList spliterator().tryAdvance()            0  8.631
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.354
SynchronizedRandomAccessList contains                              0  2.259
SynchronizedRandomAccessList containsAll                           0  0.380
SynchronizedRandomAccessList forEach                               0  0.228
SynchronizedRandomAccessList toArray()                             0  3.791
SynchronizedRandomAccessList toArray(a)                            0  0.331
SynchronizedRandomAccessList toArray(empty)                        0 12.144
SynchronizedRandomAccessList stream().forEach                      0  0.456
SynchronizedRandomAccessList stream().mapToInt                     0  0.616
SynchronizedRandomAccessList stream().collect                      0  0.471
SynchronizedRandomAccessList stream()::iterator                    0  0.384
SynchronizedRandomAccessList parallelStream().forEach              0  3.418
SynchronizedRandomAccessList parallelStream().mapToInt             0  3.289
SynchronizedRandomAccessList parallelStream().collect              0 31.049
SynchronizedRandomAccessList parallelStream()::iterator            0  0.452
SynchronizedRandomAccessList removeIf                              0  1.331
SynchronizedRandomAccessList remove(Object)                        0  0.323
SynchronizedRandomAccessList listIterator forward loop             0  0.278
SynchronizedRandomAccessList listIterator backward loop            0  0.551
SynchronizedRandomAccessList indexOf                               0  0.380
SynchronizedRandomAccessList lastIndexOf                           0  0.395
SynchronizedRandomAccessList equals                                0  0.894
SynchronizedRandomAccessList hashCode                              0  0.521
SynchronizedRandomAccessList replaceAll                            0  0.863
LinkedList iterate for loop                                        0  1.289
LinkedList iterator().forEachRemaining()                           0  0.338
LinkedList spliterator().tryAdvance()                              0  6.688
LinkedList spliterator().forEachRemaining()                        0  0.183
LinkedList contains                                                0  1.646
LinkedList containsAll                                             0  0.114
LinkedList forEach                                                 0  0.163
LinkedList toArray()                                               0  0.110
LinkedList toArray(a)                                              0  0.080
LinkedList toArray(empty)                                          0  0.141
LinkedList stream().forEach                                        0  0.163
LinkedList stream().mapToInt                                       0  0.920
LinkedList stream().collect                                        0  0.270
LinkedList stream()::iterator                                      0  0.183
LinkedList parallelStream().forEach                                0 18.430
LinkedList parallelStream().mapToInt                               0 11.840
LinkedList parallelStream().collect                                0 10.319
LinkedList parallelStream()::iterator                              0  0.350
LinkedList removeIf                                                0  0.205
LinkedList remove(Object)                                          0  0.156
LinkedList descendingIterator() loop                               0  6.312
LinkedList descendingIterator().forEachRemaining()                 0 13.840
LinkedList listIterator forward loop                               0  0.837
LinkedList listIterator backward loop                              0  0.144
LinkedList indexOf                                                 0  0.114
LinkedList lastIndexOf                                             0  0.122
LinkedList equals                                                  0  0.418
LinkedList hashCode                                                0  0.236
LinkedList replaceAll                                              0  0.243
AbstractList$SubList iterate for loop                              0  0.323
AbstractList$SubList iterator().forEachRemaining()                 0 18.939
AbstractList$SubList spliterator().tryAdvance()                    0  0.741
AbstractList$SubList spliterator().forEachRemaining()              0  0.232
AbstractList$SubList contains                                      0  0.202
AbstractList$SubList containsAll                                   0  9.106
AbstractList$SubList forEach                                       0  0.270
AbstractList$SubList toArray()                                     0  9.205
AbstractList$SubList toArray(a)                                    0  1.871
AbstractList$SubList toArray(empty)                                0  0.669
AbstractList$SubList stream().forEach                              0  0.875
AbstractList$SubList stream().mapToInt                             0  0.764
AbstractList$SubList stream().collect                              0  0.456
AbstractList$SubList stream()::iterator                            0  0.335
AbstractList$SubList parallelStream().forEach                      0  4.293
AbstractList$SubList parallelStream().mapToInt                     0  3.578
AbstractList$SubList parallelStream().collect                      0 23.544
AbstractList$SubList parallelStream()::iterator                    0  0.510
AbstractList$SubList removeIf                                      0  0.179
AbstractList$SubList remove(Object)                                0  0.243
AbstractList$SubList listIterator forward loop                     0  0.118
AbstractList$SubList listIterator backward loop                    0  0.308
AbstractList$SubList indexOf                                       0  0.152
AbstractList$SubList lastIndexOf                                   0  0.232
AbstractList$SubList equals                                        0  0.529
AbstractList$SubList hashCode                                      0  0.293
AbstractList$SubList replaceAll                                    0  0.209
CopyOnWriteArrayList iterate for loop                              0  0.806
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.673
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.194
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.243
CopyOnWriteArrayList contains                                      0  2.122
CopyOnWriteArrayList containsAll                                   0 12.042
CopyOnWriteArrayList forEach                                       0  0.194
CopyOnWriteArrayList toArray()                                     0  0.654
CopyOnWriteArrayList toArray(a)                                    0  0.167
CopyOnWriteArrayList toArray(empty)                                0  0.106
CopyOnWriteArrayList stream().forEach                              0  0.190
CopyOnWriteArrayList stream().mapToInt                             0  0.433
CopyOnWriteArrayList stream().collect                              0  0.304
CopyOnWriteArrayList stream()::iterator                            0  0.232
CopyOnWriteArrayList parallelStream().forEach                      0  2.080
CopyOnWriteArrayList parallelStream().mapToInt                     0 14.593
CopyOnWriteArrayList parallelStream().collect                      0  3.034
CopyOnWriteArrayList parallelStream()::iterator                    0  0.255
CopyOnWriteArrayList removeIf                                      0  0.167
CopyOnWriteArrayList remove(Object)                                0  2.133
CopyOnWriteArrayList listIterator forward loop                     0  0.179
CopyOnWriteArrayList listIterator backward loop                    0  0.342
CopyOnWriteArrayList indexOf                                       0  0.350
CopyOnWriteArrayList lastIndexOf                                   0  0.144
CopyOnWriteArrayList equals                                        0  0.411
CopyOnWriteArrayList hashCode                                      0  0.247
CopyOnWriteArrayList replaceAll                                    0  0.403
COWSubList iterate for loop                                        0  6.825
COWSubList iterator().forEachRemaining()                           0  0.392
COWSubList spliterator().tryAdvance()                              0  0.384
COWSubList spliterator().forEachRemaining()                        0  0.110
COWSubList contains                                                0  0.232
COWSubList containsAll                                             0  0.297
COWSubList forEach                                                 0  0.228
COWSubList toArray()                                               0  0.224
COWSubList toArray(a)                                              0  0.213
COWSubList toArray(empty)                                          0  0.183
COWSubList stream().forEach                                        0  0.167
COWSubList stream().mapToInt                                       0  0.411
COWSubList stream().collect                                        0 25.776
COWSubList stream()::iterator                                      0  1.072
COWSubList parallelStream().forEach                                0  2.122
COWSubList parallelStream().mapToInt                               0  2.548
COWSubList parallelStream().collect                                1 40.471
COWSubList parallelStream()::iterator                              0  1.179
COWSubList removeIf                                                0  0.411
COWSubList remove(Object)                                          0  0.144
COWSubList listIterator forward loop                               0  0.251
COWSubList listIterator backward loop                              0  0.452
COWSubList indexOf                                                 0 19.624
COWSubList lastIndexOf                                             0  0.361
COWSubList equals                                                  0  0.536
COWSubList hashCode                                                0  0.236
COWSubList replaceAll                                              0  0.335
ArrayDeque iterate for loop                                        0  0.977
ArrayDeque iterator().forEachRemaining()                           0  0.920
ArrayDeque spliterator().tryAdvance()                              0  7.863
ArrayDeque spliterator().forEachRemaining()                        0  0.365
ArrayDeque contains                                                0  0.106
ArrayDeque containsAll                                             0  0.125
ArrayDeque forEach                                                 0  0.118
ArrayDeque toArray()                                               0  0.232
ArrayDeque toArray(a)                                              0  0.160
ArrayDeque toArray(empty)                                          0  0.163
ArrayDeque stream().forEach                                        0  0.217
ArrayDeque stream().mapToInt                                       0  0.574
ArrayDeque stream().collect                                        0  0.445
ArrayDeque stream()::iterator                                      0  0.281
ArrayDeque parallelStream().forEach                                0  2.833
ArrayDeque parallelStream().mapToInt                               0 32.437
ArrayDeque parallelStream().collect                                0 29.878
ArrayDeque parallelStream()::iterator                              0  0.331
ArrayDeque removeIf                                                0  0.137
ArrayDeque remove(Object)                                          0  0.091
ArrayDeque descendingIterator() loop                               0  5.669
ArrayDeque descendingIterator().forEachRemaining()                 0  0.589
PriorityQueue iterate for loop                                     0  0.179
PriorityQueue iterator().forEachRemaining()                        0  0.144
PriorityQueue spliterator().tryAdvance()                           0  5.065
PriorityQueue spliterator().forEachRemaining()                     0  0.156
PriorityQueue contains                                             0  0.221
PriorityQueue containsAll                                          0  0.122
PriorityQueue forEach                                              0  0.236
PriorityQueue toArray()                                            0  0.646
PriorityQueue toArray(a)                                           0  0.221
PriorityQueue toArray(empty)                                       0  0.144
PriorityQueue stream().forEach                                     0  0.202
PriorityQueue stream().mapToInt                                    0  0.532
PriorityQueue stream().collect                                     0  0.456
PriorityQueue stream()::iterator                                   0  0.243
PriorityQueue parallelStream().forEach                             0  4.198
PriorityQueue parallelStream().mapToInt                            0 24.144
PriorityQueue parallelStream().collect                             0  2.970
PriorityQueue parallelStream()::iterator                           0  0.532
PriorityQueue removeIf                                             0  0.411
PriorityQueue remove(Object)                                       0  0.099
ConcurrentLinkedQueue iterate for loop                             0  0.768
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.133
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  6.414
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.236
ConcurrentLinkedQueue contains                                     0  0.913
ConcurrentLinkedQueue containsAll                                  0  0.106
ConcurrentLinkedQueue forEach                                      0  0.095
ConcurrentLinkedQueue toArray()                                    0  0.163
ConcurrentLinkedQueue toArray(a)                                   0  0.167
ConcurrentLinkedQueue toArray(empty)                               0  0.095
ConcurrentLinkedQueue stream().forEach                             0  0.183
ConcurrentLinkedQueue stream().mapToInt                            0 11.357
ConcurrentLinkedQueue stream().collect                             0  1.228
ConcurrentLinkedQueue stream()::iterator                           0  0.357
ConcurrentLinkedQueue parallelStream().forEach                     0  2.259
ConcurrentLinkedQueue parallelStream().mapToInt                    0 22.962
ConcurrentLinkedQueue parallelStream().collect                     0  3.125
ConcurrentLinkedQueue parallelStream()::iterator                   0 12.856
ConcurrentLinkedQueue removeIf                                     0  0.213
ConcurrentLinkedQueue remove(Object)                               0  0.106
ConcurrentLinkedDeque iterate for loop                             0  1.620
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.175
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  7.365
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.194
ConcurrentLinkedDeque contains                                     0  1.445
ConcurrentLinkedDeque containsAll                                  0  0.160
ConcurrentLinkedDeque forEach                                      0  0.532
ConcurrentLinkedDeque toArray()                                    0  0.186
ConcurrentLinkedDeque toArray(a)                                   0  0.202
ConcurrentLinkedDeque toArray(empty)                               0  0.106
ConcurrentLinkedDeque stream().forEach                             0  0.217
ConcurrentLinkedDeque stream().mapToInt                            0 10.076
ConcurrentLinkedDeque stream().collect                             0  0.529
ConcurrentLinkedDeque stream()::iterator                           0  0.665
ConcurrentLinkedDeque parallelStream().forEach                     0  2.232
ConcurrentLinkedDeque parallelStream().mapToInt                    0  2.297
ConcurrentLinkedDeque parallelStream().collect                     0  2.506
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.281
ConcurrentLinkedDeque removeIf                                     0  0.133
ConcurrentLinkedDeque remove(Object)                               0  0.106
ConcurrentLinkedDeque descendingIterator() loop                    0  5.414
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.228
ArrayBlockingQueue iterate for loop                                0  2.289
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.806
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.551
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.308
ArrayBlockingQueue contains                                        0  1.274
ArrayBlockingQueue containsAll                                     0  0.114
ArrayBlockingQueue forEach                                         0  0.125
ArrayBlockingQueue toArray()                                       0  0.167
ArrayBlockingQueue toArray(a)                                      0  0.152
ArrayBlockingQueue toArray(empty)                                  0  0.646
ArrayBlockingQueue stream().forEach                                0  4.555
ArrayBlockingQueue stream().mapToInt                               0  0.692
ArrayBlockingQueue stream().collect                                0  0.532
ArrayBlockingQueue stream()::iterator                              0  0.418
ArrayBlockingQueue parallelStream().forEach                        0  4.548
ArrayBlockingQueue parallelStream().mapToInt                       0 18.190
ArrayBlockingQueue parallelStream().collect                        0 17.681
ArrayBlockingQueue parallelStream()::iterator                      0  4.433
ArrayBlockingQueue removeIf                                        0  0.259
ArrayBlockingQueue remove(Object)                                  0  0.114
LinkedBlockingQueue iterate for loop                               0  1.639
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.958
LinkedBlockingQueue spliterator().tryAdvance()                     0  9.270
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.380
LinkedBlockingQueue contains                                       0  2.198
LinkedBlockingQueue containsAll                                    0  0.179
LinkedBlockingQueue forEach                                        0  0.228
LinkedBlockingQueue toArray()                                      0  0.103
LinkedBlockingQueue toArray(a)                                     0  0.122
LinkedBlockingQueue toArray(empty)                                 0  0.167
LinkedBlockingQueue stream().forEach                               0  0.323
LinkedBlockingQueue stream().mapToInt                              0  0.525
LinkedBlockingQueue stream().collect                               0 18.300
LinkedBlockingQueue stream()::iterator                             0  1.376
LinkedBlockingQueue parallelStream().forEach                       0  2.749
LinkedBlockingQueue parallelStream().mapToInt                      0  2.175
LinkedBlockingQueue parallelStream().collect                       0  9.259
LinkedBlockingQueue parallelStream()::iterator                     0  0.422
LinkedBlockingQueue removeIf                                       0  0.255
LinkedBlockingQueue remove(Object)                                 0  0.099
LinkedBlockingDeque iterate for loop                               0  1.266
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.901
LinkedBlockingDeque spliterator().tryAdvance()                     0  8.384
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.411
LinkedBlockingDeque contains                                       0  1.468
LinkedBlockingDeque containsAll                                    0  0.141
LinkedBlockingDeque forEach                                        0  0.224
LinkedBlockingDeque toArray()                                      0  0.106
LinkedBlockingDeque toArray(a)                                     0  0.114
LinkedBlockingDeque toArray(empty)                                 0  0.156
LinkedBlockingDeque stream().forEach                               0  0.323
LinkedBlockingDeque stream().mapToInt                              0  0.532
LinkedBlockingDeque stream().collect                               0  0.395
LinkedBlockingDeque stream()::iterator                             0  0.646
LinkedBlockingDeque parallelStream().forEach                       0  3.837
LinkedBlockingDeque parallelStream().mapToInt                      0  3.589
LinkedBlockingDeque parallelStream().collect                       0  2.015
LinkedBlockingDeque parallelStream()::iterator                     0  0.357
LinkedBlockingDeque removeIf                                       0  0.240
LinkedBlockingDeque remove(Object)                                 0  0.106
LinkedBlockingDeque descendingIterator() loop                      0  5.323
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.376
LinkedTransferQueue iterate for loop                               0  1.304
LinkedTransferQueue iterator().forEachRemaining()                  0  0.506
LinkedTransferQueue spliterator().tryAdvance()                     0  6.620
LinkedTransferQueue spliterator().forEachRemaining()               0  0.357
LinkedTransferQueue contains                                       0  1.049
LinkedTransferQueue containsAll                                    0  0.137
LinkedTransferQueue forEach                                        0  0.198
LinkedTransferQueue toArray()                                      0  0.171
LinkedTransferQueue toArray(a)                                     0  0.567
LinkedTransferQueue toArray(empty)                                 0  0.114
LinkedTransferQueue stream().forEach                               0  0.281
LinkedTransferQueue stream().mapToInt                              0  0.475
LinkedTransferQueue stream().collect                               0  0.365
LinkedTransferQueue stream()::iterator                             0  9.658
LinkedTransferQueue parallelStream().forEach                       0  2.057
LinkedTransferQueue parallelStream().mapToInt                      0  8.692
LinkedTransferQueue parallelStream().collect                       0  6.316
LinkedTransferQueue parallelStream()::iterator                     0  1.202
LinkedTransferQueue removeIf                                       0  0.278
LinkedTransferQueue remove(Object)                                 0  0.114
PriorityBlockingQueue iterate for loop                             0  6.494
PriorityBlockingQueue iterator().forEachRemaining()                0  0.346
PriorityBlockingQueue spliterator().tryAdvance()                   0  6.061
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.179
PriorityBlockingQueue contains                                     0  0.262
PriorityBlockingQueue containsAll                                  0  0.144
PriorityBlockingQueue forEach                                      0  0.259
PriorityBlockingQueue toArray()                                    0  0.061
PriorityBlockingQueue toArray(a)                                   0  0.243
PriorityBlockingQueue toArray(empty)                               0  0.141
PriorityBlockingQueue stream().forEach                             0  0.205
PriorityBlockingQueue stream().mapToInt                            0  1.646
PriorityBlockingQueue stream().collect                             0  4.966
PriorityBlockingQueue stream()::iterator                           0  0.361
PriorityBlockingQueue parallelStream().forEach                     0  2.346
PriorityBlockingQueue parallelStream().mapToInt                    0 16.490
PriorityBlockingQueue parallelStream().collect                     0  3.365
PriorityBlockingQueue parallelStream()::iterator                   0  0.255
PriorityBlockingQueue removeIf                                     0  0.422
PriorityBlockingQueue remove(Object)                               0  0.110
ListN iterate for loop                                             0  0.909
ListN iterator().forEachRemaining()                                0  5.236
ListN spliterator().tryAdvance()                                   0  0.304
ListN spliterator().forEachRemaining()                             0  0.137
ListN contains                                                     0  0.586
ListN containsAll                                                  0  0.122
ListN forEach                                                      0  0.141
ListN toArray()                                                    0  0.068
ListN toArray(a)                                                   0  0.125
ListN toArray(empty)                                               0  0.091
ListN stream().forEach                                             0  0.186
ListN stream().mapToInt                                            0  0.490
ListN stream().collect                                             0  0.274
ListN stream()::iterator                                           0  0.285
ListN parallelStream().forEach                                     0  1.536
ListN parallelStream().mapToInt                                    0  4.110
ListN parallelStream().collect                                     0  7.289
ListN parallelStream()::iterator                                   0  0.335
ListN listIterator forward loop                                    0  1.369
ListN listIterator backward loop                                   0  0.186
ListN indexOf                                                      0  0.095
ListN lastIndexOf                                                  0  0.080
ListN equals                                                       0  0.270
ListN hashCode                                                     0  0.502
ImmutableCollections$SubList iterate for loop                      0  0.745
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.190
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.278
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.156
ImmutableCollections$SubList contains                              0  0.357
ImmutableCollections$SubList containsAll                           0  0.167
ImmutableCollections$SubList forEach                               0  0.156
ImmutableCollections$SubList toArray()                             0  0.179
ImmutableCollections$SubList toArray(a)                            0  0.133
ImmutableCollections$SubList toArray(empty)                        0  0.392
ImmutableCollections$SubList stream().forEach                      0  0.859
ImmutableCollections$SubList stream().mapToInt                     0  0.460
ImmutableCollections$SubList stream().collect                      0  0.335
ImmutableCollections$SubList stream()::iterator                    0  0.262
ImmutableCollections$SubList parallelStream().forEach              0  8.913
ImmutableCollections$SubList parallelStream().mapToInt             0  3.517
ImmutableCollections$SubList parallelStream().collect              0 10.989
ImmutableCollections$SubList parallelStream()::iterator            0  0.365
ImmutableCollections$SubList listIterator forward loop             0  0.357
ImmutableCollections$SubList listIterator backward loop            0  0.144
ImmutableCollections$SubList indexOf                               0  0.129
ImmutableCollections$SubList lastIndexOf                           0  0.106
ImmutableCollections$SubList equals                                0 21.091
ImmutableCollections$SubList hashCode                              0  0.418
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
