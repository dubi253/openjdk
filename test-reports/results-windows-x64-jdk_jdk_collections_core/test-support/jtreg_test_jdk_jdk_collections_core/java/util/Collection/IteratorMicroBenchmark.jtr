#Test Results (version 2)
#Sat Mar 16 00:13:17 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\r\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=515 0\:00\:00.515
end=Sat Mar 16 00\:13\:17 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1387-525.qlbpdebbqwpe3pov5lpj0n5fhf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Sat Mar 16 00\:13\:16 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=515
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Collection

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ced5e427db9ce5a0c5a328b30c33edee96767763)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-ced5e427db9ce5a0c5a328b30c33edee96767763, mixed mode, sharing)

#section:build
----------messages:(7/240)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Sat Mar 16 00:13:16 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Sat Mar 16 00:13:16 UTC 2024
elapsed time (seconds): 0.14
result: Passed. Build successful

#section:compile
----------messages:(7/294)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Sat Mar 16 00:13:16 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Mar 16 00:13:16 UTC 2024
elapsed time (seconds): 0.14
----------configuration:(10/698)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d

----------rerun:(36/3628)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java'
----------direct:(7/584)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/299)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Sat Mar 16 00:13:16 UTC 2024
Mode: agentvm
Agent id: 4
finished: Sat Mar 16 00:13:17 UTC 2024
elapsed time (seconds): 0.375
----------configuration:(13/927)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection

----------rerun:(28/3078)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0  9.636
ArrayList spliterator().tryAdvance()                               0  6.189
ArrayList spliterator().forEachRemaining()                         0  5.088
ArrayList contains                                                 0 11.222
ArrayList containsAll                                              0  1.034
ArrayList forEach                                                  0  5.559
ArrayList toArray()                                                0  0.236
ArrayList toArray(a)                                               0  0.242
ArrayList toArray(empty)                                           0  0.303
ArrayList stream().forEach                                         0  6.364
ArrayList stream().mapToInt                                        0 32.431
ArrayList stream().collect                                         0 30.158
ArrayList stream()::iterator                                       0 12.912
ArrayList parallelStream().forEach                                 1 54.559
ArrayList parallelStream().mapToInt                                0 26.084
ArrayList parallelStream().collect                                 0 13.320
ArrayList parallelStream()::iterator                               0  6.354
ArrayList removeIf                                                 0 10.508
ArrayList remove(Object)                                           0  1.269
ArrayList listIterator forward loop                                0  1.030
ArrayList listIterator backward loop                               0  0.556
ArrayList indexOf                                                  0  1.024
ArrayList lastIndexOf                                              0  0.391
ArrayList equals                                                   0  0.731
ArrayList hashCode                                                 0  1.030
ArrayList replaceAll                                               0  8.761
ArrayList$SubList iterate for loop                                 0  7.859
ArrayList$SubList iterator().forEachRemaining()                    0  0.407
ArrayList$SubList spliterator().tryAdvance()                       0  5.747
ArrayList$SubList spliterator().forEachRemaining()                 0  0.182
ArrayList$SubList contains                                         0  0.209
ArrayList$SubList containsAll                                      0  0.219
ArrayList$SubList forEach                                          0  1.162
ArrayList$SubList toArray()                                        0  0.306
ArrayList$SubList toArray(a)                                       0  0.141
ArrayList$SubList toArray(empty)                                   0  0.236
ArrayList$SubList stream().forEach                                 0  0.226
ArrayList$SubList stream().mapToInt                                0  0.465
ArrayList$SubList stream().collect                                 0  0.370
ArrayList$SubList stream()::iterator                               0  0.253
ArrayList$SubList parallelStream().forEach                         0  2.731
ArrayList$SubList parallelStream().mapToInt                        0  2.508
ArrayList$SubList parallelStream().collect                         0  2.448
ArrayList$SubList parallelStream()::iterator                       0  0.253
ArrayList$SubList removeIf                                         0  0.323
ArrayList$SubList remove(Object)                                   0  0.202
ArrayList$SubList listIterator forward loop                        0  0.128
ArrayList$SubList listIterator backward loop                       0  0.162
ArrayList$SubList indexOf                                          0  0.088
ArrayList$SubList lastIndexOf                                      0  0.125
ArrayList$SubList equals                                           0  0.492
ArrayList$SubList hashCode                                         0  0.178
ArrayList$SubList replaceAll                                       0  0.209
Vector iterate for loop                                            0  1.145
Vector iterator().forEachRemaining()                               0  0.721
Vector spliterator().tryAdvance()                                  0  5.815
Vector spliterator().forEachRemaining()                            0  0.158
Vector contains                                                    0  1.990
Vector containsAll                                                 0  8.057
Vector forEach                                                     0  0.189
Vector toArray()                                                   0  0.582
Vector toArray(a)                                                  0  0.178
Vector toArray(empty)                                              0  0.185
Vector stream().forEach                                            0  0.239
Vector stream().mapToInt                                           0  0.444
Vector stream().collect                                            0  0.330
Vector stream()::iterator                                          0  0.239
Vector parallelStream().forEach                                    0  2.118
Vector parallelStream().mapToInt                                   0  2.562
Vector parallelStream().collect                                    0  2.529
Vector parallelStream()::iterator                                  0  0.256
Vector removeIf                                                    0  0.131
Vector remove(Object)                                              0  2.024
Vector listIterator forward loop                                   0  0.236
Vector listIterator backward loop                                  0  0.209
Vector indexOf                                                     0  0.094
Vector lastIndexOf                                                 0  0.215
Vector equals                                                      0  1.037
Vector hashCode                                                    0  0.418
Vector replaceAll                                                  0  0.232
SynchronizedRandomAccessList iterate for loop                      0 16.441
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.286
SynchronizedRandomAccessList spliterator().tryAdvance()            0  8.057
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.303
SynchronizedRandomAccessList contains                              0  0.943
SynchronizedRandomAccessList containsAll                           0  0.290
SynchronizedRandomAccessList forEach                               0  0.172
SynchronizedRandomAccessList toArray()                             0  0.256
SynchronizedRandomAccessList toArray(a)                            0  0.192
SynchronizedRandomAccessList toArray(empty)                        1 34.879
SynchronizedRandomAccessList stream().forEach                      0  0.451
SynchronizedRandomAccessList stream().mapToInt                     0  0.559
SynchronizedRandomAccessList stream().collect                      0  0.455
SynchronizedRandomAccessList stream()::iterator                    0  0.418
SynchronizedRandomAccessList parallelStream().forEach              0  2.620
SynchronizedRandomAccessList parallelStream().mapToInt             0  2.697
SynchronizedRandomAccessList parallelStream().collect              0  5.195
SynchronizedRandomAccessList parallelStream()::iterator            0  0.343
SynchronizedRandomAccessList removeIf                              0  0.771
SynchronizedRandomAccessList remove(Object)                        0  0.263
SynchronizedRandomAccessList listIterator forward loop             0  0.232
SynchronizedRandomAccessList listIterator backward loop            0  0.461
SynchronizedRandomAccessList indexOf                               0  0.360
SynchronizedRandomAccessList lastIndexOf                           0  0.357
SynchronizedRandomAccessList equals                                0  0.451
SynchronizedRandomAccessList hashCode                              0  0.279
SynchronizedRandomAccessList replaceAll                            0  0.727
LinkedList iterate for loop                                        0  1.310
LinkedList iterator().forEachRemaining()                           0  0.293
LinkedList spliterator().tryAdvance()                              0  6.061
LinkedList spliterator().forEachRemaining()                        0  0.148
LinkedList contains                                                0  1.364
LinkedList containsAll                                             0  0.118
LinkedList forEach                                                 0  0.158
LinkedList toArray()                                               0  0.131
LinkedList toArray(a)                                              0  0.091
LinkedList toArray(empty)                                          0  0.131
LinkedList stream().forEach                                        0  0.273
LinkedList stream().mapToInt                                       0  0.424
LinkedList stream().collect                                        0  0.330
LinkedList stream()::iterator                                      0  0.229
LinkedList parallelStream().forEach                                0  2.370
LinkedList parallelStream().mapToInt                               0 27.852
LinkedList parallelStream().collect                                0  3.660
LinkedList parallelStream()::iterator                              0  0.266
LinkedList removeIf                                                0  0.155
LinkedList remove(Object)                                          0  0.131
LinkedList descendingIterator() loop                               0  5.027
LinkedList descendingIterator().forEachRemaining()                 0  7.111
LinkedList listIterator forward loop                               0  0.707
LinkedList listIterator backward loop                              0  0.111
LinkedList indexOf                                                 0  0.094
LinkedList lastIndexOf                                             0  0.118
LinkedList equals                                                  0  0.340
LinkedList hashCode                                                0  0.192
LinkedList replaceAll                                              0  0.212
AbstractList$SubList iterate for loop                              0  0.276
AbstractList$SubList iterator().forEachRemaining()                 0  0.192
AbstractList$SubList spliterator().tryAdvance()                    0  0.407
AbstractList$SubList spliterator().forEachRemaining()              0  0.205
AbstractList$SubList contains                                      0  0.168
AbstractList$SubList containsAll                                   0  8.731
AbstractList$SubList forEach                                       0  0.246
AbstractList$SubList toArray()                                     0 14.842
AbstractList$SubList toArray(a)                                    0  1.572
AbstractList$SubList toArray(empty)                                0  0.529
AbstractList$SubList stream().forEach                              0  0.599
AbstractList$SubList stream().mapToInt                             0  0.475
AbstractList$SubList stream().collect                              0  0.391
AbstractList$SubList stream()::iterator                            0  0.273
AbstractList$SubList parallelStream().forEach                      0  2.778
AbstractList$SubList parallelStream().mapToInt                     0  2.869
AbstractList$SubList parallelStream().collect                      0  5.162
AbstractList$SubList parallelStream()::iterator                    0  0.508
AbstractList$SubList removeIf                                      0  0.148
AbstractList$SubList remove(Object)                                0  0.148
AbstractList$SubList listIterator forward loop                     0  0.091
AbstractList$SubList listIterator backward loop                    0  0.253
AbstractList$SubList indexOf                                       0  0.125
AbstractList$SubList lastIndexOf                                   0  0.215
AbstractList$SubList equals                                        0  0.434
AbstractList$SubList hashCode                                      0  0.246
AbstractList$SubList replaceAll                                    0  0.189
CopyOnWriteArrayList iterate for loop                              0  0.899
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.737
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.313
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.091
CopyOnWriteArrayList contains                                      0  2.064
CopyOnWriteArrayList containsAll                                   0  2.946
CopyOnWriteArrayList forEach                                       0  0.152
CopyOnWriteArrayList toArray()                                     0  0.468
CopyOnWriteArrayList toArray(a)                                    0  0.155
CopyOnWriteArrayList toArray(empty)                                0  0.172
CopyOnWriteArrayList stream().forEach                              0  0.182
CopyOnWriteArrayList stream().mapToInt                             0  0.394
CopyOnWriteArrayList stream().collect                              0  0.620
CopyOnWriteArrayList stream()::iterator                            0  0.212
CopyOnWriteArrayList parallelStream().forEach                      0  7.407
CopyOnWriteArrayList parallelStream().mapToInt                     0  7.953
CopyOnWriteArrayList parallelStream().collect                      0  2.700
CopyOnWriteArrayList parallelStream()::iterator                    0  3.111
CopyOnWriteArrayList removeIf                                      0  0.189
CopyOnWriteArrayList remove(Object)                                0  2.135
CopyOnWriteArrayList listIterator forward loop                     0  0.138
CopyOnWriteArrayList listIterator backward loop                    0  0.253
CopyOnWriteArrayList indexOf                                       0  0.300
CopyOnWriteArrayList lastIndexOf                                   0  0.131
CopyOnWriteArrayList equals                                        0  0.357
CopyOnWriteArrayList hashCode                                      0  0.215
CopyOnWriteArrayList replaceAll                                    0  0.481
COWSubList iterate for loop                                        0  6.185
COWSubList iterator().forEachRemaining()                           0  0.347
COWSubList spliterator().tryAdvance()                              0  0.330
COWSubList spliterator().forEachRemaining()                        0  0.108
COWSubList contains                                                0  0.229
COWSubList containsAll                                             0  0.239
COWSubList forEach                                                 0  0.205
COWSubList toArray()                                               0  0.168
COWSubList toArray(a)                                              0  0.192
COWSubList toArray(empty)                                          0  0.195
COWSubList stream().forEach                                        0  2.609
COWSubList stream().mapToInt                                       0  0.421
COWSubList stream().collect                                        0  0.303
COWSubList stream()::iterator                                      0  0.296
COWSubList parallelStream().forEach                                0  6.737
COWSubList parallelStream().mapToInt                               0  2.236
COWSubList parallelStream().collect                                0  2.333
COWSubList parallelStream()::iterator                              0  0.892
COWSubList removeIf                                                0  0.438
COWSubList remove(Object)                                          0  0.290
COWSubList listIterator forward loop                               0  0.263
COWSubList listIterator backward loop                              0  0.387
COWSubList indexOf                                                 0  0.071
COWSubList lastIndexOf                                             0  0.121
COWSubList equals                                                  0  0.397
COWSubList hashCode                                                0  4.734
COWSubList replaceAll                                              0  8.054
ArrayDeque iterate for loop                                        0  0.896
ArrayDeque iterator().forEachRemaining()                           0  0.855
ArrayDeque spliterator().tryAdvance()                              0  5.848
ArrayDeque spliterator().forEachRemaining()                        0  0.209
ArrayDeque contains                                                0  0.481
ArrayDeque containsAll                                             0  0.081
ArrayDeque forEach                                                 0  0.074
ArrayDeque toArray()                                               0  0.172
ArrayDeque toArray(a)                                              0  0.114
ArrayDeque toArray(empty)                                          0  0.104
ArrayDeque stream().forEach                                        0  0.148
ArrayDeque stream().mapToInt                                       0  0.394
ArrayDeque stream().collect                                        0  0.290
ArrayDeque stream()::iterator                                      0  0.178
ArrayDeque parallelStream().forEach                                0  6.279
ArrayDeque parallelStream().mapToInt                               0 12.980
ArrayDeque parallelStream().collect                                0 12.343
ArrayDeque parallelStream()::iterator                              0  0.296
ArrayDeque removeIf                                                0  0.131
ArrayDeque remove(Object)                                          0  0.094
ArrayDeque descendingIterator() loop                               0  5.882
ArrayDeque descendingIterator().forEachRemaining()                 0  0.428
PriorityQueue iterate for loop                                     0  0.195
PriorityQueue iterator().forEachRemaining()                        0  0.145
PriorityQueue spliterator().tryAdvance()                           0  5.098
PriorityQueue spliterator().forEachRemaining()                     0  0.148
PriorityQueue contains                                             0  0.226
PriorityQueue containsAll                                          0  0.108
PriorityQueue forEach                                              0  0.195
PriorityQueue toArray()                                            0  0.633
PriorityQueue toArray(a)                                           0  0.229
PriorityQueue toArray(empty)                                       0  0.236
PriorityQueue stream().forEach                                     0  0.192
PriorityQueue stream().mapToInt                                    0  0.519
PriorityQueue stream().collect                                     0  0.488
PriorityQueue stream()::iterator                                   0  0.226
PriorityQueue parallelStream().forEach                             0  2.121
PriorityQueue parallelStream().mapToInt                            0  8.529
PriorityQueue parallelStream().collect                             0  2.182
PriorityQueue parallelStream()::iterator                           0  1.168
PriorityQueue removeIf                                             0  0.603
PriorityQueue remove(Object)                                       0  0.098
ConcurrentLinkedQueue iterate for loop                             0  0.734
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.125
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  5.111
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.182
ConcurrentLinkedQueue contains                                     0  0.717
ConcurrentLinkedQueue containsAll                                  0  0.077
ConcurrentLinkedQueue forEach                                      0  0.077
ConcurrentLinkedQueue toArray()                                    0  0.125
ConcurrentLinkedQueue toArray(a)                                   0  0.121
ConcurrentLinkedQueue toArray(empty)                               0  0.061
ConcurrentLinkedQueue stream().forEach                             0  0.135
ConcurrentLinkedQueue stream().mapToInt                            0  3.222
ConcurrentLinkedQueue stream().collect                             0  0.444
ConcurrentLinkedQueue stream()::iterator                           0  0.279
ConcurrentLinkedQueue parallelStream().forEach                     0  3.404
ConcurrentLinkedQueue parallelStream().mapToInt                    0  6.855
ConcurrentLinkedQueue parallelStream().collect                     0  1.825
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.279
ConcurrentLinkedQueue removeIf                                     0  0.135
ConcurrentLinkedQueue remove(Object)                               0  0.081
ConcurrentLinkedDeque iterate for loop                             0  1.434
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.131
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  5.859
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.155
ConcurrentLinkedDeque contains                                     0  1.047
ConcurrentLinkedDeque containsAll                                  0  0.101
ConcurrentLinkedDeque forEach                                      0  0.404
ConcurrentLinkedDeque toArray()                                    0  0.168
ConcurrentLinkedDeque toArray(a)                                   0  0.155
ConcurrentLinkedDeque toArray(empty)                               0  0.084
ConcurrentLinkedDeque stream().forEach                             0  0.165
ConcurrentLinkedDeque stream().mapToInt                            0  5.613
ConcurrentLinkedDeque stream().collect                             0  0.485
ConcurrentLinkedDeque stream()::iterator                           0  0.263
ConcurrentLinkedDeque parallelStream().forEach                     0  5.616
ConcurrentLinkedDeque parallelStream().mapToInt                    0  2.734
ConcurrentLinkedDeque parallelStream().collect                     0  1.747
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.279
ConcurrentLinkedDeque removeIf                                     0  0.125
ConcurrentLinkedDeque remove(Object)                               0  0.114
ConcurrentLinkedDeque descendingIterator() loop                    0  4.071
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.158
ArrayBlockingQueue iterate for loop                                0  1.572
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.545
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.290
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.162
ArrayBlockingQueue contains                                        0  0.926
ArrayBlockingQueue containsAll                                     0  0.081
ArrayBlockingQueue forEach                                         0  0.094
ArrayBlockingQueue toArray()                                       0  0.249
ArrayBlockingQueue toArray(a)                                      0  0.111
ArrayBlockingQueue toArray(empty)                                  0  0.101
ArrayBlockingQueue stream().forEach                                0  0.229
ArrayBlockingQueue stream().mapToInt                               0  0.370
ArrayBlockingQueue stream().collect                                0  0.310
ArrayBlockingQueue stream()::iterator                              0  0.229
ArrayBlockingQueue parallelStream().forEach                        0  2.162
ArrayBlockingQueue parallelStream().mapToInt                       0  9.650
ArrayBlockingQueue parallelStream().collect                        0  6.508
ArrayBlockingQueue parallelStream()::iterator                      0  0.525
ArrayBlockingQueue removeIf                                        0  0.155
ArrayBlockingQueue remove(Object)                                  0  0.101
LinkedBlockingQueue iterate for loop                               0  1.360
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.822
LinkedBlockingQueue spliterator().tryAdvance()                     0  6.579
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.313
LinkedBlockingQueue contains                                       0  1.798
LinkedBlockingQueue containsAll                                    0  0.108
LinkedBlockingQueue forEach                                        0  0.168
LinkedBlockingQueue toArray()                                      0  0.088
LinkedBlockingQueue toArray(a)                                     0  0.091
LinkedBlockingQueue toArray(empty)                                 0  0.135
LinkedBlockingQueue stream().forEach                               0  0.242
LinkedBlockingQueue stream().mapToInt                              0  0.424
LinkedBlockingQueue stream().collect                               0  8.037
LinkedBlockingQueue stream()::iterator                             0  1.636
LinkedBlockingQueue parallelStream().forEach                       0  3.202
LinkedBlockingQueue parallelStream().mapToInt                      0  3.084
LinkedBlockingQueue parallelStream().collect                       0  2.549
LinkedBlockingQueue parallelStream()::iterator                     0  0.316
LinkedBlockingQueue removeIf                                       0  0.205
LinkedBlockingQueue remove(Object)                                 0  0.077
LinkedBlockingDeque iterate for loop                               0  1.057
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.616
LinkedBlockingDeque spliterator().tryAdvance()                     0  6.926
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.347
LinkedBlockingDeque contains                                       0  1.276
LinkedBlockingDeque containsAll                                    0  0.135
LinkedBlockingDeque forEach                                        0  0.178
LinkedBlockingDeque toArray()                                      0  0.084
LinkedBlockingDeque toArray(a)                                     0  0.088
LinkedBlockingDeque toArray(empty)                                 0  0.138
LinkedBlockingDeque stream().forEach                               0  0.249
LinkedBlockingDeque stream().mapToInt                              0  0.424
LinkedBlockingDeque stream().collect                               0  1.269
LinkedBlockingDeque stream()::iterator                             0  0.279
LinkedBlockingDeque parallelStream().forEach                       0 22.401
LinkedBlockingDeque parallelStream().mapToInt                      0  4.626
LinkedBlockingDeque parallelStream().collect                       0  2.741
LinkedBlockingDeque parallelStream()::iterator                     0  0.370
LinkedBlockingDeque removeIf                                       0  0.215
LinkedBlockingDeque remove(Object)                                 0  0.084
LinkedBlockingDeque descendingIterator() loop                      0  4.131
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.239
LinkedTransferQueue iterate for loop                               0  0.879
LinkedTransferQueue iterator().forEachRemaining()                  0  0.300
LinkedTransferQueue spliterator().tryAdvance()                     0  5.367
LinkedTransferQueue spliterator().forEachRemaining()               0  0.276
LinkedTransferQueue contains                                       0  0.801
LinkedTransferQueue containsAll                                    0  0.108
LinkedTransferQueue forEach                                        0  0.168
LinkedTransferQueue toArray()                                      0  0.138
LinkedTransferQueue toArray(a)                                     0  0.296
LinkedTransferQueue toArray(empty)                                 0  0.071
LinkedTransferQueue stream().forEach                               0  0.168
LinkedTransferQueue stream().mapToInt                              0  0.350
LinkedTransferQueue stream().collect                               0  0.293
LinkedTransferQueue stream()::iterator                             0  4.896
LinkedTransferQueue parallelStream().forEach                       0  2.104
LinkedTransferQueue parallelStream().mapToInt                      0  4.377
LinkedTransferQueue parallelStream().collect                       0  7.000
LinkedTransferQueue parallelStream()::iterator                     0  0.983
LinkedTransferQueue removeIf                                       0  0.232
LinkedTransferQueue remove(Object)                                 0  0.094
PriorityBlockingQueue iterate for loop                             0  6.545
PriorityBlockingQueue iterator().forEachRemaining()                0  0.320
PriorityBlockingQueue spliterator().tryAdvance()                   0  4.556
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.121
PriorityBlockingQueue contains                                     0  0.195
PriorityBlockingQueue containsAll                                  0  0.094
PriorityBlockingQueue forEach                                      0  0.152
PriorityBlockingQueue toArray()                                    0  0.044
PriorityBlockingQueue toArray(a)                                   0  0.165
PriorityBlockingQueue toArray(empty)                               0  0.168
PriorityBlockingQueue stream().forEach                             0  0.128
PriorityBlockingQueue stream().mapToInt                            0  1.138
PriorityBlockingQueue stream().collect                             0  0.838
PriorityBlockingQueue stream()::iterator                           0  0.168
PriorityBlockingQueue parallelStream().forEach                     0  2.141
PriorityBlockingQueue parallelStream().mapToInt                    0 10.242
PriorityBlockingQueue parallelStream().collect                     0  2.633
PriorityBlockingQueue parallelStream()::iterator                   0  0.246
PriorityBlockingQueue removeIf                                     0  0.337
PriorityBlockingQueue remove(Object)                               0  0.101
ListN iterate for loop                                             0  1.152
ListN iterator().forEachRemaining()                                0  0.141
ListN spliterator().tryAdvance()                                   0  0.249
ListN spliterator().forEachRemaining()                             0  0.125
ListN contains                                                     0  0.542
ListN containsAll                                                  0  0.111
ListN forEach                                                      0  0.128
ListN toArray()                                                    0  0.057
ListN toArray(a)                                                   0  0.111
ListN toArray(empty)                                               0  0.155
ListN stream().forEach                                             0  0.175
ListN stream().mapToInt                                            0  0.475
ListN stream().collect                                             0  0.293
ListN stream()::iterator                                           0  0.286
ListN parallelStream().forEach                                     0  1.347
ListN parallelStream().mapToInt                                    0  3.239
ListN parallelStream().collect                                     0  1.946
ListN parallelStream()::iterator                                   0  0.279
ListN listIterator forward loop                                    0  0.347
ListN listIterator backward loop                                   0  0.145
ListN indexOf                                                      0  0.074
ListN lastIndexOf                                                  0  0.064
ListN equals                                                       0  0.259
ListN hashCode                                                     0  0.916
ImmutableCollections$SubList iterate for loop                      0  1.727
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.195
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.596
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.148
ImmutableCollections$SubList contains                              0  1.428
ImmutableCollections$SubList containsAll                           0  0.148
ImmutableCollections$SubList forEach                               0  0.145
ImmutableCollections$SubList toArray()                             0  0.168
ImmutableCollections$SubList toArray(a)                            0  0.118
ImmutableCollections$SubList toArray(empty)                        0  1.148
ImmutableCollections$SubList stream().forEach                      0  0.249
ImmutableCollections$SubList stream().mapToInt                     0  0.414
ImmutableCollections$SubList stream().collect                      0  0.367
ImmutableCollections$SubList stream()::iterator                    0  0.269
ImmutableCollections$SubList parallelStream().forEach              0  1.882
ImmutableCollections$SubList parallelStream().mapToInt             0 10.030
ImmutableCollections$SubList parallelStream().collect              0  7.707
ImmutableCollections$SubList parallelStream()::iterator            0  0.354
ImmutableCollections$SubList listIterator forward loop             0  1.438
ImmutableCollections$SubList listIterator backward loop            0  0.145
ImmutableCollections$SubList indexOf                               0  0.125
ImmutableCollections$SubList lastIndexOf                           0  0.108
ImmutableCollections$SubList equals                                0  0.303
ImmutableCollections$SubList hashCode                              0  0.178
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
