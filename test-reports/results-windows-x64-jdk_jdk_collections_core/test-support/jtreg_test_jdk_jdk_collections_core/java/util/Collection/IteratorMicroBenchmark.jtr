#Test Results (version 2)
#Fri Mar 01 19:02:46 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\r\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=562 0\:00\:00.562
end=Fri Mar 01 19\:02\:46 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1494-283.3ceprcbbckkebkz0gecq512nqb.bx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Fri Mar 01 19\:02\:46 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=562
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Collection

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd, mixed mode, sharing)

#section:build
----------messages:(7/241)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Fri Mar 01 19:02:46 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Fri Mar 01 19:02:46 UTC 2024
elapsed time (seconds): 0.125
result: Passed. Build successful

#section:compile
----------messages:(7/295)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Fri Mar 01 19:02:46 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 19:02:46 UTC 2024
elapsed time (seconds): 0.125
----------configuration:(10/698)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d

----------rerun:(36/3628)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java'
----------direct:(7/584)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/299)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Fri Mar 01 19:02:46 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 01 19:02:46 UTC 2024
elapsed time (seconds): 0.421
----------configuration:(13/927)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection

----------rerun:(28/3078)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0  2.473
ArrayList spliterator().tryAdvance()                               0  1.915
ArrayList spliterator().forEachRemaining()                         0  1.629
ArrayList contains                                                 0  3.203
ArrayList containsAll                                              0  0.292
ArrayList forEach                                                  0  1.898
ArrayList toArray()                                                0  0.083
ArrayList toArray(a)                                               0  0.086
ArrayList toArray(empty)                                           0  0.067
ArrayList stream().forEach                                         0  1.630
ArrayList stream().mapToInt                                        1  8.996
ArrayList stream().collect                                         0  7.269
ArrayList stream()::iterator                                       0  2.051
ArrayList parallelStream().forEach                                 1 13.630
ArrayList parallelStream().mapToInt                                0  5.023
ArrayList parallelStream().collect                                 0  2.575
ArrayList parallelStream()::iterator                               0  1.678
ArrayList removeIf                                                 0  1.552
ArrayList remove(Object)                                           0  0.490
ArrayList listIterator forward loop                                0  0.303
ArrayList listIterator backward loop                               0  0.117
ArrayList indexOf                                                  0  0.065
ArrayList lastIndexOf                                              0  0.067
ArrayList equals                                                   0  0.091
ArrayList hashCode                                                 0  0.132
ArrayList replaceAll                                               0  1.854
ArrayList$SubList iterate for loop                                 0  1.635
ArrayList$SubList iterator().forEachRemaining()                    0  0.094
ArrayList$SubList spliterator().tryAdvance()                       0  1.197
ArrayList$SubList spliterator().forEachRemaining()                 0  0.042
ArrayList$SubList contains                                         0  0.053
ArrayList$SubList containsAll                                      0  0.047
ArrayList$SubList forEach                                          0  0.136
ArrayList$SubList toArray()                                        0  0.058
ArrayList$SubList toArray(a)                                       0  0.036
ArrayList$SubList toArray(empty)                                   0  0.056
ArrayList$SubList stream().forEach                                 0  0.049
ArrayList$SubList stream().mapToInt                                0  0.111
ArrayList$SubList stream().collect                                 0  0.090
ArrayList$SubList stream()::iterator                               0  0.065
ArrayList$SubList parallelStream().forEach                         0  0.749
ArrayList$SubList parallelStream().mapToInt                        0  0.477
ArrayList$SubList parallelStream().collect                         0  0.443
ArrayList$SubList parallelStream()::iterator                       0  0.066
ArrayList$SubList removeIf                                         0  0.071
ArrayList$SubList remove(Object)                                   0  0.046
ArrayList$SubList listIterator forward loop                        0  0.028
ArrayList$SubList listIterator backward loop                       0  0.065
ArrayList$SubList indexOf                                          0  0.023
ArrayList$SubList lastIndexOf                                      0  0.039
ArrayList$SubList equals                                           0  0.122
ArrayList$SubList hashCode                                         0  0.042
ArrayList$SubList replaceAll                                       0  0.048
Vector iterate for loop                                            0  0.053
Vector iterator().forEachRemaining()                               0  0.094
Vector spliterator().tryAdvance()                                  0  1.426
Vector spliterator().forEachRemaining()                            0  0.034
Vector contains                                                    0  0.305
Vector containsAll                                                 0  0.067
Vector forEach                                                     0  0.029
Vector toArray()                                                   0  0.014
Vector toArray(a)                                                  0  0.038
Vector toArray(empty)                                              0  0.024
Vector stream().forEach                                            0  0.046
Vector stream().mapToInt                                           0  0.105
Vector stream().collect                                            0  0.084
Vector stream()::iterator                                          0  0.060
Vector parallelStream().forEach                                    0  0.715
Vector parallelStream().mapToInt                                   0  0.400
Vector parallelStream().collect                                    0  0.417
Vector parallelStream()::iterator                                  0  0.062
Vector removeIf                                                    0  0.031
Vector remove(Object)                                              0  0.312
Vector listIterator forward loop                                   0  0.054
Vector listIterator backward loop                                  0  0.045
Vector indexOf                                                     0  0.197
Vector lastIndexOf                                                 0  0.040
Vector equals                                                      0  0.162
Vector hashCode                                                    0  0.089
Vector replaceAll                                                  0  0.054
SynchronizedRandomAccessList iterate for loop                      0  0.881
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.064
SynchronizedRandomAccessList spliterator().tryAdvance()            0  1.628
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.067
SynchronizedRandomAccessList contains                              0  0.165
SynchronizedRandomAccessList containsAll                           0  0.621
SynchronizedRandomAccessList forEach                               0  0.051
SynchronizedRandomAccessList toArray()                             0  0.095
SynchronizedRandomAccessList toArray(a)                            0  0.055
SynchronizedRandomAccessList toArray(empty)                        0  1.210
SynchronizedRandomAccessList stream().forEach                      0  0.075
SynchronizedRandomAccessList stream().mapToInt                     0  0.121
SynchronizedRandomAccessList stream().collect                      0  0.094
SynchronizedRandomAccessList stream()::iterator                    0  0.076
SynchronizedRandomAccessList parallelStream().forEach              0  0.567
SynchronizedRandomAccessList parallelStream().mapToInt             0  0.602
SynchronizedRandomAccessList parallelStream().collect              0  0.529
SynchronizedRandomAccessList parallelStream()::iterator            0  0.078
SynchronizedRandomAccessList removeIf                              0  0.256
SynchronizedRandomAccessList remove(Object)                        0  0.057
SynchronizedRandomAccessList listIterator forward loop             0  0.054
SynchronizedRandomAccessList listIterator backward loop            0  0.103
SynchronizedRandomAccessList indexOf                               0  0.074
SynchronizedRandomAccessList lastIndexOf                           0  0.080
SynchronizedRandomAccessList equals                                0  0.110
SynchronizedRandomAccessList hashCode                              0  0.079
SynchronizedRandomAccessList replaceAll                            0  0.161
LinkedList iterate for loop                                        0  0.046
LinkedList iterator().forEachRemaining()                           0  0.056
LinkedList spliterator().tryAdvance()                              0  1.394
LinkedList spliterator().forEachRemaining()                        0  0.034
LinkedList contains                                                0  0.267
LinkedList containsAll                                             0  0.027
LinkedList forEach                                                 0  0.036
LinkedList toArray()                                               0  0.033
LinkedList toArray(a)                                              0  0.054
LinkedList toArray(empty)                                          0  0.034
LinkedList stream().forEach                                        0  0.040
LinkedList stream().mapToInt                                       0  0.095
LinkedList stream().collect                                        0  0.073
LinkedList stream()::iterator                                      0  0.054
LinkedList parallelStream().forEach                                0  0.574
LinkedList parallelStream().mapToInt                               0  1.246
LinkedList parallelStream().collect                                0  0.882
LinkedList parallelStream()::iterator                              0  0.057
LinkedList removeIf                                                0  0.558
LinkedList remove(Object)                                          0  0.028
LinkedList descendingIterator() loop                               0  1.136
LinkedList descendingIterator().forEachRemaining()                 0  1.851
LinkedList listIterator forward loop                               0  0.164
LinkedList listIterator backward loop                              0  0.028
LinkedList indexOf                                                 0  0.022
LinkedList lastIndexOf                                             0  0.020
LinkedList equals                                                  0  0.073
LinkedList hashCode                                                0  0.036
LinkedList replaceAll                                              0  0.044
AbstractList$SubList iterate for loop                              0  0.163
AbstractList$SubList iterator().forEachRemaining()                 0  0.041
AbstractList$SubList spliterator().tryAdvance()                    0  0.091
AbstractList$SubList spliterator().forEachRemaining()              0  0.042
AbstractList$SubList contains                                      0  0.035
AbstractList$SubList containsAll                                   0  0.720
AbstractList$SubList forEach                                       0  0.036
AbstractList$SubList toArray()                                     0  0.624
AbstractList$SubList toArray(a)                                    0  0.334
AbstractList$SubList toArray(empty)                                0  0.174
AbstractList$SubList stream().forEach                              0  0.063
AbstractList$SubList stream().mapToInt                             0  0.110
AbstractList$SubList stream().collect                              0  0.087
AbstractList$SubList stream()::iterator                            0  0.060
AbstractList$SubList parallelStream().forEach                      0  0.936
AbstractList$SubList parallelStream().mapToInt                     0  0.718
AbstractList$SubList parallelStream().collect                      0  1.936
AbstractList$SubList parallelStream()::iterator                    0  0.091
AbstractList$SubList removeIf                                      0  0.034
AbstractList$SubList remove(Object)                                0  0.032
AbstractList$SubList listIterator forward loop                     0  0.021
AbstractList$SubList listIterator backward loop                    0  0.056
AbstractList$SubList indexOf                                       0  0.039
AbstractList$SubList lastIndexOf                                   0  0.050
AbstractList$SubList equals                                        0  0.093
AbstractList$SubList hashCode                                      0  0.057
AbstractList$SubList replaceAll                                    0  0.045
CopyOnWriteArrayList iterate for loop                              0  0.034
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.085
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.039
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.022
CopyOnWriteArrayList contains                                      0  0.287
CopyOnWriteArrayList containsAll                                   0  0.795
CopyOnWriteArrayList forEach                                       0  0.030
CopyOnWriteArrayList toArray()                                     0  0.013
CopyOnWriteArrayList toArray(a)                                    0  0.030
CopyOnWriteArrayList toArray(empty)                                0  0.022
CopyOnWriteArrayList stream().forEach                              0  0.036
CopyOnWriteArrayList stream().mapToInt                             0  0.085
CopyOnWriteArrayList stream().collect                              0  0.067
CopyOnWriteArrayList stream()::iterator                            0  0.047
CopyOnWriteArrayList parallelStream().forEach                      0  1.217
CopyOnWriteArrayList parallelStream().mapToInt                     0  1.687
CopyOnWriteArrayList parallelStream().collect                      0  0.603
CopyOnWriteArrayList parallelStream()::iterator                    0  0.692
CopyOnWriteArrayList removeIf                                      0  0.037
CopyOnWriteArrayList remove(Object)                                0  0.399
CopyOnWriteArrayList listIterator forward loop                     0  0.028
CopyOnWriteArrayList listIterator backward loop                    0  0.056
CopyOnWriteArrayList indexOf                                       0  0.065
CopyOnWriteArrayList lastIndexOf                                   0  0.025
CopyOnWriteArrayList equals                                        0  0.077
CopyOnWriteArrayList hashCode                                      0  0.045
CopyOnWriteArrayList replaceAll                                    0  0.070
COWSubList iterate for loop                                        0  1.366
COWSubList iterator().forEachRemaining()                           0  0.075
COWSubList spliterator().tryAdvance()                              0  0.080
COWSubList spliterator().forEachRemaining()                        0  0.026
COWSubList contains                                                0  0.048
COWSubList containsAll                                             0  0.061
COWSubList forEach                                                 0  0.047
COWSubList toArray()                                               0  0.039
COWSubList toArray(a)                                              0  0.045
COWSubList toArray(empty)                                          0  0.040
COWSubList stream().forEach                                        0  0.039
COWSubList stream().mapToInt                                       0  0.091
COWSubList stream().collect                                        0  0.070
COWSubList stream()::iterator                                      0  0.062
COWSubList parallelStream().forEach                                0  1.531
COWSubList parallelStream().mapToInt                               0  1.171
COWSubList parallelStream().collect                                0  1.093
COWSubList parallelStream()::iterator                              0  0.128
COWSubList removeIf                                                0  0.079
COWSubList remove(Object)                                          0  0.027
COWSubList listIterator forward loop                               0  0.050
COWSubList listIterator backward loop                              0  0.087
COWSubList indexOf                                                 0  0.015
COWSubList lastIndexOf                                             0  0.054
COWSubList equals                                                  0  0.084
COWSubList hashCode                                                0  0.041
COWSubList replaceAll                                              0  0.051
ArrayDeque iterate for loop                                        0  0.035
ArrayDeque iterator().forEachRemaining()                           0  0.101
ArrayDeque spliterator().tryAdvance()                              0  1.315
ArrayDeque spliterator().forEachRemaining()                        0  0.059
ArrayDeque contains                                                0  0.205
ArrayDeque containsAll                                             0  0.023
ArrayDeque forEach                                                 0  0.028
ArrayDeque toArray()                                               0  0.041
ArrayDeque toArray(a)                                              0  0.034
ArrayDeque toArray(empty)                                          0  0.029
ArrayDeque stream().forEach                                        0  0.046
ArrayDeque stream().mapToInt                                       0  0.111
ArrayDeque stream().collect                                        0  0.081
ArrayDeque stream()::iterator                                      0  0.054
ArrayDeque parallelStream().forEach                                0  0.658
ArrayDeque parallelStream().mapToInt                               0  1.128
ArrayDeque parallelStream().collect                                0  1.858
ArrayDeque parallelStream()::iterator                              0  0.071
ArrayDeque removeIf                                                0  0.030
ArrayDeque remove(Object)                                          0  0.023
ArrayDeque descendingIterator() loop                               0  1.309
ArrayDeque descendingIterator().forEachRemaining()                 0  0.110
PriorityQueue iterate for loop                                     0  0.040
PriorityQueue iterator().forEachRemaining()                        0  0.034
PriorityQueue spliterator().tryAdvance()                           0  1.297
PriorityQueue spliterator().forEachRemaining()                     0  0.039
PriorityQueue contains                                             0  0.050
PriorityQueue containsAll                                          0  0.028
PriorityQueue forEach                                              0  0.054
PriorityQueue toArray()                                            0  0.017
PriorityQueue toArray(a)                                           0  0.047
PriorityQueue toArray(empty)                                       0  0.039
PriorityQueue stream().forEach                                     0  0.048
PriorityQueue stream().mapToInt                                    0  0.127
PriorityQueue stream().collect                                     0  0.089
PriorityQueue stream()::iterator                                   0  0.056
PriorityQueue parallelStream().forEach                             0  0.515
PriorityQueue parallelStream().mapToInt                            0  1.473
PriorityQueue parallelStream().collect                             0  0.552
PriorityQueue parallelStream()::iterator                           0  0.054
PriorityQueue removeIf                                             0  0.201
PriorityQueue remove(Object)                                       0  0.063
ConcurrentLinkedQueue iterate for loop                             0  0.042
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.034
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  1.519
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.063
ConcurrentLinkedQueue contains                                     0  0.210
ConcurrentLinkedQueue containsAll                                  0  0.029
ConcurrentLinkedQueue forEach                                      0  0.021
ConcurrentLinkedQueue toArray()                                    0  0.034
ConcurrentLinkedQueue toArray(a)                                   0  0.029
ConcurrentLinkedQueue toArray(empty)                               0  0.018
ConcurrentLinkedQueue stream().forEach                             0  0.050
ConcurrentLinkedQueue stream().mapToInt                            0  0.789
ConcurrentLinkedQueue stream().collect                             0  0.113
ConcurrentLinkedQueue stream()::iterator                           0  0.069
ConcurrentLinkedQueue parallelStream().forEach                     0  0.773
ConcurrentLinkedQueue parallelStream().mapToInt                    0  2.206
ConcurrentLinkedQueue parallelStream().collect                     0  0.497
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.064
ConcurrentLinkedQueue removeIf                                     0  0.034
ConcurrentLinkedQueue remove(Object)                               0  0.019
ConcurrentLinkedDeque iterate for loop                             0  0.060
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.034
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  1.512
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.039
ConcurrentLinkedDeque contains                                     0  0.292
ConcurrentLinkedDeque containsAll                                  0  0.027
ConcurrentLinkedDeque forEach                                      0  0.033
ConcurrentLinkedDeque toArray()                                    0  0.038
ConcurrentLinkedDeque toArray(a)                                   0  0.038
ConcurrentLinkedDeque toArray(empty)                               0  0.023
ConcurrentLinkedDeque stream().forEach                             0  0.043
ConcurrentLinkedDeque stream().mapToInt                            0  1.264
ConcurrentLinkedDeque stream().collect                             0  0.095
ConcurrentLinkedDeque stream()::iterator                           0  0.065
ConcurrentLinkedDeque parallelStream().forEach                     0  1.095
ConcurrentLinkedDeque parallelStream().mapToInt                    0  1.070
ConcurrentLinkedDeque parallelStream().collect                     0  0.407
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.060
ConcurrentLinkedDeque removeIf                                     0  0.030
ConcurrentLinkedDeque remove(Object)                               0  0.024
ConcurrentLinkedDeque descendingIterator() loop                    0  1.204
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.054
ArrayBlockingQueue iterate for loop                                0  0.128
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.117
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.111
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.054
ArrayBlockingQueue contains                                        0  0.380
ArrayBlockingQueue containsAll                                     0  0.030
ArrayBlockingQueue forEach                                         0  0.029
ArrayBlockingQueue toArray()                                       0  0.042
ArrayBlockingQueue toArray(a)                                      0  0.032
ArrayBlockingQueue toArray(empty)                                  0  0.030
ArrayBlockingQueue stream().forEach                                0  0.075
ArrayBlockingQueue stream().mapToInt                               0  0.286
ArrayBlockingQueue stream().collect                                0  0.104
ArrayBlockingQueue stream()::iterator                              0  0.079
ArrayBlockingQueue parallelStream().forEach                        0  0.641
ArrayBlockingQueue parallelStream().mapToInt                       0  2.671
ArrayBlockingQueue parallelStream().collect                        0  1.599
ArrayBlockingQueue parallelStream()::iterator                      0  0.138
ArrayBlockingQueue removeIf                                        0  0.035
ArrayBlockingQueue remove(Object)                                  0  0.024
LinkedBlockingQueue iterate for loop                               0  0.064
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.287
LinkedBlockingQueue spliterator().tryAdvance()                     0  1.753
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.084
LinkedBlockingQueue contains                                       0  0.466
LinkedBlockingQueue containsAll                                    0  0.030
LinkedBlockingQueue forEach                                        0  0.049
LinkedBlockingQueue toArray()                                      0  0.022
LinkedBlockingQueue toArray(a)                                     0  0.023
LinkedBlockingQueue toArray(empty)                                 0  0.037
LinkedBlockingQueue stream().forEach                               0  0.063
LinkedBlockingQueue stream().mapToInt                              0  0.107
LinkedBlockingQueue stream().collect                               0  2.334
LinkedBlockingQueue stream()::iterator                             0  0.080
LinkedBlockingQueue parallelStream().forEach                       0  0.543
LinkedBlockingQueue parallelStream().mapToInt                      0  0.514
LinkedBlockingQueue parallelStream().collect                       0  0.466
LinkedBlockingQueue parallelStream()::iterator                     0  0.065
LinkedBlockingQueue removeIf                                       0  0.048
LinkedBlockingQueue remove(Object)                                 0  0.020
LinkedBlockingDeque iterate for loop                               0  0.054
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.195
LinkedBlockingDeque spliterator().tryAdvance()                     0  2.147
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.096
LinkedBlockingDeque contains                                       0  0.316
LinkedBlockingDeque containsAll                                    0  0.031
LinkedBlockingDeque forEach                                        0  0.049
LinkedBlockingDeque toArray()                                      0  0.023
LinkedBlockingDeque toArray(a)                                     0  0.025
LinkedBlockingDeque toArray(empty)                                 0  0.035
LinkedBlockingDeque stream().forEach                               0  0.067
LinkedBlockingDeque stream().mapToInt                              0  0.115
LinkedBlockingDeque stream().collect                               0  0.288
LinkedBlockingDeque stream()::iterator                             0  0.070
LinkedBlockingDeque parallelStream().forEach                       0  0.885
LinkedBlockingDeque parallelStream().mapToInt                      0  0.734
LinkedBlockingDeque parallelStream().collect                       0  0.714
LinkedBlockingDeque parallelStream()::iterator                     0  0.075
LinkedBlockingDeque removeIf                                       0  0.048
LinkedBlockingDeque remove(Object)                                 0  0.021
LinkedBlockingDeque descendingIterator() loop                      0  1.584
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.065
LinkedTransferQueue iterate for loop                               0  0.040
LinkedTransferQueue iterator().forEachRemaining()                  0  0.075
LinkedTransferQueue spliterator().tryAdvance()                     0  1.082
LinkedTransferQueue spliterator().forEachRemaining()               0  0.049
LinkedTransferQueue contains                                       0  0.204
LinkedTransferQueue containsAll                                    0  0.021
LinkedTransferQueue forEach                                        0  0.027
LinkedTransferQueue toArray()                                      0  0.032
LinkedTransferQueue toArray(a)                                     0  0.073
LinkedTransferQueue toArray(empty)                                 0  0.017
LinkedTransferQueue stream().forEach                               0  0.045
LinkedTransferQueue stream().mapToInt                              0  0.085
LinkedTransferQueue stream().collect                               0  0.165
LinkedTransferQueue stream()::iterator                             0  1.258
LinkedTransferQueue parallelStream().forEach                       0  0.807
LinkedTransferQueue parallelStream().mapToInt                      0  0.975
LinkedTransferQueue parallelStream().collect                       0  0.798
LinkedTransferQueue parallelStream()::iterator                     0  0.202
LinkedTransferQueue removeIf                                       0  0.049
LinkedTransferQueue remove(Object)                                 0  0.021
PriorityBlockingQueue iterate for loop                             0  1.195
PriorityBlockingQueue iterator().forEachRemaining()                0  0.064
PriorityBlockingQueue spliterator().tryAdvance()                   0  1.014
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.032
PriorityBlockingQueue contains                                     0  0.048
PriorityBlockingQueue containsAll                                  0  0.028
PriorityBlockingQueue forEach                                      0  0.045
PriorityBlockingQueue toArray()                                    0  0.012
PriorityBlockingQueue toArray(a)                                   0  0.046
PriorityBlockingQueue toArray(empty)                               0  0.031
PriorityBlockingQueue stream().forEach                             0  0.039
PriorityBlockingQueue stream().mapToInt                            0  0.334
PriorityBlockingQueue stream().collect                             0  0.255
PriorityBlockingQueue stream()::iterator                           0  0.051
PriorityBlockingQueue parallelStream().forEach                     0  0.722
PriorityBlockingQueue parallelStream().mapToInt                    0  3.253
PriorityBlockingQueue parallelStream().collect                     0  0.593
PriorityBlockingQueue parallelStream()::iterator                   0  0.063
PriorityBlockingQueue removeIf                                     0  0.096
PriorityBlockingQueue remove(Object)                               0  0.024
ListN iterate for loop                                             0  0.047
ListN iterator().forEachRemaining()                                0  0.034
ListN spliterator().tryAdvance()                                   0  0.056
ListN spliterator().forEachRemaining()                             0  0.029
ListN contains                                                     0  0.064
ListN containsAll                                                  0  0.028
ListN forEach                                                      0  0.034
ListN toArray()                                                    0  0.014
ListN toArray(a)                                                   0  0.030
ListN toArray(empty)                                               0  0.022
ListN stream().forEach                                             0  0.043
ListN stream().mapToInt                                            0  0.077
ListN stream().collect                                             0  0.070
ListN stream()::iterator                                           0  0.070
ListN parallelStream().forEach                                     0  0.334
ListN parallelStream().mapToInt                                    0  0.364
ListN parallelStream().collect                                     0  0.349
ListN parallelStream()::iterator                                   0  0.060
ListN listIterator forward loop                                    0  0.069
ListN listIterator backward loop                                   0  0.035
ListN indexOf                                                      0  0.017
ListN lastIndexOf                                                  0  0.016
ListN equals                                                       0  0.054
ListN hashCode                                                     0  0.033
ImmutableCollections$SubList iterate for loop                      0  0.102
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.041
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.059
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.034
ImmutableCollections$SubList contains                              0  0.081
ImmutableCollections$SubList containsAll                           0  0.034
ImmutableCollections$SubList forEach                               0  0.045
ImmutableCollections$SubList toArray()                             0  2.288
ImmutableCollections$SubList toArray(a)                            0  1.839
ImmutableCollections$SubList toArray(empty)                        0  0.129
ImmutableCollections$SubList stream().forEach                      0  0.068
ImmutableCollections$SubList stream().mapToInt                     0  0.101
ImmutableCollections$SubList stream().collect                      0  0.081
ImmutableCollections$SubList stream()::iterator                    0  0.063
ImmutableCollections$SubList parallelStream().forEach              0  0.381
ImmutableCollections$SubList parallelStream().mapToInt             0  1.659
ImmutableCollections$SubList parallelStream().collect              0  1.202
ImmutableCollections$SubList parallelStream()::iterator            0  0.211
ImmutableCollections$SubList listIterator forward loop             0  0.091
ImmutableCollections$SubList listIterator backward loop            0  0.034
ImmutableCollections$SubList indexOf                               0  0.029
ImmutableCollections$SubList lastIndexOf                           0  0.026
ImmutableCollections$SubList equals                                0  0.086
ImmutableCollections$SubList hashCode                              0  0.048
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
