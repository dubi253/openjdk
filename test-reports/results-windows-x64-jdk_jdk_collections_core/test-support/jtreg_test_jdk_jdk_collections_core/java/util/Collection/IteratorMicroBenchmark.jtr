#Test Results (version 2)
#Fri Mar 01 15:30:07 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\r\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=587 0\:00\:00.587
end=Fri Mar 01 15\:30\:07 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1565-145.emhdvhxhb1guvpscbeh31du44c.phxx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Fri Mar 01 15\:30\:07 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=589
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Collection

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-e22bbb87eb47c075e30a3ae770ba2979e9628e8f)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-e22bbb87eb47c075e30a3ae770ba2979e9628e8f, mixed mode, sharing)

#section:build
----------messages:(7/240)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Fri Mar 01 15:30:07 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Fri Mar 01 15:30:07 UTC 2024
elapsed time (seconds): 0.18
result: Passed. Build successful

#section:compile
----------messages:(7/294)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Fri Mar 01 15:30:07 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 15:30:07 UTC 2024
elapsed time (seconds): 0.18
----------configuration:(10/698)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d

----------rerun:(36/3628)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java'
----------direct:(7/584)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/299)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Fri Mar 01 15:30:07 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 01 15:30:07 UTC 2024
elapsed time (seconds): 0.406
----------configuration:(13/927)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection

----------rerun:(28/3078)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0  8.819
ArrayList spliterator().tryAdvance()                               0  5.442
ArrayList spliterator().forEachRemaining()                         0  5.722
ArrayList contains                                                 0  8.903
ArrayList containsAll                                              0  0.854
ArrayList forEach                                                  0  6.167
ArrayList toArray()                                                0  0.261
ArrayList toArray(a)                                               0  0.264
ArrayList toArray(empty)                                           0  0.224
ArrayList stream().forEach                                         0  5.038
ArrayList stream().mapToInt                                        1 30.342
ArrayList stream().collect                                         0 25.906
ArrayList stream()::iterator                                       0  7.779
ArrayList parallelStream().forEach                                 1 43.326
ArrayList parallelStream().mapToInt                                0 20.094
ArrayList parallelStream().collect                                 0 10.995
ArrayList parallelStream()::iterator                               0  5.865
ArrayList removeIf                                                 0  5.757
ArrayList remove(Object)                                           0  0.507
ArrayList listIterator forward loop                                0  1.364
ArrayList listIterator backward loop                               0  0.423
ArrayList indexOf                                                  0  0.256
ArrayList lastIndexOf                                              0  0.261
ArrayList equals                                                   0  0.299
ArrayList hashCode                                                 0  0.469
ArrayList replaceAll                                               0  6.226
ArrayList$SubList iterate for loop                                 0  6.857
ArrayList$SubList iterator().forEachRemaining()                    0  0.337
ArrayList$SubList spliterator().tryAdvance()                       0  3.941
ArrayList$SubList spliterator().forEachRemaining()                 0  0.137
ArrayList$SubList contains                                         0  0.173
ArrayList$SubList containsAll                                      0  0.186
ArrayList$SubList forEach                                          0  0.450
ArrayList$SubList toArray()                                        0  0.191
ArrayList$SubList toArray(a)                                       0  0.127
ArrayList$SubList toArray(empty)                                   0  0.189
ArrayList$SubList stream().forEach                                 0  0.162
ArrayList$SubList stream().mapToInt                                0  0.340
ArrayList$SubList stream().collect                                 0  0.275
ArrayList$SubList stream()::iterator                               0  0.194
ArrayList$SubList parallelStream().forEach                         0  2.248
ArrayList$SubList parallelStream().mapToInt                        0  1.461
ArrayList$SubList parallelStream().collect                         0  3.712
ArrayList$SubList parallelStream()::iterator                       0  0.253
ArrayList$SubList removeIf                                         0  0.280
ArrayList$SubList remove(Object)                                   0  0.156
ArrayList$SubList listIterator forward loop                        0  0.092
ArrayList$SubList listIterator backward loop                       0  0.121
ArrayList$SubList indexOf                                          0  0.065
ArrayList$SubList lastIndexOf                                      0  0.097
ArrayList$SubList equals                                           0  0.391
ArrayList$SubList hashCode                                         0  0.135
ArrayList$SubList replaceAll                                       0  0.135
Vector iterate for loop                                            0  0.183
Vector iterator().forEachRemaining()                               0  0.520
Vector spliterator().tryAdvance()                                  0  4.367
Vector spliterator().forEachRemaining()                            0  0.108
Vector contains                                                    0  1.094
Vector containsAll                                                 0  0.221
Vector forEach                                                     0  0.094
Vector toArray()                                                   0  0.049
Vector toArray(a)                                                  0  0.135
Vector toArray(empty)                                              0  0.078
Vector stream().forEach                                            0  0.140
Vector stream().mapToInt                                           0  0.321
Vector stream().collect                                            0  1.100
Vector stream()::iterator                                          0  0.197
Vector parallelStream().forEach                                    0  1.811
Vector parallelStream().mapToInt                                   0  3.318
Vector parallelStream().collect                                    0  2.022
Vector parallelStream()::iterator                                  0  0.216
Vector removeIf                                                    0  0.111
Vector remove(Object)                                              0  1.380
Vector listIterator forward loop                                   0  0.194
Vector listIterator backward loop                                  0  0.175
Vector indexOf                                                     0  0.073
Vector lastIndexOf                                                 0  0.167
Vector equals                                                      0  0.555
Vector hashCode                                                    0  0.310
Vector replaceAll                                                  0  0.181
SynchronizedRandomAccessList iterate for loop                      0  3.164
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.226
SynchronizedRandomAccessList spliterator().tryAdvance()            0  5.615
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.237
SynchronizedRandomAccessList contains                              0  1.933
SynchronizedRandomAccessList containsAll                           0  2.334
SynchronizedRandomAccessList forEach                               0  0.189
SynchronizedRandomAccessList toArray()                             0  0.235
SynchronizedRandomAccessList toArray(a)                            0  0.156
SynchronizedRandomAccessList toArray(empty)                        0  4.135
SynchronizedRandomAccessList stream().forEach                      0  0.272
SynchronizedRandomAccessList stream().mapToInt                     0  0.429
SynchronizedRandomAccessList stream().collect                      0  0.329
SynchronizedRandomAccessList stream()::iterator                    0  0.256
SynchronizedRandomAccessList parallelStream().forEach              0  2.038
SynchronizedRandomAccessList parallelStream().mapToInt             0  2.059
SynchronizedRandomAccessList parallelStream().collect              0  2.019
SynchronizedRandomAccessList parallelStream()::iterator            0  0.275
SynchronizedRandomAccessList removeIf                              0  0.922
SynchronizedRandomAccessList remove(Object)                        0  0.213
SynchronizedRandomAccessList listIterator forward loop             0  0.216
SynchronizedRandomAccessList listIterator backward loop            0  0.367
SynchronizedRandomAccessList indexOf                               0  0.253
SynchronizedRandomAccessList lastIndexOf                           0  0.261
SynchronizedRandomAccessList equals                                0  0.372
SynchronizedRandomAccessList hashCode                              0  0.267
SynchronizedRandomAccessList replaceAll                            0  0.943
LinkedList iterate for loop                                        0  0.154
LinkedList iterator().forEachRemaining()                           0  0.202
LinkedList spliterator().tryAdvance()                              0  4.639
LinkedList spliterator().forEachRemaining()                        0  0.121
LinkedList contains                                                0  0.854
LinkedList containsAll                                             0  0.094
LinkedList forEach                                                 0  0.116
LinkedList toArray()                                               0  0.094
LinkedList toArray(a)                                              0  0.073
LinkedList toArray(empty)                                          0  0.105
LinkedList stream().forEach                                        0  0.143
LinkedList stream().mapToInt                                       0  0.318
LinkedList stream().collect                                        0  0.251
LinkedList stream()::iterator                                      0  0.181
LinkedList parallelStream().forEach                                0  1.860
LinkedList parallelStream().mapToInt                               0  7.089
LinkedList parallelStream().collect                                0  2.973
LinkedList parallelStream()::iterator                              0  0.243
LinkedList removeIf                                                0  0.127
LinkedList remove(Object)                                          0  0.094
LinkedList descendingIterator() loop                               0  3.811
LinkedList descendingIterator().forEachRemaining()                 0  6.647
LinkedList listIterator forward loop                               0  0.097
LinkedList listIterator backward loop                              0  0.084
LinkedList indexOf                                                 0  0.065
LinkedList lastIndexOf                                             0  0.070
LinkedList equals                                                  0  0.224
LinkedList hashCode                                                0  0.135
LinkedList replaceAll                                              0  0.143
AbstractList$SubList iterate for loop                              0  0.590
AbstractList$SubList iterator().forEachRemaining()                 0  0.151
AbstractList$SubList spliterator().tryAdvance()                    0  2.771
AbstractList$SubList spliterator().forEachRemaining()              0  0.178
AbstractList$SubList contains                                      0  0.143
AbstractList$SubList containsAll                                   0  1.900
AbstractList$SubList forEach                                       0  0.129
AbstractList$SubList toArray()                                     0  2.553
AbstractList$SubList toArray(a)                                    0  1.116
AbstractList$SubList toArray(empty)                                0  0.391
AbstractList$SubList stream().forEach                              0  0.245
AbstractList$SubList stream().mapToInt                             0  0.383
AbstractList$SubList stream().collect                              0  0.318
AbstractList$SubList stream()::iterator                            0  0.226
AbstractList$SubList parallelStream().forEach                      0  2.340
AbstractList$SubList parallelStream().mapToInt                     0  2.261
AbstractList$SubList parallelStream().collect                      0  7.102
AbstractList$SubList parallelStream()::iterator                    0  0.342
AbstractList$SubList removeIf                                      0  0.124
AbstractList$SubList remove(Object)                                0  0.111
AbstractList$SubList listIterator forward loop                     0  0.073
AbstractList$SubList listIterator backward loop                    0  0.213
AbstractList$SubList indexOf                                       0  0.143
AbstractList$SubList lastIndexOf                                   0  0.175
AbstractList$SubList equals                                        0  0.348
AbstractList$SubList hashCode                                      0  0.186
AbstractList$SubList replaceAll                                    0  0.151
CopyOnWriteArrayList iterate for loop                              0  0.113
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.296
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.143
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.073
CopyOnWriteArrayList contains                                      0  0.916
CopyOnWriteArrayList containsAll                                   0  2.730
CopyOnWriteArrayList forEach                                       0  0.100
CopyOnWriteArrayList toArray()                                     0  0.046
CopyOnWriteArrayList toArray(a)                                    0  0.097
CopyOnWriteArrayList toArray(empty)                                0  0.070
CopyOnWriteArrayList stream().forEach                              0  0.127
CopyOnWriteArrayList stream().mapToInt                             0  0.283
CopyOnWriteArrayList stream().collect                              0  0.232
CopyOnWriteArrayList stream()::iterator                            0  0.156
CopyOnWriteArrayList parallelStream().forEach                      0  3.827
CopyOnWriteArrayList parallelStream().mapToInt                     0  6.102
CopyOnWriteArrayList parallelStream().collect                      0  5.650
CopyOnWriteArrayList parallelStream()::iterator                    0  2.132
CopyOnWriteArrayList removeIf                                      0  0.119
CopyOnWriteArrayList remove(Object)                                0  1.547
CopyOnWriteArrayList listIterator forward loop                     0  0.097
CopyOnWriteArrayList listIterator backward loop                    0  0.189
CopyOnWriteArrayList indexOf                                       0  0.235
CopyOnWriteArrayList lastIndexOf                                   0  0.086
CopyOnWriteArrayList equals                                        0  0.275
CopyOnWriteArrayList hashCode                                      0  0.205
CopyOnWriteArrayList replaceAll                                    0  0.251
COWSubList iterate for loop                                        0  4.394
COWSubList iterator().forEachRemaining()                           0  0.251
COWSubList spliterator().tryAdvance()                              0  0.248
COWSubList spliterator().forEachRemaining()                        0  0.084
COWSubList contains                                                0  0.167
COWSubList containsAll                                             0  0.199
COWSubList forEach                                                 0  0.167
COWSubList toArray()                                               0  0.129
COWSubList toArray(a)                                              0  0.146
COWSubList toArray(empty)                                          0  0.135
COWSubList stream().forEach                                        0  0.129
COWSubList stream().mapToInt                                       0  0.291
COWSubList stream().collect                                        0  0.232
COWSubList stream()::iterator                                      0  0.202
COWSubList parallelStream().forEach                                0  3.580
COWSubList parallelStream().mapToInt                               0  1.809
COWSubList parallelStream().collect                                0  5.224
COWSubList parallelStream()::iterator                              0  0.407
COWSubList removeIf                                                0  0.235
COWSubList remove(Object)                                          0  0.084
COWSubList listIterator forward loop                               0  0.154
COWSubList listIterator backward loop                              0  0.267
COWSubList indexOf                                                 0  0.051
COWSubList lastIndexOf                                             0  0.086
COWSubList equals                                                  0  0.272
COWSubList hashCode                                                0  0.146
COWSubList replaceAll                                              0  0.162
ArrayDeque iterate for loop                                        0  0.148
ArrayDeque iterator().forEachRemaining()                           0  0.334
ArrayDeque spliterator().tryAdvance()                              0  6.040
ArrayDeque spliterator().forEachRemaining()                        0  0.280
ArrayDeque contains                                                0  0.075
ArrayDeque containsAll                                             0  0.084
ArrayDeque forEach                                                 0  0.086
ArrayDeque toArray()                                               0  0.151
ArrayDeque toArray(a)                                              0  0.102
ArrayDeque toArray(empty)                                          0  0.108
ArrayDeque stream().forEach                                        0  0.154
ArrayDeque stream().mapToInt                                       0  0.377
ArrayDeque stream().collect                                        0  0.275
ArrayDeque stream()::iterator                                      0  0.194
ArrayDeque parallelStream().forEach                                0  2.361
ArrayDeque parallelStream().mapToInt                               0  4.995
ArrayDeque parallelStream().collect                                0  6.399
ArrayDeque parallelStream()::iterator                              0  0.216
ArrayDeque removeIf                                                0  0.097
ArrayDeque remove(Object)                                          0  0.062
ArrayDeque descendingIterator() loop                               0  3.860
ArrayDeque descendingIterator().forEachRemaining()                 0  0.270
PriorityQueue iterate for loop                                     0  0.121
PriorityQueue iterator().forEachRemaining()                        0  0.092
PriorityQueue spliterator().tryAdvance()                           0  3.668
PriorityQueue spliterator().forEachRemaining()                     0  0.127
PriorityQueue contains                                             0  0.170
PriorityQueue containsAll                                          0  0.097
PriorityQueue forEach                                              0  0.194
PriorityQueue toArray()                                            0  0.059
PriorityQueue toArray(a)                                           0  0.151
PriorityQueue toArray(empty)                                       0  0.456
PriorityQueue stream().forEach                                     0  0.156
PriorityQueue stream().mapToInt                                    0  0.388
PriorityQueue stream().collect                                     0  0.264
PriorityQueue stream()::iterator                                   0  0.175
PriorityQueue parallelStream().forEach                             0  1.873
PriorityQueue parallelStream().mapToInt                            0  5.116
PriorityQueue parallelStream().collect                             0  1.898
PriorityQueue parallelStream()::iterator                           0  0.827
PriorityQueue removeIf                                             0  0.445
PriorityQueue remove(Object)                                       0  0.070
ConcurrentLinkedQueue iterate for loop                             0  0.148
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.105
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  5.512
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.216
ConcurrentLinkedQueue contains                                     0  0.730
ConcurrentLinkedQueue containsAll                                  0  0.094
ConcurrentLinkedQueue forEach                                      0  0.089
ConcurrentLinkedQueue toArray()                                    0  0.148
ConcurrentLinkedQueue toArray(a)                                   0  0.154
ConcurrentLinkedQueue toArray(empty)                               0  0.097
ConcurrentLinkedQueue stream().forEach                             0  0.156
ConcurrentLinkedQueue stream().mapToInt                            0  2.771
ConcurrentLinkedQueue stream().collect                             0  0.377
ConcurrentLinkedQueue stream()::iterator                           0  0.218
ConcurrentLinkedQueue parallelStream().forEach                     0  2.515
ConcurrentLinkedQueue parallelStream().mapToInt                    0  8.240
ConcurrentLinkedQueue parallelStream().collect                     0  1.709
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.224
ConcurrentLinkedQueue removeIf                                     0  0.113
ConcurrentLinkedQueue remove(Object)                               0  0.070
ConcurrentLinkedDeque iterate for loop                             0  0.170
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.111
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  5.113
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.132
ConcurrentLinkedDeque contains                                     0  2.647
ConcurrentLinkedDeque containsAll                                  0  0.121
ConcurrentLinkedDeque forEach                                      0  0.108
ConcurrentLinkedDeque toArray()                                    0  0.135
ConcurrentLinkedDeque toArray(a)                                   0  0.129
ConcurrentLinkedDeque toArray(empty)                               0  0.078
ConcurrentLinkedDeque stream().forEach                             0  0.143
ConcurrentLinkedDeque stream().mapToInt                            0  3.887
ConcurrentLinkedDeque stream().collect                             0  0.302
ConcurrentLinkedDeque stream()::iterator                           0  0.205
ConcurrentLinkedDeque parallelStream().forEach                     0  2.121
ConcurrentLinkedDeque parallelStream().mapToInt                    0  3.965
ConcurrentLinkedDeque parallelStream().collect                     0  1.178
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.218
ConcurrentLinkedDeque removeIf                                     0  0.105
ConcurrentLinkedDeque remove(Object)                               0  0.075
ConcurrentLinkedDeque descendingIterator() loop                    0  3.747
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.175
ArrayBlockingQueue iterate for loop                                0  0.418
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.809
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.377
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.191
ArrayBlockingQueue contains                                        0  1.032
ArrayBlockingQueue containsAll                                     0  0.084
ArrayBlockingQueue forEach                                         0  0.094
ArrayBlockingQueue toArray()                                       0  0.129
ArrayBlockingQueue toArray(a)                                      0  0.111
ArrayBlockingQueue toArray(empty)                                  0  0.100
ArrayBlockingQueue stream().forEach                                0  0.240
ArrayBlockingQueue stream().mapToInt                               0  0.383
ArrayBlockingQueue stream().collect                                0  0.323
ArrayBlockingQueue stream()::iterator                              0  0.248
ArrayBlockingQueue parallelStream().forEach                        0  1.412
ArrayBlockingQueue parallelStream().mapToInt                       0  2.469
ArrayBlockingQueue parallelStream().collect                        0  4.119
ArrayBlockingQueue parallelStream()::iterator                      0  2.385
ArrayBlockingQueue removeIf                                        0  0.135
ArrayBlockingQueue remove(Object)                                  0  0.078
LinkedBlockingQueue iterate for loop                               0  0.210
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.485
LinkedBlockingQueue spliterator().tryAdvance()                     0  5.213
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.243
LinkedBlockingQueue contains                                       0  1.302
LinkedBlockingQueue containsAll                                    0  0.097
LinkedBlockingQueue forEach                                        0  0.140
LinkedBlockingQueue toArray()                                      0  0.073
LinkedBlockingQueue toArray(a)                                     0  0.073
LinkedBlockingQueue toArray(empty)                                 0  0.113
LinkedBlockingQueue stream().forEach                               0  0.197
LinkedBlockingQueue stream().mapToInt                              0  0.752
LinkedBlockingQueue stream().collect                               0  8.507
LinkedBlockingQueue stream()::iterator                             0  1.000
LinkedBlockingQueue parallelStream().forEach                       0  1.852
LinkedBlockingQueue parallelStream().mapToInt                      0  3.515
LinkedBlockingQueue parallelStream().collect                       0  2.442
LinkedBlockingQueue parallelStream()::iterator                     0  0.224
LinkedBlockingQueue removeIf                                       0  0.151
LinkedBlockingQueue remove(Object)                                 0  0.081
LinkedBlockingDeque iterate for loop                               0  0.792
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.415
LinkedBlockingDeque spliterator().tryAdvance()                     0  5.081
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.237
LinkedBlockingDeque contains                                       0  0.938
LinkedBlockingDeque containsAll                                    0  0.081
LinkedBlockingDeque forEach                                        0  0.135
LinkedBlockingDeque toArray()                                      0  0.062
LinkedBlockingDeque toArray(a)                                     0  0.081
LinkedBlockingDeque toArray(empty)                                 0  0.108
LinkedBlockingDeque stream().forEach                               0  0.186
LinkedBlockingDeque stream().mapToInt                              0  0.329
LinkedBlockingDeque stream().collect                               0  0.709
LinkedBlockingDeque stream()::iterator                             0  0.385
LinkedBlockingDeque parallelStream().forEach                       0  1.841
LinkedBlockingDeque parallelStream().mapToInt                      0  1.288
LinkedBlockingDeque parallelStream().collect                       0  1.175
LinkedBlockingDeque parallelStream()::iterator                     0  0.213
LinkedBlockingDeque removeIf                                       0  0.148
LinkedBlockingDeque remove(Object)                                 0  0.070
LinkedBlockingDeque descendingIterator() loop                      0  4.038
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.237
LinkedTransferQueue iterate for loop                               0  0.124
LinkedTransferQueue iterator().forEachRemaining()                  0  0.275
LinkedTransferQueue spliterator().tryAdvance()                     0  4.431
LinkedTransferQueue spliterator().forEachRemaining()               0  0.237
LinkedTransferQueue contains                                       0  0.747
LinkedTransferQueue containsAll                                    0  0.097
LinkedTransferQueue forEach                                        0  0.127
LinkedTransferQueue toArray()                                      0  0.143
LinkedTransferQueue toArray(a)                                     0  0.307
LinkedTransferQueue toArray(empty)                                 0  0.078
LinkedTransferQueue stream().forEach                               0  0.186
LinkedTransferQueue stream().mapToInt                              0  0.342
LinkedTransferQueue stream().collect                               0  0.310
LinkedTransferQueue stream()::iterator                             0  4.302
LinkedTransferQueue parallelStream().forEach                       0  1.860
LinkedTransferQueue parallelStream().mapToInt                      0  3.070
LinkedTransferQueue parallelStream().collect                       0  5.367
LinkedTransferQueue parallelStream()::iterator                     0  0.757
LinkedTransferQueue removeIf                                       0  0.162
LinkedTransferQueue remove(Object)                                 0  0.081
PriorityBlockingQueue iterate for loop                             0  4.482
PriorityBlockingQueue iterator().forEachRemaining()                0  0.235
PriorityBlockingQueue spliterator().tryAdvance()                   0  3.844
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.111
PriorityBlockingQueue contains                                     0  0.175
PriorityBlockingQueue containsAll                                  0  0.097
PriorityBlockingQueue forEach                                      0  0.162
PriorityBlockingQueue toArray()                                    0  0.043
PriorityBlockingQueue toArray(a)                                   0  0.167
PriorityBlockingQueue toArray(empty)                               0  0.108
PriorityBlockingQueue stream().forEach                             0  0.129
PriorityBlockingQueue stream().mapToInt                            0  1.070
PriorityBlockingQueue stream().collect                             0  0.881
PriorityBlockingQueue stream()::iterator                           0  0.167
PriorityBlockingQueue parallelStream().forEach                     0  1.949
PriorityBlockingQueue parallelStream().mapToInt                    0  7.380
PriorityBlockingQueue parallelStream().collect                     0  1.930
PriorityBlockingQueue parallelStream()::iterator                   0  0.175
PriorityBlockingQueue removeIf                                     0  0.259
PriorityBlockingQueue remove(Object)                               0  0.073
ListN iterate for loop                                             0  0.162
ListN iterator().forEachRemaining()                                0  0.105
ListN spliterator().tryAdvance()                                   0  0.173
ListN spliterator().forEachRemaining()                             0  0.092
ListN contains                                                     0  0.385
ListN containsAll                                                  0  0.086
ListN forEach                                                      0  0.108
ListN toArray()                                                    0  0.049
ListN toArray(a)                                                   0  0.092
ListN toArray(empty)                                               0  0.065
ListN stream().forEach                                             0  0.135
ListN stream().mapToInt                                            0  0.240
ListN stream().collect                                             0  0.213
ListN stream()::iterator                                           0  0.197
ListN parallelStream().forEach                                     0  1.102
ListN parallelStream().mapToInt                                    0  1.259
ListN parallelStream().collect                                     0  1.288
ListN parallelStream()::iterator                                   0  0.175
ListN listIterator forward loop                                    0  0.714
ListN listIterator backward loop                                   0  0.116
ListN indexOf                                                      0  0.057
ListN lastIndexOf                                                  0  0.046
ListN equals                                                       0  0.205
ListN hashCode                                                     0  0.105
ImmutableCollections$SubList iterate for loop                      0  0.348
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.137
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.283
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.162
ImmutableCollections$SubList contains                              0  0.245
ImmutableCollections$SubList containsAll                           0  0.111
ImmutableCollections$SubList forEach                               0  0.156
ImmutableCollections$SubList toArray()                             0  3.650
ImmutableCollections$SubList toArray(a)                            0 11.553
ImmutableCollections$SubList toArray(empty)                        0  0.779
ImmutableCollections$SubList stream().forEach                      0  0.226
ImmutableCollections$SubList stream().mapToInt                     0  0.315
ImmutableCollections$SubList stream().collect                      0  0.261
ImmutableCollections$SubList stream()::iterator                    0  0.191
ImmutableCollections$SubList parallelStream().forEach              0  1.863
ImmutableCollections$SubList parallelStream().mapToInt             0  5.790
ImmutableCollections$SubList parallelStream().collect              0  7.601
ImmutableCollections$SubList parallelStream()::iterator            0  0.377
ImmutableCollections$SubList listIterator forward loop             0  0.226
ImmutableCollections$SubList listIterator backward loop            0  0.094
ImmutableCollections$SubList indexOf                               0  0.081
ImmutableCollections$SubList lastIndexOf                           0  0.070
ImmutableCollections$SubList equals                                0  0.218
ImmutableCollections$SubList hashCode                              0  0.135
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
