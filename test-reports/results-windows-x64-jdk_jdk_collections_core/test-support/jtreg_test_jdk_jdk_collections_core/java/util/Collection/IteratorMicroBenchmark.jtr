#Test Results (version 2)
#Fri Mar 01 16:55:52 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\r\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=570 0\:00\:00.570
end=Fri Mar 01 16\:55\:52 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1387-147.qlbpdebbqwpe3pov5lpj0n5fhf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Fri Mar 01 16\:55\:52 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=570
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Collection

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b, mixed mode, sharing)

#section:build
----------messages:(7/241)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Fri Mar 01 16:55:52 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Fri Mar 01 16:55:52 UTC 2024
elapsed time (seconds): 0.141
result: Passed. Build successful

#section:compile
----------messages:(7/295)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Fri Mar 01 16:55:52 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 16:55:52 UTC 2024
elapsed time (seconds): 0.141
----------configuration:(10/698)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d

----------rerun:(36/3628)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java'
----------direct:(7/584)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/299)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Fri Mar 01 16:55:52 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 01 16:55:52 UTC 2024
elapsed time (seconds): 0.429
----------configuration:(13/927)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection

----------rerun:(28/3078)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0 11.291
ArrayList spliterator().tryAdvance()                               0  6.505
ArrayList spliterator().forEachRemaining()                         0  5.779
ArrayList contains                                                 0 13.064
ArrayList containsAll                                              0  1.167
ArrayList forEach                                                  0  6.632
ArrayList toArray()                                                0  0.341
ArrayList toArray(a)                                               0  0.355
ArrayList toArray(empty)                                           0  0.281
ArrayList stream().forEach                                         0  6.013
ArrayList stream().mapToInt                                        1 34.900
ArrayList stream().collect                                         0 26.876
ArrayList stream()::iterator                                       0  9.579
ArrayList parallelStream().forEach                                 1 51.833
ArrayList parallelStream().mapToInt                                0 28.418
ArrayList parallelStream().collect                                 0 13.047
ArrayList parallelStream()::iterator                               0  6.906
ArrayList removeIf                                                 0  9.472
ArrayList remove(Object)                                           0  0.726
ArrayList listIterator forward loop                                0  1.057
ArrayList listIterator backward loop                               0  0.478
ArrayList indexOf                                                  0  1.117
ArrayList lastIndexOf                                              0  0.512
ArrayList equals                                                   0  0.472
ArrayList hashCode                                                 0  0.656
ArrayList replaceAll                                               0  7.515
ArrayList$SubList iterate for loop                                 0  7.007
ArrayList$SubList iterator().forEachRemaining()                    0  0.411
ArrayList$SubList spliterator().tryAdvance()                       0  4.615
ArrayList$SubList spliterator().forEachRemaining()                 0  0.191
ArrayList$SubList contains                                         0  0.241
ArrayList$SubList containsAll                                      0  0.258
ArrayList$SubList forEach                                          0  0.559
ArrayList$SubList toArray()                                        0  0.251
ArrayList$SubList toArray(a)                                       0  0.194
ArrayList$SubList toArray(empty)                                   0  0.227
ArrayList$SubList stream().forEach                                 0  0.234
ArrayList$SubList stream().mapToInt                                0  0.502
ArrayList$SubList stream().collect                                 0  0.388
ArrayList$SubList stream()::iterator                               0  0.278
ArrayList$SubList parallelStream().forEach                         0  3.896
ArrayList$SubList parallelStream().mapToInt                        0  8.191
ArrayList$SubList parallelStream().collect                         0  3.615
ArrayList$SubList parallelStream()::iterator                       0  0.294
ArrayList$SubList removeIf                                         0  0.361
ArrayList$SubList remove(Object)                                   0  0.204
ArrayList$SubList listIterator forward loop                        0  0.120
ArrayList$SubList listIterator backward loop                       0  0.154
ArrayList$SubList indexOf                                          0  0.077
ArrayList$SubList lastIndexOf                                      0  0.120
ArrayList$SubList equals                                           0  0.542
ArrayList$SubList hashCode                                         0  0.181
ArrayList$SubList replaceAll                                       0  0.157
Vector iterate for loop                                            0  0.254
Vector iterator().forEachRemaining()                               0  0.365
Vector spliterator().tryAdvance()                                  0  5.662
Vector spliterator().forEachRemaining()                            0  0.137
Vector contains                                                    0  1.686
Vector containsAll                                                 0  0.324
Vector forEach                                                     0  0.110
Vector toArray()                                                   0  0.074
Vector toArray(a)                                                  0  0.177
Vector toArray(empty)                                              0  0.127
Vector stream().forEach                                            0  0.197
Vector stream().mapToInt                                           0  0.408
Vector stream().collect                                            0  0.298
Vector stream()::iterator                                          0  0.231
Vector parallelStream().forEach                                    0  3.759
Vector parallelStream().mapToInt                                   0  2.856
Vector parallelStream().collect                                    0  2.886
Vector parallelStream()::iterator                                  0  0.268
Vector removeIf                                                    0  0.140
Vector remove(Object)                                              0  1.328
Vector listIterator forward loop                                   0  0.217
Vector listIterator backward loop                                  0  0.201
Vector indexOf                                                     0  0.080
Vector lastIndexOf                                                 0  0.181
Vector equals                                                      0  0.699
Vector hashCode                                                    0  0.368
Vector replaceAll                                                  0  0.234
SynchronizedRandomAccessList iterate for loop                      0  3.314
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.254
SynchronizedRandomAccessList spliterator().tryAdvance()            0  7.171
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.264
SynchronizedRandomAccessList contains                              0  0.709
SynchronizedRandomAccessList containsAll                           0  2.385
SynchronizedRandomAccessList forEach                               0  0.247
SynchronizedRandomAccessList toArray()                             0  0.311
SynchronizedRandomAccessList toArray(a)                            0  0.753
SynchronizedRandomAccessList toArray(empty)                        0  4.318
SynchronizedRandomAccessList stream().forEach                      0  0.321
SynchronizedRandomAccessList stream().mapToInt                     0  0.478
SynchronizedRandomAccessList stream().collect                      0  0.365
SynchronizedRandomAccessList stream()::iterator                    0  0.298
SynchronizedRandomAccessList parallelStream().forEach              0  4.398
SynchronizedRandomAccessList parallelStream().mapToInt             0  4.492
SynchronizedRandomAccessList parallelStream().collect              0  4.234
SynchronizedRandomAccessList parallelStream()::iterator            0  0.318
SynchronizedRandomAccessList removeIf                              0  1.114
SynchronizedRandomAccessList remove(Object)                        0  0.227
SynchronizedRandomAccessList listIterator forward loop             0  0.241
SynchronizedRandomAccessList listIterator backward loop            0  0.408
SynchronizedRandomAccessList indexOf                               0  0.301
SynchronizedRandomAccessList lastIndexOf                           0  0.418
SynchronizedRandomAccessList equals                                0  0.505
SynchronizedRandomAccessList hashCode                              0  0.311
SynchronizedRandomAccessList replaceAll                            0  0.656
LinkedList iterate for loop                                        0  0.184
LinkedList iterator().forEachRemaining()                           0  0.231
LinkedList spliterator().tryAdvance()                              0  8.037
LinkedList spliterator().forEachRemaining()                        0  0.144
LinkedList contains                                                0  0.903
LinkedList containsAll                                             0  0.110
LinkedList forEach                                                 0  0.140
LinkedList toArray()                                               0  0.110
LinkedList toArray(a)                                              0  0.094
LinkedList toArray(empty)                                          0  0.134
LinkedList stream().forEach                                        0  0.167
LinkedList stream().mapToInt                                       0  0.398
LinkedList stream().collect                                        0  0.268
LinkedList stream()::iterator                                      0  0.214
LinkedList parallelStream().forEach                                0  3.037
LinkedList parallelStream().mapToInt                               0  9.886
LinkedList parallelStream().collect                                0  2.980
LinkedList parallelStream()::iterator                              0  0.237
LinkedList removeIf                                                0  0.140
LinkedList remove(Object)                                          0  0.120
LinkedList descendingIterator() loop                               0  4.739
LinkedList descendingIterator().forEachRemaining()                 0  8.615
LinkedList listIterator forward loop                               0  3.054
LinkedList listIterator backward loop                              0  0.124
LinkedList indexOf                                                 0  0.090
LinkedList lastIndexOf                                             0  0.094
LinkedList equals                                                  0  2.378
LinkedList hashCode                                                0  0.191
LinkedList replaceAll                                              0  0.207
AbstractList$SubList iterate for loop                              0  0.699
AbstractList$SubList iterator().forEachRemaining()                 0  0.197
AbstractList$SubList spliterator().tryAdvance()                    0  0.398
AbstractList$SubList spliterator().forEachRemaining()              0  0.194
AbstractList$SubList contains                                      0  0.161
AbstractList$SubList containsAll                                   0  2.100
AbstractList$SubList forEach                                       0  0.157
AbstractList$SubList toArray()                                     0  3.351
AbstractList$SubList toArray(a)                                    0  1.311
AbstractList$SubList toArray(empty)                                0  0.562
AbstractList$SubList stream().forEach                              0  0.247
AbstractList$SubList stream().mapToInt                             0  0.488
AbstractList$SubList stream().collect                              0  0.328
AbstractList$SubList stream()::iterator                            0  0.254
AbstractList$SubList parallelStream().forEach                      0  2.609
AbstractList$SubList parallelStream().mapToInt                     0  2.431
AbstractList$SubList parallelStream().collect                      0  7.321
AbstractList$SubList parallelStream()::iterator                    0  0.321
AbstractList$SubList removeIf                                      0  0.130
AbstractList$SubList remove(Object)                                0  0.120
AbstractList$SubList listIterator forward loop                     0  0.080
AbstractList$SubList listIterator backward loop                    0  0.217
AbstractList$SubList indexOf                                       0  0.161
AbstractList$SubList lastIndexOf                                   0  0.197
AbstractList$SubList equals                                        0  0.562
AbstractList$SubList hashCode                                      0  0.217
AbstractList$SubList replaceAll                                    0  0.174
CopyOnWriteArrayList iterate for loop                              0  0.134
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.599
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.157
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.087
CopyOnWriteArrayList contains                                      0  1.411
CopyOnWriteArrayList containsAll                                   0  3.017
CopyOnWriteArrayList forEach                                       0  0.110
CopyOnWriteArrayList toArray()                                     0  0.054
CopyOnWriteArrayList toArray(a)                                    0  0.137
CopyOnWriteArrayList toArray(empty)                                0  0.090
CopyOnWriteArrayList stream().forEach                              0  0.144
CopyOnWriteArrayList stream().mapToInt                             0  0.328
CopyOnWriteArrayList stream().collect                              0  0.244
CopyOnWriteArrayList stream()::iterator                            0  0.187
CopyOnWriteArrayList parallelStream().forEach                      0  4.595
CopyOnWriteArrayList parallelStream().mapToInt                     0  5.813
CopyOnWriteArrayList parallelStream().collect                      0  4.542
CopyOnWriteArrayList parallelStream()::iterator                    0  2.120
CopyOnWriteArrayList removeIf                                      0  0.147
CopyOnWriteArrayList remove(Object)                                0  1.682
CopyOnWriteArrayList listIterator forward loop                     0  0.117
CopyOnWriteArrayList listIterator backward loop                    0  0.204
CopyOnWriteArrayList indexOf                                       0  0.278
CopyOnWriteArrayList lastIndexOf                                   0  0.110
CopyOnWriteArrayList equals                                        0  0.358
CopyOnWriteArrayList hashCode                                      0  0.187
CopyOnWriteArrayList replaceAll                                    0  0.291
COWSubList iterate for loop                                        0  5.906
COWSubList iterator().forEachRemaining()                           0  0.318
COWSubList spliterator().tryAdvance()                              0  0.311
COWSubList spliterator().forEachRemaining()                        0  0.104
COWSubList contains                                                0  0.211
COWSubList containsAll                                             0  0.278
COWSubList forEach                                                 0  0.224
COWSubList toArray()                                               0  0.174
COWSubList toArray(a)                                              0  0.204
COWSubList toArray(empty)                                          0  0.177
COWSubList stream().forEach                                        0  0.154
COWSubList stream().mapToInt                                       0  0.375
COWSubList stream().collect                                        0  0.264
COWSubList stream()::iterator                                      0  0.241
COWSubList parallelStream().forEach                                0  4.144
COWSubList parallelStream().mapToInt                               0  1.963
COWSubList parallelStream().collect                                0  3.883
COWSubList parallelStream()::iterator                              0  0.538
COWSubList removeIf                                                0  0.278
COWSubList remove(Object)                                          0  0.104
COWSubList listIterator forward loop                               0  0.334
COWSubList listIterator backward loop                              0  0.355
COWSubList indexOf                                                 0  0.064
COWSubList lastIndexOf                                             0  0.104
COWSubList equals                                                  0  0.331
COWSubList hashCode                                                0  0.164
COWSubList replaceAll                                              0  0.221
ArrayDeque iterate for loop                                        0  0.167
ArrayDeque iterator().forEachRemaining()                           0  0.415
ArrayDeque spliterator().tryAdvance()                              0  5.886
ArrayDeque spliterator().forEachRemaining()                        0  0.237
ArrayDeque contains                                                0  0.599
ArrayDeque containsAll                                             0  0.097
ArrayDeque forEach                                                 0  0.110
ArrayDeque toArray()                                               0  0.194
ArrayDeque toArray(a)                                              0  0.127
ArrayDeque toArray(empty)                                          0  0.127
ArrayDeque stream().forEach                                        0  0.177
ArrayDeque stream().mapToInt                                       0  0.472
ArrayDeque stream().collect                                        0  0.308
ArrayDeque stream()::iterator                                      0  0.217
ArrayDeque parallelStream().forEach                                0  5.605
ArrayDeque parallelStream().mapToInt                               0  7.866
ArrayDeque parallelStream().collect                                0  4.438
ArrayDeque parallelStream()::iterator                              0  0.241
ArrayDeque removeIf                                                0  0.120
ArrayDeque remove(Object)                                          0  0.064
ArrayDeque descendingIterator() loop                               0  4.890
ArrayDeque descendingIterator().forEachRemaining()                 0  0.371
PriorityQueue iterate for loop                                     0  0.174
PriorityQueue iterator().forEachRemaining()                        0  0.127
PriorityQueue spliterator().tryAdvance()                           0  4.672
PriorityQueue spliterator().forEachRemaining()                     0  0.130
PriorityQueue contains                                             0  0.207
PriorityQueue containsAll                                          0  0.104
PriorityQueue forEach                                              0  0.201
PriorityQueue toArray()                                            0  0.057
PriorityQueue toArray(a)                                           0  0.174
PriorityQueue toArray(empty)                                       0  0.124
PriorityQueue stream().forEach                                     0  0.157
PriorityQueue stream().mapToInt                                    0  0.421
PriorityQueue stream().collect                                     0  0.278
PriorityQueue stream()::iterator                                   0  0.187
PriorityQueue parallelStream().forEach                             0  5.097
PriorityQueue parallelStream().mapToInt                            0  6.692
PriorityQueue parallelStream().collect                             0  1.883
PriorityQueue parallelStream()::iterator                           0  0.204
PriorityQueue removeIf                                             0  0.324
PriorityQueue remove(Object)                                       0  0.077
ConcurrentLinkedQueue iterate for loop                             0  0.187
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.107
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  5.609
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  1.047
ConcurrentLinkedQueue contains                                     0  0.709
ConcurrentLinkedQueue containsAll                                  0  0.094
ConcurrentLinkedQueue forEach                                      0  0.100
ConcurrentLinkedQueue toArray()                                    0  0.147
ConcurrentLinkedQueue toArray(a)                                   0  0.161
ConcurrentLinkedQueue toArray(empty)                               0  0.084
ConcurrentLinkedQueue stream().forEach                             0  0.164
ConcurrentLinkedQueue stream().mapToInt                            0  2.946
ConcurrentLinkedQueue stream().collect                             0  0.351
ConcurrentLinkedQueue stream()::iterator                           0  0.234
ConcurrentLinkedQueue parallelStream().forEach                     0  2.632
ConcurrentLinkedQueue parallelStream().mapToInt                    0  4.274
ConcurrentLinkedQueue parallelStream().collect                     0  3.324
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.251
ConcurrentLinkedQueue removeIf                                     0  0.114
ConcurrentLinkedQueue remove(Object)                               0  0.067
ConcurrentLinkedDeque iterate for loop                             0  0.258
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.110
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  5.130
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.130
ConcurrentLinkedDeque contains                                     0  1.017
ConcurrentLinkedDeque containsAll                                  0  0.090
ConcurrentLinkedDeque forEach                                      0  0.334
ConcurrentLinkedDeque toArray()                                    0  0.140
ConcurrentLinkedDeque toArray(a)                                   0  0.130
ConcurrentLinkedDeque toArray(empty)                               0  0.080
ConcurrentLinkedDeque stream().forEach                             0  0.147
ConcurrentLinkedDeque stream().mapToInt                            0  4.709
ConcurrentLinkedDeque stream().collect                             0  0.294
ConcurrentLinkedDeque stream()::iterator                           0  0.217
ConcurrentLinkedDeque parallelStream().forEach                     0  2.114
ConcurrentLinkedDeque parallelStream().mapToInt                    0  4.465
ConcurrentLinkedDeque parallelStream().collect                     0  1.174
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.221
ConcurrentLinkedDeque removeIf                                     0  0.124
ConcurrentLinkedDeque remove(Object)                               0  0.077
ConcurrentLinkedDeque descendingIterator() loop                    0 13.656
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.237
ArrayBlockingQueue iterate for loop                                0  0.579
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.472
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.435
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.191
ArrayBlockingQueue contains                                        0  1.314
ArrayBlockingQueue containsAll                                     0  0.104
ArrayBlockingQueue forEach                                         0  0.100
ArrayBlockingQueue toArray()                                       0  0.164
ArrayBlockingQueue toArray(a)                                      0  0.127
ArrayBlockingQueue toArray(empty)                                  0  0.120
ArrayBlockingQueue stream().forEach                                0  0.271
ArrayBlockingQueue stream().mapToInt                               0  0.916
ArrayBlockingQueue stream().collect                                0  0.365
ArrayBlockingQueue stream()::iterator                              0  0.294
ArrayBlockingQueue parallelStream().forEach                        0  2.355
ArrayBlockingQueue parallelStream().mapToInt                       0  8.987
ArrayBlockingQueue parallelStream().collect                        0  5.428
ArrayBlockingQueue parallelStream()::iterator                      0  0.428
ArrayBlockingQueue removeIf                                        0  0.117
ArrayBlockingQueue remove(Object)                                  0  0.077
LinkedBlockingQueue iterate for loop                               0  0.244
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.538
LinkedBlockingQueue spliterator().tryAdvance()                     0  7.565
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.314
LinkedBlockingQueue contains                                       0  1.656
LinkedBlockingQueue containsAll                                    0  0.104
LinkedBlockingQueue forEach                                        0  0.154
LinkedBlockingQueue toArray()                                      0  0.084
LinkedBlockingQueue toArray(a)                                     0  0.084
LinkedBlockingQueue toArray(empty)                                 0  0.147
LinkedBlockingQueue stream().forEach                               0  0.224
LinkedBlockingQueue stream().mapToInt                              0  0.405
LinkedBlockingQueue stream().collect                               0  8.221
LinkedBlockingQueue stream()::iterator                             0  0.254
LinkedBlockingQueue parallelStream().forEach                       0  2.488
LinkedBlockingQueue parallelStream().mapToInt                      0  1.783
LinkedBlockingQueue parallelStream().collect                       0  3.870
LinkedBlockingQueue parallelStream()::iterator                     0  0.281
LinkedBlockingQueue removeIf                                       0  0.194
LinkedBlockingQueue remove(Object)                                 0  0.074
LinkedBlockingDeque iterate for loop                               0  0.221
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.441
LinkedBlockingDeque spliterator().tryAdvance()                     0  6.090
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.298
LinkedBlockingDeque contains                                       0  1.365
LinkedBlockingDeque containsAll                                    0  0.130
LinkedBlockingDeque forEach                                        0  0.157
LinkedBlockingDeque toArray()                                      0  0.080
LinkedBlockingDeque toArray(a)                                     0  0.084
LinkedBlockingDeque toArray(empty)                                 0  0.140
LinkedBlockingDeque stream().forEach                               0  0.204
LinkedBlockingDeque stream().mapToInt                              0  0.378
LinkedBlockingDeque stream().collect                               0  0.819
LinkedBlockingDeque stream()::iterator                             0  0.234
LinkedBlockingDeque parallelStream().forEach                       0  2.528
LinkedBlockingDeque parallelStream().mapToInt                      0  2.023
LinkedBlockingDeque parallelStream().collect                       0  4.298
LinkedBlockingDeque parallelStream()::iterator                     0  0.261
LinkedBlockingDeque removeIf                                       0  0.184
LinkedBlockingDeque remove(Object)                                 0  0.080
LinkedBlockingDeque descendingIterator() loop                      0  4.154
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.278
LinkedTransferQueue iterate for loop                               0  0.164
LinkedTransferQueue iterator().forEachRemaining()                  0  0.308
LinkedTransferQueue spliterator().tryAdvance()                     0  5.656
LinkedTransferQueue spliterator().forEachRemaining()               0  0.258
LinkedTransferQueue contains                                       0  0.883
LinkedTransferQueue containsAll                                    0  0.094
LinkedTransferQueue forEach                                        0  0.127
LinkedTransferQueue toArray()                                      0  0.140
LinkedTransferQueue toArray(a)                                     0  0.338
LinkedTransferQueue toArray(empty)                                 0  0.084
LinkedTransferQueue stream().forEach                               0  0.217
LinkedTransferQueue stream().mapToInt                              0  0.401
LinkedTransferQueue stream().collect                               0  0.803
LinkedTransferQueue stream()::iterator                             0  4.057
LinkedTransferQueue parallelStream().forEach                       0  2.171
LinkedTransferQueue parallelStream().mapToInt                      0  3.431
LinkedTransferQueue parallelStream().collect                       0  5.435
LinkedTransferQueue parallelStream()::iterator                     0  0.689
LinkedTransferQueue removeIf                                       0  0.164
LinkedTransferQueue remove(Object)                                 0  0.080
PriorityBlockingQueue iterate for loop                             0  5.084
PriorityBlockingQueue iterator().forEachRemaining()                0  0.254
PriorityBlockingQueue spliterator().tryAdvance()                   0  4.405
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.134
PriorityBlockingQueue contains                                     0  0.204
PriorityBlockingQueue containsAll                                  0  0.110
PriorityBlockingQueue forEach                                      0  0.177
PriorityBlockingQueue toArray()                                    0  0.047
PriorityBlockingQueue toArray(a)                                   0  0.191
PriorityBlockingQueue toArray(empty)                               0  0.127
PriorityBlockingQueue stream().forEach                             0  0.151
PriorityBlockingQueue stream().mapToInt                            0  1.311
PriorityBlockingQueue stream().collect                             0  1.007
PriorityBlockingQueue stream()::iterator                           0  0.194
PriorityBlockingQueue parallelStream().forEach                     0  3.207
PriorityBlockingQueue parallelStream().mapToInt                    0 10.264
PriorityBlockingQueue parallelStream().collect                     0  2.007
PriorityBlockingQueue parallelStream()::iterator                   0  0.217
PriorityBlockingQueue removeIf                                     0  0.338
PriorityBlockingQueue remove(Object)                               0  0.087
ListN iterate for loop                                             0  0.194
ListN iterator().forEachRemaining()                                0  0.124
ListN spliterator().tryAdvance()                                   0  0.281
ListN spliterator().forEachRemaining()                             0  0.120
ListN contains                                                     0  0.515
ListN containsAll                                                  0  0.114
ListN forEach                                                      0  0.144
ListN toArray()                                                    0  0.060
ListN toArray(a)                                                   0  0.107
ListN toArray(empty)                                               0  0.074
ListN stream().forEach                                             0  0.157
ListN stream().mapToInt                                            0  0.288
ListN stream().collect                                             0  0.217
ListN stream()::iterator                                           0  0.244
ListN parallelStream().forEach                                     0  1.197
ListN parallelStream().mapToInt                                    0  3.311
ListN parallelStream().collect                                     0  1.318
ListN parallelStream()::iterator                                   0  0.244
ListN listIterator forward loop                                    0  0.264
ListN listIterator backward loop                                   0  0.140
ListN indexOf                                                      0  0.070
ListN lastIndexOf                                                  0  0.064
ListN equals                                                       0  0.288
ListN hashCode                                                     0  0.147
ImmutableCollections$SubList iterate for loop                      0  0.535
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.157
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.221
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.130
ImmutableCollections$SubList contains                              0  1.047
ImmutableCollections$SubList containsAll                           0  0.161
ImmutableCollections$SubList forEach                               0  0.194
ImmutableCollections$SubList toArray()                             0  4.435
ImmutableCollections$SubList toArray(a)                            0  0.157
ImmutableCollections$SubList toArray(empty)                        0 11.940
ImmutableCollections$SubList stream().forEach                      0  5.341
ImmutableCollections$SubList stream().mapToInt                     0  0.418
ImmutableCollections$SubList stream().collect                      0  0.288
ImmutableCollections$SubList stream()::iterator                    0  0.247
ImmutableCollections$SubList parallelStream().forEach              0  2.254
ImmutableCollections$SubList parallelStream().mapToInt             0  7.241
ImmutableCollections$SubList parallelStream().collect              0  1.957
ImmutableCollections$SubList parallelStream()::iterator            0  0.268
ImmutableCollections$SubList listIterator forward loop             0  0.274
ImmutableCollections$SubList listIterator backward loop            0  0.104
ImmutableCollections$SubList indexOf                               0  0.100
ImmutableCollections$SubList lastIndexOf                           0  0.087
ImmutableCollections$SubList equals                                0  0.301
ImmutableCollections$SubList hashCode                              0  0.171
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
