#Test Results (version 2)
#Thu Feb 29 23:48:41 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\r\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=547 0\:00\:00.547
end=Thu Feb 29 23\:48\:41 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az522-336.tjljrzybawyutd3jaybg31kjtf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Thu Feb 29 23\:48\:41 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=547
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Collection

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be, mixed mode, sharing)

#section:build
----------messages:(7/241)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Thu Feb 29 23:48:41 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Thu Feb 29 23:48:41 UTC 2024
elapsed time (seconds): 0.156
result: Passed. Build successful

#section:compile
----------messages:(7/295)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:48:41 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 23:48:41 UTC 2024
elapsed time (seconds): 0.156
----------configuration:(10/698)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d

----------rerun:(36/3628)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java'
----------direct:(7/584)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/299)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Thu Feb 29 23:48:41 UTC 2024
Mode: agentvm
Agent id: 4
finished: Thu Feb 29 23:48:41 UTC 2024
elapsed time (seconds): 0.391
----------configuration:(13/927)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection

----------rerun:(28/3078)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0  9.014
ArrayList spliterator().tryAdvance()                               0  7.566
ArrayList spliterator().forEachRemaining()                         0  6.685
ArrayList contains                                                 0 14.208
ArrayList containsAll                                              0  1.276
ArrayList forEach                                                  0  7.520
ArrayList toArray()                                                0  0.323
ArrayList toArray(a)                                               0  0.366
ArrayList toArray(empty)                                           0  0.312
ArrayList stream().forEach                                         0  7.057
ArrayList stream().mapToInt                                        1 38.344
ArrayList stream().collect                                         0 30.283
ArrayList stream()::iterator                                       0  9.362
ArrayList parallelStream().forEach                                 1 57.387
ArrayList parallelStream().mapToInt                                0 21.491
ArrayList parallelStream().collect                                 0 11.140
ArrayList parallelStream()::iterator                               0  6.796
ArrayList removeIf                                                 0  6.817
ArrayList remove(Object)                                           0  2.165
ArrayList listIterator forward loop                                0  4.423
ArrayList listIterator backward loop                               0  0.620
ArrayList indexOf                                                  0  1.111
ArrayList lastIndexOf                                              0  0.391
ArrayList equals                                                   0  0.720
ArrayList hashCode                                                 0  0.728
ArrayList replaceAll                                               0  8.161
ArrayList$SubList iterate for loop                                 0  7.097
ArrayList$SubList iterator().forEachRemaining()                    0  0.344
ArrayList$SubList spliterator().tryAdvance()                       0  4.154
ArrayList$SubList spliterator().forEachRemaining()                 0  0.122
ArrayList$SubList contains                                         0  0.179
ArrayList$SubList containsAll                                      0  0.190
ArrayList$SubList forEach                                          0  0.459
ArrayList$SubList toArray()                                        0  0.204
ArrayList$SubList toArray(a)                                       0  0.122
ArrayList$SubList toArray(empty)                                   0  0.194
ArrayList$SubList stream().forEach                                 0  0.158
ArrayList$SubList stream().mapToInt                                0  0.376
ArrayList$SubList stream().collect                                 0  0.283
ArrayList$SubList stream()::iterator                               0  0.197
ArrayList$SubList parallelStream().forEach                         0 17.595
ArrayList$SubList parallelStream().mapToInt                        0  2.735
ArrayList$SubList parallelStream().collect                         0  1.688
ArrayList$SubList parallelStream()::iterator                       0  0.297
ArrayList$SubList removeIf                                         0  0.344
ArrayList$SubList remove(Object)                                   0  0.226
ArrayList$SubList listIterator forward loop                        0  1.839
ArrayList$SubList listIterator backward loop                       0  0.204
ArrayList$SubList indexOf                                          0  0.111
ArrayList$SubList lastIndexOf                                      0  0.168
ArrayList$SubList equals                                           0  0.781
ArrayList$SubList hashCode                                         0  0.237
ArrayList$SubList replaceAll                                       0  0.222
Vector iterate for loop                                            0  0.244
Vector iterator().forEachRemaining()                               0  0.470
Vector spliterator().tryAdvance()                                  0  5.824
Vector spliterator().forEachRemaining()                            0  0.133
Vector contains                                                    0  1.036
Vector containsAll                                                 0  3.591
Vector forEach                                                     0  0.186
Vector toArray()                                                   0  0.082
Vector toArray(a)                                                  0  0.190
Vector toArray(empty)                                              0  0.115
Vector stream().forEach                                            0  0.251
Vector stream().mapToInt                                           0  0.455
Vector stream().collect                                            0  0.384
Vector stream()::iterator                                          0  0.262
Vector parallelStream().forEach                                    0  2.477
Vector parallelStream().mapToInt                                   0  2.061
Vector parallelStream().collect                                    0  2.441
Vector parallelStream()::iterator                                  0  0.333
Vector removeIf                                                    0  0.168
Vector remove(Object)                                              0  1.240
Vector listIterator forward loop                                   0  0.222
Vector listIterator backward loop                                  0  0.161
Vector indexOf                                                     0  0.806
Vector lastIndexOf                                                 0  0.136
Vector equals                                                      0  0.616
Vector hashCode                                                    0  0.283
Vector replaceAll                                                  0  0.194
SynchronizedRandomAccessList iterate for loop                      0  3.735
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.326
SynchronizedRandomAccessList spliterator().tryAdvance()            0  7.842
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.305
SynchronizedRandomAccessList contains                              0  0.842
SynchronizedRandomAccessList containsAll                           0  4.789
SynchronizedRandomAccessList forEach                               0  0.294
SynchronizedRandomAccessList toArray()                             0  0.376
SynchronizedRandomAccessList toArray(a)                            0  0.226
SynchronizedRandomAccessList toArray(empty)                        0  5.391
SynchronizedRandomAccessList stream().forEach                      0  0.394
SynchronizedRandomAccessList stream().mapToInt                     0  0.695
SynchronizedRandomAccessList stream().collect                      0  0.484
SynchronizedRandomAccessList stream()::iterator                    0  0.351
SynchronizedRandomAccessList parallelStream().forEach              0  2.896
SynchronizedRandomAccessList parallelStream().mapToInt             0  3.047
SynchronizedRandomAccessList parallelStream().collect              0  2.882
SynchronizedRandomAccessList parallelStream()::iterator            0  0.412
SynchronizedRandomAccessList removeIf                              0  1.545
SynchronizedRandomAccessList remove(Object)                        0  0.312
SynchronizedRandomAccessList listIterator forward loop             0  0.258
SynchronizedRandomAccessList listIterator backward loop            0  0.477
SynchronizedRandomAccessList indexOf                               0  0.337
SynchronizedRandomAccessList lastIndexOf                           0  0.366
SynchronizedRandomAccessList equals                                0  0.498
SynchronizedRandomAccessList hashCode                              0  0.373
SynchronizedRandomAccessList replaceAll                            0  0.753
LinkedList iterate for loop                                        0  2.864
LinkedList iterator().forEachRemaining()                           0  0.315
LinkedList spliterator().tryAdvance()                              0  8.541
LinkedList spliterator().forEachRemaining()                        0  0.183
LinkedList contains                                                0  1.211
LinkedList containsAll                                             0  0.158
LinkedList forEach                                                 0  0.194
LinkedList toArray()                                               0  0.158
LinkedList toArray(a)                                              0  0.104
LinkedList toArray(empty)                                          0  0.154
LinkedList stream().forEach                                        0  0.197
LinkedList stream().mapToInt                                       0  0.441
LinkedList stream().collect                                        0  0.341
LinkedList stream()::iterator                                      0  0.262
LinkedList parallelStream().forEach                                0  4.609
LinkedList parallelStream().mapToInt                               0 10.140
LinkedList parallelStream().collect                                0  3.036
LinkedList parallelStream()::iterator                              0  0.301
LinkedList removeIf                                                0  0.412
LinkedList remove(Object)                                          0  0.161
LinkedList descendingIterator() loop                               0  5.803
LinkedList descendingIterator().forEachRemaining()                 0  7.778
LinkedList listIterator forward loop                               0  0.151
LinkedList listIterator backward loop                              0  0.118
LinkedList indexOf                                                 0  0.093
LinkedList lastIndexOf                                             0  0.104
LinkedList equals                                                  0  0.312
LinkedList hashCode                                                0  0.168
LinkedList replaceAll                                              0  0.186
AbstractList$SubList iterate for loop                              0  0.789
AbstractList$SubList iterator().forEachRemaining()                 0  0.197
AbstractList$SubList spliterator().tryAdvance()                    0  0.416
AbstractList$SubList spliterator().forEachRemaining()              0  0.201
AbstractList$SubList contains                                      0  0.161
AbstractList$SubList containsAll                                   0  3.638
AbstractList$SubList forEach                                       0  0.179
AbstractList$SubList toArray()                                     0  2.946
AbstractList$SubList toArray(a)                                    0  1.907
AbstractList$SubList toArray(empty)                                0  0.516
AbstractList$SubList stream().forEach                              0  0.262
AbstractList$SubList stream().mapToInt                             0  0.505
AbstractList$SubList stream().collect                              0  0.427
AbstractList$SubList stream()::iterator                            0  0.319
AbstractList$SubList parallelStream().forEach                      0  3.176
AbstractList$SubList parallelStream().mapToInt                     0  2.444
AbstractList$SubList parallelStream().collect                      0 10.168
AbstractList$SubList parallelStream()::iterator                    0  0.502
AbstractList$SubList removeIf                                      0  0.194
AbstractList$SubList remove(Object)                                0  0.154
AbstractList$SubList listIterator forward loop                     0  0.100
AbstractList$SubList listIterator backward loop                    0  0.297
AbstractList$SubList indexOf                                       0  0.204
AbstractList$SubList lastIndexOf                                   0  0.251
AbstractList$SubList equals                                        0  0.498
AbstractList$SubList hashCode                                      0  0.290
AbstractList$SubList replaceAll                                    0  0.233
CopyOnWriteArrayList iterate for loop                              0  0.165
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.405
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.183
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.104
CopyOnWriteArrayList contains                                      0  1.323
CopyOnWriteArrayList containsAll                                   0  4.201
CopyOnWriteArrayList forEach                                       0  0.179
CopyOnWriteArrayList toArray()                                     0  0.068
CopyOnWriteArrayList toArray(a)                                    0  0.161
CopyOnWriteArrayList toArray(empty)                                0  0.100
CopyOnWriteArrayList stream().forEach                              0  0.194
CopyOnWriteArrayList stream().mapToInt                             0  0.430
CopyOnWriteArrayList stream().collect                              0  0.348
CopyOnWriteArrayList stream()::iterator                            0  0.247
CopyOnWriteArrayList parallelStream().forEach                      0  7.043
CopyOnWriteArrayList parallelStream().mapToInt                     0  9.065
CopyOnWriteArrayList parallelStream().collect                      0  3.272
CopyOnWriteArrayList parallelStream()::iterator                    0  2.939
CopyOnWriteArrayList removeIf                                      0  0.183
CopyOnWriteArrayList remove(Object)                                0  2.025
CopyOnWriteArrayList listIterator forward loop                     0  0.158
CopyOnWriteArrayList listIterator backward loop                    0  0.262
CopyOnWriteArrayList indexOf                                       0  0.294
CopyOnWriteArrayList lastIndexOf                                   0  0.125
CopyOnWriteArrayList equals                                        0  0.513
CopyOnWriteArrayList hashCode                                      0  0.229
CopyOnWriteArrayList replaceAll                                    0  0.358
COWSubList iterate for loop                                        0  6.226
COWSubList iterator().forEachRemaining()                           0  0.376
COWSubList spliterator().tryAdvance()                              0  0.351
COWSubList spliterator().forEachRemaining()                        0  0.122
COWSubList contains                                                0  0.215
COWSubList containsAll                                             0  0.254
COWSubList forEach                                                 0  0.226
COWSubList toArray()                                               0  0.197
COWSubList toArray(a)                                              0  0.201
COWSubList toArray(empty)                                          0  0.229
COWSubList stream().forEach                                        0  0.194
COWSubList stream().mapToInt                                       0  0.427
COWSubList stream().collect                                        0  0.341
COWSubList stream()::iterator                                      0  0.326
COWSubList parallelStream().forEach                                0  4.573
COWSubList parallelStream().mapToInt                               0 10.735
COWSubList parallelStream().collect                                0  5.964
COWSubList parallelStream()::iterator                              0  0.573
COWSubList removeIf                                                0  0.376
COWSubList remove(Object)                                          0  0.122
COWSubList listIterator forward loop                               0  0.226
COWSubList listIterator backward loop                              0  0.409
COWSubList indexOf                                                 0  0.079
COWSubList lastIndexOf                                             0  0.136
COWSubList equals                                                  0  0.419
COWSubList hashCode                                                0  0.208
COWSubList replaceAll                                              0  0.247
ArrayDeque iterate for loop                                        0  0.186
ArrayDeque iterator().forEachRemaining()                           0  0.516
ArrayDeque spliterator().tryAdvance()                              0  7.509
ArrayDeque spliterator().forEachRemaining()                        0  0.287
ArrayDeque contains                                                0  0.667
ArrayDeque containsAll                                             0  0.104
ArrayDeque forEach                                                 0  0.115
ArrayDeque toArray()                                               0  0.211
ArrayDeque toArray(a)                                              0  0.154
ArrayDeque toArray(empty)                                          0  0.140
ArrayDeque stream().forEach                                        0  0.194
ArrayDeque stream().mapToInt                                       0  0.495
ArrayDeque stream().collect                                        0  0.444
ArrayDeque stream()::iterator                                      0  0.251
ArrayDeque parallelStream().forEach                                0  2.975
ArrayDeque parallelStream().mapToInt                               0  6.556
ArrayDeque parallelStream().collect                                0  5.509
ArrayDeque parallelStream()::iterator                              0  0.272
ArrayDeque removeIf                                                0  0.133
ArrayDeque remove(Object)                                          0  0.086
ArrayDeque descendingIterator() loop                               0  5.939
ArrayDeque descendingIterator().forEachRemaining()                 0  0.409
PriorityQueue iterate for loop                                     0  0.165
PriorityQueue iterator().forEachRemaining()                        0  0.136
PriorityQueue spliterator().tryAdvance()                           0  5.215
PriorityQueue spliterator().forEachRemaining()                     0  0.136
PriorityQueue contains                                             0  0.219
PriorityQueue containsAll                                          0  0.111
PriorityQueue forEach                                              0  0.211
PriorityQueue toArray()                                            0  0.057
PriorityQueue toArray(a)                                           0  0.190
PriorityQueue toArray(empty)                                       0  0.125
PriorityQueue stream().forEach                                     0  0.176
PriorityQueue stream().mapToInt                                    0  0.448
PriorityQueue stream().collect                                     0  0.319
PriorityQueue stream()::iterator                                   0  0.204
PriorityQueue parallelStream().forEach                             0  4.620
PriorityQueue parallelStream().mapToInt                            0  8.713
PriorityQueue parallelStream().collect                             0  5.344
PriorityQueue parallelStream()::iterator                           0  0.925
PriorityQueue removeIf                                             0  0.534
PriorityQueue remove(Object)                                       0  0.082
ConcurrentLinkedQueue iterate for loop                             0  0.186
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.097
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  5.025
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.179
ConcurrentLinkedQueue contains                                     0  0.789
ConcurrentLinkedQueue containsAll                                  0  0.079
ConcurrentLinkedQueue forEach                                      0  0.075
ConcurrentLinkedQueue toArray()                                    0  0.143
ConcurrentLinkedQueue toArray(a)                                   0  0.133
ConcurrentLinkedQueue toArray(empty)                               0  0.068
ConcurrentLinkedQueue stream().forEach                             0  0.147
ConcurrentLinkedQueue stream().mapToInt                            0  3.487
ConcurrentLinkedQueue stream().collect                             0  0.491
ConcurrentLinkedQueue stream()::iterator                           0  0.294
ConcurrentLinkedQueue parallelStream().forEach                     0  3.018
ConcurrentLinkedQueue parallelStream().mapToInt                    0 10.950
ConcurrentLinkedQueue parallelStream().collect                     0  2.613
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.305
ConcurrentLinkedQueue removeIf                                     0  0.140
ConcurrentLinkedQueue remove(Object)                               0  0.086
ConcurrentLinkedDeque iterate for loop                             0  0.247
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.136
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  7.233
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.179
ConcurrentLinkedDeque contains                                     0  0.487
ConcurrentLinkedDeque containsAll                                  0  0.319
ConcurrentLinkedDeque forEach                                      0  0.143
ConcurrentLinkedDeque toArray()                                    0  0.168
ConcurrentLinkedDeque toArray(a)                                   0  0.158
ConcurrentLinkedDeque toArray(empty)                               0  0.100
ConcurrentLinkedDeque stream().forEach                             0  0.186
ConcurrentLinkedDeque stream().mapToInt                            0  6.280
ConcurrentLinkedDeque stream().collect                             0  0.423
ConcurrentLinkedDeque stream()::iterator                           0  0.287
ConcurrentLinkedDeque parallelStream().forEach                     0  4.376
ConcurrentLinkedDeque parallelStream().mapToInt                    0  5.423
ConcurrentLinkedDeque parallelStream().collect                     0  5.086
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.294
ConcurrentLinkedDeque removeIf                                     0  0.147
ConcurrentLinkedDeque remove(Object)                               0  0.108
ConcurrentLinkedDeque descendingIterator() loop                    0  5.208
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.226
ArrayBlockingQueue iterate for loop                                0  0.609
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.545
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.509
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.244
ArrayBlockingQueue contains                                        0  1.599
ArrayBlockingQueue containsAll                                     0  0.122
ArrayBlockingQueue forEach                                         0  0.125
ArrayBlockingQueue toArray()                                       0  0.168
ArrayBlockingQueue toArray(a)                                      0  0.154
ArrayBlockingQueue toArray(empty)                                  0  0.129
ArrayBlockingQueue stream().forEach                                0  0.344
ArrayBlockingQueue stream().mapToInt                               0  0.946
ArrayBlockingQueue stream().collect                                0  0.351
ArrayBlockingQueue stream()::iterator                              0  0.262
ArrayBlockingQueue parallelStream().forEach                        0  2.337
ArrayBlockingQueue parallelStream().mapToInt                       0  8.896
ArrayBlockingQueue parallelStream().collect                        0 11.075
ArrayBlockingQueue parallelStream()::iterator                      0  2.151
ArrayBlockingQueue removeIf                                        0  0.186
ArrayBlockingQueue remove(Object)                                  0  0.176
LinkedBlockingQueue iterate for loop                               0  1.075
LinkedBlockingQueue iterator().forEachRemaining()                  0  4.434
LinkedBlockingQueue spliterator().tryAdvance()                     0  7.559
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.384
LinkedBlockingQueue contains                                       0  2.050
LinkedBlockingQueue containsAll                                    0  0.147
LinkedBlockingQueue forEach                                        0  0.219
LinkedBlockingQueue toArray()                                      0  0.108
LinkedBlockingQueue toArray(a)                                     0  0.100
LinkedBlockingQueue toArray(empty)                                 0  0.147
LinkedBlockingQueue stream().forEach                               0  0.290
LinkedBlockingQueue stream().mapToInt                              0  0.487
LinkedBlockingQueue stream().collect                               0 12.452
LinkedBlockingQueue stream()::iterator                             0  0.452
LinkedBlockingQueue parallelStream().forEach                       0  5.172
LinkedBlockingQueue parallelStream().mapToInt                      0  2.319
LinkedBlockingQueue parallelStream().collect                       0 15.749
LinkedBlockingQueue parallelStream()::iterator                     0  0.466
LinkedBlockingQueue removeIf                                       0  0.254
LinkedBlockingQueue remove(Object)                                 0  0.104
LinkedBlockingDeque iterate for loop                               0  1.305
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.588
LinkedBlockingDeque spliterator().tryAdvance()                     0  7.158
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.333
LinkedBlockingDeque contains                                       0  1.280
LinkedBlockingDeque containsAll                                    0  0.115
LinkedBlockingDeque forEach                                        0  0.183
LinkedBlockingDeque toArray()                                      0  0.115
LinkedBlockingDeque toArray(a)                                     0  0.111
LinkedBlockingDeque toArray(empty)                                 0  0.154
LinkedBlockingDeque stream().forEach                               0  0.265
LinkedBlockingDeque stream().mapToInt                              0  0.462
LinkedBlockingDeque stream().collect                               0  2.143
LinkedBlockingDeque stream()::iterator                             0  0.366
LinkedBlockingDeque parallelStream().forEach                       0  2.455
LinkedBlockingDeque parallelStream().mapToInt                      0  2.710
LinkedBlockingDeque parallelStream().collect                       0  1.860
LinkedBlockingDeque parallelStream()::iterator                     0  0.272
LinkedBlockingDeque removeIf                                       0  0.211
LinkedBlockingDeque remove(Object)                                 0  0.097
LinkedBlockingDeque descendingIterator() loop                      0  5.018
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.315
LinkedTransferQueue iterate for loop                               0  0.168
LinkedTransferQueue iterator().forEachRemaining()                  0  0.387
LinkedTransferQueue spliterator().tryAdvance()                     0  6.090
LinkedTransferQueue spliterator().forEachRemaining()               0  0.305
LinkedTransferQueue contains                                       0  0.910
LinkedTransferQueue containsAll                                    0  0.104
LinkedTransferQueue forEach                                        0  0.183
LinkedTransferQueue toArray()                                      0  0.168
LinkedTransferQueue toArray(a)                                     0  0.498
LinkedTransferQueue toArray(empty)                                 0  0.104
LinkedTransferQueue stream().forEach                               0  0.254
LinkedTransferQueue stream().mapToInt                              0  0.455
LinkedTransferQueue stream().collect                               0  0.387
LinkedTransferQueue stream()::iterator                             0  6.330
LinkedTransferQueue parallelStream().forEach                       0  2.014
LinkedTransferQueue parallelStream().mapToInt                      0  4.057
LinkedTransferQueue parallelStream().collect                       0  1.505
LinkedTransferQueue parallelStream()::iterator                     0  0.778
LinkedTransferQueue removeIf                                       0  0.215
LinkedTransferQueue remove(Object)                                 0  0.093
PriorityBlockingQueue iterate for loop                             0  5.158
PriorityBlockingQueue iterator().forEachRemaining()                0  0.297
PriorityBlockingQueue spliterator().tryAdvance()                   0  4.946
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.151
PriorityBlockingQueue contains                                     0  0.237
PriorityBlockingQueue containsAll                                  0  0.125
PriorityBlockingQueue forEach                                      0  0.201
PriorityBlockingQueue toArray()                                    0  0.057
PriorityBlockingQueue toArray(a)                                   0  0.215
PriorityBlockingQueue toArray(empty)                               0  0.143
PriorityBlockingQueue stream().forEach                             0  0.190
PriorityBlockingQueue stream().mapToInt                            0  1.505
PriorityBlockingQueue stream().collect                             0  6.222
PriorityBlockingQueue stream()::iterator                           0  0.301
PriorityBlockingQueue parallelStream().forEach                     0  2.147
PriorityBlockingQueue parallelStream().mapToInt                    0  9.821
PriorityBlockingQueue parallelStream().collect                     0  3.326
PriorityBlockingQueue parallelStream()::iterator                   0  0.258
PriorityBlockingQueue removeIf                                     0  0.394
PriorityBlockingQueue remove(Object)                               0  0.118
ListN iterate for loop                                             0  0.208
ListN iterator().forEachRemaining()                                0  0.147
ListN spliterator().tryAdvance()                                   0  0.240
ListN spliterator().forEachRemaining()                             0  0.133
ListN contains                                                     0  0.530
ListN containsAll                                                  0  0.125
ListN forEach                                                      0  0.147
ListN toArray()                                                    0  0.065
ListN toArray(a)                                                   0  0.115
ListN toArray(empty)                                               0  0.086
ListN stream().forEach                                             0  0.179
ListN stream().mapToInt                                            0  0.344
ListN stream().collect                                             0  0.548
ListN stream()::iterator                                           0  0.297
ListN parallelStream().forEach                                     0  1.530
ListN parallelStream().mapToInt                                    0  4.430
ListN parallelStream().collect                                     0  1.685
ListN parallelStream()::iterator                                   0  0.276
ListN listIterator forward loop                                    0  0.348
ListN listIterator backward loop                                   0  0.158
ListN indexOf                                                      0  0.072
ListN lastIndexOf                                                  0  0.079
ListN equals                                                       0  0.254
ListN hashCode                                                     0  0.136
ImmutableCollections$SubList iterate for loop                      0  0.466
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.183
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.251
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.158
ImmutableCollections$SubList contains                              0  0.348
ImmutableCollections$SubList containsAll                           0  0.147
ImmutableCollections$SubList forEach                               0  0.204
ImmutableCollections$SubList toArray()                             0  6.910
ImmutableCollections$SubList toArray(a)                            0 13.509
ImmutableCollections$SubList toArray(empty)                        0  0.538
ImmutableCollections$SubList stream().forEach                      0  0.290
ImmutableCollections$SubList stream().mapToInt                     0  0.459
ImmutableCollections$SubList stream().collect                      0  0.358
ImmutableCollections$SubList stream()::iterator                    0  0.272
ImmutableCollections$SubList parallelStream().forEach              0  2.434
ImmutableCollections$SubList parallelStream().mapToInt             0  7.581
ImmutableCollections$SubList parallelStream().collect              0  5.082
ImmutableCollections$SubList parallelStream()::iterator            0  0.333
ImmutableCollections$SubList listIterator forward loop             0  0.355
ImmutableCollections$SubList listIterator backward loop            0  0.143
ImmutableCollections$SubList indexOf                               0  0.122
ImmutableCollections$SubList lastIndexOf                           0  0.104
ImmutableCollections$SubList equals                                0  0.348
ImmutableCollections$SubList hashCode                              0  0.204
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
