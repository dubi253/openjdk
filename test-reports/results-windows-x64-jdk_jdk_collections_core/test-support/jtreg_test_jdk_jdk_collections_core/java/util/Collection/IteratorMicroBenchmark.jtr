#Test Results (version 2)
#Tue Mar 05 01:54:21 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\r\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=515 0\:00\:00.515
end=Tue Mar 05 01\:54\:21 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az845-568.u3bnpy2jrkgenmayvwcmsbkv0c.bx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Tue Mar 05 01\:54\:21 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=531
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Collection

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733, mixed mode, sharing)

#section:build
----------messages:(7/241)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Tue Mar 05 01:54:21 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Tue Mar 05 01:54:21 UTC 2024
elapsed time (seconds): 0.128
result: Passed. Build successful

#section:compile
----------messages:(7/295)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:54:21 UTC 2024
Mode: agentvm
Agent id: 1
finished: Tue Mar 05 01:54:21 UTC 2024
elapsed time (seconds): 0.128
----------configuration:(10/698)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d

----------rerun:(36/3628)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java'
----------direct:(7/584)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/299)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Tue Mar 05 01:54:21 UTC 2024
Mode: agentvm
Agent id: 4
finished: Tue Mar 05 01:54:21 UTC 2024
elapsed time (seconds): 0.387
----------configuration:(13/927)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection

----------rerun:(28/3078)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0  9.177
ArrayList spliterator().tryAdvance()                               0  7.787
ArrayList spliterator().forEachRemaining()                         0  7.365
ArrayList contains                                                 0 12.426
ArrayList containsAll                                              0  1.126
ArrayList forEach                                                  0  7.339
ArrayList toArray()                                                0  0.375
ArrayList toArray(a)                                               0  0.383
ArrayList toArray(empty)                                           0  0.310
ArrayList stream().forEach                                         0  6.953
ArrayList stream().mapToInt                                        1 39.563
ArrayList stream().collect                                         0 31.762
ArrayList stream()::iterator                                       0 10.300
ArrayList parallelStream().forEach                                 1 57.491
ArrayList parallelStream().mapToInt                                1 50.018
ArrayList parallelStream().collect                                 0 10.686
ArrayList parallelStream()::iterator                               0  6.946
ArrayList removeIf                                                 0  6.942
ArrayList remove(Object)                                           0  0.592
ArrayList listIterator forward loop                                0  0.848
ArrayList listIterator backward loop                               0  0.484
ArrayList indexOf                                                  0  1.166
ArrayList lastIndexOf                                              0  0.368
ArrayList equals                                                   0  0.383
ArrayList hashCode                                                 0  0.758
ArrayList replaceAll                                               0  8.523
ArrayList$SubList iterate for loop                                 0  6.921
ArrayList$SubList iterator().forEachRemaining()                    0  0.444
ArrayList$SubList spliterator().tryAdvance()                       0  5.545
ArrayList$SubList spliterator().forEachRemaining()                 0  0.177
ArrayList$SubList contains                                         0  0.206
ArrayList$SubList containsAll                                      0  0.155
ArrayList$SubList forEach                                          0  0.560
ArrayList$SubList toArray()                                        0  0.285
ArrayList$SubList toArray(a)                                       0  0.148
ArrayList$SubList toArray(empty)                                   0  0.209
ArrayList$SubList stream().forEach                                 0  0.209
ArrayList$SubList stream().mapToInt                                0  0.458
ArrayList$SubList stream().collect                                 0  0.404
ArrayList$SubList stream()::iterator                               0  0.440
ArrayList$SubList parallelStream().forEach                         0  2.339
ArrayList$SubList parallelStream().mapToInt                        0  2.599
ArrayList$SubList parallelStream().collect                         0  2.567
ArrayList$SubList parallelStream()::iterator                       0  0.274
ArrayList$SubList removeIf                                         0  0.361
ArrayList$SubList remove(Object)                                   0  0.217
ArrayList$SubList listIterator forward loop                        0  0.119
ArrayList$SubList listIterator backward loop                       0  0.155
ArrayList$SubList indexOf                                          0  0.079
ArrayList$SubList lastIndexOf                                      0  0.126
ArrayList$SubList equals                                           0  0.473
ArrayList$SubList hashCode                                         0  0.191
ArrayList$SubList replaceAll                                       0  0.184
Vector iterate for loop                                            0  0.213
Vector iterator().forEachRemaining()                               0  0.365
Vector spliterator().tryAdvance()                                  0  6.000
Vector spliterator().forEachRemaining()                            0  0.177
Vector contains                                                    0  1.502
Vector containsAll                                                 0  7.690
Vector forEach                                                     0  1.408
Vector toArray()                                                   0  0.076
Vector toArray(a)                                                  0  1.989
Vector toArray(empty)                                              0  0.162
Vector stream().forEach                                            0  0.282
Vector stream().mapToInt                                           0  0.458
Vector stream().collect                                            0  0.361
Vector stream()::iterator                                          0  0.253
Vector parallelStream().forEach                                    0  2.209
Vector parallelStream().mapToInt                                   0  2.614
Vector parallelStream().collect                                    0  2.798
Vector parallelStream()::iterator                                  0  0.278
Vector removeIf                                                    0  0.137
Vector remove(Object)                                              0  1.639
Vector listIterator forward loop                                   0  0.260
Vector listIterator backward loop                                  0  0.231
Vector indexOf                                                     0  0.101
Vector lastIndexOf                                                 0  0.206
Vector equals                                                      0  0.740
Vector hashCode                                                    0  0.415
Vector replaceAll                                                  0  0.260
SynchronizedRandomAccessList iterate for loop                      0 16.729
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.336
SynchronizedRandomAccessList spliterator().tryAdvance()            0  7.650
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.296
SynchronizedRandomAccessList contains                              0  0.708
SynchronizedRandomAccessList containsAll                           0  0.318
SynchronizedRandomAccessList forEach                               0  0.213
SynchronizedRandomAccessList toArray()                             0  0.271
SynchronizedRandomAccessList toArray(a)                            0  0.199
SynchronizedRandomAccessList toArray(empty)                        0 33.708
SynchronizedRandomAccessList stream().forEach                      0  0.469
SynchronizedRandomAccessList stream().mapToInt                     0  0.578
SynchronizedRandomAccessList stream().collect                      0  0.505
SynchronizedRandomAccessList stream()::iterator                    0  0.462
SynchronizedRandomAccessList parallelStream().forEach              0  2.675
SynchronizedRandomAccessList parallelStream().mapToInt             0  2.697
SynchronizedRandomAccessList parallelStream().collect              0  2.596
SynchronizedRandomAccessList parallelStream()::iterator            0  0.365
SynchronizedRandomAccessList removeIf                              0  0.361
SynchronizedRandomAccessList remove(Object)                        0  0.238
SynchronizedRandomAccessList listIterator forward loop             0  0.238
SynchronizedRandomAccessList listIterator backward loop            0  0.484
SynchronizedRandomAccessList indexOf                               0  0.321
SynchronizedRandomAccessList lastIndexOf                           0  0.365
SynchronizedRandomAccessList equals                                0  0.462
SynchronizedRandomAccessList hashCode                              0  0.303
SynchronizedRandomAccessList replaceAll                            0  0.711
LinkedList iterate for loop                                        0  0.195
LinkedList iterator().forEachRemaining()                           0  0.264
LinkedList spliterator().tryAdvance()                              0  6.361
LinkedList spliterator().forEachRemaining()                        0  0.159
LinkedList contains                                                0  1.227
LinkedList containsAll                                             0  0.126
LinkedList forEach                                                 0  0.159
LinkedList toArray()                                               0  0.134
LinkedList toArray(a)                                              0  0.090
LinkedList toArray(empty)                                          0  0.141
LinkedList stream().forEach                                        0  0.181
LinkedList stream().mapToInt                                       0  0.419
LinkedList stream().collect                                        0  0.336
LinkedList stream()::iterator                                      0  0.238
LinkedList parallelStream().forEach                                0  2.505
LinkedList parallelStream().mapToInt                               0 15.509
LinkedList parallelStream().collect                                0  3.563
LinkedList parallelStream()::iterator                              0  0.278
LinkedList removeIf                                                0  0.166
LinkedList remove(Object)                                          0  0.123
LinkedList descendingIterator() loop                               0  5.697
LinkedList descendingIterator().forEachRemaining()                 0  7.195
LinkedList listIterator forward loop                               0  0.130
LinkedList listIterator backward loop                              0  0.112
LinkedList indexOf                                                 0  0.087
LinkedList lastIndexOf                                             0  0.097
LinkedList equals                                                  0  0.318
LinkedList hashCode                                                0  0.220
LinkedList replaceAll                                              0  0.227
AbstractList$SubList iterate for loop                              0  0.289
AbstractList$SubList iterator().forEachRemaining()                 0  0.274
AbstractList$SubList spliterator().tryAdvance()                    0  0.419
AbstractList$SubList spliterator().forEachRemaining()              0  0.213
AbstractList$SubList contains                                      0  0.170
AbstractList$SubList containsAll                                   0  6.000
AbstractList$SubList forEach                                       0 11.671
AbstractList$SubList toArray()                                     0  8.108
AbstractList$SubList toArray(a)                                    0  1.733
AbstractList$SubList toArray(empty)                                0  0.581
AbstractList$SubList stream().forEach                              0  0.318
AbstractList$SubList stream().mapToInt                             0  0.495
AbstractList$SubList stream().collect                              0  0.394
AbstractList$SubList stream()::iterator                            0  0.282
AbstractList$SubList parallelStream().forEach                      0  2.953
AbstractList$SubList parallelStream().mapToInt                     0  3.018
AbstractList$SubList parallelStream().collect                      0 32.422
AbstractList$SubList parallelStream()::iterator                    0  0.473
AbstractList$SubList removeIf                                      0  0.162
AbstractList$SubList remove(Object)                                0  0.148
AbstractList$SubList listIterator forward loop                     0  0.101
AbstractList$SubList listIterator backward loop                    0  0.292
AbstractList$SubList indexOf                                       0  0.141
AbstractList$SubList lastIndexOf                                   0  0.235
AbstractList$SubList equals                                        0  0.473
AbstractList$SubList hashCode                                      0  0.282
AbstractList$SubList replaceAll                                    0  0.206
CopyOnWriteArrayList iterate for loop                              0  0.130
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.433
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.188
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.108
CopyOnWriteArrayList contains                                      0  3.159
CopyOnWriteArrayList containsAll                                   0  6.166
CopyOnWriteArrayList forEach                                       0  0.213
CopyOnWriteArrayList toArray()                                     0  0.076
CopyOnWriteArrayList toArray(a)                                    0  0.159
CopyOnWriteArrayList toArray(empty)                                0  0.108
CopyOnWriteArrayList stream().forEach                              0  0.209
CopyOnWriteArrayList stream().mapToInt                             0  0.419
CopyOnWriteArrayList stream().collect                              0  0.350
CopyOnWriteArrayList stream()::iterator                            0  0.220
CopyOnWriteArrayList parallelStream().forEach                      0  2.744
CopyOnWriteArrayList parallelStream().mapToInt                     0  2.325
CopyOnWriteArrayList parallelStream().collect                      0  2.841
CopyOnWriteArrayList parallelStream()::iterator                    0  0.300
CopyOnWriteArrayList removeIf                                      0  0.177
CopyOnWriteArrayList remove(Object)                                0  1.668
CopyOnWriteArrayList listIterator forward loop                     0  0.144
CopyOnWriteArrayList listIterator backward loop                    0  0.282
CopyOnWriteArrayList indexOf                                       0  0.300
CopyOnWriteArrayList lastIndexOf                                   0  0.224
CopyOnWriteArrayList equals                                        0  0.383
CopyOnWriteArrayList hashCode                                      0  0.199
CopyOnWriteArrayList replaceAll                                    0  0.361
COWSubList iterate for loop                                        0  6.155
COWSubList iterator().forEachRemaining()                           0  0.361
COWSubList spliterator().tryAdvance()                              0  0.332
COWSubList spliterator().forEachRemaining()                        0  0.123
COWSubList contains                                                0  0.206
COWSubList containsAll                                             0  0.256
COWSubList forEach                                                 0  0.217
COWSubList toArray()                                               0  0.166
COWSubList toArray(a)                                              0  0.199
COWSubList toArray(empty)                                          0  0.173
COWSubList stream().forEach                                        0  0.181
COWSubList stream().mapToInt                                       0  0.404
COWSubList stream().collect                                        0  0.440
COWSubList stream()::iterator                                      0  0.282
COWSubList parallelStream().forEach                                0  4.202
COWSubList parallelStream().mapToInt                               0  2.617
COWSubList parallelStream().collect                                0  1.841
COWSubList parallelStream()::iterator                              0  0.245
COWSubList removeIf                                                0  0.264
COWSubList remove(Object)                                          0  0.112
COWSubList listIterator forward loop                               0  0.217
COWSubList listIterator backward loop                              0  0.372
COWSubList indexOf                                                 0  0.069
COWSubList lastIndexOf                                             0  0.116
COWSubList equals                                                  0  0.336
COWSubList hashCode                                                0  0.184
COWSubList replaceAll                                              0  0.242
ArrayDeque iterate for loop                                        0  0.199
ArrayDeque iterator().forEachRemaining()                           0  0.422
ArrayDeque spliterator().tryAdvance()                              0  5.845
ArrayDeque spliterator().forEachRemaining()                        0  0.274
ArrayDeque contains                                                0  0.112
ArrayDeque containsAll                                             0  0.116
ArrayDeque forEach                                                 0  0.101
ArrayDeque toArray()                                               0  0.191
ArrayDeque toArray(a)                                              0  0.137
ArrayDeque toArray(empty)                                          0  0.130
ArrayDeque stream().forEach                                        0  0.184
ArrayDeque stream().mapToInt                                       0  0.458
ArrayDeque stream().collect                                        0  0.329
ArrayDeque stream()::iterator                                      0  0.841
ArrayDeque parallelStream().forEach                                0  5.502
ArrayDeque parallelStream().mapToInt                               0  2.928
ArrayDeque parallelStream().collect                                0  2.484
ArrayDeque parallelStream()::iterator                              0  0.354
ArrayDeque removeIf                                                0  0.134
ArrayDeque remove(Object)                                          0  0.087
ArrayDeque descendingIterator() loop                               0  5.415
ArrayDeque descendingIterator().forEachRemaining()                 0  0.477
PriorityQueue iterate for loop                                     0  0.188
PriorityQueue iterator().forEachRemaining()                        0  0.155
PriorityQueue spliterator().tryAdvance()                           0  5.599
PriorityQueue spliterator().forEachRemaining()                     0  0.181
PriorityQueue contains                                             0  0.242
PriorityQueue containsAll                                          0  0.126
PriorityQueue forEach                                              0  0.264
PriorityQueue toArray()                                            0  0.065
PriorityQueue toArray(a)                                           0  0.195
PriorityQueue toArray(empty)                                       0  0.144
PriorityQueue stream().forEach                                     0  0.188
PriorityQueue stream().mapToInt                                    0  0.509
PriorityQueue stream().collect                                     0  0.368
PriorityQueue stream()::iterator                                   0  0.245
PriorityQueue parallelStream().forEach                             0  2.744
PriorityQueue parallelStream().mapToInt                            0  2.718
PriorityQueue parallelStream().collect                             0  2.946
PriorityQueue parallelStream()::iterator                           0  0.282
PriorityQueue removeIf                                             0  0.390
PriorityQueue remove(Object)                                       0  0.094
ConcurrentLinkedQueue iterate for loop                             0  0.177
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.141
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  6.253
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  1.245
ConcurrentLinkedQueue contains                                     0  0.773
ConcurrentLinkedQueue containsAll                                  0  0.119
ConcurrentLinkedQueue forEach                                      0  0.119
ConcurrentLinkedQueue toArray()                                    0  0.162
ConcurrentLinkedQueue toArray(a)                                   0  0.166
ConcurrentLinkedQueue toArray(empty)                               0  0.090
ConcurrentLinkedQueue stream().forEach                             0  0.148
ConcurrentLinkedQueue stream().mapToInt                            0  0.989
ConcurrentLinkedQueue stream().collect                             0  0.440
ConcurrentLinkedQueue stream()::iterator                           0  0.264
ConcurrentLinkedQueue parallelStream().forEach                     0  3.610
ConcurrentLinkedQueue parallelStream().mapToInt                    0  2.870
ConcurrentLinkedQueue parallelStream().collect                     0  2.401
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.310
ConcurrentLinkedQueue removeIf                                     0  0.152
ConcurrentLinkedQueue remove(Object)                               0  0.087
ConcurrentLinkedDeque iterate for loop                             0  0.227
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.155
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  6.065
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.181
ConcurrentLinkedDeque contains                                     0  1.296
ConcurrentLinkedDeque containsAll                                  0  0.119
ConcurrentLinkedDeque forEach                                      0  0.123
ConcurrentLinkedDeque toArray()                                    0  0.155
ConcurrentLinkedDeque toArray(a)                                   0  0.155
ConcurrentLinkedDeque toArray(empty)                               0  0.097
ConcurrentLinkedDeque stream().forEach                             0  0.181
ConcurrentLinkedDeque stream().mapToInt                            0  0.646
ConcurrentLinkedDeque stream().collect                             0  0.361
ConcurrentLinkedDeque stream()::iterator                           0  0.271
ConcurrentLinkedDeque parallelStream().forEach                     0  3.079
ConcurrentLinkedDeque parallelStream().mapToInt                    0  2.906
ConcurrentLinkedDeque parallelStream().collect                     0  2.105
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.303
ConcurrentLinkedDeque removeIf                                     0  0.141
ConcurrentLinkedDeque remove(Object)                               0  0.101
ConcurrentLinkedDeque descendingIterator() loop                    0  5.079
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.249
ArrayBlockingQueue iterate for loop                                0  0.567
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.520
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.509
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.249
ArrayBlockingQueue contains                                        0  0.845
ArrayBlockingQueue containsAll                                     0  0.119
ArrayBlockingQueue forEach                                         0  0.144
ArrayBlockingQueue toArray()                                       0  0.173
ArrayBlockingQueue toArray(a)                                      0  0.144
ArrayBlockingQueue toArray(empty)                                  0  0.141
ArrayBlockingQueue stream().forEach                                0  0.307
ArrayBlockingQueue stream().mapToInt                               0  1.545
ArrayBlockingQueue stream().collect                                0  0.375
ArrayBlockingQueue stream()::iterator                              0  0.256
ArrayBlockingQueue parallelStream().forEach                        0  3.051
ArrayBlockingQueue parallelStream().mapToInt                       0  3.282
ArrayBlockingQueue parallelStream().collect                        0  4.155
ArrayBlockingQueue parallelStream()::iterator                      0  0.635
ArrayBlockingQueue removeIf                                        0  0.166
ArrayBlockingQueue remove(Object)                                  0  0.094
LinkedBlockingQueue iterate for loop                               0  0.249
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.614
LinkedBlockingQueue spliterator().tryAdvance()                     0  6.256
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.372
LinkedBlockingQueue contains                                       0  2.144
LinkedBlockingQueue containsAll                                    0  0.148
LinkedBlockingQueue forEach                                        0  0.220
LinkedBlockingQueue toArray()                                      0  0.108
LinkedBlockingQueue toArray(a)                                     0  0.112
LinkedBlockingQueue toArray(empty)                                 0  0.170
LinkedBlockingQueue stream().forEach                               0  0.264
LinkedBlockingQueue stream().mapToInt                              0  0.473
LinkedBlockingQueue stream().collect                               0  1.260
LinkedBlockingQueue stream()::iterator                             0  0.347
LinkedBlockingQueue parallelStream().forEach                       0  3.798
LinkedBlockingQueue parallelStream().mapToInt                      0  1.744
LinkedBlockingQueue parallelStream().collect                       0  3.458
LinkedBlockingQueue parallelStream()::iterator                     0  1.242
LinkedBlockingQueue removeIf                                       0  0.253
LinkedBlockingQueue remove(Object)                                 0  0.090
LinkedBlockingDeque iterate for loop                               0  0.238
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.578
LinkedBlockingDeque spliterator().tryAdvance()                     0  6.329
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.361
LinkedBlockingDeque contains                                       0  1.542
LinkedBlockingDeque containsAll                                    0  0.126
LinkedBlockingDeque forEach                                        0  0.195
LinkedBlockingDeque toArray()                                      0  0.087
LinkedBlockingDeque toArray(a)                                     0  0.101
LinkedBlockingDeque toArray(empty)                                 0  0.134
LinkedBlockingDeque stream().forEach                               0  0.271
LinkedBlockingDeque stream().mapToInt                              0  0.466
LinkedBlockingDeque stream().collect                               0  0.935
LinkedBlockingDeque stream()::iterator                             0  0.606
LinkedBlockingDeque parallelStream().forEach                       0  2.805
LinkedBlockingDeque parallelStream().mapToInt                      0  2.747
LinkedBlockingDeque parallelStream().collect                       0  2.625
LinkedBlockingDeque parallelStream()::iterator                     0  0.321
LinkedBlockingDeque removeIf                                       0  0.213
LinkedBlockingDeque remove(Object)                                 0  0.094
LinkedBlockingDeque descendingIterator() loop                      0  7.256
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.260
LinkedTransferQueue iterate for loop                               0  0.155
LinkedTransferQueue iterator().forEachRemaining()                  0  0.282
LinkedTransferQueue spliterator().tryAdvance()                     0  5.321
LinkedTransferQueue spliterator().forEachRemaining()               0  0.253
LinkedTransferQueue contains                                       0  0.292
LinkedTransferQueue containsAll                                    0  0.090
LinkedTransferQueue forEach                                        0  0.108
LinkedTransferQueue toArray()                                      0  0.137
LinkedTransferQueue toArray(a)                                     0  0.264
LinkedTransferQueue toArray(empty)                                 0  0.079
LinkedTransferQueue stream().forEach                               0  0.173
LinkedTransferQueue stream().mapToInt                              0  0.361
LinkedTransferQueue stream().collect                               0  0.289
LinkedTransferQueue stream()::iterator                             0  0.224
LinkedTransferQueue parallelStream().forEach                       0  2.318
LinkedTransferQueue parallelStream().mapToInt                      0  2.343
LinkedTransferQueue parallelStream().collect                       0  1.946
LinkedTransferQueue parallelStream()::iterator                     0  0.289
LinkedTransferQueue removeIf                                       0  0.220
LinkedTransferQueue remove(Object)                                 0  0.094
PriorityBlockingQueue iterate for loop                             0  4.682
PriorityBlockingQueue iterator().forEachRemaining()                0  0.231
PriorityBlockingQueue spliterator().tryAdvance()                   0  3.505
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.119
PriorityBlockingQueue contains                                     0  0.162
PriorityBlockingQueue containsAll                                  0  0.105
PriorityBlockingQueue forEach                                      0  0.144
PriorityBlockingQueue toArray()                                    0  0.043
PriorityBlockingQueue toArray(a)                                   0  0.173
PriorityBlockingQueue toArray(empty)                               0  0.108
PriorityBlockingQueue stream().forEach                             0  0.126
PriorityBlockingQueue stream().mapToInt                            0  0.321
PriorityBlockingQueue stream().collect                             0  0.264
PriorityBlockingQueue stream()::iterator                           0  0.162
PriorityBlockingQueue parallelStream().forEach                     0  2.491
PriorityBlockingQueue parallelStream().mapToInt                    0  3.704
PriorityBlockingQueue parallelStream().collect                     0  2.231
PriorityBlockingQueue parallelStream()::iterator                   0  0.256
PriorityBlockingQueue removeIf                                     0  0.419
PriorityBlockingQueue remove(Object)                               0  0.094
ListN iterate for loop                                             0  0.188
ListN iterator().forEachRemaining()                                0  0.144
ListN spliterator().tryAdvance()                                   0  0.209
ListN spliterator().forEachRemaining()                             0  0.097
ListN contains                                                     0  0.466
ListN containsAll                                                  0  0.101
ListN forEach                                                      0  0.105
ListN toArray()                                                    0  0.069
ListN toArray(a)                                                   0  0.108
ListN toArray(empty)                                               0  0.072
ListN stream().forEach                                             0  0.134
ListN stream().mapToInt                                            0  0.455
ListN stream().collect                                             0  0.253
ListN stream()::iterator                                           0  0.217
ListN parallelStream().forEach                                     0 24.852
ListN parallelStream().mapToInt                                    0  4.744
ListN parallelStream().collect                                     0  2.105
ListN parallelStream()::iterator                                   0  0.292
ListN listIterator forward loop                                    0  0.343
ListN listIterator backward loop                                   0  0.173
ListN indexOf                                                      0  0.087
ListN lastIndexOf                                                  0  0.072
ListN equals                                                       0  0.231
ListN hashCode                                                     0  0.134
ImmutableCollections$SubList iterate for loop                      0  0.444
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.224
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.267
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.159
ImmutableCollections$SubList contains                              0  0.296
ImmutableCollections$SubList containsAll                           0  0.155
ImmutableCollections$SubList forEach                               0  0.173
ImmutableCollections$SubList toArray()                             0  0.166
ImmutableCollections$SubList toArray(a)                            0  0.130
ImmutableCollections$SubList toArray(empty)                        0  0.354
ImmutableCollections$SubList stream().forEach                      0  0.209
ImmutableCollections$SubList stream().mapToInt                     0  0.368
ImmutableCollections$SubList stream().collect                      0  0.437
ImmutableCollections$SubList stream()::iterator                    0  0.271
ImmutableCollections$SubList parallelStream().forEach              0  2.993
ImmutableCollections$SubList parallelStream().mapToInt             0  3.552
ImmutableCollections$SubList parallelStream().collect              0  2.668
ImmutableCollections$SubList parallelStream()::iterator            0  0.520
ImmutableCollections$SubList listIterator forward loop             0  0.354
ImmutableCollections$SubList listIterator backward loop            0  0.144
ImmutableCollections$SubList indexOf                               0  0.123
ImmutableCollections$SubList lastIndexOf                           0  0.108
ImmutableCollections$SubList equals                                0  0.325
ImmutableCollections$SubList hashCode                              0  0.213
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
