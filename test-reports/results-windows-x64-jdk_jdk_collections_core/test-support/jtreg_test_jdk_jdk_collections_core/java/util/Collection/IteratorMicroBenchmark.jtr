#Test Results (version 2)
#Fri Apr 12 13:49:33 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\r\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=537 0\:00\:00.537
end=Fri Apr 12 13\:49\:33 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az657-7.i5gdedbi13oupdivqabz4h0k3h.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Fri Apr 12 13\:49\:33 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=537
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Collection

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5, mixed mode, sharing)

#section:build
----------messages:(7/241)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Fri Apr 12 13:49:33 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Fri Apr 12 13:49:33 UTC 2024
elapsed time (seconds): 0.162
result: Passed. Build successful

#section:compile
----------messages:(7/295)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:49:33 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Apr 12 13:49:33 UTC 2024
elapsed time (seconds): 0.162
----------configuration:(10/698)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d

----------rerun:(36/3628)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java'
----------direct:(7/584)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/299)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Fri Apr 12 13:49:33 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Apr 12 13:49:33 UTC 2024
elapsed time (seconds): 0.375
----------configuration:(13/927)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection

----------rerun:(28/3078)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0  6.415
ArrayList spliterator().tryAdvance()                               0  3.849
ArrayList spliterator().forEachRemaining()                         0  3.186
ArrayList contains                                                 0  6.622
ArrayList containsAll                                              0  0.670
ArrayList forEach                                                  0  3.352
ArrayList toArray()                                                0  0.153
ArrayList toArray(a)                                               0  0.147
ArrayList toArray(empty)                                           0  0.119
ArrayList stream().forEach                                         0  3.609
ArrayList stream().mapToInt                                        1 24.199
ArrayList stream().collect                                         0 15.294
ArrayList stream()::iterator                                       0  8.285
ArrayList parallelStream().forEach                                 1 34.160
ArrayList parallelStream().mapToInt                                0 18.762
ArrayList parallelStream().collect                                 0 10.855
ArrayList parallelStream()::iterator                               0  4.834
ArrayList removeIf                                                 0  3.484
ArrayList remove(Object)                                           0  0.654
ArrayList listIterator forward loop                                0  0.492
ArrayList listIterator backward loop                               0  0.238
ArrayList indexOf                                                  0  0.430
ArrayList lastIndexOf                                              0  0.143
ArrayList equals                                                   0  0.361
ArrayList hashCode                                                 0  0.359
ArrayList replaceAll                                               0  3.749
ArrayList$SubList iterate for loop                                 0  4.009
ArrayList$SubList iterator().forEachRemaining()                    0  0.225
ArrayList$SubList spliterator().tryAdvance()                       0  2.432
ArrayList$SubList spliterator().forEachRemaining()                 0  0.127
ArrayList$SubList contains                                         0  0.112
ArrayList$SubList containsAll                                      0  0.138
ArrayList$SubList forEach                                          0  0.555
ArrayList$SubList toArray()                                        0  0.184
ArrayList$SubList toArray(a)                                       0  0.089
ArrayList$SubList toArray(empty)                                   0  0.104
ArrayList$SubList stream().forEach                                 0  0.102
ArrayList$SubList stream().mapToInt                                0  0.235
ArrayList$SubList stream().collect                                 0  0.218
ArrayList$SubList stream()::iterator                               0  0.134
ArrayList$SubList parallelStream().forEach                         0  2.374
ArrayList$SubList parallelStream().mapToInt                        0  3.594
ArrayList$SubList parallelStream().collect                         0  3.255
ArrayList$SubList parallelStream()::iterator                       0  0.197
ArrayList$SubList removeIf                                         0  0.190
ArrayList$SubList remove(Object)                                   0  0.106
ArrayList$SubList listIterator forward loop                        0  0.058
ArrayList$SubList listIterator backward loop                       0  0.080
ArrayList$SubList indexOf                                          0  0.037
ArrayList$SubList lastIndexOf                                      0  0.065
ArrayList$SubList equals                                           0  0.261
ArrayList$SubList hashCode                                         0  0.097
ArrayList$SubList replaceAll                                       0  0.106
Vector iterate for loop                                            0  0.298
Vector iterator().forEachRemaining()                               0  0.400
Vector spliterator().tryAdvance()                                  0  2.857
Vector spliterator().forEachRemaining()                            0  0.084
Vector contains                                                    0  0.985
Vector containsAll                                                 0  2.102
Vector forEach                                                     0  0.108
Vector toArray()                                                   0  0.298
Vector toArray(a)                                                  0  0.125
Vector toArray(empty)                                              0  0.071
Vector stream().forEach                                            0  0.151
Vector stream().mapToInt                                           0  0.287
Vector stream().collect                                            0  0.227
Vector stream()::iterator                                          0  0.153
Vector parallelStream().forEach                                    0  2.875
Vector parallelStream().mapToInt                                   0  2.086
Vector parallelStream().collect                                    0  2.058
Vector parallelStream()::iterator                                  0  0.181
Vector removeIf                                                    0  0.080
Vector remove(Object)                                              0  0.907
Vector listIterator forward loop                                   0  0.147
Vector listIterator backward loop                                  0  0.108
Vector indexOf                                                     0  0.380
Vector lastIndexOf                                                 0  0.080
Vector equals                                                      0  0.447
Vector hashCode                                                    0  0.197
Vector replaceAll                                                  0  0.114
SynchronizedRandomAccessList iterate for loop                      0  2.700
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.199
SynchronizedRandomAccessList spliterator().tryAdvance()            0  5.352
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.210
SynchronizedRandomAccessList contains                              0  0.691
SynchronizedRandomAccessList containsAll                           0  0.240
SynchronizedRandomAccessList forEach                               0  0.130
SynchronizedRandomAccessList toArray()                             0  0.408
SynchronizedRandomAccessList toArray(a)                            0  0.117
SynchronizedRandomAccessList toArray(empty)                        0  3.095
SynchronizedRandomAccessList stream().forEach                      0  0.238
SynchronizedRandomAccessList stream().mapToInt                     0  0.356
SynchronizedRandomAccessList stream().collect                      0  0.285
SynchronizedRandomAccessList stream()::iterator                    0  0.255
SynchronizedRandomAccessList parallelStream().forEach              0  3.276
SynchronizedRandomAccessList parallelStream().mapToInt             0  3.244
SynchronizedRandomAccessList parallelStream().collect              0 12.981
SynchronizedRandomAccessList parallelStream()::iterator            0  0.251
SynchronizedRandomAccessList removeIf                              0  0.838
SynchronizedRandomAccessList remove(Object)                        0  0.190
SynchronizedRandomAccessList listIterator forward loop             0  0.164
SynchronizedRandomAccessList listIterator backward loop            0  0.328
SynchronizedRandomAccessList indexOf                               0  0.227
SynchronizedRandomAccessList lastIndexOf                           0  0.248
SynchronizedRandomAccessList equals                                0  0.328
SynchronizedRandomAccessList hashCode                              0  0.201
SynchronizedRandomAccessList replaceAll                            0  0.525
LinkedList iterate for loop                                        0  0.138
LinkedList iterator().forEachRemaining()                           0  0.184
LinkedList spliterator().tryAdvance()                              0  4.138
LinkedList spliterator().forEachRemaining()                        0  0.108
LinkedList contains                                                0  0.931
LinkedList containsAll                                             0  0.091
LinkedList forEach                                                 0  0.125
LinkedList toArray()                                               0  0.093
LinkedList toArray(a)                                              0  0.067
LinkedList toArray(empty)                                          0  0.086
LinkedList stream().forEach                                        0  0.117
LinkedList stream().mapToInt                                       0  0.598
LinkedList stream().collect                                        0  0.413
LinkedList stream()::iterator                                      0  0.127
LinkedList parallelStream().forEach                                0 11.603
LinkedList parallelStream().mapToInt                               0  6.447
LinkedList parallelStream().collect                                0  4.471
LinkedList parallelStream()::iterator                              0  0.188
LinkedList removeIf                                                0  0.123
LinkedList remove(Object)                                          0  0.082
LinkedList descendingIterator() loop                               0  3.454
LinkedList descendingIterator().forEachRemaining()                 0  3.771
LinkedList listIterator forward loop                               0  0.084
LinkedList listIterator backward loop                              0  0.052
LinkedList indexOf                                                 0  0.039
LinkedList lastIndexOf                                             0  0.045
LinkedList equals                                                  0  0.181
LinkedList hashCode                                                0  0.093
LinkedList replaceAll                                              0  0.110
AbstractList$SubList iterate for loop                              0  0.136
AbstractList$SubList iterator().forEachRemaining()                 0  0.084
AbstractList$SubList spliterator().tryAdvance()                    0  0.285
AbstractList$SubList spliterator().forEachRemaining()              0  0.099
AbstractList$SubList contains                                      0  0.078
AbstractList$SubList containsAll                                   0  2.430
AbstractList$SubList forEach                                       0  1.862
AbstractList$SubList toArray()                                     0  1.678
AbstractList$SubList toArray(a)                                    0  1.222
AbstractList$SubList toArray(empty)                                0  0.389
AbstractList$SubList stream().forEach                              0  0.438
AbstractList$SubList stream().mapToInt                             0  0.339
AbstractList$SubList stream().collect                              0  0.285
AbstractList$SubList stream()::iterator                            0  0.222
AbstractList$SubList parallelStream().forEach                      0  2.063
AbstractList$SubList parallelStream().mapToInt                     0  2.369
AbstractList$SubList parallelStream().collect                      0  6.138
AbstractList$SubList parallelStream()::iterator                    0  0.296
AbstractList$SubList removeIf                                      0  0.084
AbstractList$SubList remove(Object)                                0  0.071
AbstractList$SubList listIterator forward loop                     0  0.045
AbstractList$SubList listIterator backward loop                    0  0.143
AbstractList$SubList indexOf                                       0  0.080
AbstractList$SubList lastIndexOf                                   0  0.143
AbstractList$SubList equals                                        0  0.335
AbstractList$SubList hashCode                                      0  0.266
AbstractList$SubList replaceAll                                    0  0.138
CopyOnWriteArrayList iterate for loop                              0  0.270
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.335
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.082
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.039
CopyOnWriteArrayList contains                                      0  0.918
CopyOnWriteArrayList containsAll                                   0  2.125
CopyOnWriteArrayList forEach                                       0  0.095
CopyOnWriteArrayList toArray()                                     0  0.289
CopyOnWriteArrayList toArray(a)                                    0  0.102
CopyOnWriteArrayList toArray(empty)                                0  0.058
CopyOnWriteArrayList stream().forEach                              0  0.110
CopyOnWriteArrayList stream().mapToInt                             0  0.240
CopyOnWriteArrayList stream().collect                              0  0.203
CopyOnWriteArrayList stream()::iterator                            0  0.140
CopyOnWriteArrayList parallelStream().forEach                      0  2.454
CopyOnWriteArrayList parallelStream().mapToInt                     0  3.369
CopyOnWriteArrayList parallelStream().collect                      0  1.883
CopyOnWriteArrayList parallelStream()::iterator                    0  1.870
CopyOnWriteArrayList removeIf                                      0  0.117
CopyOnWriteArrayList remove(Object)                                0  1.691
CopyOnWriteArrayList listIterator forward loop                     0  0.130
CopyOnWriteArrayList listIterator backward loop                    0  0.177
CopyOnWriteArrayList indexOf                                       0  0.214
CopyOnWriteArrayList lastIndexOf                                   0  0.082
CopyOnWriteArrayList equals                                        0  0.253
CopyOnWriteArrayList hashCode                                      0  0.130
CopyOnWriteArrayList replaceAll                                    0  0.242
COWSubList iterate for loop                                        0  4.147
COWSubList iterator().forEachRemaining()                           0  0.244
COWSubList spliterator().tryAdvance()                              0  0.246
COWSubList spliterator().forEachRemaining()                        0  0.069
COWSubList contains                                                0  0.149
COWSubList containsAll                                             0  0.201
COWSubList forEach                                                 0  0.160
COWSubList toArray()                                               0  0.156
COWSubList toArray(a)                                              0  0.136
COWSubList toArray(empty)                                          0  0.127
COWSubList stream().forEach                                        0  1.667
COWSubList stream().mapToInt                                       0  0.253
COWSubList stream().collect                                        0  0.199
COWSubList stream()::iterator                                      0  0.173
COWSubList parallelStream().forEach                                0  2.991
COWSubList parallelStream().mapToInt                               0  1.402
COWSubList parallelStream().collect                                0  1.566
COWSubList parallelStream()::iterator                              0  0.516
COWSubList removeIf                                                0  0.244
COWSubList remove(Object)                                          0  0.082
COWSubList listIterator forward loop                               0  0.151
COWSubList listIterator backward loop                              0  0.272
COWSubList indexOf                                                 0  0.054
COWSubList lastIndexOf                                             0  0.084
COWSubList equals                                                  0  0.251
COWSubList hashCode                                                0  0.140
COWSubList replaceAll                                              0  0.160
ArrayDeque iterate for loop                                        0  0.359
ArrayDeque iterator().forEachRemaining()                           0  0.488
ArrayDeque spliterator().tryAdvance()                              0  4.395
ArrayDeque spliterator().forEachRemaining()                        0  0.194
ArrayDeque contains                                                0  0.397
ArrayDeque containsAll                                             0  0.060
ArrayDeque forEach                                                 0  0.063
ArrayDeque toArray()                                               0  0.117
ArrayDeque toArray(a)                                              0  0.093
ArrayDeque toArray(empty)                                          0  0.084
ArrayDeque stream().forEach                                        0  0.114
ArrayDeque stream().mapToInt                                       0  0.276
ArrayDeque stream().collect                                        0  0.205
ArrayDeque stream()::iterator                                      0  0.138
ArrayDeque parallelStream().forEach                                0  1.445
ArrayDeque parallelStream().mapToInt                               0  6.855
ArrayDeque parallelStream().collect                                0  3.413
ArrayDeque parallelStream()::iterator                              0  0.166
ArrayDeque removeIf                                                0  0.078
ArrayDeque remove(Object)                                          0  0.050
ArrayDeque descendingIterator() loop                               0  3.946
ArrayDeque descendingIterator().forEachRemaining()                 0  0.283
PriorityQueue iterate for loop                                     0  0.114
PriorityQueue iterator().forEachRemaining()                        0  0.093
PriorityQueue spliterator().tryAdvance()                           0  3.765
PriorityQueue spliterator().forEachRemaining()                     0  0.108
PriorityQueue contains                                             0  0.168
PriorityQueue containsAll                                          0  0.060
PriorityQueue forEach                                              0  0.106
PriorityQueue toArray()                                            0  0.285
PriorityQueue toArray(a)                                           0  0.114
PriorityQueue toArray(empty)                                       0  0.071
PriorityQueue stream().forEach                                     0  0.162
PriorityQueue stream().mapToInt                                    0  0.238
PriorityQueue stream().collect                                     0  0.162
PriorityQueue stream()::iterator                                   0  0.099
PriorityQueue parallelStream().forEach                             0  1.451
PriorityQueue parallelStream().mapToInt                            0  8.391
PriorityQueue parallelStream().collect                             0  2.920
PriorityQueue parallelStream()::iterator                           0  0.330
PriorityQueue removeIf                                             0  0.246
PriorityQueue remove(Object)                                       0  0.060
ConcurrentLinkedQueue iterate for loop                             0  0.443
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.114
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  7.844
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.127
ConcurrentLinkedQueue contains                                     0  0.451
ConcurrentLinkedQueue containsAll                                  0  0.052
ConcurrentLinkedQueue forEach                                      0  0.041
ConcurrentLinkedQueue toArray()                                    0  0.080
ConcurrentLinkedQueue toArray(a)                                   0  0.076
ConcurrentLinkedQueue toArray(empty)                               0  0.041
ConcurrentLinkedQueue stream().forEach                             0  0.091
ConcurrentLinkedQueue stream().mapToInt                            0  2.050
ConcurrentLinkedQueue stream().collect                             0  0.341
ConcurrentLinkedQueue stream()::iterator                           0  0.181
ConcurrentLinkedQueue parallelStream().forEach                     0  2.235
ConcurrentLinkedQueue parallelStream().mapToInt                    0  4.788
ConcurrentLinkedQueue parallelStream().collect                     0  1.553
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.188
ConcurrentLinkedQueue removeIf                                     0  0.078
ConcurrentLinkedQueue remove(Object)                               0  0.052
ConcurrentLinkedDeque iterate for loop                             0  0.341
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.084
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  4.119
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.086
ConcurrentLinkedDeque contains                                     0  0.840
ConcurrentLinkedDeque containsAll                                  0  0.197
ConcurrentLinkedDeque forEach                                      0  0.274
ConcurrentLinkedDeque toArray()                                    0  0.095
ConcurrentLinkedDeque toArray(a)                                   0  0.095
ConcurrentLinkedDeque toArray(empty)                               0  0.048
ConcurrentLinkedDeque stream().forEach                             0  0.093
ConcurrentLinkedDeque stream().mapToInt                            0  5.503
ConcurrentLinkedDeque stream().collect                             0  0.307
ConcurrentLinkedDeque stream()::iterator                           0  0.166
ConcurrentLinkedDeque parallelStream().forEach                     0  1.773
ConcurrentLinkedDeque parallelStream().mapToInt                    0  1.222
ConcurrentLinkedDeque parallelStream().collect                     0  0.866
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.166
ConcurrentLinkedDeque removeIf                                     0  0.080
ConcurrentLinkedDeque remove(Object)                               0  0.067
ConcurrentLinkedDeque descendingIterator() loop                    0  3.125
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.130
ArrayBlockingQueue iterate for loop                                0  0.667
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.438
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.233
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.123
ArrayBlockingQueue contains                                        0  0.773
ArrayBlockingQueue containsAll                                     0  0.143
ArrayBlockingQueue forEach                                         0  0.071
ArrayBlockingQueue toArray()                                       0  0.095
ArrayBlockingQueue toArray(a)                                      0  0.084
ArrayBlockingQueue toArray(empty)                                  0  0.076
ArrayBlockingQueue stream().forEach                                0  0.177
ArrayBlockingQueue stream().mapToInt                               0  0.449
ArrayBlockingQueue stream().collect                                0  0.248
ArrayBlockingQueue stream()::iterator                              0  0.188
ArrayBlockingQueue parallelStream().forEach                        0  1.417
ArrayBlockingQueue parallelStream().mapToInt                       0  4.242
ArrayBlockingQueue parallelStream().collect                        0  5.816
ArrayBlockingQueue parallelStream()::iterator                      0  0.348
ArrayBlockingQueue removeIf                                        0  0.099
ArrayBlockingQueue remove(Object)                                  0  0.058
LinkedBlockingQueue iterate for loop                               0  0.477
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.575
LinkedBlockingQueue spliterator().tryAdvance()                     0  4.371
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.218
LinkedBlockingQueue contains                                       0  1.279
LinkedBlockingQueue containsAll                                    0  0.067
LinkedBlockingQueue forEach                                        0  0.106
LinkedBlockingQueue toArray()                                      0  0.054
LinkedBlockingQueue toArray(a)                                     0  0.063
LinkedBlockingQueue toArray(empty)                                 0  0.095
LinkedBlockingQueue stream().forEach                               0  0.160
LinkedBlockingQueue stream().mapToInt                              0  0.333
LinkedBlockingQueue stream().collect                               0  3.268
LinkedBlockingQueue stream()::iterator                             0  0.201
LinkedBlockingQueue parallelStream().forEach                       0  1.395
LinkedBlockingQueue parallelStream().mapToInt                      0  2.004
LinkedBlockingQueue parallelStream().collect                       0 11.587
LinkedBlockingQueue parallelStream()::iterator                     0  0.251
LinkedBlockingQueue removeIf                                       0  0.147
LinkedBlockingQueue remove(Object)                                 0  0.056
LinkedBlockingDeque iterate for loop                               0  0.955
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.374
LinkedBlockingDeque spliterator().tryAdvance()                     0  4.687
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.233
LinkedBlockingDeque contains                                       0  0.756
LinkedBlockingDeque containsAll                                    0  0.080
LinkedBlockingDeque forEach                                        0  0.104
LinkedBlockingDeque toArray()                                      0  0.063
LinkedBlockingDeque toArray(a)                                     0  0.067
LinkedBlockingDeque toArray(empty)                                 0  0.095
LinkedBlockingDeque stream().forEach                               0  0.166
LinkedBlockingDeque stream().mapToInt                              0  0.285
LinkedBlockingDeque stream().collect                               0  0.760
LinkedBlockingDeque stream()::iterator                             0  0.253
LinkedBlockingDeque parallelStream().forEach                       0  1.240
LinkedBlockingDeque parallelStream().mapToInt                      0  1.691
LinkedBlockingDeque parallelStream().collect                       0  3.030
LinkedBlockingDeque parallelStream()::iterator                     0  0.186
LinkedBlockingDeque removeIf                                       0  0.130
LinkedBlockingDeque remove(Object)                                 0  0.063
LinkedBlockingDeque descendingIterator() loop                      0  5.890
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.235
LinkedTransferQueue iterate for loop                               0  0.339
LinkedTransferQueue iterator().forEachRemaining()                  0  0.257
LinkedTransferQueue spliterator().tryAdvance()                     0  3.765
LinkedTransferQueue spliterator().forEachRemaining()               0  0.199
LinkedTransferQueue contains                                       0  0.566
LinkedTransferQueue containsAll                                    0  0.065
LinkedTransferQueue forEach                                        0  0.089
LinkedTransferQueue toArray()                                      0  0.093
LinkedTransferQueue toArray(a)                                     0  0.240
LinkedTransferQueue toArray(empty)                                 0  0.060
LinkedTransferQueue stream().forEach                               0  0.143
LinkedTransferQueue stream().mapToInt                              0  0.270
LinkedTransferQueue stream().collect                               0  0.231
LinkedTransferQueue stream()::iterator                             0  3.443
LinkedTransferQueue parallelStream().forEach                       0  1.594
LinkedTransferQueue parallelStream().mapToInt                      0  3.011
LinkedTransferQueue parallelStream().collect                       0  5.080
LinkedTransferQueue parallelStream()::iterator                     0  0.689
LinkedTransferQueue removeIf                                       0  0.156
LinkedTransferQueue remove(Object)                                 0  0.065
PriorityBlockingQueue iterate for loop                             0  3.665
PriorityBlockingQueue iterator().forEachRemaining()                0  0.212
PriorityBlockingQueue spliterator().tryAdvance()                   0  3.143
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.089
PriorityBlockingQueue contains                                     0  0.130
PriorityBlockingQueue containsAll                                  0  0.071
PriorityBlockingQueue forEach                                      0  0.121
PriorityBlockingQueue toArray()                                    0  0.030
PriorityBlockingQueue toArray(a)                                   0  0.132
PriorityBlockingQueue toArray(empty)                               0  0.080
PriorityBlockingQueue stream().forEach                             0  0.140
PriorityBlockingQueue stream().mapToInt                            0  0.883
PriorityBlockingQueue stream().collect                             0  0.650
PriorityBlockingQueue stream()::iterator                           0  0.108
PriorityBlockingQueue parallelStream().forEach                     0  1.393
PriorityBlockingQueue parallelStream().mapToInt                    0  3.127
PriorityBlockingQueue parallelStream().collect                     0  4.849
PriorityBlockingQueue parallelStream()::iterator                   0  0.177
PriorityBlockingQueue removeIf                                     0  0.261
PriorityBlockingQueue remove(Object)                               0  0.063
ListN iterate for loop                                             0  0.734
ListN iterator().forEachRemaining()                                0  0.080
ListN spliterator().tryAdvance()                                   0  0.197
ListN spliterator().forEachRemaining()                             0  0.080
ListN contains                                                     0  0.395
ListN containsAll                                                  0  0.073
ListN forEach                                                      0  0.082
ListN toArray()                                                    0  0.043
ListN toArray(a)                                                   0  0.078
ListN toArray(empty)                                               0  0.056
ListN stream().forEach                                             0  0.110
ListN stream().mapToInt                                            0  0.229
ListN stream().collect                                             0  0.186
ListN stream()::iterator                                           0  0.179
ListN parallelStream().forEach                                     0  0.860
ListN parallelStream().mapToInt                                    0  1.078
ListN parallelStream().collect                                     0  0.976
ListN parallelStream()::iterator                                   0  0.173
ListN listIterator forward loop                                    0  0.341
ListN listIterator backward loop                                   0  0.099
ListN indexOf                                                      0  0.056
ListN lastIndexOf                                                  0  0.043
ListN equals                                                       0  0.177
ListN hashCode                                                     0  2.376
ImmutableCollections$SubList iterate for loop                      0  7.896
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.166
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.190
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.099
ImmutableCollections$SubList contains                              0  0.276
ImmutableCollections$SubList containsAll                           0  0.097
ImmutableCollections$SubList forEach                               0  0.104
ImmutableCollections$SubList toArray()                             0  0.114
ImmutableCollections$SubList toArray(a)                            0  0.080
ImmutableCollections$SubList toArray(empty)                        0  0.285
ImmutableCollections$SubList stream().forEach                      0  0.145
ImmutableCollections$SubList stream().mapToInt                     0  0.261
ImmutableCollections$SubList stream().collect                      0  0.302
ImmutableCollections$SubList stream()::iterator                    0  0.184
ImmutableCollections$SubList parallelStream().forEach              0  1.255
ImmutableCollections$SubList parallelStream().mapToInt             0  4.441
ImmutableCollections$SubList parallelStream().collect              0  3.758
ImmutableCollections$SubList parallelStream()::iterator            0  0.434
ImmutableCollections$SubList listIterator forward loop             0  0.587
ImmutableCollections$SubList listIterator backward loop            0  0.097
ImmutableCollections$SubList indexOf                               0  0.078
ImmutableCollections$SubList lastIndexOf                           0  0.060
ImmutableCollections$SubList equals                                0  0.214
ImmutableCollections$SubList hashCode                              0  0.298
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
