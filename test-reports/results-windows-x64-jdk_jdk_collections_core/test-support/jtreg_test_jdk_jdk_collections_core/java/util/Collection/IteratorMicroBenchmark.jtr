#Test Results (version 2)
#Sun Mar 17 18:15:09 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\r\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=547 0\:00\:00.547
end=Sun Mar 17 18\:15\:09 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1494-168.3ceprcbbckkebkz0gecq512nqb.bx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Sun Mar 17 18\:15\:09 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=547
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Collection

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc, mixed mode, sharing)

#section:build
----------messages:(7/241)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Sun Mar 17 18:15:09 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Sun Mar 17 18:15:09 UTC 2024
elapsed time (seconds): 0.157
result: Passed. Build successful

#section:compile
----------messages:(7/295)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Sun Mar 17 18:15:09 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sun Mar 17 18:15:09 UTC 2024
elapsed time (seconds): 0.157
----------configuration:(10/698)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d

----------rerun:(36/3628)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java'
----------direct:(7/584)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/298)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Sun Mar 17 18:15:09 UTC 2024
Mode: agentvm
Agent id: 4
finished: Sun Mar 17 18:15:09 UTC 2024
elapsed time (seconds): 0.39
----------configuration:(13/927)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection

----------rerun:(28/3078)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0 12.393
ArrayList spliterator().tryAdvance()                               0  7.209
ArrayList spliterator().forEachRemaining()                         0  5.358
ArrayList contains                                                 0 10.685
ArrayList containsAll                                              0  0.928
ArrayList forEach                                                  0  5.685
ArrayList toArray()                                                0  0.338
ArrayList toArray(a)                                               0  0.266
ArrayList toArray(empty)                                           0  0.229
ArrayList stream().forEach                                         0  5.920
ArrayList stream().mapToInt                                        1 32.160
ArrayList stream().collect                                         0 24.768
ArrayList stream()::iterator                                       0  8.100
ArrayList parallelStream().forEach                                 2 60.381
ArrayList parallelStream().mapToInt                                0 18.845
ArrayList parallelStream().collect                                 0 12.596
ArrayList parallelStream()::iterator                               0  6.077
ArrayList removeIf                                                 0  9.754
ArrayList remove(Object)                                           0  0.986
ArrayList listIterator forward loop                                0  1.032
ArrayList listIterator backward loop                               0  0.384
ArrayList indexOf                                                  0  0.613
ArrayList lastIndexOf                                              0  0.272
ArrayList equals                                                   0  0.507
ArrayList hashCode                                                 0  0.645
ArrayList replaceAll                                               0  6.166
ArrayList$SubList iterate for loop                                 0  5.476
ArrayList$SubList iterator().forEachRemaining()                    0  0.292
ArrayList$SubList spliterator().tryAdvance()                       0  3.991
ArrayList$SubList spliterator().forEachRemaining()                 0  0.138
ArrayList$SubList contains                                         0  0.172
ArrayList$SubList containsAll                                      0  0.160
ArrayList$SubList forEach                                          0  0.943
ArrayList$SubList toArray()                                        0  0.384
ArrayList$SubList toArray(a)                                       0  0.129
ArrayList$SubList toArray(empty)                                   0  0.181
ArrayList$SubList stream().forEach                                 0  0.160
ArrayList$SubList stream().mapToInt                                0  0.355
ArrayList$SubList stream().collect                                 0  0.307
ArrayList$SubList stream()::iterator                               0  0.309
ArrayList$SubList parallelStream().forEach                         0  2.115
ArrayList$SubList parallelStream().mapToInt                        0  1.862
ArrayList$SubList parallelStream().collect                         0  1.745
ArrayList$SubList parallelStream()::iterator                       0  0.201
ArrayList$SubList removeIf                                         0  0.212
ArrayList$SubList remove(Object)                                   0  0.155
ArrayList$SubList listIterator forward loop                        0  0.095
ArrayList$SubList listIterator backward loop                       0  0.123
ArrayList$SubList indexOf                                          0  0.060
ArrayList$SubList lastIndexOf                                      0  0.097
ArrayList$SubList equals                                           0  0.370
ArrayList$SubList hashCode                                         0  0.135
ArrayList$SubList replaceAll                                       0  0.605
Vector iterate for loop                                            0  3.003
Vector iterator().forEachRemaining()                               0  0.587
Vector spliterator().tryAdvance()                                  0  4.490
Vector spliterator().forEachRemaining()                            0  0.123
Vector contains                                                    0  1.487
Vector containsAll                                                 0  0.238
Vector forEach                                                     0  0.103
Vector toArray()                                                   0  0.269
Vector toArray(a)                                                  0  0.135
Vector toArray(empty)                                              0  0.083
Vector stream().forEach                                            0  0.160
Vector stream().mapToInt                                           0  0.350
Vector stream().collect                                            0  0.278
Vector stream()::iterator                                          0  0.192
Vector parallelStream().forEach                                    0  1.673
Vector parallelStream().mapToInt                                   0  1.857
Vector parallelStream().collect                                    0  1.840
Vector parallelStream()::iterator                                  0  0.203
Vector removeIf                                                    0  0.106
Vector remove(Object)                                              0  2.120
Vector listIterator forward loop                                   0  0.238
Vector listIterator backward loop                                  0  0.183
Vector indexOf                                                     0  0.095
Vector lastIndexOf                                                 0  0.189
Vector equals                                                      0  1.069
Vector hashCode                                                    0  0.375
Vector replaceAll                                                  0  0.226
SynchronizedRandomAccessList iterate for loop                      0 14.315
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.352
SynchronizedRandomAccessList spliterator().tryAdvance()            0  6.731
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.258
SynchronizedRandomAccessList contains                              0  0.808
SynchronizedRandomAccessList containsAll                           0  0.255
SynchronizedRandomAccessList forEach                               0  0.152
SynchronizedRandomAccessList toArray()                             0  0.215
SynchronizedRandomAccessList toArray(a)                            0  0.149
SynchronizedRandomAccessList toArray(empty)                        0 21.330
SynchronizedRandomAccessList stream().forEach                      0  2.149
SynchronizedRandomAccessList stream().mapToInt                     0  3.711
SynchronizedRandomAccessList stream().collect                      0  0.542
SynchronizedRandomAccessList stream()::iterator                    0  0.421
SynchronizedRandomAccessList parallelStream().forEach              0  2.891
SynchronizedRandomAccessList parallelStream().mapToInt             0  2.567
SynchronizedRandomAccessList parallelStream().collect              0  4.877
SynchronizedRandomAccessList parallelStream()::iterator            0  0.309
SynchronizedRandomAccessList removeIf                              0  0.971
SynchronizedRandomAccessList remove(Object)                        0  0.241
SynchronizedRandomAccessList listIterator forward loop             0  0.209
SynchronizedRandomAccessList listIterator backward loop            0  0.590
SynchronizedRandomAccessList indexOf                               0  0.324
SynchronizedRandomAccessList lastIndexOf                           0  0.315
SynchronizedRandomAccessList equals                                0 11.046
SynchronizedRandomAccessList hashCode                              0  0.484
SynchronizedRandomAccessList replaceAll                            0  0.748
LinkedList iterate for loop                                        0  1.367
LinkedList iterator().forEachRemaining()                           0  0.269
LinkedList spliterator().tryAdvance()                              0  5.252
LinkedList spliterator().forEachRemaining()                        0  0.135
LinkedList contains                                                0  1.146
LinkedList containsAll                                             0  0.103
LinkedList forEach                                                 0  0.146
LinkedList toArray()                                               0  0.109
LinkedList toArray(a)                                              0  0.163
LinkedList toArray(empty)                                          0  0.115
LinkedList stream().forEach                                        0  0.175
LinkedList stream().mapToInt                                       0  0.352
LinkedList stream().collect                                        0  0.284
LinkedList stream()::iterator                                      0  0.206
LinkedList parallelStream().forEach                                0  2.095
LinkedList parallelStream().mapToInt                               0 23.169
LinkedList parallelStream().collect                                0  3.464
LinkedList parallelStream()::iterator                              0  0.252
LinkedList removeIf                                                0  0.140
LinkedList remove(Object)                                          0  0.126
LinkedList descendingIterator() loop                               0  4.679
LinkedList descendingIterator().forEachRemaining()                 0 10.115
LinkedList listIterator forward loop                               0  0.138
LinkedList listIterator backward loop                              0  0.106
LinkedList indexOf                                                 0  0.095
LinkedList lastIndexOf                                             0  0.095
LinkedList equals                                                  0  0.779
LinkedList hashCode                                                0  0.201
LinkedList replaceAll                                              0  0.223
AbstractList$SubList iterate for loop                              0  0.252
AbstractList$SubList iterator().forEachRemaining()                 0  0.192
AbstractList$SubList spliterator().tryAdvance()                    0  0.404
AbstractList$SubList spliterator().forEachRemaining()              0  0.327
AbstractList$SubList contains                                      0  4.493
AbstractList$SubList containsAll                                   0  2.206
AbstractList$SubList forEach                                       0  0.169
AbstractList$SubList toArray()                                     0  1.991
AbstractList$SubList toArray(a)                                    0  1.470
AbstractList$SubList toArray(empty)                                0  0.662
AbstractList$SubList stream().forEach                              0  0.424
AbstractList$SubList stream().mapToInt                             0  0.670
AbstractList$SubList stream().collect                              0  0.332
AbstractList$SubList stream()::iterator                            0  0.413
AbstractList$SubList parallelStream().forEach                      0  2.212
AbstractList$SubList parallelStream().mapToInt                     0  2.238
AbstractList$SubList parallelStream().collect                      0  9.456
AbstractList$SubList parallelStream()::iterator                    0  0.367
AbstractList$SubList removeIf                                      0  0.135
AbstractList$SubList remove(Object)                                0  0.120
AbstractList$SubList listIterator forward loop                     0  0.086
AbstractList$SubList listIterator backward loop                    0  0.241
AbstractList$SubList indexOf                                       0  0.117
AbstractList$SubList lastIndexOf                                   0  0.192
AbstractList$SubList equals                                        0  0.920
AbstractList$SubList hashCode                                      0  0.344
AbstractList$SubList replaceAll                                    0  0.186
CopyOnWriteArrayList iterate for loop                              0  0.567
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.602
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.163
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.080
CopyOnWriteArrayList contains                                      0  1.599
CopyOnWriteArrayList containsAll                                   0  4.032
CopyOnWriteArrayList forEach                                       0  0.140
CopyOnWriteArrayList toArray()                                     0  0.295
CopyOnWriteArrayList toArray(a)                                    0  0.132
CopyOnWriteArrayList toArray(empty)                                0  0.080
CopyOnWriteArrayList stream().forEach                              0  0.155
CopyOnWriteArrayList stream().mapToInt                             0  0.312
CopyOnWriteArrayList stream().collect                              0  0.244
CopyOnWriteArrayList stream()::iterator                            0  0.169
CopyOnWriteArrayList parallelStream().forEach                      0  6.642
CopyOnWriteArrayList parallelStream().mapToInt                     0  6.115
CopyOnWriteArrayList parallelStream().collect                      0  1.865
CopyOnWriteArrayList parallelStream()::iterator                    0  2.421
CopyOnWriteArrayList removeIf                                      0  0.143
CopyOnWriteArrayList remove(Object)                                0  1.619
CopyOnWriteArrayList listIterator forward loop                     0  0.115
CopyOnWriteArrayList listIterator backward loop                    0  0.229
CopyOnWriteArrayList indexOf                                       0  0.272
CopyOnWriteArrayList lastIndexOf                                   0  0.103
CopyOnWriteArrayList equals                                        0  0.289
CopyOnWriteArrayList hashCode                                      0  0.169
CopyOnWriteArrayList replaceAll                                    0  0.275
COWSubList iterate for loop                                        0  5.086
COWSubList iterator().forEachRemaining()                           0  0.278
COWSubList spliterator().tryAdvance()                              0  0.284
COWSubList spliterator().forEachRemaining()                        0  0.089
COWSubList contains                                                0  0.198
COWSubList containsAll                                             0  0.235
COWSubList forEach                                                 0  0.189
COWSubList toArray()                                               0  0.160
COWSubList toArray(a)                                              0  0.175
COWSubList toArray(empty)                                          0  0.175
COWSubList stream().forEach                                        0  2.143
COWSubList stream().mapToInt                                       0  0.352
COWSubList stream().collect                                        0  0.375
COWSubList stream()::iterator                                      0  0.765
COWSubList parallelStream().forEach                                0  3.332
COWSubList parallelStream().mapToInt                               0  1.662
COWSubList parallelStream().collect                                0  3.149
COWSubList parallelStream()::iterator                              0  0.206
COWSubList removeIf                                                0  0.312
COWSubList remove(Object)                                          0  0.103
COWSubList listIterator forward loop                               0  0.198
COWSubList listIterator backward loop                              0  0.347
COWSubList indexOf                                                 0  0.083
COWSubList lastIndexOf                                             0  0.109
COWSubList equals                                                  0  0.315
COWSubList hashCode                                                0  0.158
COWSubList replaceAll                                              0  0.206
ArrayDeque iterate for loop                                        0  0.602
ArrayDeque iterator().forEachRemaining()                           0  0.610
ArrayDeque spliterator().tryAdvance()                              0  5.751
ArrayDeque spliterator().forEachRemaining()                        0  0.269
ArrayDeque contains                                                0  0.550
ArrayDeque containsAll                                             0  0.086
ArrayDeque forEach                                                 0  0.100
ArrayDeque toArray()                                               0  0.189
ArrayDeque toArray(a)                                              0  0.129
ArrayDeque toArray(empty)                                          0  0.115
ArrayDeque stream().forEach                                        0  0.169
ArrayDeque stream().mapToInt                                       0  0.424
ArrayDeque stream().collect                                        0  0.315
ArrayDeque stream()::iterator                                      0  0.209
ArrayDeque parallelStream().forEach                                0  2.223
ArrayDeque parallelStream().mapToInt                               0  4.264
ArrayDeque parallelStream().collect                                0  8.963
ArrayDeque parallelStream()::iterator                              0  0.218
ArrayDeque removeIf                                                0  0.103
ArrayDeque remove(Object)                                          0  0.074
ArrayDeque descendingIterator() loop                               0  4.183
ArrayDeque descendingIterator().forEachRemaining()                 0  0.335
PriorityQueue iterate for loop                                     0  0.140
PriorityQueue iterator().forEachRemaining()                        0  0.115
PriorityQueue spliterator().tryAdvance()                           0  4.650
PriorityQueue spliterator().forEachRemaining()                     0  0.129
PriorityQueue contains                                             0  0.198
PriorityQueue containsAll                                          0  0.095
PriorityQueue forEach                                              0  0.198
PriorityQueue toArray()                                            0  0.499
PriorityQueue toArray(a)                                           0  0.163
PriorityQueue toArray(empty)                                       0  0.106
PriorityQueue stream().forEach                                     0  0.149
PriorityQueue stream().mapToInt                                    0  0.415
PriorityQueue stream().collect                                     0  0.381
PriorityQueue stream()::iterator                                   0  0.169
PriorityQueue parallelStream().forEach                             0  1.524
PriorityQueue parallelStream().mapToInt                            0  5.278
PriorityQueue parallelStream().collect                             0  1.885
PriorityQueue parallelStream()::iterator                           0  0.186
PriorityQueue removeIf                                             0  0.298
PriorityQueue remove(Object)                                       0  0.072
ConcurrentLinkedQueue iterate for loop                             0  0.407
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.117
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  5.011
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.877
ConcurrentLinkedQueue contains                                     0  0.630
ConcurrentLinkedQueue containsAll                                  0  0.077
ConcurrentLinkedQueue forEach                                      0  0.077
ConcurrentLinkedQueue toArray()                                    0  0.126
ConcurrentLinkedQueue toArray(a)                                   0  0.135
ConcurrentLinkedQueue toArray(empty)                               0  0.074
ConcurrentLinkedQueue stream().forEach                             0  0.146
ConcurrentLinkedQueue stream().mapToInt                            0  2.702
ConcurrentLinkedQueue stream().collect                             0  0.335
ConcurrentLinkedQueue stream()::iterator                           0  0.209
ConcurrentLinkedQueue parallelStream().forEach                     0  2.358
ConcurrentLinkedQueue parallelStream().mapToInt                    0  7.989
ConcurrentLinkedQueue parallelStream().collect                     0  1.857
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.244
ConcurrentLinkedQueue removeIf                                     0  0.109
ConcurrentLinkedQueue remove(Object)                               0  0.072
ConcurrentLinkedDeque iterate for loop                             0  0.424
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.120
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  5.063
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.140
ConcurrentLinkedDeque contains                                     0  0.951
ConcurrentLinkedDeque containsAll                                  0  0.095
ConcurrentLinkedDeque forEach                                      0  0.332
ConcurrentLinkedDeque toArray()                                    0  0.129
ConcurrentLinkedDeque toArray(a)                                   0  0.135
ConcurrentLinkedDeque toArray(empty)                               0  0.069
ConcurrentLinkedDeque stream().forEach                             0  0.163
ConcurrentLinkedDeque stream().mapToInt                            0  4.539
ConcurrentLinkedDeque stream().collect                             0  0.318
ConcurrentLinkedDeque stream()::iterator                           0  0.201
ConcurrentLinkedDeque parallelStream().forEach                     0  3.940
ConcurrentLinkedDeque parallelStream().mapToInt                    0  2.057
ConcurrentLinkedDeque parallelStream().collect                     0  1.533
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.223
ConcurrentLinkedDeque removeIf                                     0  0.120
ConcurrentLinkedDeque remove(Object)                               0  0.089
ConcurrentLinkedDeque descendingIterator() loop                    0  4.123
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.192
ArrayBlockingQueue iterate for loop                                0  0.845
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.625
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.413
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.183
ArrayBlockingQueue contains                                        0  1.072
ArrayBlockingQueue containsAll                                     0  0.092
ArrayBlockingQueue forEach                                         0  0.103
ArrayBlockingQueue toArray()                                       0  0.109
ArrayBlockingQueue toArray(a)                                      0  0.115
ArrayBlockingQueue toArray(empty)                                  0  0.115
ArrayBlockingQueue stream().forEach                                0  0.255
ArrayBlockingQueue stream().mapToInt                               0  0.370
ArrayBlockingQueue stream().collect                                0  0.338
ArrayBlockingQueue stream()::iterator                              0  0.246
ArrayBlockingQueue parallelStream().forEach                        0  2.175
ArrayBlockingQueue parallelStream().mapToInt                       0  2.564
ArrayBlockingQueue parallelStream().collect                        0  2.527
ArrayBlockingQueue parallelStream()::iterator                      0  1.467
ArrayBlockingQueue removeIf                                        0  0.192
ArrayBlockingQueue remove(Object)                                  0  0.080
LinkedBlockingQueue iterate for loop                               0  0.479
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.854
LinkedBlockingQueue spliterator().tryAdvance()                     0  6.089
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.298
LinkedBlockingQueue contains                                       0  1.510
LinkedBlockingQueue containsAll                                    0  0.117
LinkedBlockingQueue forEach                                        0  0.160
LinkedBlockingQueue toArray()                                      0  0.083
LinkedBlockingQueue toArray(a)                                     0  0.092
LinkedBlockingQueue toArray(empty)                                 0  0.123
LinkedBlockingQueue stream().forEach                               0  0.238
LinkedBlockingQueue stream().mapToInt                              0  0.390
LinkedBlockingQueue stream().collect                               0  6.613
LinkedBlockingQueue stream()::iterator                             0  0.292
LinkedBlockingQueue parallelStream().forEach                       0  2.842
LinkedBlockingQueue parallelStream().mapToInt                      0  1.656
LinkedBlockingQueue parallelStream().collect                       0  3.946
LinkedBlockingQueue parallelStream()::iterator                     0  0.269
LinkedBlockingQueue removeIf                                       0  0.178
LinkedBlockingQueue remove(Object)                                 0  0.074
LinkedBlockingDeque iterate for loop                               0  1.218
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.493
LinkedBlockingDeque spliterator().tryAdvance()                     0  6.043
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.327
LinkedBlockingDeque contains                                       0  0.986
LinkedBlockingDeque containsAll                                    0  0.103
LinkedBlockingDeque forEach                                        0  0.155
LinkedBlockingDeque toArray()                                      0  0.083
LinkedBlockingDeque toArray(a)                                     0  0.089
LinkedBlockingDeque toArray(empty)                                 0  0.117
LinkedBlockingDeque stream().forEach                               0  0.229
LinkedBlockingDeque stream().mapToInt                              0  0.364
LinkedBlockingDeque stream().collect                               0  1.000
LinkedBlockingDeque stream()::iterator                             0  0.252
LinkedBlockingDeque parallelStream().forEach                       0  2.860
LinkedBlockingDeque parallelStream().mapToInt                      0  2.252
LinkedBlockingDeque parallelStream().collect                       0  2.519
LinkedBlockingDeque parallelStream()::iterator                     0  0.258
LinkedBlockingDeque removeIf                                       0  0.181
LinkedBlockingDeque remove(Object)                                 0  0.083
LinkedBlockingDeque descendingIterator() loop                      0  4.011
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.266
LinkedTransferQueue iterate for loop                               0  0.622
LinkedTransferQueue iterator().forEachRemaining()                  0  0.312
LinkedTransferQueue spliterator().tryAdvance()                     0  4.450
LinkedTransferQueue spliterator().forEachRemaining()               0  0.232
LinkedTransferQueue contains                                       0  0.696
LinkedTransferQueue containsAll                                    0  0.083
LinkedTransferQueue forEach                                        0  0.115
LinkedTransferQueue toArray()                                      0  0.129
LinkedTransferQueue toArray(a)                                     0  0.266
LinkedTransferQueue toArray(empty)                                 0  0.072
LinkedTransferQueue stream().forEach                               0  0.175
LinkedTransferQueue stream().mapToInt                              0  0.347
LinkedTransferQueue stream().collect                               0  0.719
LinkedTransferQueue stream()::iterator                             0  4.966
LinkedTransferQueue parallelStream().forEach                       0  1.742
LinkedTransferQueue parallelStream().mapToInt                      0  3.754
LinkedTransferQueue parallelStream().collect                       0  5.246
LinkedTransferQueue parallelStream()::iterator                     0  0.774
LinkedTransferQueue removeIf                                       0  0.178
LinkedTransferQueue remove(Object)                                 0  0.095
PriorityBlockingQueue iterate for loop                             0  4.868
PriorityBlockingQueue iterator().forEachRemaining()                0  0.284
PriorityBlockingQueue spliterator().tryAdvance()                   0  4.582
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.123
PriorityBlockingQueue contains                                     0  0.183
PriorityBlockingQueue containsAll                                  0  0.097
PriorityBlockingQueue forEach                                      0  0.160
PriorityBlockingQueue toArray()                                    0  0.040
PriorityBlockingQueue toArray(a)                                   0  0.160
PriorityBlockingQueue toArray(empty)                               0  0.103
PriorityBlockingQueue stream().forEach                             0  0.129
PriorityBlockingQueue stream().mapToInt                            0  1.149
PriorityBlockingQueue stream().collect                             0  0.960
PriorityBlockingQueue stream()::iterator                           0  0.175
PriorityBlockingQueue parallelStream().forEach                     0  1.897
PriorityBlockingQueue parallelStream().mapToInt                    0  7.438
PriorityBlockingQueue parallelStream().collect                     0  5.874
PriorityBlockingQueue parallelStream()::iterator                   0  0.221
PriorityBlockingQueue removeIf                                     0  0.361
PriorityBlockingQueue remove(Object)                               0  0.077
ListN iterate for loop                                             0  1.166
ListN iterator().forEachRemaining()                                0  0.115
ListN spliterator().tryAdvance()                                   0  0.212
ListN spliterator().forEachRemaining()                             0  0.103
ListN contains                                                     0  0.464
ListN containsAll                                                  0  0.095
ListN forEach                                                      0  0.109
ListN toArray()                                                    0  0.052
ListN toArray(a)                                                   0  0.100
ListN toArray(empty)                                               0  0.072
ListN stream().forEach                                             0  0.143
ListN stream().mapToInt                                            0  0.289
ListN stream().collect                                             0  0.252
ListN stream()::iterator                                           0  0.235
ListN parallelStream().forEach                                     0  1.175
ListN parallelStream().mapToInt                                    0  1.470
ListN parallelStream().collect                                     0  1.464
ListN parallelStream()::iterator                                   0  0.226
ListN listIterator forward loop                                    0  0.281
ListN listIterator backward loop                                   0  0.126
ListN indexOf                                                      0  0.063
ListN lastIndexOf                                                  0  0.054
ListN equals                                                       0  0.215
ListN hashCode                                                     0  0.544
ImmutableCollections$SubList iterate for loop                      0  2.825
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.183
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.238
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.138
ImmutableCollections$SubList contains                              0  0.307
ImmutableCollections$SubList containsAll                           0  0.129
ImmutableCollections$SubList forEach                               0  0.129
ImmutableCollections$SubList toArray()                             0  0.158
ImmutableCollections$SubList toArray(a)                            0  0.103
ImmutableCollections$SubList toArray(empty)                        0  0.338
ImmutableCollections$SubList stream().forEach                      0  0.183
ImmutableCollections$SubList stream().mapToInt                     0  0.344
ImmutableCollections$SubList stream().collect                      0  0.315
ImmutableCollections$SubList stream()::iterator                    0  0.232
ImmutableCollections$SubList parallelStream().forEach              0  1.576
ImmutableCollections$SubList parallelStream().mapToInt             0  6.785
ImmutableCollections$SubList parallelStream().collect              0  4.791
ImmutableCollections$SubList parallelStream()::iterator            0  0.301
ImmutableCollections$SubList listIterator forward loop             0  3.943
ImmutableCollections$SubList listIterator backward loop            0  6.828
ImmutableCollections$SubList indexOf                               0  0.149
ImmutableCollections$SubList lastIndexOf                           0  0.123
ImmutableCollections$SubList equals                                0  0.332
ImmutableCollections$SubList hashCode                              0  0.160
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
