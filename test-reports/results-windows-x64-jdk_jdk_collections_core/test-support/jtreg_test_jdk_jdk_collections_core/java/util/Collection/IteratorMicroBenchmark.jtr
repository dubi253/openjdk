#Test Results (version 2)
#Sat Apr 13 18:38:37 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=
run=USER_SPECIFIED main IteratorMicroBenchmark iterations\=1 size\=8 warmup\=0\r\n
source=IteratorMicroBenchmark.java
title=micro-benchmark correctness mode

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Collection/IteratorMicroBenchmark.java
elapsed=531 0\:00\:00.531
end=Sat Apr 13 18\:38\:37 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az838-43.4awh05pbq4rutbt0cbm2mk11xb.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile main
start=Sat Apr 13 18\:38\:36 UTC 2024
test=java/util/Collection/IteratorMicroBenchmark.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=531
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Collection

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f, mixed mode, sharing)

#section:build
----------messages:(7/241)----------
command: build IteratorMicroBenchmark
reason: Named class compiled on demand
started: Sat Apr 13 18:38:36 UTC 2024
Test directory:
  compile: IteratorMicroBenchmark
finished: Sat Apr 13 18:38:36 UTC 2024
elapsed time (seconds): 0.156
result: Passed. Build successful

#section:compile
----------messages:(7/295)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:38:36 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Apr 13 18:38:36 UTC 2024
elapsed time (seconds): 0.156
----------configuration:(10/698)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d

----------rerun:(36/3628)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java'
----------direct:(7/584)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:118: warning: [removal] finalize() in Object has been deprecated and marked for removal
                protected void finalize() { finalized.countDown(); }},
                               ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java:126: warning: [removal] runFinalization() in System has been deprecated and marked for removal
                    System.runFinalization(); // try to pick up stragglers
                          ^
2 warnings
result: Passed. Compilation successful

#section:main
----------messages:(7/299)----------
command: main IteratorMicroBenchmark iterations=1 size=8 warmup=0
reason: User specified action: run main IteratorMicroBenchmark iterations=1 size=8 warmup=0 
started: Sat Apr 13 18:38:36 UTC 2024
Mode: agentvm
Agent id: 4
finished: Sat Apr 13 18:38:37 UTC 2024
elapsed time (seconds): 0.375
----------configuration:(13/927)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection

----------rerun:(28/3078)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Collection/IteratorMicroBenchmark.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection\\IteratorMicroBenchmark.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Collection\\IteratorMicroBenchmark.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Collection;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        IteratorMicroBenchmark iterations=1 size=8 warmup=0
----------System.out:(453/34881)----------
Method                                                        Millis  Ratio
ArrayList iterate for loop                                         0  1.000
ArrayList iterator().forEachRemaining()                            0  7.214
ArrayList spliterator().tryAdvance()                               0  6.070
ArrayList spliterator().forEachRemaining()                         0  3.693
ArrayList contains                                                 0  6.532
ArrayList containsAll                                              0  0.639
ArrayList forEach                                                  0  3.283
ArrayList toArray()                                                0  0.128
ArrayList toArray(a)                                               0  0.140
ArrayList toArray(empty)                                           0  0.107
ArrayList stream().forEach                                         0  3.404
ArrayList stream().mapToInt                                        1 24.559
ArrayList stream().collect                                         4 78.008
ArrayList stream()::iterator                                       0 17.320
ArrayList parallelStream().forEach                                 3 64.726
ArrayList parallelStream().mapToInt                                0 14.895
ArrayList parallelStream().collect                                 0  8.781
ArrayList parallelStream()::iterator                               0  4.736
ArrayList removeIf                                                 0  4.025
ArrayList remove(Object)                                           0  0.720
ArrayList listIterator forward loop                                0  0.579
ArrayList listIterator backward loop                               0  0.303
ArrayList indexOf                                                  0  0.503
ArrayList lastIndexOf                                              0  0.210
ArrayList equals                                                   0  0.388
ArrayList hashCode                                                 0  0.530
ArrayList replaceAll                                               0  4.338
ArrayList$SubList iterate for loop                                 0  4.249
ArrayList$SubList iterator().forEachRemaining()                    0  0.239
ArrayList$SubList spliterator().tryAdvance()                       0  2.748
ArrayList$SubList spliterator().forEachRemaining()                 0  0.111
ArrayList$SubList contains                                         0  0.124
ArrayList$SubList containsAll                                      0  0.140
ArrayList$SubList forEach                                          0  0.718
ArrayList$SubList toArray()                                        0  0.173
ArrayList$SubList toArray(a)                                       0  0.099
ArrayList$SubList toArray(empty)                                   0  0.146
ArrayList$SubList stream().forEach                                 0  0.140
ArrayList$SubList stream().mapToInt                                0  0.340
ArrayList$SubList stream().collect                                 0  0.245
ArrayList$SubList stream()::iterator                               0  0.151
ArrayList$SubList parallelStream().forEach                         0  1.825
ArrayList$SubList parallelStream().mapToInt                        0  0.990
ArrayList$SubList parallelStream().collect                         0  1.117
ArrayList$SubList parallelStream()::iterator                       0  0.136
ArrayList$SubList removeIf                                         0  0.159
ArrayList$SubList remove(Object)                                   0  0.493
ArrayList$SubList listIterator forward loop                        0  0.089
ArrayList$SubList listIterator backward loop                       0  0.118
ArrayList$SubList indexOf                                          0  0.058
ArrayList$SubList lastIndexOf                                      0  0.105
ArrayList$SubList equals                                           0  0.324
ArrayList$SubList hashCode                                         0  0.109
ArrayList$SubList replaceAll                                       0  0.118
Vector iterate for loop                                            0  0.557
Vector iterator().forEachRemaining()                               0  0.437
Vector spliterator().tryAdvance()                                  0  3.375
Vector spliterator().forEachRemaining()                            0  0.099
Vector contains                                                    0  0.567
Vector containsAll                                                 0  0.128
Vector forEach                                                     0  0.076
Vector toArray()                                                   0  0.181
Vector toArray(a)                                                  0  0.083
Vector toArray(empty)                                              0  0.054
Vector stream().forEach                                            0  0.118
Vector stream().mapToInt                                           0  0.256
Vector stream().collect                                            0  0.202
Vector stream()::iterator                                          0  0.138
Vector parallelStream().forEach                                    0  1.528
Vector parallelStream().mapToInt                                   0  0.953
Vector parallelStream().collect                                    0  0.928
Vector parallelStream()::iterator                                  0  0.138
Vector removeIf                                                    0  0.068
Vector remove(Object)                                              0  1.225
Vector listIterator forward loop                                   0  0.159
Vector listIterator backward loop                                  0  0.130
Vector indexOf                                                     0  0.049
Vector lastIndexOf                                                 0  0.128
Vector equals                                                      0  0.565
Vector hashCode                                                    0  0.264
Vector replaceAll                                                  0  0.151
SynchronizedRandomAccessList iterate for loop                      0  0.903
SynchronizedRandomAccessList iterator().forEachRemaining()         0  0.146
SynchronizedRandomAccessList spliterator().tryAdvance()            0  4.633
SynchronizedRandomAccessList spliterator().forEachRemaining()      0  0.181
SynchronizedRandomAccessList contains                              0  0.627
SynchronizedRandomAccessList containsAll                           0  0.214
SynchronizedRandomAccessList forEach                               0  0.130
SynchronizedRandomAccessList toArray()                             0  0.575
SynchronizedRandomAccessList toArray(a)                            0  0.157
SynchronizedRandomAccessList toArray(empty)                        0  0.427
SynchronizedRandomAccessList stream().forEach                      0  0.194
SynchronizedRandomAccessList stream().mapToInt                     0  0.320
SynchronizedRandomAccessList stream().collect                      0  0.264
SynchronizedRandomAccessList stream()::iterator                    0  0.221
SynchronizedRandomAccessList parallelStream().forEach              0  1.701
SynchronizedRandomAccessList parallelStream().mapToInt             0  1.540
SynchronizedRandomAccessList parallelStream().collect              0  1.577
SynchronizedRandomAccessList parallelStream()::iterator            0  0.200
SynchronizedRandomAccessList removeIf                              0  0.487
SynchronizedRandomAccessList remove(Object)                        0  0.192
SynchronizedRandomAccessList listIterator forward loop             0  0.287
SynchronizedRandomAccessList listIterator backward loop            0  0.282
SynchronizedRandomAccessList indexOf                               0  0.200
SynchronizedRandomAccessList lastIndexOf                           0  0.192
SynchronizedRandomAccessList equals                                0  0.268
SynchronizedRandomAccessList hashCode                              0  0.186
SynchronizedRandomAccessList replaceAll                            0  0.425
LinkedList iterate for loop                                        0  0.767
LinkedList iterator().forEachRemaining()                           0  0.163
LinkedList spliterator().tryAdvance()                              0  3.544
LinkedList spliterator().forEachRemaining()                        0  0.089
LinkedList contains                                                0  0.874
LinkedList containsAll                                             0  0.070
LinkedList forEach                                                 0  0.099
LinkedList toArray()                                               0  0.078
LinkedList toArray(a)                                              0  0.050
LinkedList toArray(empty)                                          0  0.078
LinkedList stream().forEach                                        0  0.103
LinkedList stream().mapToInt                                       0  0.241
LinkedList stream().collect                                        0  0.188
LinkedList stream()::iterator                                      0  0.134
LinkedList parallelStream().forEach                                0  1.643
LinkedList parallelStream().mapToInt                               0  1.641
LinkedList parallelStream().collect                                0  1.377
LinkedList parallelStream()::iterator                              0  0.134
LinkedList removeIf                                                0  0.091
LinkedList remove(Object)                                          0  0.070
LinkedList descendingIterator() loop                               0  3.227
LinkedList descendingIterator().forEachRemaining()                 0  4.357
LinkedList listIterator forward loop                               0  0.796
LinkedList listIterator backward loop                              0  0.068
LinkedList indexOf                                                 0  0.064
LinkedList lastIndexOf                                             0  0.066
LinkedList equals                                                  0  0.237
LinkedList hashCode                                                0  0.107
LinkedList replaceAll                                              0  0.130
AbstractList$SubList iterate for loop                              0  0.148
AbstractList$SubList iterator().forEachRemaining()                 0  0.111
AbstractList$SubList spliterator().tryAdvance()                    0  0.254
AbstractList$SubList spliterator().forEachRemaining()              0  0.122
AbstractList$SubList contains                                      0  0.099
AbstractList$SubList containsAll                                   0  0.151
AbstractList$SubList forEach                                       0  0.095
AbstractList$SubList toArray()                                     0  0.124
AbstractList$SubList toArray(a)                                    0  0.903
AbstractList$SubList toArray(empty)                                0  0.295
AbstractList$SubList stream().forEach                              0  0.330
AbstractList$SubList stream().mapToInt                             0  0.303
AbstractList$SubList stream().collect                              0  0.285
AbstractList$SubList stream()::iterator                            0  0.177
AbstractList$SubList parallelStream().forEach                      0  1.608
AbstractList$SubList parallelStream().mapToInt                     0  2.128
AbstractList$SubList parallelStream().collect                      0  1.971
AbstractList$SubList parallelStream()::iterator                    0  0.200
AbstractList$SubList removeIf                                      0  0.078
AbstractList$SubList remove(Object)                                0  0.087
AbstractList$SubList listIterator forward loop                     0  0.052
AbstractList$SubList listIterator backward loop                    0  0.144
AbstractList$SubList indexOf                                       0  0.072
AbstractList$SubList lastIndexOf                                   0  0.124
AbstractList$SubList equals                                        0  0.219
AbstractList$SubList hashCode                                      0  0.126
AbstractList$SubList replaceAll                                    0  0.118
CopyOnWriteArrayList iterate for loop                              0  0.361
CopyOnWriteArrayList iterator().forEachRemaining()                 0  0.363
CopyOnWriteArrayList spliterator().tryAdvance()                    0  0.107
CopyOnWriteArrayList spliterator().forEachRemaining()              0  0.054
CopyOnWriteArrayList contains                                      0  1.169
CopyOnWriteArrayList containsAll                                   0  0.645
CopyOnWriteArrayList forEach                                       0  0.066
CopyOnWriteArrayList toArray()                                     0  0.159
CopyOnWriteArrayList toArray(a)                                    0  0.080
CopyOnWriteArrayList toArray(empty)                                0  0.049
CopyOnWriteArrayList stream().forEach                              0  0.095
CopyOnWriteArrayList stream().mapToInt                             0  0.208
CopyOnWriteArrayList stream().collect                              0  0.175
CopyOnWriteArrayList stream()::iterator                            0  0.111
CopyOnWriteArrayList parallelStream().forEach                      0  1.208
CopyOnWriteArrayList parallelStream().mapToInt                     0  1.317
CopyOnWriteArrayList parallelStream().collect                      0  1.138
CopyOnWriteArrayList parallelStream()::iterator                    0  0.136
CopyOnWriteArrayList removeIf                                      0  0.087
CopyOnWriteArrayList remove(Object)                                0  0.515
CopyOnWriteArrayList listIterator forward loop                     0  0.080
CopyOnWriteArrayList listIterator backward loop                    0  0.128
CopyOnWriteArrayList indexOf                                       0  0.109
CopyOnWriteArrayList lastIndexOf                                   0  0.062
CopyOnWriteArrayList equals                                        0  0.190
CopyOnWriteArrayList hashCode                                      0  0.118
CopyOnWriteArrayList replaceAll                                    0  0.177
COWSubList iterate for loop                                        0  3.637
COWSubList iterator().forEachRemaining()                           0  0.198
COWSubList spliterator().tryAdvance()                              0  0.229
COWSubList spliterator().forEachRemaining()                        0  0.062
COWSubList contains                                                0  0.128
COWSubList containsAll                                             0  0.157
COWSubList forEach                                                 0  0.122
COWSubList toArray()                                               0  0.105
COWSubList toArray(a)                                              0  0.111
COWSubList toArray(empty)                                          0  0.099
COWSubList stream().forEach                                        0  0.569
COWSubList stream().mapToInt                                       0  0.266
COWSubList stream().collect                                        0  0.190
COWSubList stream()::iterator                                      0  0.225
COWSubList parallelStream().forEach                                0  2.245
COWSubList parallelStream().mapToInt                               0  1.204
COWSubList parallelStream().collect                                0  1.208
COWSubList parallelStream()::iterator                              0  0.124
COWSubList removeIf                                                0  0.206
COWSubList remove(Object)                                          0  0.066
COWSubList listIterator forward loop                               0  0.132
COWSubList listIterator backward loop                              0  0.216
COWSubList indexOf                                                 0  0.039
COWSubList lastIndexOf                                             0  0.074
COWSubList equals                                                  0  0.221
COWSubList hashCode                                                0  0.117
COWSubList replaceAll                                              0  0.132
ArrayDeque iterate for loop                                        0  0.417
ArrayDeque iterator().forEachRemaining()                           0  0.402
ArrayDeque spliterator().tryAdvance()                              0  3.928
ArrayDeque spliterator().forEachRemaining()                        0  0.165
ArrayDeque contains                                                0  0.052
ArrayDeque containsAll                                             0  0.058
ArrayDeque forEach                                                 0  0.060
ArrayDeque toArray()                                               0  0.113
ArrayDeque toArray(a)                                              0  0.080
ArrayDeque toArray(empty)                                          0  0.072
ArrayDeque stream().forEach                                        0  0.099
ArrayDeque stream().mapToInt                                       0  0.252
ArrayDeque stream().collect                                        0  0.181
ArrayDeque stream()::iterator                                      0  0.122
ArrayDeque parallelStream().forEach                                0  1.124
ArrayDeque parallelStream().mapToInt                               0  1.282
ArrayDeque parallelStream().collect                                0  1.283
ArrayDeque parallelStream()::iterator                              0  0.134
ArrayDeque removeIf                                                0  0.070
ArrayDeque remove(Object)                                          0  0.045
ArrayDeque descendingIterator() loop                               0  6.050
ArrayDeque descendingIterator().forEachRemaining()                 0  0.225
PriorityQueue iterate for loop                                     0  0.103
PriorityQueue iterator().forEachRemaining()                        0  0.074
PriorityQueue spliterator().tryAdvance()                           0  3.105
PriorityQueue spliterator().forEachRemaining()                     0  0.083
PriorityQueue contains                                             0  0.124
PriorityQueue containsAll                                          0  0.064
PriorityQueue forEach                                              0  0.130
PriorityQueue toArray()                                            0  0.344
PriorityQueue toArray(a)                                           0  0.120
PriorityQueue toArray(empty)                                       0  0.080
PriorityQueue stream().forEach                                     0  0.103
PriorityQueue stream().mapToInt                                    0  0.270
PriorityQueue stream().collect                                     0  0.194
PriorityQueue stream()::iterator                                   0  0.128
PriorityQueue parallelStream().forEach                             0  1.212
PriorityQueue parallelStream().mapToInt                            0  2.052
PriorityQueue parallelStream().collect                             0  1.285
PriorityQueue parallelStream()::iterator                           0  0.132
PriorityQueue removeIf                                             0  0.208
PriorityQueue remove(Object)                                       0  0.052
ConcurrentLinkedQueue iterate for loop                             0  0.466
ConcurrentLinkedQueue iterator().forEachRemaining()                0  0.078
ConcurrentLinkedQueue spliterator().tryAdvance()                   0  3.897
ConcurrentLinkedQueue spliterator().forEachRemaining()             0  0.499
ConcurrentLinkedQueue contains                                     0  0.462
ConcurrentLinkedQueue containsAll                                  0  0.054
ConcurrentLinkedQueue forEach                                      0  0.049
ConcurrentLinkedQueue toArray()                                    0  0.243
ConcurrentLinkedQueue toArray(a)                                   0  0.169
ConcurrentLinkedQueue toArray(empty)                               0  0.050
ConcurrentLinkedQueue stream().forEach                             0  0.113
ConcurrentLinkedQueue stream().mapToInt                            0  0.324
ConcurrentLinkedQueue stream().collect                             0  0.210
ConcurrentLinkedQueue stream()::iterator                           0  0.151
ConcurrentLinkedQueue parallelStream().forEach                     0  2.126
ConcurrentLinkedQueue parallelStream().mapToInt                    0  1.029
ConcurrentLinkedQueue parallelStream().collect                     0  0.831
ConcurrentLinkedQueue parallelStream()::iterator                   0  0.159
ConcurrentLinkedQueue removeIf                                     0  0.082
ConcurrentLinkedQueue remove(Object)                               0  0.047
ConcurrentLinkedDeque iterate for loop                             0  0.850
ConcurrentLinkedDeque iterator().forEachRemaining()                0  0.087
ConcurrentLinkedDeque spliterator().tryAdvance()                   0  3.396
ConcurrentLinkedDeque spliterator().forEachRemaining()             0  0.097
ConcurrentLinkedDeque contains                                     0  0.633
ConcurrentLinkedDeque containsAll                                  0  0.054
ConcurrentLinkedDeque forEach                                      0  0.237
ConcurrentLinkedDeque toArray()                                    0  0.093
ConcurrentLinkedDeque toArray(a)                                   0  0.089
ConcurrentLinkedDeque toArray(empty)                               0  0.054
ConcurrentLinkedDeque stream().forEach                             0  0.099
ConcurrentLinkedDeque stream().mapToInt                            0  0.882
ConcurrentLinkedDeque stream().collect                             0  0.200
ConcurrentLinkedDeque stream()::iterator                           0  0.117
ConcurrentLinkedDeque parallelStream().forEach                     0  1.505
ConcurrentLinkedDeque parallelStream().mapToInt                    0  0.920
ConcurrentLinkedDeque parallelStream().collect                     0  1.163
ConcurrentLinkedDeque parallelStream()::iterator                   0  0.151
ConcurrentLinkedDeque removeIf                                     0  0.076
ConcurrentLinkedDeque remove(Object)                               0  0.058
ConcurrentLinkedDeque descendingIterator() loop                    0  2.771
ConcurrentLinkedDeque descendingIterator().forEachRemaining()      0  0.111
ArrayBlockingQueue iterate for loop                                0  1.134
ArrayBlockingQueue iterator().forEachRemaining()                   0  0.398
ArrayBlockingQueue spliterator().tryAdvance()                      0  0.245
ArrayBlockingQueue spliterator().forEachRemaining()                0  0.107
ArrayBlockingQueue contains                                        0  0.678
ArrayBlockingQueue containsAll                                     0  0.054
ArrayBlockingQueue forEach                                         0  0.058
ArrayBlockingQueue toArray()                                       0  0.093
ArrayBlockingQueue toArray(a)                                      0  0.070
ArrayBlockingQueue toArray(empty)                                  0  0.068
ArrayBlockingQueue stream().forEach                                0  0.150
ArrayBlockingQueue stream().mapToInt                               0  0.384
ArrayBlockingQueue stream().collect                                0  0.221
ArrayBlockingQueue stream()::iterator                              0  0.177
ArrayBlockingQueue parallelStream().forEach                        0  1.590
ArrayBlockingQueue parallelStream().mapToInt                       0  2.452
ArrayBlockingQueue parallelStream().collect                        0  2.049
ArrayBlockingQueue parallelStream()::iterator                      0  0.254
ArrayBlockingQueue removeIf                                        0  0.080
ArrayBlockingQueue remove(Object)                                  0  0.047
LinkedBlockingQueue iterate for loop                               0  0.660
LinkedBlockingQueue iterator().forEachRemaining()                  0  0.456
LinkedBlockingQueue spliterator().tryAdvance()                     0  3.868
LinkedBlockingQueue spliterator().forEachRemaining()               0  0.163
LinkedBlockingQueue contains                                       0  0.940
LinkedBlockingQueue containsAll                                    0  0.052
LinkedBlockingQueue forEach                                        0  0.085
LinkedBlockingQueue toArray()                                      0  0.047
LinkedBlockingQueue toArray(a)                                     0  0.052
LinkedBlockingQueue toArray(empty)                                 0  0.078
LinkedBlockingQueue stream().forEach                               0  0.122
LinkedBlockingQueue stream().mapToInt                              0  0.229
LinkedBlockingQueue stream().collect                               0  0.606
LinkedBlockingQueue stream()::iterator                             0  0.132
LinkedBlockingQueue parallelStream().forEach                       0  1.959
LinkedBlockingQueue parallelStream().mapToInt                      0  0.967
LinkedBlockingQueue parallelStream().collect                       0  0.771
LinkedBlockingQueue parallelStream()::iterator                     0  0.159
LinkedBlockingQueue removeIf                                       0  0.120
LinkedBlockingQueue remove(Object)                                 0  0.049
LinkedBlockingDeque iterate for loop                               0  0.553
LinkedBlockingDeque iterator().forEachRemaining()                  0  0.289
LinkedBlockingDeque spliterator().tryAdvance()                     0  3.709
LinkedBlockingDeque spliterator().forEachRemaining()               0  0.173
LinkedBlockingDeque contains                                       0  0.649
LinkedBlockingDeque containsAll                                    0  0.054
LinkedBlockingDeque forEach                                        0  0.076
LinkedBlockingDeque toArray()                                      0  0.047
LinkedBlockingDeque toArray(a)                                     0  0.047
LinkedBlockingDeque toArray(empty)                                 0  0.070
LinkedBlockingDeque stream().forEach                               0  0.118
LinkedBlockingDeque stream().mapToInt                              0  0.225
LinkedBlockingDeque stream().collect                               0  0.190
LinkedBlockingDeque stream()::iterator                             0  0.136
LinkedBlockingDeque parallelStream().forEach                       0  1.351
LinkedBlockingDeque parallelStream().mapToInt                      0  0.864
LinkedBlockingDeque parallelStream().collect                       0  0.821
LinkedBlockingDeque parallelStream()::iterator                     0  0.159
LinkedBlockingDeque removeIf                                       0  0.118
LinkedBlockingDeque remove(Object)                                 0  0.058
LinkedBlockingDeque descendingIterator() loop                      0  2.550
LinkedBlockingDeque descendingIterator().forEachRemaining()        0  0.157
LinkedTransferQueue iterate for loop                               0  0.590
LinkedTransferQueue iterator().forEachRemaining()                  0  0.194
LinkedTransferQueue spliterator().tryAdvance()                     0  3.006
LinkedTransferQueue spliterator().forEachRemaining()               0  0.146
LinkedTransferQueue contains                                       0  0.474
LinkedTransferQueue containsAll                                    0  0.050
LinkedTransferQueue forEach                                        0  0.074
LinkedTransferQueue toArray()                                      0  0.082
LinkedTransferQueue toArray(a)                                     0  0.188
LinkedTransferQueue toArray(empty)                                 0  0.047
LinkedTransferQueue stream().forEach                               0  0.118
LinkedTransferQueue stream().mapToInt                              0  0.223
LinkedTransferQueue stream().collect                               0  0.592
LinkedTransferQueue stream()::iterator                             0  0.458
LinkedTransferQueue parallelStream().forEach                       0  1.503
LinkedTransferQueue parallelStream().mapToInt                      0  0.924
LinkedTransferQueue parallelStream().collect                       0  1.435
LinkedTransferQueue parallelStream()::iterator                     0  0.153
LinkedTransferQueue removeIf                                       0  0.095
LinkedTransferQueue remove(Object)                                 0  0.047
PriorityBlockingQueue iterate for loop                             0  2.885
PriorityBlockingQueue iterator().forEachRemaining()                0  0.153
PriorityBlockingQueue spliterator().tryAdvance()                   0  2.829
PriorityBlockingQueue spliterator().forEachRemaining()             0  0.070
PriorityBlockingQueue contains                                     0  0.115
PriorityBlockingQueue containsAll                                  0  0.062
PriorityBlockingQueue forEach                                      0  0.107
PriorityBlockingQueue toArray()                                    0  0.029
PriorityBlockingQueue toArray(a)                                   0  0.111
PriorityBlockingQueue toArray(empty)                               0  0.070
PriorityBlockingQueue stream().forEach                             0  0.087
PriorityBlockingQueue stream().mapToInt                            0  0.792
PriorityBlockingQueue stream().collect                             0  0.483
PriorityBlockingQueue stream()::iterator                           0  0.243
PriorityBlockingQueue parallelStream().forEach                     0  1.493
PriorityBlockingQueue parallelStream().mapToInt                    0  2.550
PriorityBlockingQueue parallelStream().collect                     0  5.379
PriorityBlockingQueue parallelStream()::iterator                   0  0.159
PriorityBlockingQueue removeIf                                     0  0.254
PriorityBlockingQueue remove(Object)                               0  0.068
ListN iterate for loop                                             0  0.718
ListN iterator().forEachRemaining()                                0  0.072
ListN spliterator().tryAdvance()                                   0  0.134
ListN spliterator().forEachRemaining()                             0  0.062
ListN contains                                                     0  0.250
ListN containsAll                                                  0  0.060
ListN forEach                                                      0  0.068
ListN toArray()                                                    0  0.031
ListN toArray(a)                                                   0  0.064
ListN toArray(empty)                                               0  0.049
ListN stream().forEach                                             0  0.091
ListN stream().mapToInt                                            0  0.297
ListN stream().collect                                             0  0.169
ListN stream()::iterator                                           0  0.153
ListN parallelStream().forEach                                     0  1.010
ListN parallelStream().mapToInt                                    0  0.596
ListN parallelStream().collect                                     0  0.592
ListN parallelStream()::iterator                                   0  0.155
ListN listIterator forward loop                                    0  0.216
ListN listIterator backward loop                                   0  0.076
ListN indexOf                                                      0  0.049
ListN lastIndexOf                                                  0  0.037
ListN equals                                                       0  0.142
ListN hashCode                                                     0  0.299
ImmutableCollections$SubList iterate for loop                      0  0.633
ImmutableCollections$SubList iterator().forEachRemaining()         0  0.093
ImmutableCollections$SubList spliterator().tryAdvance()            0  0.111
ImmutableCollections$SubList spliterator().forEachRemaining()      0  0.062
ImmutableCollections$SubList contains                              0  0.177
ImmutableCollections$SubList containsAll                           0  0.068
ImmutableCollections$SubList forEach                               0  0.064
ImmutableCollections$SubList toArray()                             0  0.072
ImmutableCollections$SubList toArray(a)                            0  0.056
ImmutableCollections$SubList toArray(empty)                        0  0.181
ImmutableCollections$SubList stream().forEach                      0  0.101
ImmutableCollections$SubList stream().mapToInt                     0  0.186
ImmutableCollections$SubList stream().collect                      0  0.177
ImmutableCollections$SubList stream()::iterator                    0  0.144
ImmutableCollections$SubList parallelStream().forEach              0  0.866
ImmutableCollections$SubList parallelStream().mapToInt             0  2.870
ImmutableCollections$SubList parallelStream().collect              0  1.466
ImmutableCollections$SubList parallelStream()::iterator            0  0.169
ImmutableCollections$SubList listIterator forward loop             0  0.499
ImmutableCollections$SubList listIterator backward loop            0  0.072
ImmutableCollections$SubList indexOf                               0  0.060
ImmutableCollections$SubList lastIndexOf                           0  0.054
ImmutableCollections$SubList equals                                0  0.159
ImmutableCollections$SubList hashCode                              0  0.095
----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
