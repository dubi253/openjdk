#Test Results (version 2)
#Thu Feb 29 16:25:04 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\r\nUSER_SPECIFIED testng SubList\r\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=422 0\:00\:00.422
end=Thu Feb 29 16\:25\:04 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1201-883.bqzjtvoehc0u5c4z3cleewhyhf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 16\:25\:04 UTC 2024
test=java/util/List/SubList.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=422
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\List

#section:script_messages
----------messages:(7/551)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: D:\\a\\openjdk\\openjdk\\test\\lib
   class directory: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib

#section:build
----------messages:(7/282)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 16:25:04 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 16:25:04 UTC 2024
elapsed time (seconds): 0.015
result: Passed. Build successful

#section:compile
----------messages:(7/278)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 16:25:04 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 16:25:04 UTC 2024
elapsed time (seconds): 0.015
----------configuration:(12/805)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3662)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java'
result: Passed. Compilation successful

#section:build
----------messages:(7/211)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 16:25:04 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 16:25:04 UTC 2024
elapsed time (seconds): 0.063
result: Passed. Build successful

#section:compile
----------messages:(7/274)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 16:25:04 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 16:25:04 UTC 2024
elapsed time (seconds): 0.063
----------configuration:(15/1098)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/4060)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java'
result: Passed. Compilation successful

#section:testng
----------messages:(7/215)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 16:25:04 UTC 2024
Mode: agentvm
Agent id: 4
finished: Thu Feb 29 16:25:04 UTC 2024
elapsed time (seconds): 0.328
----------configuration:(15/1086)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
              D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
              D:\\a\\openjdk\\openjdk\\test\\lib

----------rerun:(28/3592)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91978)----------
Seed from RandomFactory = -6211369355536696507L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -2042235128], 0, 1): success
test SubList.testAdd([42, 468589257], 0, 1): success
test SubList.testAdd([42, -1277563647], 0, 1): success
test SubList.testAdd([42, 1031494123], 0, 1): success
test SubList.testAdd([42, -1828484078], 0, 1): success
test SubList.testAdd([42, 1996147333], 0, 1): success
test SubList.testAdd([42, -680744248], 0, 1): success
test SubList.testAdd([42, -680248296], 0, 1): success
test SubList.testAdd([42, -1256078872], 0, 1): success
test SubList.testAdd(java.util.ArrayList@7cd770fd, 2, 5): success
test SubList.testAdd(java.util.LinkedList@5f31ebb8, 2, 5): success
test SubList.testAdd(java.util.Vector@4ecb4bd6, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@dc06967, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@746410a4, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@468b7629, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@59848585, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@79b8f57a, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@3f6117b, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@26b049aa, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@73e7adff, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@24b7e107, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([1117096222, 42], 0, 1): success
test SubList.testAddAtPos([42, -193084863], 0, 1): success
test SubList.testAddAtPos([-1406939555, 42], 0, 1): success
test SubList.testAddAtPos([1529936838, 42], 0, 1): success
test SubList.testAddAtPos([1998625596, 42], 0, 1): success
test SubList.testAddAtPos([42, 368751603], 0, 1): success
test SubList.testAddAtPos([1242315721, 42], 0, 1): success
test SubList.testAddAtPos([42, -1641800122], 0, 1): success
test SubList.testAddAtPos([-1698872996, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@6a5b258f, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@43d6943c, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@3e4cd6e6, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@72154386, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@60986603, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1770bfdd, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@57c3720f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@4d94845, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@7968fa7c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@dda70a9, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@3b0e040f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5a201fed, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@60727b99, 2, 5): success
test SubList.testClear(java.util.LinkedList@53e04cda, 2, 5): success
test SubList.testClear(java.util.Vector@65266b63, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@37a87e63, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@6e515587, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@643bad63, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@1d79148d, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@1023521b, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@386c95ca, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@834d755, 2, 5): success
test SubList.testEquals(java.util.LinkedList@a2699ef, 2, 5): success
test SubList.testEquals(java.util.Vector@50603213, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@be947cb, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@229771cc, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@24b38dd5, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7fef3e7d, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@8adc6ad, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1114615d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@691cb3d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@5699873b, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@41a06090, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@194bc7b0, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6b43b5bc, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@574f3262, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@65ebd825, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@739a1bd7, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@4c10b6a6, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@4c10b6a6, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5eed20c9, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5e1455e7, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6d4ecd4c, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@ed6e0a1, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@69b018f0, 2, 5): success
test SubList.testGet(java.util.LinkedList@33f6c0b4, 2, 5): success
test SubList.testGet(java.util.Vector@1f4eba77, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@2762c37e, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@396fbf32, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@814c215, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@5e1daaed, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@2dcd6fd9, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@7c1cf9c2, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1bb525d, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@7e33b09f, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@104c831d, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@7c4f329b, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@2fbdf920, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@597c65b1, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@2b104b85, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@25410205, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@26173601, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@26173601, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@13061ace, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1df1fc3a, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@6e769296, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@43e8a01, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@21242698, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@17db8466, 2, 5): success
test SubList.testIndexOf(java.util.Vector@686ad49a, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@527e4ec4, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@5532e171, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@42f343b, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3c5803fb, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@5f828b26, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@471f3dc1, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@213e41c0, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@17f18fe, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@49c948f1, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@683d045f, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@9bdcca9, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4cef51d, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@2af0e8a1, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@41ae1543, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@6b2bec12, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@6b2bec12, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@ecf7e0b, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@7ba827c9, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3bc50737, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@3924b48c, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@6eef00f2, 2, 5): success
test SubList.testIterator(java.util.LinkedList@629b4920, 2, 5): success
test SubList.testIterator(java.util.Vector@45692a15, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@7db359b4, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@18b858f1, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@74a0bec0, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@55fcc530, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@7ee73b98, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@9c30e34, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@47663d50, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@403e7fa1, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@61605a75, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@144e846, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@7c1a1847, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@1db3b869, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@7e4edabd, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@724232e8, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@68158161, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@68158161, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@12f13f53, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@372ef746, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@2dfb6511, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@66d8d989, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@1ccd76de, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@1827096e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@6705a40e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@7e93f3a3, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@6ef5b98c, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2e8fe90c, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1b7f8fb9, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@5eb40a1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@115f2ddd, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@728a18cf, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@3ffbb340, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6d0255cf, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@4f1b51e, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@2aa31c5a, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4f67eb9c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@1374cf2f, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@58dd9c2c, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2f5cc1cb, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2f5cc1cb, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@27dc85d5, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@6aab1af2, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@2f6cf267, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@49e2a051, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@76437665, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@2fa644fa, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@3076c77d, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@15a2624a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@4109f665, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@156fa5d3, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1259a7d6, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@20dd1218, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@dfdc6ba, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@1ef19f7, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@695cd35e, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@45de695e, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@6e75d7d3, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@5baf0e5c, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1b6c24b6, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@3debb54f, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@2183426b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@732c99fa, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@17c9f531, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@7bf33a3d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1c408ed6, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@2a057d0a, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5b72a285, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@189a438c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@23559e5f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4060770a, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@2f26bbb0, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@2f26bbb0, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@40d1e94f, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1bf3bb0c, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@840e1ed, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@55887549, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@2d74a92, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1f688c83, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@383c7f31, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@3c76e93e, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@5e334803, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@391ebad3, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@391ebad3, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@2cdb3d89, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@5dc148f1, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@22699c12, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@6bee4bd0, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@29265344, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@7289484e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@38a0790e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4bbd9e3b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@6e65134e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@49d90dde, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@69f7fc4e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@16deea79, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1c232f83, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@2fe06da0, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@656d43b4, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@61b1e8d7, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@3798f83b, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@14519aff, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@67ff0b18, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@44838bf2, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@7fce9aee, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1047f58e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4c25d935, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@32a866ab, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2e79df69, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@2092894f, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@31169068, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@29bcad42, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@65e07f1b, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@79af1415, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@7212adae, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@7212adae, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1ce1088e, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@14f2832b, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2b700a4f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1d9f3fbf, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@7d7cd9a5, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@1a23991a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@4e919750, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@3f9dd315, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@5c32df07, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@721a07aa, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6aa87557, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@185e399c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@53dafbad, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@766c95a8, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@4643d49b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@3cd9da35, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@275d176b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@2d823656, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@10e1ba86, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@659b1b3, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@4644756, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@5d3d34e5, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-151381555], 0, 1): success
test SubList.testListIteratorSet([-782752137], 0, 1): success
test SubList.testListIteratorSet([-1090714876], 0, 1): success
test SubList.testListIteratorSet([141611451], 0, 1): success
test SubList.testListIteratorSet([-1818423501], 0, 1): success
test SubList.testListIteratorSet([1847905849], 0, 1): success
test SubList.testListIteratorSet([1740050644], 0, 1): success
test SubList.testListIteratorSet([1655579998], 0, 1): success
test SubList.testListIteratorSet([-1370088927], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@6444d0ac, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@5e62d4c8, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@1c573672, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@3ce75c11, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@656bdc04, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4f3b7509, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@6003221b, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@685dad38, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@50316d1a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@79922b6e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@573005bc, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5838d0c6, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-765288266], 0, 1): success
test SubList.testListIteratorSetPrevious([1251092695], 0, 1): success
test SubList.testListIteratorSetPrevious([987010069], 0, 1): success
test SubList.testListIteratorSetPrevious([-500890654], 0, 1): success
test SubList.testListIteratorSetPrevious([2071931226], 0, 1): success
test SubList.testListIteratorSetPrevious([1135734959], 0, 1): success
test SubList.testListIteratorSetPrevious([-1644393071], 0, 1): success
test SubList.testListIteratorSetPrevious([-619118987], 0, 1): success
test SubList.testListIteratorSetPrevious([186627570], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@2b528813, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@72aea3f1, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@42022818, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@7f4e0ed7, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@28d9f3dc, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1bf2c1a7, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@4591967b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@76728514, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@13332c00, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@e15e124, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@1cd7b54e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3ddbca3e, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@2c84ae8e, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@67807eef, 2, 5): success
test SubList.testModAdd(java.util.Vector@454b4ddc, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@7c488d02, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@3ccfc624, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@43b438c8, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@8a50786, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@7557e9e2, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@57c5d03f, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@35f5cf33, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@5823b6a0, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5db0d84, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@47b93ab, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@4e913fbc, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@434dbd25, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@37038ddb, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@1ee40d76, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@43e462e, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@7bf62663, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@61c1232e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@5694ec44, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@698d139d, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@5cf14a44, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@30f7e667, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@1cf4e4eb, 2, 5): success
test SubList.testModClear(java.util.LinkedList@54c445ea, 2, 5): success
test SubList.testModClear(java.util.Vector@612db652, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@543c50c7, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@2c0c0ac0, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@355d65a2, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@243403ef, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@747e721c, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@af8283a, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@247c7f72, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@5aa7ed28, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1645ca38, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@70bec47f, 2, 5): success
test SubList.testModGet(java.util.LinkedList@1020cc55, 2, 5): success
test SubList.testModGet(java.util.Vector@8ff0258, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@203e077c, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@7b7a45c0, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4c1e5a0a, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@55ed28f3, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@2a4f0caa, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@6b83b8b0, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@537f9f89, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@5fe08be5, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4e3f042b, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@18c33c36, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@4e33e302, 2, 5): success
test SubList.testModHashCode(java.util.Vector@2fee1ef7, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@460e5bea, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@5a6a98de, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@5d47069a, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@3794ac7f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@2dd5873f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@35736b34, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@65579945, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@5ab33fdf, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@374d9db8, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@26ce96b, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@24472195, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@7aedba58, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@255fe427, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@54c5ee33, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7f90333d, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@2a07411c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@556e89ac, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@5067afda, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@10ec0711, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@7dab8b93, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4a7d6e09, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@697cbfc2, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@395679f1, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@1a216a01, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@5339f877, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@2eb7e93d, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3faca96c, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@2e79a1be, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@7c4754e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@690345a2, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5a25b730, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@cddce7, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7754663b, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@1dd358e, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@712ae827, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@484f28b, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@325c6040, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@132e5aa9, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@58e3de05, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@668fbb75, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@4ed0167e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@78b6f2a3, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@11adf8ca, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@705bf993, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@52276238, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@2746589c, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@1c7ee55c, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@72f1fa54, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@287bfa0, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@2e0ae234, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3fc787a7, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@310c8fe5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@20705d87, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@4b7ab3b1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2c1c521, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@61b85f17, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@34bc00d3, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@3eba4c14, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@7ccc7a00, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@53f3ef11, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@2810ae8b, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@7573a30e, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7170110f, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@21ef4d9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@63f929f7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@16a3532e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2b8e8233, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@321ec1c7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@79f3f281, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@640872b7, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@53c8f7cc, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@1bb54b3e, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@e25e9c1, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@7b6dec0f, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@789c6031, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@236c94d9, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@56db1ac4, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@e615c60, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@26ac41b7, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@df76b2b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1af41f56, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@3d62c8ff, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@d174f2f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@42e69ed, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@4933706, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@5f47f5fd, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@22180cd6, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@66e574eb, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@4a201f4f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6d26aebe, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@69853fba, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@5fea11ce, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@10ff3388, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@2d78b551, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@77b449a6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@18a88d18, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@223c1f20, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@1db2a3bd, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2c5e860b, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@145132fb, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@6815e9f6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@5f3e4777, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3253fcc6, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@766e44f5, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@59b40c16, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@48552f63, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@791de9df, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@4886b2b, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@12fbf83f, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@b82e6fb, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@37e9251b, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@47534938, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@337bd1d3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@6307bc0e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6415e154, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@5905e16, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2d4dc2b9, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@70057caa, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@750168cb, 2, 5): success
test SubList.testModRemove(java.util.Vector@476113af, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@42ce44bc, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@6ab98a04, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@20a5db50, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@735e4638, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@19071c5f, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@45dc29cc, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@421d75e7, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@348c293a, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@35279be1, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@461fc8c2, 2, 5): success
test SubList.testModSet(java.util.LinkedList@148b5d1, 2, 5): success
test SubList.testModSet(java.util.Vector@18ae16f2, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@5484703d, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@60f9afa2, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@32c65f7a, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@56a06200, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@3519296e, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@51f771e7, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3c055021, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@478c62b0, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4b3745d4, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@2e959082, 2, 5): success
test SubList.testRemove(java.util.LinkedList@39818baa, 2, 5): success
test SubList.testRemove(java.util.Vector@544f002a, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@57c4081e, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@699a3e3f, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@7af3373e, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@1b257f63, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@77d02a83, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@52eab6bf, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1377911691], 0, 1): success
test SubList.testSet([-1230387702], 0, 1): success
test SubList.testSet([855593638], 0, 1): success
test SubList.testSet([876675880], 0, 1): success
test SubList.testSet([-281156102], 0, 1): success
test SubList.testSet([-336769215], 0, 1): success
test SubList.testSet([-1700959817], 0, 1): success
test SubList.testSet([1439960509], 0, 1): success
test SubList.testSet([-1397080787], 0, 1): success
test SubList.testSet(java.util.ArrayList@770d36d1, 2, 5): success
test SubList.testSet(java.util.LinkedList@480bb83b, 2, 5): success
test SubList.testSet(java.util.Vector@34170133, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@5b9fb00, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@33ab0021, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5b5e092d, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@4356efe1, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@552da5bc, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3333b0a0, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@7b8bd737, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@61fba5cf, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1bd55f12, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@6a7343bf, 2, 5): success
test SubList.testSubList(java.util.LinkedList@20b1206e, 2, 5): success
test SubList.testSubList(java.util.Vector@758f5370, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@2d3d1eae, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@2b8859c8, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@5d70e3ae, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@c233ddb, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@24a8dd1e, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@370fbaf2, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@525293f2, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@6bdb7d5, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7737d91b, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@1fa13090, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@18e8f824, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4c5cac2f, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@3afdb150, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4617cfab, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@7566209f, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@7566209f, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@31693c3b, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1079039a, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@20059f25, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@71fced0d, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@6da092e, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@13b75329, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@477195c5, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@ee688ef, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1508217b, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@d6c142c, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@d6c142c, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@547c40b0, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@5ab2ed49, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@63d12dca, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@70dd4749, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@44ef652f, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@4ed0816f, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@29537b09, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@48512ba, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@d32e31d, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@7b854ba5, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@7b854ba5, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@28a0ac8c, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@65f9ef27, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@474bf971, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5c6b610c, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@4e07a5ab, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@2609654d, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@601803a9, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@2e3e7317, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@5ead374f, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4ee456c2, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4ee456c2, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@677550cc, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@3e17e68, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@4393644d, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@1a5634ee, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@21b62cb5, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@54d0aaae, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@10a323b3, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@b47c73d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@59803d81, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@744bc122, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@744bc122, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@55776a0a, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@19874163, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@27a2b4e3, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4882fc5, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@6c3dfb0a, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@567ed15d, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@45d22ad, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@6106e072, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1d83cc9f, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@1307b07c, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@1307b07c, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@67ff0e3a, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@241eaed1, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3d71311a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@bcd1f7a, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@34b2be89, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@57d9f2f2, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@2f45306f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@6772e519, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@654bee3f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6d733132, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6d733132, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@39eb2996, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3b45a69b, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@645b7e0e, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@141684a3, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@329497c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7ef8418a, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@4bcb3cf2, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@12c202c3, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2b28edf2, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@2bc5822, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@2bc5822, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@48f0e8d3, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1e675704, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@5158a0c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@67e09ee5, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@79286cf7, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1fa17520, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2afe5ff6, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@294d5d4b, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@732dcda7, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@c2fe40c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@298a95b3, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2681d996, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@6ffb132a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2d5adfcc, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@4c536f33, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@53f6b546, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4eb5f061, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@4f75bed0, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@7161e5df, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@712228b9, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@712228b9, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@3d688a0e, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@4b1297e4, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@3c2c1160, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@46c36da0, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
