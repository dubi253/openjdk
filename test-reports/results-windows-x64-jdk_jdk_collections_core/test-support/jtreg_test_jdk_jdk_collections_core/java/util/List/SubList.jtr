#Test Results (version 2)
#Fri Mar 01 16:56:50 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\r\nUSER_SPECIFIED testng SubList\r\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=422 0\:00\:00.422
end=Fri Mar 01 16\:56\:50 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1387-147.qlbpdebbqwpe3pov5lpj0n5fhf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 16\:56\:50 UTC 2024
test=java/util/List/SubList.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=422
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\List

#section:script_messages
----------messages:(7/551)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-86f0ab9b59b661eea77a98be8a17942cdfcbf68b, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: D:\\a\\openjdk\\openjdk\\test\\lib
   class directory: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib

#section:build
----------messages:(7/282)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 16:56:50 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 16:56:50 UTC 2024
elapsed time (seconds): 0.031
result: Passed. Build successful

#section:compile
----------messages:(7/278)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 16:56:50 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 16:56:50 UTC 2024
elapsed time (seconds): 0.031
----------configuration:(12/805)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3662)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java'
result: Passed. Compilation successful

#section:build
----------messages:(7/211)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 16:56:50 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 16:56:50 UTC 2024
elapsed time (seconds): 0.063
result: Passed. Build successful

#section:compile
----------messages:(7/274)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 16:56:50 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 16:56:50 UTC 2024
elapsed time (seconds): 0.063
----------configuration:(15/1098)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/4060)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java'
result: Passed. Compilation successful

#section:testng
----------messages:(7/215)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 16:56:50 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 01 16:56:50 UTC 2024
elapsed time (seconds): 0.328
----------configuration:(15/1086)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
              D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
              D:\\a\\openjdk\\openjdk\\test\\lib

----------rerun:(28/3592)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91952)----------
Seed from RandomFactory = 8505072122996178161L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1806528217], 0, 1): success
test SubList.testAdd([42, 827080742], 0, 1): success
test SubList.testAdd([42, 1642270863], 0, 1): success
test SubList.testAdd([42, 898586841], 0, 1): success
test SubList.testAdd([42, 800745224], 0, 1): success
test SubList.testAdd([42, 2031693557], 0, 1): success
test SubList.testAdd([42, -1945198373], 0, 1): success
test SubList.testAdd([42, 317469024], 0, 1): success
test SubList.testAdd([42, 906796337], 0, 1): success
test SubList.testAdd(java.util.ArrayList@10b25782, 2, 5): success
test SubList.testAdd(java.util.LinkedList@ce3060e, 2, 5): success
test SubList.testAdd(java.util.Vector@46bcdc44, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@7500458d, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@15668294, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@3c422d32, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@694991de, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@46fb8c5b, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@7ddef047, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@641e22d4, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@542157dc, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@50307293, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 563132429], 0, 1): success
test SubList.testAddAtPos([42, -1900432363], 0, 1): success
test SubList.testAddAtPos([42, 1581569009], 0, 1): success
test SubList.testAddAtPos([1548655669, 42], 0, 1): success
test SubList.testAddAtPos([-1837810319, 42], 0, 1): success
test SubList.testAddAtPos([42, 768055621], 0, 1): success
test SubList.testAddAtPos([2061332215, 42], 0, 1): success
test SubList.testAddAtPos([1975218863, 42], 0, 1): success
test SubList.testAddAtPos([535095980, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@6e9eb632, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@17288ed6, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@2ac99524, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@7aba6979, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@41cce8ab, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7957cc58, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@298adeef, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@42ef4726, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1dd8eb9f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4bb34a29, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@22e0219d, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6fba5ad5, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@58089245, 2, 5): success
test SubList.testClear(java.util.LinkedList@2726df1, 2, 5): success
test SubList.testClear(java.util.Vector@a2dace0, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@2efc42a, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@70f0298a, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@49c55108, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@61fbd1ec, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@fc7ce82, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@10aac70c, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@337ef025, 2, 5): success
test SubList.testEquals(java.util.LinkedList@45becbd9, 2, 5): success
test SubList.testEquals(java.util.Vector@6940e420, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@51bf7bea, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@4c0b7e6d, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@60880664, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@721924ee, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@a3ffbea, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@622e5217, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1e89201f, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@e90b08f, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@516bd37f, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@31e39370, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@41b0dcec, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@77766a2d, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@59b2d648, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@5c880482, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@728afae8, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@728afae8, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@7d525017, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@319fb759, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6660904d, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@27e9e6f8, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@2ffe6d08, 2, 5): success
test SubList.testGet(java.util.LinkedList@553de914, 2, 5): success
test SubList.testGet(java.util.Vector@df7aa56, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@38dfad17, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@3114d90f, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@72f82217, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@6f8b92f3, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@3f0e77d7, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@731c6454, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1bb7f802, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@5024ddfc, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7fd87295, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@1559018, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@216c4b24, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@c5e8500, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@7e15d53f, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@2c77b764, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@66ab9c18, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@66ab9c18, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1925558a, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1bc802f7, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3c1c235f, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@66c20cc2, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@3105a2db, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@2097e029, 2, 5): success
test SubList.testIndexOf(java.util.Vector@6d1cf7da, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@15718856, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@7225d985, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2484f875, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6a35ef33, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@23307e74, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@578406c9, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@747a80da, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@78b7dfbf, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@40d549ce, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@451f2c81, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1440b86f, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6686643e, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@f746fcb, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@4dbc0621, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@17abee9f, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@17abee9f, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@60e98a1e, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@7a5de1cf, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@9fcf40a, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@46e22882, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@62e41892, 2, 5): success
test SubList.testIterator(java.util.LinkedList@209f5b9f, 2, 5): success
test SubList.testIterator(java.util.Vector@36439f43, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@62ab660, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@512bb91a, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@44fade58, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@77577eaa, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@7576e220, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5c1971a, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@47cc1ae6, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@7fb7d26b, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@11d7a8c2, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@2a4ad12d, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4b59addc, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@44f9acf0, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@564c12a3, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5ecdf1a8, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@2fc81be5, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@2fc81be5, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@154da8e6, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@6808dca3, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4a27d158, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@32f37532, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@3d8feb84, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@1a002ca9, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@3ffa59fe, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@4e233e62, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@4c713e0, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6f899aa4, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@46f3ead2, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@2ed63f65, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@3009aa7c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6c17df1d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@53404da7, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5d5c50b1, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@65f2c523, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@43f7a1c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4e71b65a, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@1fc276f3, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@107a6a79, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6a67fdc2, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6a67fdc2, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@7376fe1f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@58225614, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@a62073e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@324081b9, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@36582e6a, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@70b4a496, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@454255b4, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5d8e6438, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@42df4318, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@4b96ba37, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@37ff0005, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@116154c8, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@53771c0a, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@20674879, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@536defcf, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@118377a8, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@2f78985f, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@4005c3ad, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@db5ef8, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@2ac33ce4, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@4f4d7772, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@143cfbd5, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7b23aa55, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@715e86b1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@456b5f5c, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@1270bd3e, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@ae68580, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@14771c35, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@a44352f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@79cc59cf, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@67b8c36, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@67b8c36, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@7140df43, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@16869abc, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@54b86a05, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5ade12df, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@20d7cf9f, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@a4e6242, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@3b67e430, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@6b475de8, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@24480791, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@7d54b48a, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@7d54b48a, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@74505e7e, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@96ef675, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@37841419, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@2795d2ea, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@11fb6d78, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@3eafb75d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1eb15c59, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4f48eeca, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@5433f892, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@25482ef9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@fdb5cd8, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@33ff8251, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1cd72d58, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@2629ec03, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@369261f4, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@6e3b2c95, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@95258f9, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@65761609, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@264f53b, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7377c228, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1820510d, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@511e6250, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3329a7f0, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@21a9a4de, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2fb5847b, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@3fd664e7, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1d336e10, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@6268f81a, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@3fe8d3d8, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@7d4c39ba, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1d650723, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1d650723, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1ff91626, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@66c03d14, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2d7773dd, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@62371ade, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@a67e871, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@13c0732c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@6ce3364d, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@63232265, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@33dba292, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@113c2c79, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@3128212d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@1a7177ed, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7b8398f6, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@39e9fd23, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@5b5f11bc, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@1e3a38ab, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@490dd485, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@4ecd287d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@7da28c80, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@21f88fbb, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@74d249a9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@19e5f422, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([570151718], 0, 1): success
test SubList.testListIteratorSet([-2046755999], 0, 1): success
test SubList.testListIteratorSet([1704773034], 0, 1): success
test SubList.testListIteratorSet([-2056517907], 0, 1): success
test SubList.testListIteratorSet([1567754952], 0, 1): success
test SubList.testListIteratorSet([728781671], 0, 1): success
test SubList.testListIteratorSet([-193721485], 0, 1): success
test SubList.testListIteratorSet([709141948], 0, 1): success
test SubList.testListIteratorSet([-1582152026], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@1ea604f5, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@77462924, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@431dd9ad, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@4e041519, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@197b7a6e, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1785a1ea, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@5182676c, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@2cca4461, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@3b374c20, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2f0f3c7, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@1d1ea073, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5e9f48bd, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-101970951], 0, 1): success
test SubList.testListIteratorSetPrevious([-1941183515], 0, 1): success
test SubList.testListIteratorSetPrevious([616503186], 0, 1): success
test SubList.testListIteratorSetPrevious([848505477], 0, 1): success
test SubList.testListIteratorSetPrevious([550388416], 0, 1): success
test SubList.testListIteratorSetPrevious([-1254291210], 0, 1): success
test SubList.testListIteratorSetPrevious([788762656], 0, 1): success
test SubList.testListIteratorSetPrevious([-396694965], 0, 1): success
test SubList.testListIteratorSetPrevious([-749003345], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@358971b8, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@5ded6080, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@45cf5f00, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@516959aa, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@7a2be816, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3096b095, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@4c658ce1, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@2afa61de, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@7e13bcc2, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@43c257a6, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@37f9d7b5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@25f69005, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@485643da, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@365c2aa7, 2, 5): success
test SubList.testModAdd(java.util.Vector@5101a159, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@77153386, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@1bbac010, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@3cbe9379, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@5b589564, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@39db37a7, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@4b1ad947, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@68547c7a, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@15a7da96, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@463772d1, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@6b09e3b8, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@347aa01e, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@7c462529, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@759d49c, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@22288917, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1abfbeb3, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@473d41c1, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@2878611e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@7c828d6e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@70880a7e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@2e4daf25, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1a7539c8, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@7d7d8e0a, 2, 5): success
test SubList.testModClear(java.util.LinkedList@499084d6, 2, 5): success
test SubList.testModClear(java.util.Vector@62eec5ce, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@2de978d5, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@5a6f9898, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@4bf2040c, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@7cf4bb0d, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@55415302, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1cc10803, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@ae30ab9, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@7cdb6f33, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@17b1991f, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@1413984c, 2, 5): success
test SubList.testModGet(java.util.LinkedList@5a278e77, 2, 5): success
test SubList.testModGet(java.util.Vector@bd51585, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@4323c39a, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@275d91f, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@7785b790, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@62a4a12, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@4aca6596, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@6ab07024, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@287461ed, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@9431194, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@69776d3b, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@3a37c4e6, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@79d3afde, 2, 5): success
test SubList.testModHashCode(java.util.Vector@35ba758f, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@e2ccf60, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@2d8a18b7, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@616b089, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@6017bee8, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@74976bb3, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1e2a4e84, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@2627bf28, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@131c18df, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@755ca58f, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@786792f0, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@5448f098, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@5bb041d8, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@4f180dce, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@2cc7c76a, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@40cd5ad3, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@204565bb, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@67e939e7, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@60b9ab2, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@221bbf5b, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@37487c06, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@589cd3fd, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@6442c627, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@4c333624, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@2a4bbf81, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@35cd27f4, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@4b841713, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@22fb8788, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@55f10e4a, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@7a255dfc, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@2c86ddbf, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1a8f9ed1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@3163e476, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@328af42d, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@427a6505, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@4e009d53, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@55047a76, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@70de48bd, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@792aad80, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3407f4df, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@4a3ac9ac, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@186ebad, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@7a28fd7d, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@24b82278, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@6687eaf7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3a65395c, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@76c542a1, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@1baaa391, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@1a6c5e01, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@3864bb2b, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@41842e, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@aa82ef5, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@54b8b724, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@4be6e800, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@231cfaf2, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4a2a8603, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@5fa89bc0, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@711d6e18, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@543969a2, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@94376d2, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@12394b1e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@6f248a31, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@286b153a, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2c2e6f8, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@14c8caac, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@2cbe0f8c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4cb77baf, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5fe3594f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@74a157e1, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5dfa7526, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@52b78526, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@59b319f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@42151093, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@1ee30999, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@710c5ff2, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7375eaa5, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@41efe45d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@c0c2065, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1e4da0d9, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@25c925cc, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@5b01397, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@78dcce1d, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@4ddea40c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@1327be7c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@8c4a59b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@79b630c4, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@701fe8fd, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@a19cab1, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@baf1ad6, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@21ac781, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@37bb83fe, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@33862e58, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@167669ee, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@556acb86, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@508e1b1b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@6da5bdfb, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@6fa2776, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@465d5cc1, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@52b7f36e, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@43d61b1b, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@2697c030, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@358042da, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@55953650, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@485d8be7, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@26c32ebb, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1980f2c3, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@7284cdd8, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@6e35f91f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@5162bec6, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@1272135a, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@31541d5d, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@177d587c, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@53cef1e3, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@beb67f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@6be5ec9f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@e0827a7, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@7ebb588, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@304604f9, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@41a784a5, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@34f9acd4, 2, 5): success
test SubList.testModRemove(java.util.Vector@299701cd, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@2da8bdef, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@5bcafdb5, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@6f711385, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@39e046a7, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@2dcdeb08, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@7a13d3eb, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4b57c700, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@5e8b0af, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@7eb8bd42, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@6c1cc5b0, 2, 5): success
test SubList.testModSet(java.util.LinkedList@2aed393c, 2, 5): success
test SubList.testModSet(java.util.Vector@4fc8bf49, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@2aca9dc5, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@7bc27bcc, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@7df6a24, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@4b77d9fd, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@61f5657d, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@29d430dc, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@43f24f23, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@5a3478b5, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@32decfed, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@76c74bea, 2, 5): success
test SubList.testRemove(java.util.LinkedList@1636b3ec, 2, 5): success
test SubList.testRemove(java.util.Vector@3f1040fc, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@4e67c1b9, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@4920d9bc, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@6ef5d255, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@369eac16, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@1524b190, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@4c02163a, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1649985219], 0, 1): success
test SubList.testSet([-959110729], 0, 1): success
test SubList.testSet([1964345693], 0, 1): success
test SubList.testSet([-1947531044], 0, 1): success
test SubList.testSet([-1828430660], 0, 1): success
test SubList.testSet([1461506722], 0, 1): success
test SubList.testSet([-1917561063], 0, 1): success
test SubList.testSet([921484588], 0, 1): success
test SubList.testSet([-1874016821], 0, 1): success
test SubList.testSet(java.util.ArrayList@76e2d11c, 2, 5): success
test SubList.testSet(java.util.LinkedList@47485703, 2, 5): success
test SubList.testSet(java.util.Vector@7c112c3c, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@402d1cf6, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@72d0e39f, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@5a32b6e7, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@28faa31, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@39167e43, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@2dfdd65, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1da73de0, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@6deb03df, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@137d00ac, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@2bfe8844, 2, 5): success
test SubList.testSubList(java.util.LinkedList@63fcce33, 2, 5): success
test SubList.testSubList(java.util.Vector@1c1d9cd8, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@4ad33e06, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@d93abf8, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@4e4c8751, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@632b4ac1, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@31fc06a9, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@441acd91, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@ddee90a, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@15034d15, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@edcffe, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@7b4d1d1b, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@3f410442, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@c315fdf, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@dedbfec, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1c5ffadc, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@33c7357f, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@33c7357f, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@3cc809c1, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@6eba7497, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@5d3d952, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7b622d6e, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@4cf40a7d, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@293ce14, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@647b56b5, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@b02088, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@14ec400c, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@64abb4c5, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@64abb4c5, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@29fb5a2e, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@54827d8f, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@e47bad6, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@273d6f50, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@4126f426, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5594785a, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@55ce5fc1, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@70af5205, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@5d5f28a4, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@10aa9103, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@10aa9103, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@2bff2ba5, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1532674a, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@d8dea9a, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@289377d0, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@556affd8, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1e0c3306, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4d435483, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@fe4c48, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1fc5363d, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@681a0642, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@681a0642, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@14412cf9, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@7e527c28, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@89d0100, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@4137e287, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@50336dc, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@f723923, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@7f56d3ed, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@7fdb57a6, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@7f97ca6d, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@3a479deb, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@3a479deb, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@a985b7e, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@f01200a, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@52e1383b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@69d57fdb, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@3980fa35, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@5755a183, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@663ebe5d, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@e0a839a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@21132ccf, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@13b6c539, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@13b6c539, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@5aa05ccb, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@7ecdf909, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4ac6fe6a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@724c75c7, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@1e4db1c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@114be34b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@64a98d33, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@5a77371, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1c9c8ce6, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6bb0af1d, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6bb0af1d, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@61147194, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@5dac9661, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@16cf5a20, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@37547fb6, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@cd6b582, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@54576b1, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@27c76f7e, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@222477d4, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@37c2437a, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@2ff543c2, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@2ff543c2, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@28f6822, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@121d3abf, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@44197feb, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@3645c289, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@20dbaaa0, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5d5ba34a, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1e21d61a, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@37a77bd8, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@438dfb6e, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@5a8b7d4c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@71345b96, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@3aa91607, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@341d08db, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@173c1f0b, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@19c5c2bb, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@2de8c9db, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@6f26c15f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@673af57b, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@5c94fbbf, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@16d37ad1, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@16d37ad1, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@13de106c, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@60e8bebe, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@10dfc170, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@1c31bdcb, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
