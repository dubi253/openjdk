#Test Results (version 2)
#Fri Mar 01 19:03:41 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\r\nUSER_SPECIFIED testng SubList\r\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=421 0\:00\:00.421
end=Fri Mar 01 19\:03\:41 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1494-283.3ceprcbbckkebkz0gecq512nqb.bx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 19\:03\:41 UTC 2024
test=java/util/List/SubList.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=421
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\List

#section:script_messages
----------messages:(7/551)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: D:\\a\\openjdk\\openjdk\\test\\lib
   class directory: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib

#section:build
----------messages:(7/282)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 19:03:41 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 19:03:41 UTC 2024
elapsed time (seconds): 0.031
result: Passed. Build successful

#section:compile
----------messages:(7/278)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 19:03:41 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 19:03:41 UTC 2024
elapsed time (seconds): 0.031
----------configuration:(12/805)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3662)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java'
result: Passed. Compilation successful

#section:build
----------messages:(7/211)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 19:03:41 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 19:03:41 UTC 2024
elapsed time (seconds): 0.078
result: Passed. Build successful

#section:compile
----------messages:(7/274)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 19:03:41 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 19:03:41 UTC 2024
elapsed time (seconds): 0.078
----------configuration:(15/1098)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/4060)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java'
result: Passed. Compilation successful

#section:testng
----------messages:(7/215)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 19:03:41 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 01 19:03:41 UTC 2024
elapsed time (seconds): 0.312
----------configuration:(15/1086)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
              D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
              D:\\a\\openjdk\\openjdk\\test\\lib

----------rerun:(28/3592)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91968)----------
Seed from RandomFactory = -5485843728165520122L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 1153936026], 0, 1): success
test SubList.testAdd([42, -472321160], 0, 1): success
test SubList.testAdd([42, -707989763], 0, 1): success
test SubList.testAdd([42, -230753994], 0, 1): success
test SubList.testAdd([42, 178979668], 0, 1): success
test SubList.testAdd([42, -318325056], 0, 1): success
test SubList.testAdd([42, -623829447], 0, 1): success
test SubList.testAdd([42, -346977752], 0, 1): success
test SubList.testAdd([42, -612635134], 0, 1): success
test SubList.testAdd(java.util.ArrayList@18bb4929, 2, 5): success
test SubList.testAdd(java.util.LinkedList@7b1cf279, 2, 5): success
test SubList.testAdd(java.util.Vector@520bdbc9, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@52105f92, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@176cf690, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@161a2f8e, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@502cecd4, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@617d6160, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@54b7845a, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1ab03832, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@45c596b0, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@2ffb9947, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -922784095], 0, 1): success
test SubList.testAddAtPos([42, 147031048], 0, 1): success
test SubList.testAddAtPos([42, 540208731], 0, 1): success
test SubList.testAddAtPos([241416967, 42], 0, 1): success
test SubList.testAddAtPos([-926289921, 42], 0, 1): success
test SubList.testAddAtPos([42, -287497970], 0, 1): success
test SubList.testAddAtPos([-884735233, 42], 0, 1): success
test SubList.testAddAtPos([42, 1354722602], 0, 1): success
test SubList.testAddAtPos([-1714863847, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@709f3996, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@5156d1bf, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@3fccc657, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@4086837b, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@1f651b4a, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1fea7449, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@7aef1ee9, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@40666833, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@307396ca, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5f37038c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@fba89ba, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5aa9e304, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@475efcc4, 2, 5): success
test SubList.testClear(java.util.LinkedList@4bdd965e, 2, 5): success
test SubList.testClear(java.util.Vector@59804083, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1fc32c4d, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@5a634c6c, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@59c1b33c, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@30e60c, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@39597d83, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@78fad35d, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@3c65924d, 2, 5): success
test SubList.testEquals(java.util.LinkedList@49058c50, 2, 5): success
test SubList.testEquals(java.util.Vector@7369057e, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@46772ea1, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@6eb6f421, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@183be142, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6e5d59a8, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@78f53d3c, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@567c9ac5, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@27c10d57, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@7ea679e, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@38619e60, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@7db6daf7, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@7dad51db, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1e43d9bb, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@78c6dbba, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@742ca8e2, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@54da01e9, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@54da01e9, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@5edb534c, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@445c001c, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2199c8e6, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@946a2c5, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@5b9cbc7e, 2, 5): success
test SubList.testGet(java.util.LinkedList@7d52043a, 2, 5): success
test SubList.testGet(java.util.Vector@145316ba, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@726e1751, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@452bc472, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5d8d4d18, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@f06c18, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@30174333, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@31ffa5b9, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@154ab112, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@f940dc1, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@238cea8d, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@2bf680a5, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@2df421e1, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@369b95e0, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@5fac810d, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@446123f7, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@28792380, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@28792380, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@7a55197, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@3fe7582a, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@5552826d, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@3e003956, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@13a7ab2, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@1eb1c334, 2, 5): success
test SubList.testIndexOf(java.util.Vector@4a7a2216, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@425d0ee9, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@78688397, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2e8e2509, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3acc2aa3, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@1384d957, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6dc941b5, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7c36a1d4, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@32d02909, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5ef73872, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@36c8dd7e, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@10efc3af, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5cc9dc61, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@3462ece4, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@209f06bf, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@6cc243fd, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@6cc243fd, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@13ce3993, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@3cff3b04, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3556ec78, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@77b3ed96, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@68d1abaf, 2, 5): success
test SubList.testIterator(java.util.LinkedList@2c580ca9, 2, 5): success
test SubList.testIterator(java.util.Vector@3140fb1, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@569ceef8, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@79c7c002, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1e04303b, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@6a910ae3, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@dad62f6, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4af9f73a, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@26f3e392, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@629cd15c, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@6744e304, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@21ca9b56, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4a0cbd73, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@3b018f0f, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@3ceb7e21, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@78459a1d, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@5eb584ff, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@5eb584ff, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@203f101a, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@49731ad6, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@3a6316c, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@7ff42a30, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@8e2a432, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@454b3c8c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@525261e2, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@7bf4f0c3, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@11379a99, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@12fee472, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@32765bca, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@1aefe814, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@42687eef, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@62c7af69, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@27f6b086, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@15334510, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@453f82f4, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7ba0fa6b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7a6d8e59, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@66e16898, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3d6a4049, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4e9b5139, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@4e9b5139, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@1629ebf3, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@10389214, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@60695f1e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4d573344, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@154f6cd6, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@4496b968, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@7fe1c9ff, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@4c5cc671, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@6b84f6fb, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5e1a8ff8, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@131598b7, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@10aebe26, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@24d4a7aa, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@6ca613e7, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@47fad9e0, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@281786b4, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@7bd16874, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@fa27fa2, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@393b1143, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1d960839, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@7f0a8d2c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7a4b54d4, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1ea37202, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@63cc9e5c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@c287092, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@c3507a5, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@67b2636d, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6374302f, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@453e5912, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@36e66c99, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6e4e0fac, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6e4e0fac, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@1b5ec832, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4a42b577, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7aed6381, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3c0d8c0c, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@cbc1ff7, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@70ed29dd, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@ce2d904, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@39b99bfc, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@295dc498, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1219473e, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1219473e, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@8f68d01, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@5cfb03b4, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@7a9b1858, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@5e0ba07c, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@4f1c1e28, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@73119881, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@b8ce9f7, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@504e5ab4, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@6a096259, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@470966eb, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@57255e39, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@3e1a39cd, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4a2dd471, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@56b75a13, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@618bef02, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@529620a7, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@209ac524, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@11b076df, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4752614b, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@20ea0da4, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@7c74161d, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4a2614b9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7d3eaaa8, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@30ea90ab, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2d197a58, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@62cb7fac, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@67f2b94e, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@24e89b07, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@38fa8f7e, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@6a051318, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@2832ce78, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@2832ce78, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@199987f, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@2b4ec62d, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2096bdca, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@74e2254e, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@3a0223d7, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@57bc712b, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@57e2db9c, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@736d3fe6, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@6bca775f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@48c1a316, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@3a0f5e4c, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@6464ff85, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1b2ff3dc, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@dfd921c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@10c6edc7, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@3fb63205, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@12fb3d2a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@1f7cef78, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@182c48aa, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1d67d89d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@1d170ac5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1ccec27e, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([2044267076], 0, 1): success
test SubList.testListIteratorSet([-1455593040], 0, 1): success
test SubList.testListIteratorSet([-733358883], 0, 1): success
test SubList.testListIteratorSet([-276913808], 0, 1): success
test SubList.testListIteratorSet([-624368497], 0, 1): success
test SubList.testListIteratorSet([-2127171795], 0, 1): success
test SubList.testListIteratorSet([1326991952], 0, 1): success
test SubList.testListIteratorSet([-520989369], 0, 1): success
test SubList.testListIteratorSet([2141044124], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@78e55e13, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@15d44453, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@2e67248e, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@44010071, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@28487e17, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@16108a3e, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@21729cc9, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@1909dbbf, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@6996e352, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@629f38ae, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@5d5d4a94, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@159fd3c2, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([575504275], 0, 1): success
test SubList.testListIteratorSetPrevious([-1470255126], 0, 1): success
test SubList.testListIteratorSetPrevious([-1321779079], 0, 1): success
test SubList.testListIteratorSetPrevious([-1850580017], 0, 1): success
test SubList.testListIteratorSetPrevious([2104356017], 0, 1): success
test SubList.testListIteratorSetPrevious([-818059686], 0, 1): success
test SubList.testListIteratorSetPrevious([846712750], 0, 1): success
test SubList.testListIteratorSetPrevious([1031521673], 0, 1): success
test SubList.testListIteratorSetPrevious([-1056734184], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@8b3f9b0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@685be9d2, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@500d7747, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@1958840e, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@46973f04, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@625a8084, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@3eb78aef, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@4f3b4cb5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@33169253, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@4287efd7, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@505632c2, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@18508a2a, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@7bb1e7e4, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@354d1acc, 2, 5): success
test SubList.testModAdd(java.util.Vector@27330d53, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@51d75367, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@7711a38a, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1d3cb4cf, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@147d67f4, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@46464a21, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3e91468, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@696f120a, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@7a1423ee, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@142f3f90, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@4fe01a91, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@3bd4221b, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@341ada90, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@18ff112c, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@add7e13, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@619dc2da, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@67f905d2, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@37044426, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@309617cb, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1b4fbc10, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@7657551d, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@61f4c715, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@3f1cb9fb, 2, 5): success
test SubList.testModClear(java.util.LinkedList@2fc8eda5, 2, 5): success
test SubList.testModClear(java.util.Vector@3a787a7e, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@5d29e9dc, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@4a431701, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@49bb686a, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@213d063e, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@18dc5ee6, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@53b3484, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@419da0bf, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@2724a3ec, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@57922447, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@14265bf5, 2, 5): success
test SubList.testModGet(java.util.LinkedList@ec3e43b, 2, 5): success
test SubList.testModGet(java.util.Vector@3b0a786e, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@7532f08d, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@2b7e9d85, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@2496dd87, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@42998213, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@1b8a4b9, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@37e72e5c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6131e148, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@53257cc0, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@58dcb738, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@eb0dc18, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@6f14bf8b, 2, 5): success
test SubList.testModHashCode(java.util.Vector@4a177ae2, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@149151a5, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@5e210034, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@47c4b51, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@78ca6b0c, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@75713e0e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@174f6660, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@76514d7f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@11fb47c7, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@36421ff, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@23962c02, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@e3631fd, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@7ab075d6, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@5556dfef, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@613ffc0d, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@6d5e110b, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@2a3e352f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@193bc9a3, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@d068436, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4cf25e5d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@71069f73, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@3b4dea1d, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@4597b95a, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@966914a, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@3ae645eb, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@30dd7fcc, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@614ad6e9, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@55ce9750, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@5347ff5e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@494d6d25, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@2d1c060c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2731fa03, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@46d20711, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@57cb492c, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@309df4d9, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@67a62bc6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@2c95e417, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@d3ff2ef, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@72e89439, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@53a275e4, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@679b0f2b, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@44d08df7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@a9bd15b, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@20bd88fa, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@722cd877, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4ed949f3, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@4ec63c1f, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@61c5c5d1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@6b9ea24a, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@3bb27c32, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@b59da56, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6157fece, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@6ca8f12d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@1911d640, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2bcd5f0e, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@c28d4e6, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@7299c46a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@46ae068f, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@18b3ce12, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@478cfe90, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@65ec20b2, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@23636f7d, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@905ff5c, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6989c68e, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7cf4782, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@3bfda7d5, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@526e23db, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@25465060, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@2d49bb4b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5531e4dc, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@23a6e341, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@593be87a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@5f8c52be, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@7daeb925, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@2ba6c4a0, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5f555384, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@47a7603c, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@30dd1943, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@5f4d205d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4f73ed72, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@6292e01d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@42d8a894, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@2552e5b7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@76bf1f84, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@44e058fa, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@e44948d, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@55b3efd4, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@30fe62b2, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@7b3c16ef, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@1f51543, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@77a1ce23, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7482b23b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@68ceaed0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@73ecd133, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@1beb9b78, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@32e8cce9, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@655fc168, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@2fa51c41, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@5355431f, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7f821ddb, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1a4f2a32, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@1fe8b11f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@4154664e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@331de7fc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@3de85977, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@367afe5c, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@14db8f4c, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@623cdd0a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@2e59c45a, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@74e3ea2, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@536b2e1, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3af4a66, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@3890f453, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@221ef709, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@1a65f6ee, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4f5e7d7d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@1ad262a8, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@57bbca65, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@4b18ed77, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@4b6d51dc, 2, 5): success
test SubList.testModRemove(java.util.Vector@25760821, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@50065e01, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@7b84102a, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@3ff5390d, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@3b04551f, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@7c8867b3, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@55b4a502, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@185a2967, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@299fcdf8, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@440dd8b9, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@69eed673, 2, 5): success
test SubList.testModSet(java.util.LinkedList@46dbd6c4, 2, 5): success
test SubList.testModSet(java.util.Vector@24047174, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@5a9473e3, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@557b2e86, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@61a1aaae, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@244b9074, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@4e4f9dc6, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@5a7c2bdb, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@7718abd1, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@8b7e75e, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@222805dd, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@3a12a130, 2, 5): success
test SubList.testRemove(java.util.LinkedList@2f4a9a6e, 2, 5): success
test SubList.testRemove(java.util.Vector@54092298, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@3e7ba5b1, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@2677cfdd, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@36e00021, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@1329d99e, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@5b5d3bad, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@4aa1887f, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-350165264], 0, 1): success
test SubList.testSet([793487683], 0, 1): success
test SubList.testSet([1285271092], 0, 1): success
test SubList.testSet([-291804279], 0, 1): success
test SubList.testSet([-913898753], 0, 1): success
test SubList.testSet([-1538235075], 0, 1): success
test SubList.testSet([328953945], 0, 1): success
test SubList.testSet([2070106932], 0, 1): success
test SubList.testSet([-754355924], 0, 1): success
test SubList.testSet(java.util.ArrayList@7052861b, 2, 5): success
test SubList.testSet(java.util.LinkedList@5592a0fd, 2, 5): success
test SubList.testSet(java.util.Vector@5db365a2, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@7f802a35, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@2a08469f, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@4461f1fa, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@450a889e, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@41862d31, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@da20943, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@68966c5f, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@afb76, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@a53c3ac, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@69b72aff, 2, 5): success
test SubList.testSubList(java.util.LinkedList@167c3b1e, 2, 5): success
test SubList.testSubList(java.util.Vector@59124244, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@703e54c9, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@21c7846d, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@4d810ca1, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@5da1ea3a, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@b04b6d1, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@5e2c0b7a, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@140c0cfd, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@50b6bef1, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1abd0b6d, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@7268897e, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@7fe741a6, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@2bb658e7, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@6b496923, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@2b284f24, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@68faf590, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@68faf590, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1af6d1dd, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@47c0320b, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@7b6e7186, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@67360509, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@3a57958, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@451d2d4b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@7f452a45, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@3d18839, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6fe8f383, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@340c4e5b, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@340c4e5b, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@2799aa08, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@60e3d137, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@25b6ec8e, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@20d9966f, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@9eaa33, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3d55dc95, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@50c5060a, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@3e200a96, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@77c2371f, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@f75389e, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@f75389e, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@3d36052, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@671daa73, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@597035d1, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@563e3fa6, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@10be7584, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@1fde5bbb, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@33928073, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@7fb73466, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@5cd66991, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@a390ac, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@a390ac, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@722170fe, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2ecabb25, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@1651662e, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@5e56248b, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@52c0e163, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2ed36ce0, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@6504e6d4, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@19d8ff0b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4a29c242, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1a20a51b, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@1a20a51b, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@757ec2ee, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@11ce3fc8, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@156cd978, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@52bbb399, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@363f6b3f, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@61d69cb1, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@9565c1b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@7933fc8b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@52dcf8c, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@5e899c10, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@5e899c10, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@b7e8d23, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@41a0e77c, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6c7f620a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1c5b5e17, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@61d886b9, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1d49eeed, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@5aedb1cf, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@172b2d6a, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1239b341, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@8654ada, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@8654ada, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@4e6cd00, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@62d3f17, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4cf76f2a, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@3e817b4b, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@fa5ff67, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@68cbdd8b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@74a59ccc, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@3e60a688, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@4e53000, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7cd27761, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7cd27761, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@75ddee66, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@75527dbe, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@27e56fac, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@4145607, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@608b67d8, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6a2af493, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1e848b60, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@7b947e5, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@4bd3c7c5, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@4976538b, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@7b278073, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@59850c95, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@13598964, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@51384e6a, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@17bc96ac, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@603e60d3, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@7f0fc6af, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@1f9a655b, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@294eccca, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@155cce98, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@155cce98, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@4a59f2d4, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@63c9947c, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@7bfd5caf, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@7b7db8d3, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
