#Test Results (version 2)
#Mon Apr 29 01:00:49 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\r\nUSER_SPECIFIED testng SubList\r\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=407 0\:00\:00.407
end=Mon Apr 29 01\:00\:49 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az978-691.aqccnys5fsauxnvc2cwlk3lemf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-29-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Mon Apr 29 01\:00\:48 UTC 2024
test=java/util/List/SubList.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=407
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\List

#section:script_messages
----------messages:(7/551)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4c630b0b2463c476ae1e6c8cae3ae981b793158c, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: D:\\a\\openjdk\\openjdk\\test\\lib
   class directory: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib

#section:build
----------messages:(7/282)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Mon Apr 29 01:00:48 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Mon Apr 29 01:00:48 UTC 2024
elapsed time (seconds): 0.015
result: Passed. Build successful

#section:compile
----------messages:(7/278)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:00:48 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 01:00:48 UTC 2024
elapsed time (seconds): 0.015
----------configuration:(12/805)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3662)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java'
result: Passed. Compilation successful

#section:build
----------messages:(7/211)----------
command: build SubList
reason: Named class compiled on demand
started: Mon Apr 29 01:00:48 UTC 2024
Test directory:
  compile: SubList
finished: Mon Apr 29 01:00:49 UTC 2024
elapsed time (seconds): 0.063
result: Passed. Build successful

#section:compile
----------messages:(7/274)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
reason: .class file out of date or does not exist
started: Mon Apr 29 01:00:48 UTC 2024
Mode: agentvm
Agent id: 1
finished: Mon Apr 29 01:00:49 UTC 2024
elapsed time (seconds): 0.063
----------configuration:(15/1098)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/4060)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java'
result: Passed. Compilation successful

#section:testng
----------messages:(7/215)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Mon Apr 29 01:00:49 UTC 2024
Mode: agentvm
Agent id: 4
finished: Mon Apr 29 01:00:49 UTC 2024
elapsed time (seconds): 0.329
----------configuration:(15/1086)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
              D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
              D:\\a\\openjdk\\openjdk\\test\\lib

----------rerun:(28/3592)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91974)----------
Seed from RandomFactory = 2659255684034600178L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 812340808], 0, 1): success
test SubList.testAdd([42, -1472402100], 0, 1): success
test SubList.testAdd([42, 213917566], 0, 1): success
test SubList.testAdd([42, 323931645], 0, 1): success
test SubList.testAdd([42, -1643833508], 0, 1): success
test SubList.testAdd([42, -824140583], 0, 1): success
test SubList.testAdd([42, 952951176], 0, 1): success
test SubList.testAdd([42, -278754822], 0, 1): success
test SubList.testAdd([42, 1159806809], 0, 1): success
test SubList.testAdd(java.util.ArrayList@7c692825, 2, 5): success
test SubList.testAdd(java.util.LinkedList@7b283b41, 2, 5): success
test SubList.testAdd(java.util.Vector@75512a8f, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@754fda93, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@298f8278, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@557fd84e, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@63db9305, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@6ed6a5f8, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@75c3a705, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@6e24bebe, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@360fe2f9, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@793363b2, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-462314060, 42], 0, 1): success
test SubList.testAddAtPos([435609421, 42], 0, 1): success
test SubList.testAddAtPos([508329917, 42], 0, 1): success
test SubList.testAddAtPos([-1706103458, 42], 0, 1): success
test SubList.testAddAtPos([42, -1919359881], 0, 1): success
test SubList.testAddAtPos([42, -1934817537], 0, 1): success
test SubList.testAddAtPos([-859071350, 42], 0, 1): success
test SubList.testAddAtPos([42, 1462338406], 0, 1): success
test SubList.testAddAtPos([42, 1137708833], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@3e910fed, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@15d2fb82, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@d53e936, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@6680cdcf, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@145db8e8, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@717bd20c, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@213eb966, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@33e81369, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@51a11f9e, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5c390774, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@32540fc, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@71b9376d, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@37a2e94, 2, 5): success
test SubList.testClear(java.util.LinkedList@2abe1738, 2, 5): success
test SubList.testClear(java.util.Vector@6b4680f2, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@2f00b412, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@2ddab271, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@4c3d07a4, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@224ae984, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@5cf9b72e, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@2ffb0e3c, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@29c44bb6, 2, 5): success
test SubList.testEquals(java.util.LinkedList@6e914fc0, 2, 5): success
test SubList.testEquals(java.util.Vector@2b1afa57, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@543e3564, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@4c869f2f, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7580ddde, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2d0c89c8, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@ccec256, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@481e8dde, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@517a68ab, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@44bd3cba, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@b0e8a97, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@309b8b22, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@64592af3, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@41a1a5ba, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@69e48f1, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@79e4d9ff, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@1e8b779d, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@1e8b779d, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1ba084cc, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@7e869476, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5a2e1bee, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5fa1c315, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@24ad8b89, 2, 5): success
test SubList.testGet(java.util.LinkedList@bfe1464, 2, 5): success
test SubList.testGet(java.util.Vector@b70b8db, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@65b4ee20, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@64dda55b, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2ce7bce4, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@64c8305a, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@1f04bcb5, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@623be2b8, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7f5a4738, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@277f04fc, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4229cb0b, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@2b301d85, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@4f652c50, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@feef863, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@3b4e38c8, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@311b25ab, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@51bfaf0b, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@51bfaf0b, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@2f518f4f, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@9ef953d, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@6ff911f6, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4c742a4a, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@1dc62e6e, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@2cc82b83, 2, 5): success
test SubList.testIndexOf(java.util.Vector@5564691f, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@2d0b199e, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@4e512ead, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@6ef5ef7e, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@4dd8afaa, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@29e6a44e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@7544c360, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@48555781, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@2a3546d1, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@76618b53, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@53c30ea4, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@44313467, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@55043af9, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@347dda02, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2adf65de, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@376ed747, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@376ed747, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@354dcbcd, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@67326874, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@13a20b8f, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@54fa5c12, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@5b5322d0, 2, 5): success
test SubList.testIterator(java.util.LinkedList@2b61d98a, 2, 5): success
test SubList.testIterator(java.util.Vector@621c39ce, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@357fd7a4, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@481ebf78, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2cc2dcd1, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@230bfe9f, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@214d54c7, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@58a223c6, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@11eab97f, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@72624238, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@3dea183b, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@2c342515, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@74aa5951, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@63f6759f, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@4097a66d, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@3733cae0, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@143cc70d, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@143cc70d, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@5a497b7, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@59dc0ad5, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@54e10408, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@b83b320, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@44e8a4f5, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@7ecbd15d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@1b1d1822, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@134660a, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@76886563, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5da07b10, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@50a6d328, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@437d4f06, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@40fd4217, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2ab3feab, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@182b43a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4b347d72, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@5b4295f4, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3cb8a7ef, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7ee862b8, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@20dabeb6, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3d659aaa, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2d3f254c, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@2d3f254c, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@63296143, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@46317ae8, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@212225e1, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1a7e3387, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@3d16712, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@28fd02c0, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@7aa229c3, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@29edd5f3, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@58f5f3cb, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@e3b05e3, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3dd4e91f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@528a01fb, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@434e543b, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@292021c3, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@2bbdaef7, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@552f8d59, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@7aa3f629, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@627fd420, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4288f08f, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@be6342d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@530af311, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@5f047f47, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1632bf82, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@44a30ef9, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@77dfdcda, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@3bd8799b, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@f760386, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@15c0caa8, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@3396b53e, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2922939, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@796891d2, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@796891d2, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@a269c5c, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@3de05878, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@320d141c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@51663d9b, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@67c50cf2, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6b236f50, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@4dc0b74c, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@7e8d24f, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@19a045cd, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@66e2bdbc, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@66e2bdbc, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@492e1ea4, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@6851b0d8, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@6700c1bb, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@2ae3df2c, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@6335fb76, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@129405fc, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@16bcb202, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@f1394a9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@569b0e43, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2e27de13, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@21271b6d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@1954107b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@28d73548, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@4bfcb27, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@31a6ba48, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@7841d27e, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@93dfd57, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@13173da4, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@139f6ebf, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@420d1e81, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@2833ee55, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@59b01e2, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7ec3b7c4, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@4bf6202f, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4c761d3f, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@5964b12, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@52e553ff, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3343d19e, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@173d48cb, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3d27c5ed, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@27ab45fc, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@27ab45fc, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@490e0c55, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@7a0354ab, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4b38c865, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@26a5f918, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@31fb5acf, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@29a43cc4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@667de9da, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2112a048, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@58e2d5d5, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@336786fb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7438376b, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@678d62c6, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@38e7042c, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@6651dbf8, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@e3fbc04, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@763cfc5, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@7352bfee, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@40951854, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@7a5a7f17, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@33c05a01, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@e3b7755, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1937847f, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1823021317], 0, 1): success
test SubList.testListIteratorSet([1889895135], 0, 1): success
test SubList.testListIteratorSet([-271066124], 0, 1): success
test SubList.testListIteratorSet([163810597], 0, 1): success
test SubList.testListIteratorSet([1324600518], 0, 1): success
test SubList.testListIteratorSet([20819535], 0, 1): success
test SubList.testListIteratorSet([1033064475], 0, 1): success
test SubList.testListIteratorSet([1340386130], 0, 1): success
test SubList.testListIteratorSet([1926894203], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@5c6afd13, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@16a25a5f, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@3af96df9, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@17219ccc, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@53e62801, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7134275f, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@39a32a5e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@43361e24, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@55ed95b, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@23b92937, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@a388d59, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5e400d25, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-994439763], 0, 1): success
test SubList.testListIteratorSetPrevious([2009822796], 0, 1): success
test SubList.testListIteratorSetPrevious([1198300923], 0, 1): success
test SubList.testListIteratorSetPrevious([1615624078], 0, 1): success
test SubList.testListIteratorSetPrevious([728528453], 0, 1): success
test SubList.testListIteratorSetPrevious([789911548], 0, 1): success
test SubList.testListIteratorSetPrevious([-104511520], 0, 1): success
test SubList.testListIteratorSetPrevious([203469864], 0, 1): success
test SubList.testListIteratorSetPrevious([-1902546266], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@3145e009, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@4e99af4b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@66344747, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@785bbd6e, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@3954f1f8, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3a699835, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@2dc09135, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@23a9f7e1, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@1238f072, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1071ec55, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@3a80670e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1f5b310, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@48e7b6b0, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@7bcf2d27, 2, 5): success
test SubList.testModAdd(java.util.Vector@21bb4997, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@21d36017, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@6f4a6776, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@48f3bdc7, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@53c36622, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@21f45234, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@70b26df0, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@61dd3f4a, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@7d613b44, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4aec8522, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@3a89b991, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@7df0367f, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@6d03538c, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@29ee66fa, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@4d87beab, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4d80fdaf, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@7f85f9a6, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@3e2a1b76, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@5a614f3c, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2f866046, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@3b0be1fe, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2f975a22, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@14f2fada, 2, 5): success
test SubList.testModClear(java.util.LinkedList@35fa49c2, 2, 5): success
test SubList.testModClear(java.util.Vector@4bfe124b, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@5e80ea56, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@65233d6c, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1ddd4d91, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1fe6be5a, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@1a6c9fb5, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@424a3eec, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6074128, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@5f59786b, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@5c790d47, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@472bcf78, 2, 5): success
test SubList.testModGet(java.util.LinkedList@a574d7b, 2, 5): success
test SubList.testModGet(java.util.Vector@39200341, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@55f8c708, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@6b953b1, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@53ca4800, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@73dcbd7c, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@7a7aac5a, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@71dd0bfe, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@2ee00aa4, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@33ea9b6e, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@27691fb5, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@30d94510, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@109220a0, 2, 5): success
test SubList.testModHashCode(java.util.Vector@55c5cd41, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@26bdea5c, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@51cb23f, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@31a52bf2, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@69835f2b, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@1709fdea, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@19d82b8f, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@13b5a681, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@2b8770ba, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@1022ff9, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@7d5fc957, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@3a9a43e, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@59e81f29, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@25660cf6, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@153b5382, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@6d8db189, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@36e11376, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@6577943, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@ee82317, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1a35948, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@19013634, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@23c624cb, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@6264a949, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@23052064, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@3f6d6dd8, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@488e71e4, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@41eb966a, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2b7ccfc5, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@4224dc38, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@2b62cd2e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@1a3c3dc4, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@280eed12, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@42f207b1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4a6d1e65, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@6e5d8e4a, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@5c6995e5, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@4aa548cc, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@31f7017a, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@5c73398f, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7f7d0ea3, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1e3e5b9, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@212d7e5a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@33773998, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5cc4f14f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@45bcf4e0, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@24516806, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@35793482, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@4d2cf9a3, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@6631ab34, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@11d1b31c, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@62d48ca2, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@10546cc6, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@603723cb, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@5408cb90, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2bcfeea9, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1365c3b5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@48a9a1d2, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6a32fc31, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@30f2ca27, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@2b8312ca, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@ae5a49e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@49c53647, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@456e08eb, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@440f9ce9, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5736f377, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@c143b6e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5af18b40, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@63cd1efc, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@6c847a18, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@55b0fcb5, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@605f17d3, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@102a6b27, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@144930c3, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@3e512bf9, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@6d058254, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2f892d45, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@65de8875, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@1defdc21, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@6dc6006b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@24c3c80a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@50ad85ba, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5ddd2c91, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@5f04ebc8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@484eb769, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@2958dc2f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@55325db3, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@3aa52e7c, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@472c8268, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@189ccb7c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@1f508e9c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@24e0cca5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@60696882, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@51d97c7b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@30ab7328, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@7a5a1b76, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@577c2929, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@4e2296e1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@5bfee2b9, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@28143817, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4f40515, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@2630d3e7, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@34c14a4f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@57741553, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@30766052, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@6a74ff56, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@398fdde1, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@5b52f95b, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@12d59696, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@624a0f59, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@1fedeb50, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@76b5b566, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@32b2138b, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@176d497f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@59c7ccf2, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@2e66b969, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6f7e46a9, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@4e693281, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@161b35b9, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@64d5953, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@1ff59991, 2, 5): success
test SubList.testModRemove(java.util.Vector@6f2ce657, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@595a156f, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@4f3a378f, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2c97caa6, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@167cb7fc, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@5b8c6147, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@38a9255, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@10c2d555, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@67505e18, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@29f07b42, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@24d2bb3c, 2, 5): success
test SubList.testModSet(java.util.LinkedList@2255a78e, 2, 5): success
test SubList.testModSet(java.util.Vector@2566ec42, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@6250f262, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@19ef387, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3bdddadf, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1e381270, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@4a98a442, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@1a9e9fa5, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3eb41641, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@49bda2d7, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@6e696e10, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@9647b6f, 2, 5): success
test SubList.testRemove(java.util.LinkedList@6e01ffd5, 2, 5): success
test SubList.testRemove(java.util.Vector@3a7c9a, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@37fe7958, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@51be7408, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@64e0f209, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@736eb8f, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@47495180, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@4c2d1b1, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([220644905], 0, 1): success
test SubList.testSet([1894633156], 0, 1): success
test SubList.testSet([-602567357], 0, 1): success
test SubList.testSet([-1640396217], 0, 1): success
test SubList.testSet([-1260823374], 0, 1): success
test SubList.testSet([-999498079], 0, 1): success
test SubList.testSet([-2130538986], 0, 1): success
test SubList.testSet([1294635045], 0, 1): success
test SubList.testSet([-392544615], 0, 1): success
test SubList.testSet(java.util.ArrayList@2fd8a22b, 2, 5): success
test SubList.testSet(java.util.LinkedList@29aa2141, 2, 5): success
test SubList.testSet(java.util.Vector@6d68e601, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@6c7a2cb0, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@1f336ecc, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@230882e8, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@1cc77d46, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@34cb2809, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3ac2f223, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1b219e48, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@6f42712a, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@35d3de5c, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@50d821f, 2, 5): success
test SubList.testSubList(java.util.LinkedList@19ee4021, 2, 5): success
test SubList.testSubList(java.util.Vector@5ad28a08, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@1676e46a, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@5cc0718d, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@12cc3e35, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@3e78fa90, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@38b702a6, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@7d2cca17, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7b72c0c6, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@2cc3c157, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@380aec7c, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@d03e729, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@2c3eba41, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@68d3723f, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@3009954a, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4c73226c, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@453250b1, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@453250b1, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@38d04394, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@388ca380, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@57581875, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@64944a72, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@20112caa, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@7cb536ef, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@32fa5973, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@2d0b0b80, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@59abd55a, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@3eee5541, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@3eee5541, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@280e869f, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@529131a0, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@1dcfe580, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@168a8a19, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@1a7c5e9f, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@d861f7b, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@33c2d9e5, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@59b14f0f, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@38ac6acf, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@66ee4ccd, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@66ee4ccd, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@61d990d4, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@4537498a, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@7d39b419, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5ea4181f, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@77b8f24, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4704640a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@5d65730a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@2251f9f1, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@267eb634, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@580d60d9, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@580d60d9, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@5ee51e5f, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1627c01c, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@2bee3dd0, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@30be635, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@7c4188cb, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4b95063e, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@7374f4b8, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@3dcf81bb, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@444721a1, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@3b8ecbe9, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@3b8ecbe9, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@2bd9bba, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@78b1bb0f, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@2a9f1772, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1e2f39fd, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@660dabbb, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@3e786d66, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7f9b3fc, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@6f90af21, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@afb2646, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@5e7b9442, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@5e7b9442, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@5e890472, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@13022d70, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4424778e, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@840919d, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@16b34a86, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@522230f6, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@64314ffe, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@28609679, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@5520c1cd, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1ec1b760, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1ec1b760, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1280882e, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@16a64030, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@88ae1d9, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6716c4fc, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@6e377c7e, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@242a3570, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3d5f001f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@4805f1fe, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@27d67116, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@6897aa7c, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@6897aa7c, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@365fcba9, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@6d07049a, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@28204ab1, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6c930860, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@1caad2ee, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@40105b9c, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@31ece0e3, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@1dc53036, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@7fcd7825, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@556afde2, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@29775daf, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1e9420ff, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@7a9a0f34, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@6f68f586, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@767b2cbc, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@7b1dba4d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@44a7f66a, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@647b3a32, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@28358fc3, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@755d0ea4, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@755d0ea4, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@1eb62c31, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@54d76e05, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@7cc812c, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@7256fa09, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
