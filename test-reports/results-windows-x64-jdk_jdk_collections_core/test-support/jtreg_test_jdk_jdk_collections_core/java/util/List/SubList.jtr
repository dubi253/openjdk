#Test Results (version 2)
#Tue Mar 05 01:55:19 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\r\nUSER_SPECIFIED testng SubList\r\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=367 0\:00\:00.367
end=Tue Mar 05 01\:55\:19 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az845-568.u3bnpy2jrkgenmayvwcmsbkv0c.bx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Tue Mar 05 01\:55\:19 UTC 2024
test=java/util/List/SubList.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=367
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\List

#section:script_messages
----------messages:(7/551)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-69fdbdd1519928e6c4569a11d14800b4d0f71733, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: D:\\a\\openjdk\\openjdk\\test\\lib
   class directory: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib

#section:build
----------messages:(7/282)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Tue Mar 05 01:55:19 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Tue Mar 05 01:55:19 UTC 2024
elapsed time (seconds): 0.031
result: Passed. Build successful

#section:compile
----------messages:(7/278)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:55:19 UTC 2024
Mode: agentvm
Agent id: 1
finished: Tue Mar 05 01:55:19 UTC 2024
elapsed time (seconds): 0.031
----------configuration:(12/805)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3662)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java'
result: Passed. Compilation successful

#section:build
----------messages:(7/211)----------
command: build SubList
reason: Named class compiled on demand
started: Tue Mar 05 01:55:19 UTC 2024
Test directory:
  compile: SubList
finished: Tue Mar 05 01:55:19 UTC 2024
elapsed time (seconds): 0.054
result: Passed. Build successful

#section:compile
----------messages:(7/274)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
reason: .class file out of date or does not exist
started: Tue Mar 05 01:55:19 UTC 2024
Mode: agentvm
Agent id: 1
finished: Tue Mar 05 01:55:19 UTC 2024
elapsed time (seconds): 0.054
----------configuration:(15/1098)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/4060)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java'
result: Passed. Compilation successful

#section:testng
----------messages:(7/215)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Tue Mar 05 01:55:19 UTC 2024
Mode: agentvm
Agent id: 4
finished: Tue Mar 05 01:55:19 UTC 2024
elapsed time (seconds): 0.282
----------configuration:(15/1086)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
              D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
              D:\\a\\openjdk\\openjdk\\test\\lib

----------rerun:(28/3592)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91972)----------
Seed from RandomFactory = -2571919052894480225L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 234185835], 0, 1): success
test SubList.testAdd([42, 1936365983], 0, 1): success
test SubList.testAdd([42, -1674455735], 0, 1): success
test SubList.testAdd([42, -2009034503], 0, 1): success
test SubList.testAdd([42, -1352419125], 0, 1): success
test SubList.testAdd([42, 2020324723], 0, 1): success
test SubList.testAdd([42, -1101550667], 0, 1): success
test SubList.testAdd([42, 2142456206], 0, 1): success
test SubList.testAdd([42, 1959858945], 0, 1): success
test SubList.testAdd(java.util.ArrayList@69344a, 2, 5): success
test SubList.testAdd(java.util.LinkedList@749c26d7, 2, 5): success
test SubList.testAdd(java.util.Vector@2dad6deb, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@3b1f325d, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@675cd5d5, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@b03bad3, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@6af9e6fc, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@52fb77b4, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@4f03dfa5, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@46b23813, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@3d8f861b, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@48f1e124, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 2054820940], 0, 1): success
test SubList.testAddAtPos([42, 1112420522], 0, 1): success
test SubList.testAddAtPos([42, -187806380], 0, 1): success
test SubList.testAddAtPos([42, -658127144], 0, 1): success
test SubList.testAddAtPos([42, 1515424053], 0, 1): success
test SubList.testAddAtPos([1589924056, 42], 0, 1): success
test SubList.testAddAtPos([42, -971170903], 0, 1): success
test SubList.testAddAtPos([42, -2044069110], 0, 1): success
test SubList.testAddAtPos([1510106627, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@577778b3, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@50fdd499, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@548b9743, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@ab34930, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@14d932be, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@10226488, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@55b409e5, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@1400c760, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@45bb6651, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6f16a6cd, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@6c7d11ec, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@319143fd, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@4ec64a2f, 2, 5): success
test SubList.testClear(java.util.LinkedList@414bd9c, 2, 5): success
test SubList.testClear(java.util.Vector@569ae1c4, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@22bc4607, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@6e0661dc, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@2ab5d150, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@2b6bce49, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@c79a045, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@7d610e86, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@65ff5ff8, 2, 5): success
test SubList.testEquals(java.util.LinkedList@344635d3, 2, 5): success
test SubList.testEquals(java.util.Vector@7cde8779, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@34c40452, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@57a0e5c7, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@38b806fa, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5d3ebad7, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@5a717270, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7818daf1, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3ac6794d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@15afbd30, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5cba0423, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@1e656015, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@12e7f906, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1e22225a, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@1835b608, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@a941aea, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@776d0220, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@776d0220, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@657b9f40, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@4ee26e21, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6428cfed, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@42dce4b, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@6d4d3234, 2, 5): success
test SubList.testGet(java.util.LinkedList@d94f5a1, 2, 5): success
test SubList.testGet(java.util.Vector@6d507599, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@7c095715, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@3a0b6d7b, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@ed82c98, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@72eb03fa, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@7e2f922c, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@117ce9e1, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@44681cf5, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@1fef8dc8, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7f13e926, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@2f28cd52, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@326c4c32, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@719ddba9, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@3b98a9c8, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@454a5f76, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@255b9efc, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@255b9efc, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@3af1dcac, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@cdb0662, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@365952c5, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1695639, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@57312588, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@472a34fe, 2, 5): success
test SubList.testIndexOf(java.util.Vector@12fa4087, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@1acc0820, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@5fc1f1dd, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@13d3f179, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@27f17e6b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@618028db, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@4b74e639, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@64e87018, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@39de1515, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@689c2ed0, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@6fe7a2d1, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1a8a7a10, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@75dfecef, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@36dd8549, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@39d6f74d, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@45ed48d1, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@45ed48d1, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@3199ec30, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@370416f4, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@13417dab, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@768262b6, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@70037fd1, 2, 5): success
test SubList.testIterator(java.util.LinkedList@1ef7b50c, 2, 5): success
test SubList.testIterator(java.util.Vector@1c0cc5a8, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@5ab8afce, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@1532701, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@46c7f274, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@61613f19, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@36fee0ff, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@34d77d03, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@25155baf, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@462cb961, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@407916cc, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@518aa518, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2d7c9f61, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@7fa6bc05, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@3546be55, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@40611cb, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@344e8dd1, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@344e8dd1, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@7dd3c9e9, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@2036b0de, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@6d8298a3, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5a2a0820, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@12afa73e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@74656dfc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@2453a667, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@38e295a8, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@19fa0784, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6a00a643, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1c78bd52, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@2cbe5a0a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1a5f93e1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@19a56d45, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@1d525d4d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@40d8eb2d, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@524156c0, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4e844abb, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4617c7ef, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@6a5c6b72, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5b79c3fb, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@5fa8bd25, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@5fa8bd25, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@7ace5c2e, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@782d5b07, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@56ffc4a4, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@8ff4f24, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@9c97549, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@275e7ab, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@61c5552c, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@38c00b9b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@4abc1943, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@79c450e, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6f828e14, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@75f9c0ee, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3c1342ec, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@12092c90, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@52f9aa96, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@550c7e85, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@55ce6937, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@3892dba6, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@32dcacde, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7129688b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@5d87e986, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7eb87980, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@46533e98, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@462da26d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6c18b512, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@7d236ef4, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@58e26706, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@747b9cc3, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@818e8f0, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@19f5715a, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@10b7aaaf, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@10b7aaaf, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@a36927, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@10925571, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@2822e376, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@65f00150, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@753fd838, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@3b365da4, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@393c24b9, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@78ee9903, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@da671b9, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1f9413d0, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@1f9413d0, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@633477b8, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@68f7d80b, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@7ce87127, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@794f5343, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@3623383b, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@228eb0c4, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@13f34cc6, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4961ff0d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@ec1e463, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@25e9794d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4b515316, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@75a7e31f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6c637a90, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@6b200ebe, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@6bd29d7f, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@c41a884, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@79038032, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@671ecf21, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2af3a62e, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@fdc4383, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@52387c9a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7673a13e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@695b0723, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@68b272cf, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@127c8057, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@51cfbceb, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1ae481b0, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3e3cedf5, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@1a2f5a6d, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@77860bec, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@79d755fc, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@79d755fc, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@5ec1ce15, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@118cb1e6, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@301ddbd4, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@919c6a1, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@5b27d05d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@1f3e4fd9, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@b190b5d, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@5976b8cb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@5f49237b, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7ad72aa0, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@7da835cf, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@73edf587, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@403d5bcb, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@23ef463f, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@37b92c24, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@7c3356bc, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4d9bc78a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@6b54883c, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@40bedaf8, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6ae7f99, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@347bc2be, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@289e8248, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([877153827], 0, 1): success
test SubList.testListIteratorSet([-946584038], 0, 1): success
test SubList.testListIteratorSet([-2058092695], 0, 1): success
test SubList.testListIteratorSet([-1477077237], 0, 1): success
test SubList.testListIteratorSet([-826519903], 0, 1): success
test SubList.testListIteratorSet([1844573785], 0, 1): success
test SubList.testListIteratorSet([-1837283317], 0, 1): success
test SubList.testListIteratorSet([760630851], 0, 1): success
test SubList.testListIteratorSet([1628949430], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@57faca2d, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@320a21d2, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@229cdc5c, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@39ca8ef6, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@685e1cff, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@369682a4, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@20852129, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@49f9316e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@5b1a613f, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@50d3d2d1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@76084d7d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@67a29c43, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-200401611], 0, 1): success
test SubList.testListIteratorSetPrevious([10046127], 0, 1): success
test SubList.testListIteratorSetPrevious([922752105], 0, 1): success
test SubList.testListIteratorSetPrevious([-507127216], 0, 1): success
test SubList.testListIteratorSetPrevious([1072737975], 0, 1): success
test SubList.testListIteratorSetPrevious([1256578746], 0, 1): success
test SubList.testListIteratorSetPrevious([-1028514508], 0, 1): success
test SubList.testListIteratorSetPrevious([-1166632834], 0, 1): success
test SubList.testListIteratorSetPrevious([1337898600], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@713bb24c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@33dcde74, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@40b86c20, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@3170ad50, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@3642367a, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3153a303, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@67c0b31f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@2295195c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@3528c21d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@26577c8f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@14123a31, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@33797ad7, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@b0e43ab, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@6ad0e2e6, 2, 5): success
test SubList.testModAdd(java.util.Vector@49dc432c, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@7e606cc6, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@57d6dd05, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@6a7b3a2d, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3605a6b8, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@111a944a, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@e524ac4, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@72563140, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@331ffed7, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1d1fffad, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@2180f6fc, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@67077048, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@3a5ecc67, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@3c03d59b, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@13aee129, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@22d448a, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@408db0ac, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@ffb3b7a, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@7314e008, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@131ee543, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@10a54415, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@702a0801, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@2248a900, 2, 5): success
test SubList.testModClear(java.util.LinkedList@3dda8359, 2, 5): success
test SubList.testModClear(java.util.Vector@180c0fe9, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@1fb76027, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@45b8b7a5, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@609aaddf, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@4128d912, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@723e6ab0, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@5e87902e, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@66b58c61, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@5cfbe989, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@9a97844, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@17fd4ca1, 2, 5): success
test SubList.testModGet(java.util.LinkedList@289bf0e7, 2, 5): success
test SubList.testModGet(java.util.Vector@7d9888e1, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@56e38acb, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@5b219eb, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@2c70de32, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@275aec81, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@16cae595, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@42a194b7, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@36393628, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@30100c00, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4c62ef36, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@84a63ed, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@7e056538, 2, 5): success
test SubList.testModHashCode(java.util.Vector@2c9fa700, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@74bf0e39, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@5d98efd7, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@4495dc7e, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@250bfd79, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@39da87ec, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@46ea1e61, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@4eff8f68, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@62dfd6ad, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@4f495012, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@173854c0, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@9c4b0fa, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@294b279c, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@9454f3b, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@2ad46a7, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@57aec104, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@1a947c7d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@44fca04f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@2b27ded8, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@30e10fda, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@7e6c0656, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@26cec4c2, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@5da42c4c, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@83a4a6f, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@331701c1, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@2362d850, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@b6f527d, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4bbfb04e, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@503091e1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@4a01a0a4, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@5180e1eb, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3872f538, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@35a2ad02, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6ee4355d, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@3311a4d0, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@96fb6d3, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@5456fab8, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@e714d42, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@787bc536, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6388f635, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@5d9eb62, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@7bef1a68, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@7c856d69, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@33b349b9, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@3a888fc6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@424ec32f, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@3f82f1a8, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@1abdd748, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@4532c021, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@1941ee13, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@c6ea79a, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@649ef56c, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@30aa20f7, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@1ce88060, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@3c85014d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1a0d012b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@1ab7b767, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@59dad4a8, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@5a1da9eb, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@6b226bdf, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@e73fdf9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@37e7e43d, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@2db9d50b, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@72570839, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@ed41ae3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@704f3c5c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@743cd5b, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2bbe8142, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@6d736595, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@47531c12, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@60b5a7d8, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@6e5f0e8, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@27c14cfd, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@17d679d7, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@6de52346, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1a755325, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@6f59a6e9, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@2d5144da, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@363810e6, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6217099a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@24890dc3, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@426d6bb, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@6d47962f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@751c31e8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@7e3cc9de, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@6f33806, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@6fd4e580, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@447e2a0f, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@e76bd1d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@70a71b00, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@38f2752e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@56a0f9ac, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@4349c996, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@30337bb8, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@51a827ed, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@51d0531e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@31f7dcde, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@137e2af, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@2ffaa935, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@23e21a3c, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@5dcd8297, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@6d6b475, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@311e5d73, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4501971, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@72d3818f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@72e99cb7, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@74aeb583, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@2d52676c, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@2f1f589c, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@4613b7a8, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@5a5b38af, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5f8216e0, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@793c0898, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@876755e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@658b626f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7b37d7d0, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@6f3c1a1f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6e543203, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@2ff3bbb3, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@28be7a06, 2, 5): success
test SubList.testModRemove(java.util.Vector@19344f05, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@4bbebcc4, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@37cdd073, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4020df75, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@4202e6e4, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@4ab01e7a, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@2b6cf879, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@b61041, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@52637080, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@54cb543a, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@66053ca7, 2, 5): success
test SubList.testModSet(java.util.LinkedList@459533f5, 2, 5): success
test SubList.testModSet(java.util.Vector@9e92d37, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@14a10318, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@24ddf550, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@7c104605, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@3c594f4b, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@b7d5b27, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@208c4e8e, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@2c5823cb, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@732697f2, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3cdb47b9, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@6c1b741f, 2, 5): success
test SubList.testRemove(java.util.LinkedList@386aba8d, 2, 5): success
test SubList.testRemove(java.util.Vector@229c1ce7, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@4b26adc0, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@d791e47, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@3f3948b9, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@5f934f15, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@160699d7, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@260946a7, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-928526871], 0, 1): success
test SubList.testSet([856462301], 0, 1): success
test SubList.testSet([-1949712643], 0, 1): success
test SubList.testSet([-1429156878], 0, 1): success
test SubList.testSet([-1138302854], 0, 1): success
test SubList.testSet([1876172504], 0, 1): success
test SubList.testSet([1425874153], 0, 1): success
test SubList.testSet([-1456488360], 0, 1): success
test SubList.testSet([-1290373894], 0, 1): success
test SubList.testSet(java.util.ArrayList@468563e2, 2, 5): success
test SubList.testSet(java.util.LinkedList@2491825b, 2, 5): success
test SubList.testSet(java.util.Vector@17841d1f, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@28609fea, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@7af3dc12, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@ce6ad47, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@67540d18, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@51f022f9, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@fa020f9, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1e22ffd1, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@607d846, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@6e7e593e, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@2106ff51, 2, 5): success
test SubList.testSubList(java.util.LinkedList@232bb0d0, 2, 5): success
test SubList.testSubList(java.util.Vector@557b2081, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@4b7d2da7, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@9cfe798, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6ba45565, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@7d79a5d7, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@4f9de0af, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@176e8338, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6d44a253, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@6758afcf, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7cc879f, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@1e315239, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@64d63d99, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@2035ddf2, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@2a0f89f5, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4484a6fa, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@20892c0b, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@20892c0b, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@2bf1c85a, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@11fdfaa2, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4599c830, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@73f4f8ac, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@102fd729, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@d4d7946, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@12a4a300, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@19a51e61, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@66590e3c, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@6a47f309, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@6a47f309, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@3c7bcd80, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@30f762a8, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@228f9894, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@4d860679, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@5057c54d, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@47fa2007, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1eef5ed5, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@4b7e97eb, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@49cce531, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@7cf96708, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@7cf96708, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@6400a798, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@4c88bd3d, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@5848f676, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@30de24f3, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@5e964b03, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@5bc19504, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@64a6ffa7, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@4f45b743, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3318b796, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@d846995, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@d846995, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2f080325, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@a16e79e, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@59d5003e, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@1521ae84, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@407ac1e6, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@100c5c87, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@397652c9, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@6770755b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@14d8e943, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@71a024a4, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@71a024a4, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@94bc6a6, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@272eb837, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@51ca6f5c, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@8f3b01a, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@49e56c8a, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@f53ad82, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@437ccf5e, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@59bda520, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@114dded4, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@6666d269, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@6666d269, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@219e26fb, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@5bfda717, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@638784be, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7e8d9c77, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@41a6846f, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@65917d83, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@2e5f33b3, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@6ada3394, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@25f36531, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@7a6ecc9e, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@7a6ecc9e, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@76430503, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@272dcfa, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@586ec3cb, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1f121b5e, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@63d471d3, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@5dda7d26, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@52f3249b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@2e2677f5, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7e4c4fb6, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@e13c38e, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@e13c38e, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@71b9db04, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1d579458, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4656c4cc, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@35be1890, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@4d0bd529, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3cf17c4c, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@8000e8f, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@1671bee4, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@33c33ea6, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@2a83f375, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1386c6a8, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1c451fa4, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@491e6ed8, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@7fc55cf, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@2198704c, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@5b49f0f4, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@3b78c2c1, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@18bc3a, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4b02c8d8, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@4ae5cf99, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@4ae5cf99, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@46ae1fcd, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@643e612f, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@5519b7f7, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@7c18b82a, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
