#Test Results (version 2)
#Sat Apr 13 18:39:31 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\r\nUSER_SPECIFIED testng SubList\r\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=406 0\:00\:00.406
end=Sat Apr 13 18\:39\:31 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az838-43.4awh05pbq4rutbt0cbm2mk11xb.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Sat Apr 13 18\:39\:31 UTC 2024
test=java/util/List/SubList.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=406
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\List

#section:script_messages
----------messages:(7/551)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-9e131f8da811034ada7f536be84d846cbe0e777f, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: D:\\a\\openjdk\\openjdk\\test\\lib
   class directory: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib

#section:build
----------messages:(7/282)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Sat Apr 13 18:39:31 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Sat Apr 13 18:39:31 UTC 2024
elapsed time (seconds): 0.031
result: Passed. Build successful

#section:compile
----------messages:(7/278)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:39:31 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Apr 13 18:39:31 UTC 2024
elapsed time (seconds): 0.031
----------configuration:(12/805)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3662)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java'
result: Passed. Compilation successful

#section:build
----------messages:(7/211)----------
command: build SubList
reason: Named class compiled on demand
started: Sat Apr 13 18:39:31 UTC 2024
Test directory:
  compile: SubList
finished: Sat Apr 13 18:39:31 UTC 2024
elapsed time (seconds): 0.062
result: Passed. Build successful

#section:compile
----------messages:(7/274)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
reason: .class file out of date or does not exist
started: Sat Apr 13 18:39:31 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Apr 13 18:39:31 UTC 2024
elapsed time (seconds): 0.062
----------configuration:(15/1098)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/4060)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java'
result: Passed. Compilation successful

#section:testng
----------messages:(7/215)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Sat Apr 13 18:39:31 UTC 2024
Mode: agentvm
Agent id: 4
finished: Sat Apr 13 18:39:31 UTC 2024
elapsed time (seconds): 0.313
----------configuration:(15/1086)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
              D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
              D:\\a\\openjdk\\openjdk\\test\\lib

----------rerun:(28/3592)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91952)----------
Seed from RandomFactory = -5830123447873939744L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -445158224], 0, 1): success
test SubList.testAdd([42, -839930363], 0, 1): success
test SubList.testAdd([42, -356202092], 0, 1): success
test SubList.testAdd([42, -330518896], 0, 1): success
test SubList.testAdd([42, 486064090], 0, 1): success
test SubList.testAdd([42, 407832370], 0, 1): success
test SubList.testAdd([42, -485860638], 0, 1): success
test SubList.testAdd([42, -951139663], 0, 1): success
test SubList.testAdd([42, 1115408495], 0, 1): success
test SubList.testAdd(java.util.ArrayList@2bca1a14, 2, 5): success
test SubList.testAdd(java.util.LinkedList@141b9c0b, 2, 5): success
test SubList.testAdd(java.util.Vector@70598340, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@10131a0b, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@660a85f7, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@374ef7e1, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@75af69d1, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@21855bb5, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@2b9925ee, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@6371dfe3, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@154c7204, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@33b2a92, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -1420201730], 0, 1): success
test SubList.testAddAtPos([-190099892, 42], 0, 1): success
test SubList.testAddAtPos([440249111, 42], 0, 1): success
test SubList.testAddAtPos([42, 116800887], 0, 1): success
test SubList.testAddAtPos([42, 890463007], 0, 1): success
test SubList.testAddAtPos([42, 546021399], 0, 1): success
test SubList.testAddAtPos([42, -227003998], 0, 1): success
test SubList.testAddAtPos([42, -273415424], 0, 1): success
test SubList.testAddAtPos([42, -1112949986], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@57f9eba3, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@2d591320, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@6764020, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@4df91dc4, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@379b9085, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7cc48b72, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@51920752, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@453a1fa1, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@b034182, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6f9e91da, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@67cb399d, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@64e5b051, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@e77604e, 2, 5): success
test SubList.testClear(java.util.LinkedList@6019b8c8, 2, 5): success
test SubList.testClear(java.util.Vector@37d5f34c, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@30782280, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@53211e08, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@6427f581, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@599d2583, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@42fba474, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@4d86ee20, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@4e0c2ec8, 2, 5): success
test SubList.testEquals(java.util.LinkedList@20c4ac11, 2, 5): success
test SubList.testEquals(java.util.Vector@7259b23b, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@260b113c, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@21a11c07, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@28ab95bd, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2a52822d, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@37fbea50, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5dd3f74b, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3adbe2e8, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@69d8055a, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@fb41eca, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@55fe353a, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@77b55c66, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@3b8713a7, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@3c35fc8c, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@5b8c9d43, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@145239b2, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@145239b2, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@e9c0f77, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@78f2ecd2, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@9b5a5f7, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5c374979, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@2581c350, 2, 5): success
test SubList.testGet(java.util.LinkedList@5d832dc0, 2, 5): success
test SubList.testGet(java.util.Vector@180b906a, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@693793b0, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@4459b31e, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4ed01e8b, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@687f0ac7, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@40fea5c6, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@d08d3d2, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@10672f57, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@48c4c66b, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@57b1f399, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@2d13e3b3, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@734d4481, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@48ac77e8, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@ebf5e0f, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6dc754d7, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@307803a6, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@307803a6, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@2193cb96, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@26c902dd, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@2c19362d, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2702d18f, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@33d7c18c, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@15e65396, 2, 5): success
test SubList.testIndexOf(java.util.Vector@75fa8b75, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@36adffc6, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@8ec36b3, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@43a06073, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@66be0d52, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@6bc30bc2, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@5aa15bd, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5f64a2d0, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@5bff6c90, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5c0c54a4, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@7ba10942, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@60671aee, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@244922f7, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@293be1ef, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@28be4e81, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@2641959c, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@2641959c, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@3f1cf071, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@748d3e42, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@602b5e01, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@33a7117c, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@39455acf, 2, 5): success
test SubList.testIterator(java.util.LinkedList@6e7d9171, 2, 5): success
test SubList.testIterator(java.util.Vector@7411abfd, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@275c55aa, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@31226509, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@142dc0d0, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@557eaa67, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@37dce77b, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5459408d, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@25e86e76, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@68a33b31, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@6cd0462, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@36ede933, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4c583b6e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@45b0c854, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@1efe007b, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@676dca7b, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@247adca0, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@247adca0, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@3ccca7c6, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@7e9bae10, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@154649cf, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@7777c716, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@7b5b3e29, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@5a45c66a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@3293f0a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@49c88cf3, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@2de7424e, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4e3c380b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@592445fc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@4182fe05, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@40148813, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@73f95312, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@dbee878, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@7eea3621, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@4417af13, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@dc7e0ad, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@47e75494, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@3b8920, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@464886c, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@17037aaf, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@17037aaf, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@56f52692, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@720c3701, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@56a73b76, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@604d2cf0, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@213ad8cc, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@6aad143d, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@23c766ac, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@4c780f05, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@24803b48, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@4795f335, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@656e8f5e, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@8fdc707, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5497c93a, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@56fec159, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@2bf944dd, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@1b722e81, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@3b0cad36, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@3c0ef379, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2ee3d504, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@45b7f06c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@40381a94, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7e246756, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1335ee78, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@1c57a5e1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7efb8c02, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@6c545b2f, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@49e37aad, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@64624262, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@4d622736, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3aa86d97, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@648d8e41, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@648d8e41, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@7e12fcff, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@7da28f9f, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@422c62f2, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@717338f7, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@aa740c8, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@48b73f0c, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@21699a95, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@4c986bf0, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6d1c7218, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@4b5d78f6, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@4b5d78f6, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@294ecae0, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@6b6ad839, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@15f1bb3c, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@5d1bb71, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@a9e73e7, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1a2412e8, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@29568847, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7d579a68, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@4691eb00, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@33a75fae, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6382b601, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@82bd880, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@405e9d92, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@52327ea3, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@f79fed, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@1fef6c98, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@1e208497, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@6a023a6c, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@71f77fb2, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6cb24568, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@7e97408, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@28a22bd9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@65482020, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@2758c341, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@407a5eed, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@14d397ad, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@41cd3653, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@76432e6f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@3f8610e8, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@449f490e, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@3bb45a78, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@3bb45a78, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@3a6e6316, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@b018737, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@24ab9fb9, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4ee10a6, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@69053c48, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@57564431, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@6ee055a6, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@7f698056, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@706bfd2, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@769029e7, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@55a99c30, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@241e7117, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@40e8bf61, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@1e5b20d9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@32e8809, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@74a4fdc0, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@bb8cfe5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@13e9e688, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1a4116ba, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2454bb83, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@3815155e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6f62fbf1, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([134076420], 0, 1): success
test SubList.testListIteratorSet([869005836], 0, 1): success
test SubList.testListIteratorSet([-1773652860], 0, 1): success
test SubList.testListIteratorSet([1291278034], 0, 1): success
test SubList.testListIteratorSet([1056942960], 0, 1): success
test SubList.testListIteratorSet([1117948819], 0, 1): success
test SubList.testListIteratorSet([-1312299778], 0, 1): success
test SubList.testListIteratorSet([1785937033], 0, 1): success
test SubList.testListIteratorSet([296068436], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@3a1a1264, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@4db7697, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@5235b056, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@6d6090b0, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@1a96dcb7, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@40c47d60, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@7ae92b90, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@746f1618, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@200c88d4, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@21465a86, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@22a1fa7d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3685b619, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-480842235], 0, 1): success
test SubList.testListIteratorSetPrevious([646423296], 0, 1): success
test SubList.testListIteratorSetPrevious([-1957328774], 0, 1): success
test SubList.testListIteratorSetPrevious([1447013905], 0, 1): success
test SubList.testListIteratorSetPrevious([641733855], 0, 1): success
test SubList.testListIteratorSetPrevious([1034295470], 0, 1): success
test SubList.testListIteratorSetPrevious([-1998363684], 0, 1): success
test SubList.testListIteratorSetPrevious([365416160], 0, 1): success
test SubList.testListIteratorSetPrevious([-1361158891], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@7349cc85, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@5f1e78f5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@ec3b2d0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@5eb2c10b, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@6561ab95, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@61ab8380, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@41045c60, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@189ae935, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@59532e1b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@35b08dfd, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@7311f65f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@58cf952d, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@53e4ba0c, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@240cfe61, 2, 5): success
test SubList.testModAdd(java.util.Vector@23fbe78c, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@66e562d0, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@7657cea, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@24135962, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@2f5c794, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@3f16bd47, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@663916a0, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@6c5d518e, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@6d847bbe, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5463ef12, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@6726fbf5, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@792bda31, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@679179df, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@748ef6fa, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@695887b3, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@235fb9f7, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@516930bd, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@2decec9, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@6c51149b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@46662898, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@7f7c32fa, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6af5da51, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@711571bd, 2, 5): success
test SubList.testModClear(java.util.LinkedList@6ea04d15, 2, 5): success
test SubList.testModClear(java.util.Vector@364d8eec, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@9b94683, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@43544783, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@eb741bc, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@523278ce, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@679abf42, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@4fb64fb3, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@bf7bd77, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@65c4af5c, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@41f439d6, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@444fc6e2, 2, 5): success
test SubList.testModGet(java.util.LinkedList@5e3ddae0, 2, 5): success
test SubList.testModGet(java.util.Vector@15c21454, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@11eea290, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@3edd3015, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@5f468efd, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@7414831a, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@6666ebe1, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@67624505, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@5eb08598, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@6c9325fc, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@7b33982a, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@7ffb3588, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@faeb897, 2, 5): success
test SubList.testModHashCode(java.util.Vector@3c17de5b, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@2f5905f5, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@a55cb, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@79e2d72a, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@4420c6af, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@2d9c6b10, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@4a551a74, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@30f9df2, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@7c773b62, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@63507140, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@43a8983e, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@79e22d45, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@37c05205, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@4b5669df, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@3c752a4b, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@50302850, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4c13c57c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@30edfebf, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@372800b1, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7872c92d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@7a153be2, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@1de75d7b, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@1bfb1655, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@4acca617, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@75e9d158, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@718e73c5, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@65993c52, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@55b44e2e, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@2d58a149, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@3d5125d5, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@2f2aecfd, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4fea54a2, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@72f74fe6, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@193e7e04, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@458061ce, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@597a72c9, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@2f3325a8, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@67084023, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@65559b4f, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@59d58f9f, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@2c055cce, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@6b196f9c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1125e653, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@28388d2, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@2a261a04, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@251e99c5, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@129e03da, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@24b8d9cc, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@47275c94, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@70ea486d, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@4549a1, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@447c3540, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@4848115d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@3691b0a6, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@ea69439, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3467c6a4, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@6d2fa8d0, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2a694dd1, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@62089691, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@413c4ee5, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@6d419d9a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@85f0b9d, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@7b69d7bd, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@19a46a1f, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1f724781, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@700409bf, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4a29667c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3d01adb, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@164f83f9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@b5a0296, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@1d8aa06e, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@f20cb1f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@184b0943, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@45ee868, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@46409f27, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@45e6b6a5, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@d6bf279, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@b1bb119, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@11c16f62, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7f9e6b1f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@7be1a9d0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2a73f0d, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@22c5496b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@37d25b9c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@4610786b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@72111b43, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@4e9e618e, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@36b39bb2, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@44c6b751, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@308dc281, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@718692af, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@78fc8d5e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@63f12b51, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7ee7868, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@21dfc7ce, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@5ec1601f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@3df6b428, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@5fca928f, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@720823c6, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5ad562c, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@70e3e9eb, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@563ded81, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@4d6ecedb, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3b8268bd, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@4cfe0b58, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@304bb416, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@6229b721, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@d3ff15f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@4dfb3a89, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@53868ab8, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@5f1b024, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4abaf98d, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@431fbce, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@472422c6, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@81ad279, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4a519b6b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@62bcf432, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@25050f5d, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@2990d44d, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@41c14c76, 2, 5): success
test SubList.testModRemove(java.util.Vector@66b410c7, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@25dc7cbd, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@4f9b4903, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4eea3fca, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@282690e2, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@1383eeb8, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@324bf50d, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@76557c7f, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@338331b, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@592638f9, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@65c1bd35, 2, 5): success
test SubList.testModSet(java.util.LinkedList@633ed0e9, 2, 5): success
test SubList.testModSet(java.util.Vector@1ec5ca40, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@3078c82, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@6a316bf3, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1ef4d027, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@146fca8b, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@4c32e011, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@51bd8f35, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@5be5a9b, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@627bfda6, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@730ecc11, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@6c3207b0, 2, 5): success
test SubList.testRemove(java.util.LinkedList@105c8dd5, 2, 5): success
test SubList.testRemove(java.util.Vector@ebc6b48, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@33068eda, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@654bf42f, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@7b82aefd, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@f3199ce, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@31f00dae, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@819c2fb, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-655122676], 0, 1): success
test SubList.testSet([1019866907], 0, 1): success
test SubList.testSet([-1952843394], 0, 1): success
test SubList.testSet([279660301], 0, 1): success
test SubList.testSet([-219428974], 0, 1): success
test SubList.testSet([1105170215], 0, 1): success
test SubList.testSet([529515943], 0, 1): success
test SubList.testSet([282838409], 0, 1): success
test SubList.testSet([1840620640], 0, 1): success
test SubList.testSet(java.util.ArrayList@59cdcca0, 2, 5): success
test SubList.testSet(java.util.LinkedList@498f45b7, 2, 5): success
test SubList.testSet(java.util.Vector@1dbfbcf5, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@72ae1c4c, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@3e742ec9, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@767acf0, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@25c4ad78, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@567df6c5, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@220ba9e9, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@49d012e9, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@37b3c14d, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1eb084a0, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@273e9f94, 2, 5): success
test SubList.testSubList(java.util.LinkedList@89a5aeb, 2, 5): success
test SubList.testSubList(java.util.Vector@1b6504ed, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@16656b8, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@5d8e23a2, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3d5d76bf, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@78cdcff, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@36fa0be3, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@673b1010, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@42f1d57a, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@71b011c8, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@a9b55cb, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@43100e6c, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@206639d3, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@382e1319, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@e154143, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@14f9aed6, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@8a6da6d, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@8a6da6d, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@3385d147, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@55690d28, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4904fd1d, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@292d3666, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@39d3c123, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@15981e40, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5eedfa06, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@3ef65b52, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@15fd6590, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@66c53791, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@66c53791, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@37d5770c, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@3c87e521, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@2e14c4fa, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@4801b12e, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@8221149, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3a5afd0b, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@7cde4cf0, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@7aa438bd, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6d16812, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@2865dfc0, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@2865dfc0, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@49d38a7a, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@29cd592d, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@26759ff5, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5c7f76a0, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@7433fdaa, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@b09cec9, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3372e261, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@11291556, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@30b0031d, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@221df214, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@221df214, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@4f183213, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@5ba6497a, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@156c80f9, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@39d0d55f, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@7d1a0662, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@764fb517, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@8224aff, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@4566b056, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@58e05d88, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@7a8ec05, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@7a8ec05, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@61415a68, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@6321eda9, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@73839c24, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@74d53795, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@49a94fc0, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1f051f94, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@4780d902, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@346eb832, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@65010142, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@18141f7c, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@18141f7c, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@227d385b, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@339c8441, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@51b7818e, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4ddb6020, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@60041b50, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@18dedf26, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@6af3f9e8, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@406bd62a, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@69716e3e, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@4cfcd1c5, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@4cfcd1c5, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@5a55e9d4, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1ad32d04, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2d04e22c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@35677e85, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@3a118dd3, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7e12489a, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@63caa196, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@4feeda56, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6838f5a6, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7185341e, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7185341e, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@7b13756e, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@198205c9, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@16603b2a, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@4822cbbf, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@5995e760, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@7c2a9919, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@3796e8bc, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@59f46a3d, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@4531af07, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@5c86fb34, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@54ccdfb1, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@15fd2629, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@b275795, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@e1ce14d, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@7f026e6d, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@2a1aef35, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@10eb3417, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@46d5f350, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@75c2a1f1, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@7e1a189e, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@7e1a189e, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@71dfcd6a, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@59b4c5b6, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@656df2c7, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@3a2d51fa, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
