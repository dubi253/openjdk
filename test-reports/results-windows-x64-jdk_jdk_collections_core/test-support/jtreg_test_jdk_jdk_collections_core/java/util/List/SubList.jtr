#Test Results (version 2)
#Sun Mar 17 18:16:02 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\r\nUSER_SPECIFIED testng SubList\r\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=406 0\:00\:00.406
end=Sun Mar 17 18\:16\:02 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1494-168.3ceprcbbckkebkz0gecq512nqb.bx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Sun Mar 17 18\:16\:02 UTC 2024
test=java/util/List/SubList.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=406
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\List

#section:script_messages
----------messages:(7/551)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-ef7197bae629d32a3de322c2efbf3596ade17ecc, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: D:\\a\\openjdk\\openjdk\\test\\lib
   class directory: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib

#section:build
----------messages:(7/282)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Sun Mar 17 18:16:02 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Sun Mar 17 18:16:02 UTC 2024
elapsed time (seconds): 0.031
result: Passed. Build successful

#section:compile
----------messages:(7/278)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java
reason: .class file out of date or does not exist
started: Sun Mar 17 18:16:02 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sun Mar 17 18:16:02 UTC 2024
elapsed time (seconds): 0.031
----------configuration:(12/805)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3662)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java'
result: Passed. Compilation successful

#section:build
----------messages:(7/211)----------
command: build SubList
reason: Named class compiled on demand
started: Sun Mar 17 18:16:02 UTC 2024
Test directory:
  compile: SubList
finished: Sun Mar 17 18:16:02 UTC 2024
elapsed time (seconds): 0.047
result: Passed. Build successful

#section:compile
----------messages:(7/274)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
reason: .class file out of date or does not exist
started: Sun Mar 17 18:16:02 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sun Mar 17 18:16:02 UTC 2024
elapsed time (seconds): 0.047
----------configuration:(15/1098)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/4060)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java'
result: Passed. Compilation successful

#section:testng
----------messages:(7/215)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Sun Mar 17 18:16:02 UTC 2024
Mode: agentvm
Agent id: 4
finished: Sun Mar 17 18:16:02 UTC 2024
elapsed time (seconds): 0.312
----------configuration:(15/1086)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
              D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
              D:\\a\\openjdk\\openjdk\\test\\lib

----------rerun:(28/3592)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91941)----------
Seed from RandomFactory = 4013534511869421751L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -9226804], 0, 1): success
test SubList.testAdd([42, -582719805], 0, 1): success
test SubList.testAdd([42, -28178936], 0, 1): success
test SubList.testAdd([42, 1076335348], 0, 1): success
test SubList.testAdd([42, 1118537627], 0, 1): success
test SubList.testAdd([42, 444449152], 0, 1): success
test SubList.testAdd([42, -993487637], 0, 1): success
test SubList.testAdd([42, 900589277], 0, 1): success
test SubList.testAdd([42, -2106579806], 0, 1): success
test SubList.testAdd(java.util.ArrayList@64a410f8, 2, 5): success
test SubList.testAdd(java.util.LinkedList@7c593020, 2, 5): success
test SubList.testAdd(java.util.Vector@5116716c, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@66d783d1, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@1dc73abb, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@47e30e90, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@591e2900, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@1dc24377, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@e181270, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1145bb57, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@4a3f4bc6, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@74ddd681, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([1134307399, 42], 0, 1): success
test SubList.testAddAtPos([42, -245053831], 0, 1): success
test SubList.testAddAtPos([-1971077264, 42], 0, 1): success
test SubList.testAddAtPos([1062057396, 42], 0, 1): success
test SubList.testAddAtPos([42, 1244723361], 0, 1): success
test SubList.testAddAtPos([161593359, 42], 0, 1): success
test SubList.testAddAtPos([-1074044261, 42], 0, 1): success
test SubList.testAddAtPos([42, 1861972115], 0, 1): success
test SubList.testAddAtPos([1355264927, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@65040bea, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@44a2545c, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@48f63a11, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@47e3680b, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@72c09679, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1143a78e, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@14b7ddb5, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@343c195c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@6b6da030, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7a750ee8, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@51916b05, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@15247a44, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@182694ce, 2, 5): success
test SubList.testClear(java.util.LinkedList@24023521, 2, 5): success
test SubList.testClear(java.util.Vector@696c6ae8, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@7a363b54, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@ed9a378, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@43dc6fca, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@32d80170, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@42b97cca, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@c0fbcc7, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@3ea1e14, 2, 5): success
test SubList.testEquals(java.util.LinkedList@569cbeca, 2, 5): success
test SubList.testEquals(java.util.Vector@4ffcc0a0, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@67841631, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@79ea372d, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6397a70, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2eda2a0f, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@7ce65479, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@c88f700, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@79efe449, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@287af560, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@3899132b, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@3d1ae16f, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@65dc9efd, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@262bad3, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@2d049061, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@de26842, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@2c01c42e, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@2c01c42e, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@6a31c81b, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1fcac7e0, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@53e8ccc0, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@48bb2014, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@26402221, 2, 5): success
test SubList.testGet(java.util.LinkedList@3eee7112, 2, 5): success
test SubList.testGet(java.util.Vector@79ba7ea9, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@3ef84bde, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@2a1cdc2c, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@3beae751, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3ac22e9b, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@1698cd89, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@5095a4da, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@5923f0f2, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@1887bd4c, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6b518ec6, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@742727d3, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6d7abb88, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@361bdb4b, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@3ce2f91a, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@43745de, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@4f232159, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@4f232159, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@4f513d26, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@1cf62d2, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3bf0f480, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2f30db14, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@627de3b9, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@102663c5, 2, 5): success
test SubList.testIndexOf(java.util.Vector@6beb0abc, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@6df06d59, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@a40e74b, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@72f14ea2, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@2b3ef971, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@64e634a5, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@572b6ecd, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4902e1f4, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@5910e509, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@3e80010e, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@b294e7d, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@144afd2b, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@9e37c28, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@6406cb0, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@494748b4, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1a5b04b9, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@1a5b04b9, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@7ae8c4e7, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@4a2ae2ce, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6438bb33, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@62988dd1, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@27609b9a, 2, 5): success
test SubList.testIterator(java.util.LinkedList@62b1a8f9, 2, 5): success
test SubList.testIterator(java.util.Vector@771224ba, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@64c09fcf, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@38e9902d, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1bec29b3, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@73112fb6, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@656bf8da, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@7566588d, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@57003c54, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@1a4d678c, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1c9ea048, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@3aaa89ab, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@169afcc4, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4ce5524d, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@3392f50, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@39e1e3c, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@46b03357, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@46b03357, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@535ff177, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@fe5ac93, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5bf24383, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@7f334862, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@fcafd79, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@7b1a2aef, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@ef13ab1, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@48647fa7, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@5879063b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4a930a9e, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@51c48a5a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@2c1d1155, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@78e7050e, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@31c98d4, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@68f9ded4, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@35c7b48f, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@415d45f8, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@ce79f84, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5f076cc3, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@448e36fa, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@74aa8ded, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6c65a42, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6c65a42, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@21f7f284, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@72bd7331, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1f3da85e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2eba5819, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@4bc10d12, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@77ffa6, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@29c67af5, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@483f58ae, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@286c546b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@f1d2abe, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@169e4ad0, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@628b0c0e, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@62d3613, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@178bf7ce, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@13b083a, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@1043789e, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@7812ed7e, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@5d0086aa, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@19d18080, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@721819ae, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@2e07618c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@10e5daf8, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7219b49, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@88dbefa, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6db02331, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@20e50b8b, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7e4f9ee5, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3f643582, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@cea4845, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1798cf69, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@453501f, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@453501f, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4c84c877, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@60ff184, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@60dd95f0, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@623f53f, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@19e105b0, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@5af3704e, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@713185f9, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@4a9e765a, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@df88781, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@3d433765, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@3d433765, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@16b5f2b2, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@6425320, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@7cf1dca, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@692bac15, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@58b3e4e8, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@218d8781, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@310a8183, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4e9a5b6e, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1063ed0c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3cc0ca4f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@45d7eb76, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@328f83c0, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@195e34f8, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@62827c48, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@2e624f15, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@1835e162, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@78ea50ba, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@30a9336, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@88cb748, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@71b4a255, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@742fc25d, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@63fd8a6, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@35c3ca44, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@744019e4, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4641e102, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@13054c98, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@189b7e45, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@4b9a85c9, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@4fe9b5e5, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@6d3e8a9c, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1f6122e4, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@1f6122e4, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@3c86b477, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@6c81f896, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4bb59a59, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@34d115d1, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@6b63374a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@7e401686, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@884aaa0, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1dbec3c5, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@2980bfb, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@38a6930a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1c73a0d8, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@2d03bfea, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@471377cf, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@5297dbfc, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@350667e9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@3eb3981, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@34151086, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@1ffba8c4, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@55396caf, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@60317d92, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@110911c5, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2a4575c6, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([-1762912808], 0, 1): success
test SubList.testListIteratorSet([728018512], 0, 1): success
test SubList.testListIteratorSet([291922877], 0, 1): success
test SubList.testListIteratorSet([74469268], 0, 1): success
test SubList.testListIteratorSet([825949597], 0, 1): success
test SubList.testListIteratorSet([312070972], 0, 1): success
test SubList.testListIteratorSet([1881193594], 0, 1): success
test SubList.testListIteratorSet([-203336970], 0, 1): success
test SubList.testListIteratorSet([916200199], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@ef73b30, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@2d189578, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@473a0963, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@5dd06488, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@266ecfef, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@180f9c4a, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@3c7f38e1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@349ec40c, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@695c1b17, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@442458f8, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@6d1a6e9e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4f175b7e, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-481917247], 0, 1): success
test SubList.testListIteratorSetPrevious([1914271853], 0, 1): success
test SubList.testListIteratorSetPrevious([2070051491], 0, 1): success
test SubList.testListIteratorSetPrevious([-324656136], 0, 1): success
test SubList.testListIteratorSetPrevious([1338793396], 0, 1): success
test SubList.testListIteratorSetPrevious([1979824186], 0, 1): success
test SubList.testListIteratorSetPrevious([1605752182], 0, 1): success
test SubList.testListIteratorSetPrevious([1563201899], 0, 1): success
test SubList.testListIteratorSetPrevious([-1590538078], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@7bb6e28b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@2ee86c85, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@5fb3127, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@3cc984e7, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@9377e3, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@6386e194, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@4c02e413, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@4e1ff1e3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@6f420b54, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@4d7a331a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@5c558823, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@667a7706, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@789672ae, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@78a74394, 2, 5): success
test SubList.testModAdd(java.util.Vector@34e81b1f, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@453610c1, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@4e876ba9, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@46327131, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@14816002, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@4ce9d793, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@4661da93, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@61a73ec8, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@983740c, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@335b0cf2, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@1a9597ce, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@459d365f, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@5b0fc088, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@71a592a2, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@296c050c, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1a0d982a, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@4ba6eb34, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@7bad02f4, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@5b89cc1d, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7dbf4f6b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@1c5986b6, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4787ad84, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@57551a48, 2, 5): success
test SubList.testModClear(java.util.LinkedList@261c14b6, 2, 5): success
test SubList.testModClear(java.util.Vector@6a0dde9b, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@5ecd748d, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@6771d936, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@59c079e1, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@32c908d5, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@6483ed3c, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@3e44488, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@728ae3b4, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@21ae92a3, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@55fb5ffb, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@6b5875f, 2, 5): success
test SubList.testModGet(java.util.LinkedList@6bf34fb9, 2, 5): success
test SubList.testModGet(java.util.Vector@637d1bfb, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@2c45b66d, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@292deb1f, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@20cfdbde, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@600d7c4d, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@58267f19, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@55efa3b, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@22e797f8, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@e7bb6a0, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4e0a5c22, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@465aaa50, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@662a19, 2, 5): success
test SubList.testModHashCode(java.util.Vector@5466069, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@630f46fa, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@29dbeff7, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@26a69108, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@b8dd29d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@1f747690, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@7ea7f02a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@b9d488c, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@f63eaa3, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@524675ca, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@7d56f039, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@2931f69d, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@3717d4c2, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@3b79943c, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@1ec4e9fc, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@249cca32, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@6ed16c1b, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@64c5bd60, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@499a0638, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@77b6816b, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@3226ef69, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4794929b, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@ce94061, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@49d8258b, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@266bbf5, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@3c78a66, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@201d5b76, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4c49f998, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@ec52e94, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@688d2cad, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@43020c3f, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@753cb334, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@632052ea, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2f9689b3, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@51a2136a, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@1ed628e1, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@70b98431, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@590615d, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@78a0aff, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5d4a8ff4, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@45ec6b1a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@23d3c73c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@253506d6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4c9c6360, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@7ac62fe8, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@798bb785, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@717df732, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@2b4a714d, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@3ddeaf6a, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@28c4760b, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@636c1ac9, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5d70a535, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@7f40c416, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@ec9c923, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@428499ca, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@10203bb1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@21103b58, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@63cd857b, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@15f3db39, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@2e6d38af, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@72381705, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@25def3d2, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@27cd8a21, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1f3ff168, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@38c6a7ed, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@7b476b89, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@8e53d1a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@484412f0, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@64a8757e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7d270c00, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@2186da8d, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@497e2513, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@5c93bdb, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@785319e5, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@40bd530f, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@f819ee5, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@1c643ab9, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@191cafbb, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@4b06aae0, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@66467e76, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@39f90743, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2d5c0341, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@4dba8b44, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@4fc16eb7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@6ded0b88, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@42e2ecda, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@11e3094c, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5641045b, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@741557dc, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@2c58ca9e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@230bdbfe, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@100b8a60, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@6616c3f1, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3de41995, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@3515d014, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@2401a092, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@6cfccaf7, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@476fa9fe, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@2bd1dc9c, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@63f6d5d9, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@67be08cc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@e59a3f9, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@2b63936f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@14a44af7, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@7f19a8f3, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@154d8a90, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@6cbdeea5, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@5b7d277f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@27e55f8a, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@59e463c7, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@2a34f51, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@14e7849f, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@39e5b2db, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@46f8f6d9, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@567ce87d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2373367e, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@f37cc34, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7527ca6d, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@df53a61, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@72bada33, 2, 5): success
test SubList.testModRemove(java.util.Vector@1047b7a6, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@2421cb01, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@7c4a0eb2, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2607b0c8, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@30fe2fe0, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@7c04847, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@36776a42, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@7eb09633, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@3ab5a657, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@e2a6e6, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@497644d2, 2, 5): success
test SubList.testModSet(java.util.LinkedList@2a8b5114, 2, 5): success
test SubList.testModSet(java.util.Vector@675bbcd1, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@2a67a8ea, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@d576b83, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@62060b69, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@64ff9509, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@4d54fe3f, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@10a1ec82, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3a6a0046, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@5e9f5da9, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@498e9567, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@5d331156, 2, 5): success
test SubList.testRemove(java.util.LinkedList@9edd624, 2, 5): success
test SubList.testRemove(java.util.Vector@61010769, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@4eecfbac, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@4b483efc, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@380cd50a, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@379e471d, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@5baa89d1, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@7a0ada90, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-434387716], 0, 1): success
test SubList.testSet([1542789322], 0, 1): success
test SubList.testSet([-1760781995], 0, 1): success
test SubList.testSet([-668053224], 0, 1): success
test SubList.testSet([-1733000603], 0, 1): success
test SubList.testSet([1238220], 0, 1): success
test SubList.testSet([1174990257], 0, 1): success
test SubList.testSet([548989394], 0, 1): success
test SubList.testSet([2002548821], 0, 1): success
test SubList.testSet(java.util.ArrayList@7c9ce0c0, 2, 5): success
test SubList.testSet(java.util.LinkedList@3188f995, 2, 5): success
test SubList.testSet(java.util.Vector@69895687, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@cb0c84, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@10f954fc, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@7675ea6b, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@2716a47f, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@433621fa, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3e60a2db, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1b86fc39, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@326d08f2, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1e233f15, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@4bb2f92e, 2, 5): success
test SubList.testSubList(java.util.LinkedList@204996a9, 2, 5): success
test SubList.testSubList(java.util.Vector@115f2c2d, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@3baa0ebf, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@58365be5, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@350f370c, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6ee15000, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@248b329e, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@522ea99a, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@412c6046, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@c58cb8a, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@67078407, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@4c1d543, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4ec76620, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@2a1313a7, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@2ee288a9, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@6ec13769, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@1a313a5, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@1a313a5, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1b3c5218, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@6b46cd7d, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@6e408b04, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6bd4f8fd, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@3fba17c7, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@55a9bd42, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@272df6a2, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@6686ce6d, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@dae383, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@76b8910d, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@76b8910d, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@1ba67c30, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@616c25e9, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@5805c9ca, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@54db415b, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@6b6f04d6, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3d1877f4, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@2da0278e, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@24b3aca3, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3212ee38, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@6f7cee14, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@6f7cee14, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@26f0013, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@77620ab5, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@190bab38, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@2e70bd4c, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@61a8adac, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3fb70aab, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@71304085, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@3d9a7c81, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@6589bfdf, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@688c9b4e, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@688c9b4e, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@4770bc49, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2e33166c, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@13db85e7, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@3e949b89, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@4c024107, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2fc7effb, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@62e189e7, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@3ab1175a, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@3944bca6, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@7f110bd8, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@7f110bd8, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@7288624a, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@18a46b7, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@418710d7, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@10991970, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@1fddcca9, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@533ece1b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@1c0e720f, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@4d89968f, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@3fd0d40e, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@448fa4a4, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@448fa4a4, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@1c01eed5, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@3f373412, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6f108433, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5a3bc3ec, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@7366dd42, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@54431695, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1882cfc0, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@1f5891fe, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@528f11da, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@650897db, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@650897db, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@75bf43a5, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@112cc986, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@38ba1ef6, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@5e300da8, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@7bab5b5, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@15d4cbfb, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3a2076bc, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@3b52ad21, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@4b392241, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@67d61709, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@67d61709, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@313750aa, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@295a996c, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@43b56dcf, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2bfc1093, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@7cff967d, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@777373d2, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@62b2ca50, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@ec51d81, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@779ad7ba, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@1b90038a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4247d323, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@7f15b915, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@6ae834ed, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@61cb82ea, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@572178ad, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@784d4235, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@6c94f3cd, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@211d156b, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@63ec8d3b, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@75b92b64, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@75b92b64, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@1f908e7e, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@5cd9f48c, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@4e80b878, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@dd7def8, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
