#Test Results (version 2)
#Fri Apr 12 13:50:26 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\r\nUSER_SPECIFIED testng SubList\r\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=406 0\:00\:00.406
end=Fri Apr 12 13\:50\:26 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az657-7.i5gdedbi13oupdivqabz4h0k3h.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Apr 12 13\:50\:26 UTC 2024
test=java/util/List/SubList.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=406
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\List

#section:script_messages
----------messages:(7/551)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: D:\\a\\openjdk\\openjdk\\test\\lib
   class directory: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib

#section:build
----------messages:(7/282)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Apr 12 13:50:26 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Apr 12 13:50:26 UTC 2024
elapsed time (seconds): 0.031
result: Passed. Build successful

#section:compile
----------messages:(7/278)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:50:26 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Apr 12 13:50:26 UTC 2024
elapsed time (seconds): 0.031
----------configuration:(12/805)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3662)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java'
result: Passed. Compilation successful

#section:build
----------messages:(7/211)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Apr 12 13:50:26 UTC 2024
Test directory:
  compile: SubList
finished: Fri Apr 12 13:50:26 UTC 2024
elapsed time (seconds): 0.063
result: Passed. Build successful

#section:compile
----------messages:(7/274)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:50:26 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Apr 12 13:50:26 UTC 2024
elapsed time (seconds): 0.063
----------configuration:(15/1098)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/4060)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java'
result: Passed. Compilation successful

#section:testng
----------messages:(7/215)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Apr 12 13:50:26 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Apr 12 13:50:26 UTC 2024
elapsed time (seconds): 0.312
----------configuration:(15/1086)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
              D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
              D:\\a\\openjdk\\openjdk\\test\\lib

----------rerun:(28/3592)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91964)----------
Seed from RandomFactory = 71156779141061047L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1659900617], 0, 1): success
test SubList.testAdd([42, 604424148], 0, 1): success
test SubList.testAdd([42, 347066767], 0, 1): success
test SubList.testAdd([42, -1651447411], 0, 1): success
test SubList.testAdd([42, -288706854], 0, 1): success
test SubList.testAdd([42, 766779343], 0, 1): success
test SubList.testAdd([42, 1030388900], 0, 1): success
test SubList.testAdd([42, 1677493744], 0, 1): success
test SubList.testAdd([42, -1855009836], 0, 1): success
test SubList.testAdd(java.util.ArrayList@6774bdfc, 2, 5): success
test SubList.testAdd(java.util.LinkedList@4551fbcf, 2, 5): success
test SubList.testAdd(java.util.Vector@200f0c4f, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@e432494, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@2c1226b, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@60402b6d, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@10962853, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@99f456, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@46dd1123, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@75348076, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@7f8be9a0, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@13d1f0e5, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -1084319396], 0, 1): success
test SubList.testAddAtPos([354836808, 42], 0, 1): success
test SubList.testAddAtPos([-362431856, 42], 0, 1): success
test SubList.testAddAtPos([42, 107565892], 0, 1): success
test SubList.testAddAtPos([42, -1685087652], 0, 1): success
test SubList.testAddAtPos([1019591129, 42], 0, 1): success
test SubList.testAddAtPos([42, -1014276206], 0, 1): success
test SubList.testAddAtPos([397686431, 42], 0, 1): success
test SubList.testAddAtPos([42, -1002649213], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@2c27bdf, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@6b74c279, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@14e1d6bf, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@2028bc0e, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@5d275590, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@43158e48, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@2aa1c0ed, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@27815985, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@22d739e4, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@871ad13, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@3cb33882, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@103d077e, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@5a4873d3, 2, 5): success
test SubList.testClear(java.util.LinkedList@4600d914, 2, 5): success
test SubList.testClear(java.util.Vector@4af117ca, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@2360c677, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@4020cf1e, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@410cc0b1, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@4c431d10, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@582de06f, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@6db5e71f, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@40154837, 2, 5): success
test SubList.testEquals(java.util.LinkedList@6f38afbd, 2, 5): success
test SubList.testEquals(java.util.Vector@249c0cc2, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@40dd498f, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@5f142157, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@d54431b, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@3ef4e4a5, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@499aca4b, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@337e278d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@27628ba, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@5b26d21f, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7e9ffd04, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@113c5d59, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@43df71bf, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@389169a3, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@4ad3c983, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@18f7a80a, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@3629f2e3, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@3629f2e3, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@4eeefe36, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@34858a8b, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7f639c40, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@1de60511, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@3379c316, 2, 5): success
test SubList.testGet(java.util.LinkedList@2f2da155, 2, 5): success
test SubList.testGet(java.util.Vector@6c723d6e, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@19fdf690, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@4fe3404, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@6f59b655, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@343e4457, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@3b68f4d2, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@147d018b, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@79eaf7de, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@68766501, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1fd5d20, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@35d13d94, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@397b1603, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@7691d365, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@e6b7768, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@26bae65e, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@42e07fe, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@42e07fe, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@eb69cc6, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@55c438f, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3e7952d8, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@38348dfb, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@755cf44e, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@4b8953e6, 2, 5): success
test SubList.testIndexOf(java.util.Vector@d991420, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@20a5f32e, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@51711956, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@6b517cae, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@47f5fca5, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@55cde372, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1cef658d, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@590ee85b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@778f0cce, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2877e441, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@222f3461, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@939bdd0, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5bc6582f, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@3f19ab37, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@745edf8b, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@57ffd15c, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@57ffd15c, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@19cd645f, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1a806782, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@33c2ebf9, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@13d7555a, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@55cfe60e, 2, 5): success
test SubList.testIterator(java.util.LinkedList@2a301a18, 2, 5): success
test SubList.testIterator(java.util.Vector@53a09eaf, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@4d63eda7, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@4c82411b, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@37023199, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@754349ca, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@419526c3, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@3f88418a, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5a19e7f5, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@25729d87, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@11503cb1, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@1f89289d, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@40ea1abd, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4f8ad489, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@5c1ba795, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5bbcef48, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@21fcc072, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@21fcc072, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@12b451f6, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@30c7b4ba, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@111c5ca5, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2ea9c84e, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@2014e6cd, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@2473d349, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@603ec494, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@3abdd216, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@1037c516, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@31d304e0, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@445b24f6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@5a228e18, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7f0f1638, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@39e0081b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@2bb2d615, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5159781, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@30845167, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4c7880bc, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3ca9fa4e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@65045c3c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@67e138ff, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@262a421b, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@262a421b, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@49ccd60d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@293c2eba, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@36f7db6d, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@50274191, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@63609775, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@20d39f61, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@3a0c0c1c, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@67f139eb, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@17c42feb, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@4dd78e17, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6368c0f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@6ad50b48, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@32545d1d, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@1a87c5ad, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@194bae36, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@4dfb7501, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@269b41b8, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@7210fca5, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4718c075, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@787519dc, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@54314c08, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@2043061c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7246690c, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@7846a9b9, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5c29dea0, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@7636f82, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6d8e3d78, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@a808348, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@26c2b84, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@17ef9db9, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@11a007b8, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@11a007b8, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@16ab79cf, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@57b9fe5b, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@15f9fae2, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@33b83521, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@30712d6a, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@73e757ca, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@7893a9cf, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@59b5efc7, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@5757e925, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@278c91f8, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@278c91f8, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@74af3648, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@79bfc3e9, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@5e27aa3b, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@15f07e69, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@786a4d16, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@75772132, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5b4084d8, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7e2dbc7f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@13665db6, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@49c0f110, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5f37157f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@209e14f3, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@528a49ff, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@2dd6db1f, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@11a89923, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@c8a4cc7, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@2757db97, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@158efa82, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@67bfaa96, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2d49b26a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@23ecf4ae, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4bf915c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@11eec156, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@2045a606, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@a5ee9d4, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@158f0397, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@544c84f8, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@67d986ab, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@3d79cba8, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3a12224b, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@fc7408b, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@fc7408b, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1bd7d85, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@748d0bc4, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@5de5a9a5, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@283908f7, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@72876675, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@eb74e8a, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@3b6a7324, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@3a53d83e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@6a407fab, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@283e1b82, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@90d7d64, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@18761d48, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@55db4694, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@37dd6c1a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@77ef6b62, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@28704963, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@8836ec1, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@18fcc664, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@776116a2, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@5040d4ec, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@7778e76e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@dc6c5c, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([430135644], 0, 1): success
test SubList.testListIteratorSet([-1974476186], 0, 1): success
test SubList.testListIteratorSet([-1465084310], 0, 1): success
test SubList.testListIteratorSet([-109941829], 0, 1): success
test SubList.testListIteratorSet([-1725962666], 0, 1): success
test SubList.testListIteratorSet([-1456682166], 0, 1): success
test SubList.testListIteratorSet([314164363], 0, 1): success
test SubList.testListIteratorSet([92831202], 0, 1): success
test SubList.testListIteratorSet([-2040107723], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@78e98245, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@91961a1, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@3ce442e2, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@22811ea9, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@6c07dcce, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1d2efe93, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@6e4f2f83, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@35eaeb1c, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@7d463632, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1221e8dd, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@25fdc580, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@42f2cdb8, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1605603907], 0, 1): success
test SubList.testListIteratorSetPrevious([2121446523], 0, 1): success
test SubList.testListIteratorSetPrevious([-1232099252], 0, 1): success
test SubList.testListIteratorSetPrevious([-2147405250], 0, 1): success
test SubList.testListIteratorSetPrevious([-855369833], 0, 1): success
test SubList.testListIteratorSetPrevious([783099900], 0, 1): success
test SubList.testListIteratorSetPrevious([2088391567], 0, 1): success
test SubList.testListIteratorSetPrevious([-1510876527], 0, 1): success
test SubList.testListIteratorSetPrevious([699687911], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@2e14d8ea, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@4abcfdaf, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@39d80a5f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@7ec4b26, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@558fb24b, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1e33c16f, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@7c4b2f69, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@1ff1b3e1, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@182a769b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@5c472f9c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@53d83fa4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@27b4812b, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@4a39b325, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@1f55a26e, 2, 5): success
test SubList.testModAdd(java.util.Vector@1e96cb62, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@6ab351c, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@38f6bcbb, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@2e056a83, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@2ec577df, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@17e7337b, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@699afc6c, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4d67ad87, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@3fa50dd2, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5123256, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@63b9681e, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@44884715, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@4c2fe7b5, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@41d087de, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@624a09f5, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@56f0eeb6, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@6fd61fec, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@763a78b2, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@79fdd533, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@ea60411, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@632f2d58, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1691c5b7, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@6276895f, 2, 5): success
test SubList.testModClear(java.util.LinkedList@15f7dda4, 2, 5): success
test SubList.testModClear(java.util.Vector@6ee8642e, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@5a892f78, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@5eb6ab47, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@7ae8de47, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@711d6fda, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@6a62afa7, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@3ad111ad, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@314f3465, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@65a15a0d, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1eb51a27, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@228bfff9, 2, 5): success
test SubList.testModGet(java.util.LinkedList@78c6b4e0, 2, 5): success
test SubList.testModGet(java.util.Vector@1fa667fd, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@5f7e4c80, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@68bc2de2, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@43038e9a, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@47c54bdc, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@50bdb6d7, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@e8145b5, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@10762073, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@4cbcd992, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@410461e6, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@680149f6, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@7b7aedb8, 2, 5): success
test SubList.testModHashCode(java.util.Vector@3d49292f, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@47034c62, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@40cf2dd2, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@353e9b1e, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@63235298, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@57a3a9d3, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@2e7b4fbe, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@53dcb4cc, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@5be555e6, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@2fc8a3c0, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@59af235, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@4851b1b8, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@22cd6fbf, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@68713fb5, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@704b30c7, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@78996f8c, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@78e053f1, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@71c411cb, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@7ed0b3b1, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7a1403a1, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@2de392bd, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@24c62a3e, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@53a6bdd4, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@654873af, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@79aa5c81, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@62afa506, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@7624a3dc, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4e5edb21, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@4db3c635, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@12b15739, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@a922fc9, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@48e25fef, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@1454429b, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@8b57aaa, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@879905, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@67a23f6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@88478d9, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@d559f4e, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@2ec414d3, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6edf766d, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@a44967d, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@5953db7a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@3020f7eb, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6ed81960, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@cb5e6ee, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3773178c, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@25e6a964, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@44aa12a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@7d365f4e, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@62671740, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@1be9af04, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5f9a1773, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@f86d2cd, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@6b327530, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@5b698eb, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7f716f1a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@bc33cdd, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@68b2ea4d, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@2b65eb, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@7a084819, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@7019c022, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@1dbe218a, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@3fa6546f, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@10983dd, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@9613beb, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@13d7cb11, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5fdddd90, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4122f5c3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@3759862e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@c4e7684, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@44b30d17, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@3b5cd649, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@72401f5a, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@3c8068a3, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@5bbb8d5c, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1da9b2e4, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@2c55c122, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@4649598c, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@74677262, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@51d9d248, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@27e8216e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@669844ea, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@5c4b1aed, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@1b57dd45, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@44602f75, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@222b74fe, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@61442e5e, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6f91fa9, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@37d58ce3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@66cd99dd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@117f977c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@d9e4e69, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@5f5c8676, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1e060863, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@370ada66, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@12ece5d2, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@4c6a4b0d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@7709e37d, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@57a07b1d, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1fe0da57, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@61f253ef, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@9dc7e25, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@3aaa66c8, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7953c34e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@78b36061, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@29ed885f, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@77c94c4, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@2e6a4b81, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@2ca3dc9, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@4c1036d1, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@64131073, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4b686343, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@22ccfb7d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@3777b61a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@2b9ea3f9, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@734a63b5, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@26004c51, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@41d835a6, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@696f8cd6, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@6ba95b9e, 2, 5): success
test SubList.testModRemove(java.util.Vector@2845aa34, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@5c69b641, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@119c3d52, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2cde8de, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@f34f7ba, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@4d809bd0, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@b603c0d, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5261a182, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@77b2d08e, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4e30949, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@753b326e, 2, 5): success
test SubList.testModSet(java.util.LinkedList@2c584ac8, 2, 5): success
test SubList.testModSet(java.util.Vector@19956ffa, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@4cd41a4d, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@47bff179, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@29b52591, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@59c2b874, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@66737d59, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@3eac317b, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@773b59b4, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@53eb35e6, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@fbeb7e5, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@731d1fd1, 2, 5): success
test SubList.testRemove(java.util.LinkedList@72fca5a4, 2, 5): success
test SubList.testRemove(java.util.Vector@754b25b4, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@2367dd3b, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@6696440e, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@7b3d84a8, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@2496ef5f, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@253b1eaf, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@65782bd0, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1416937809], 0, 1): success
test SubList.testSet([-1530407967], 0, 1): success
test SubList.testSet([-671364547], 0, 1): success
test SubList.testSet([861460469], 0, 1): success
test SubList.testSet([-1085015191], 0, 1): success
test SubList.testSet([607174349], 0, 1): success
test SubList.testSet([-1247405818], 0, 1): success
test SubList.testSet([1523990710], 0, 1): success
test SubList.testSet([-2122977302], 0, 1): success
test SubList.testSet(java.util.ArrayList@2cef9a9d, 2, 5): success
test SubList.testSet(java.util.LinkedList@c87c2e3, 2, 5): success
test SubList.testSet(java.util.Vector@10ed3c2e, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@411b969d, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@4bf5c5a8, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@6b5566e0, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@38c2f251, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@33029725, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3c84ccfe, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@6ca1ad71, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@3a4a012f, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@7d7e0364, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@6a958651, 2, 5): success
test SubList.testSubList(java.util.LinkedList@388ca11f, 2, 5): success
test SubList.testSubList(java.util.Vector@67d7c, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@28c79746, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@63e14ce3, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7034e10a, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@307d3792, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@6afd7ad3, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@7dc9b1e2, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@76f959fa, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@6cee5b93, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3b2d4dae, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@2eadcec1, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@783265a5, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@140e2c3f, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@3e92d9f3, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@28ff2f87, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@5171c3c9, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@5171c3c9, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@7b76065d, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1c279f9b, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@5176ee38, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@62b32887, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@829968, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@610d5495, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@9529d05, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@3d807d61, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@53441c58, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@79142cf7, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@79142cf7, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@4f6f1a19, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@487319c2, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@5169b014, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@31d43e1e, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@284b501f, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@352fa101, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@1e36bc6a, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@6e77258c, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@34ce687d, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@6d2ba78a, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@6d2ba78a, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@47bc2a2d, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@57c5cfc5, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@2f9ba108, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7ffe8c43, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@4c2c31e3, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@23ec144a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3056bf93, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@6568b92d, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7ae87053, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@3a005ee, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@3a005ee, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@411ca2e3, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@58a980d4, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@4b986972, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@1ff1e45f, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@610ceda9, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@5fcca731, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@77fb0ea5, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@60e91354, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@4da79e16, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5d888620, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5d888620, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@2663c86a, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@416bc795, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@1f12db94, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@20a15f82, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@5cdd1391, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@73606414, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@a5233f6, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@31b2fbf, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@72315ad7, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@10114bc7, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@10114bc7, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@3e40b488, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@4802840b, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6115a114, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@35099b04, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@5ee6275b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@16e805b6, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@495bf510, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@2d659dd0, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@1bddbe3d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@39a77a15, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@39a77a15, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@799496ba, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@60217bce, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2d1b0881, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@347e2501, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@4abfce5c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6ee31263, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@5e93cbce, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@15fa6d1b, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@58066299, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@512d3d64, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@512d3d64, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@72ee2d32, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@35406ef6, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@3667fed8, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@4dfb861d, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@4ed08487, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@18a6b691, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@75e71c0c, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@438ba466, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@1b212519, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@56ce185f, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@62f325dc, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@6382e873, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@674843f4, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1907aea8, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@6114e802, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4a750e82, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@29ff163f, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@8214f77, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@68b1ccaa, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@79d1c592, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@79d1c592, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@6d350ad7, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@3eb2f021, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@656af67, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@4869a5f3, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
