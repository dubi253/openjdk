#Test Results (version 2)
#Sat Mar 16 00:14:10 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\r\nUSER_SPECIFIED testng SubList\r\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=344 0\:00\:00.344
end=Sat Mar 16 00\:14\:10 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1387-525.qlbpdebbqwpe3pov5lpj0n5fhf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-03-15-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Sat Mar 16 00\:14\:10 UTC 2024
test=java/util/List/SubList.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=344
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\List

#section:script_messages
----------messages:(7/551)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-ced5e427db9ce5a0c5a328b30c33edee96767763)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-ced5e427db9ce5a0c5a328b30c33edee96767763, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: D:\\a\\openjdk\\openjdk\\test\\lib
   class directory: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib

#section:build
----------messages:(7/282)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Sat Mar 16 00:14:10 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Sat Mar 16 00:14:10 UTC 2024
elapsed time (seconds): 0.031
result: Passed. Build successful

#section:compile
----------messages:(7/278)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java
reason: .class file out of date or does not exist
started: Sat Mar 16 00:14:10 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Mar 16 00:14:10 UTC 2024
elapsed time (seconds): 0.031
----------configuration:(12/805)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3662)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java'
result: Passed. Compilation successful

#section:build
----------messages:(7/211)----------
command: build SubList
reason: Named class compiled on demand
started: Sat Mar 16 00:14:10 UTC 2024
Test directory:
  compile: SubList
finished: Sat Mar 16 00:14:10 UTC 2024
elapsed time (seconds): 0.047
result: Passed. Build successful

#section:compile
----------messages:(7/274)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
reason: .class file out of date or does not exist
started: Sat Mar 16 00:14:10 UTC 2024
Mode: agentvm
Agent id: 1
finished: Sat Mar 16 00:14:10 UTC 2024
elapsed time (seconds): 0.047
----------configuration:(15/1098)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/4060)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java'
result: Passed. Compilation successful

#section:testng
----------messages:(7/215)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Sat Mar 16 00:14:10 UTC 2024
Mode: agentvm
Agent id: 4
finished: Sat Mar 16 00:14:10 UTC 2024
elapsed time (seconds): 0.266
----------configuration:(15/1086)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
              D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
              D:\\a\\openjdk\\openjdk\\test\\lib

----------rerun:(28/3592)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91949)----------
Seed from RandomFactory = 4177693033068619788L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 845629976], 0, 1): success
test SubList.testAdd([42, -896750769], 0, 1): success
test SubList.testAdd([42, 1807572921], 0, 1): success
test SubList.testAdd([42, 384864441], 0, 1): success
test SubList.testAdd([42, -1649277456], 0, 1): success
test SubList.testAdd([42, -1928582985], 0, 1): success
test SubList.testAdd([42, 484027748], 0, 1): success
test SubList.testAdd([42, 1370254947], 0, 1): success
test SubList.testAdd([42, -770396867], 0, 1): success
test SubList.testAdd(java.util.ArrayList@14f0cebc, 2, 5): success
test SubList.testAdd(java.util.LinkedList@27475cbd, 2, 5): success
test SubList.testAdd(java.util.Vector@69fdc536, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@4901782f, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@661e9185, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@320b200, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@1982f693, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@4d142e5c, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@5ed535f5, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@680b6dc2, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@2468978d, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@1d1be463, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([227121637, 42], 0, 1): success
test SubList.testAddAtPos([1295459154, 42], 0, 1): success
test SubList.testAddAtPos([-748220412, 42], 0, 1): success
test SubList.testAddAtPos([-754688968, 42], 0, 1): success
test SubList.testAddAtPos([1189053874, 42], 0, 1): success
test SubList.testAddAtPos([42, 960626949], 0, 1): success
test SubList.testAddAtPos([-1039533122, 42], 0, 1): success
test SubList.testAddAtPos([42, -1299255853], 0, 1): success
test SubList.testAddAtPos([42, 1490762171], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@552fc3a2, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@6cff90da, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@64842084, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@2f155647, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@4b2c6782, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@126ff06d, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@7bc97e4e, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@6826c698, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@3193c40, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@65dce4ec, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@c274114, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@32caf619, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@5aae13e4, 2, 5): success
test SubList.testClear(java.util.LinkedList@4a089ad8, 2, 5): success
test SubList.testClear(java.util.Vector@339e8c93, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@38a87b09, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@579196e4, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@3c6128e3, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@457d9248, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@6489b6f0, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@535fd733, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@199ac88c, 2, 5): success
test SubList.testEquals(java.util.LinkedList@b59f66b, 2, 5): success
test SubList.testEquals(java.util.Vector@31ca2c6c, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@2c960393, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@688cc8e7, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5e5a6424, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@719d2c08, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@5d6de568, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@7aa8c434, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@46c925b8, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@72f1ddf1, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@677aedda, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@58a39c74, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@637bf810, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@65249f2b, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@5efe425a, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@4487cddd, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@4867a7ff, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@4867a7ff, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@2e2bf2ec, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@65420fed, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6eb6908c, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7790fdaa, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@78911fe5, 2, 5): success
test SubList.testGet(java.util.LinkedList@7570ed25, 2, 5): success
test SubList.testGet(java.util.Vector@5b428d9e, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@4dd25671, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@4f2ba06f, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@63b46eff, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@268f19f6, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@cdaa3ca, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@491445ef, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@132a7da5, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@3a40ad57, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@a9e9b75, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@4f916067, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@134a957f, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@32bbda9f, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@38a3c4ef, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6160efc6, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@53dc9e50, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@53dc9e50, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@32885a50, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@c809012, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@7a33cd35, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7cc6abb3, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@6538ff1, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@6c9b7018, 2, 5): success
test SubList.testIndexOf(java.util.Vector@69f81df0, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@7a8deda6, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@513caab5, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@352dc98, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@5e1aa92a, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@622e6360, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@3d1b1d9c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@35939250, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@7b65db43, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@48e682e9, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@15996896, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@75d77d50, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@644588e8, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@631221ea, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@23315d25, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@64d76d7f, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@64d76d7f, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@2bdab297, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@5e723d69, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@11b9fd1, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@763c837b, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@429b9148, 2, 5): success
test SubList.testIterator(java.util.LinkedList@2627fc2c, 2, 5): success
test SubList.testIterator(java.util.Vector@5b5a9b0c, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@4fe1247e, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@2f4fa7e9, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@4c708741, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@2876e66f, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@4e2b7ff7, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@8cd346c, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@56390a1c, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@1fe2cc44, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2642406, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@5fdaa230, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@6a609efe, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@19240ce1, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@5e5dc136, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@c38057a, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@57452e44, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@57452e44, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@fc5e457, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@3ecdc0da, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4643412a, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@124971e, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@335d927a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@d439122, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@73d4a3f6, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@28fb8e24, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@7bf45bbf, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@308097ad, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@84f715f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@d54fdfc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@507841cc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2aa0f421, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@6b923dc4, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4c931478, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@12da961, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@185f228a, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@e23337e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@79d8b5cf, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@35cbccaa, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@7849d4, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@7849d4, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@36082ba7, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@19ab1101, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@4f114014, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1d8e3c12, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@1aecb9c8, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@40a34d81, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@22a212c8, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@17a6bc6a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@406e8a79, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@68de14ad, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3cced14e, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@233008d4, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5cb790a0, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@34f5546d, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@4e4e20a1, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@1856430e, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@706a397c, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@2d2bc160, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@31104b07, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@38139344, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@1ae49610, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@761d2ae3, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1cfe3f33, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@511bb5ec, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3daf9bf5, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@5bdb52dc, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@69d3403c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5c691692, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@38f4f251, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3924557c, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@48519ff8, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@48519ff8, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4e6dca73, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@6e4aafe6, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@571f75fa, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5f35b414, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@4d0307ad, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@222d3d17, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@267b99b1, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@2b7d11b1, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@15f7c4e1, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@6b683cb8, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@6b683cb8, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@1f7b4bb8, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@7feecb90, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@6a2560fd, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@37dea60c, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@4b40154, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@30ff44b4, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@32b88ba9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3a5152df, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@4e5634b9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@50fd964, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6af87238, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@615a7e4a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7e265ea3, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@7ced274e, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@53090126, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@3588a7bb, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@517b372, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@474db52, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@463bdbc9, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@188277d9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@52fe743, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@40f452e4, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@33d5e458, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@4857386, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1732805, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@df980e, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1b417a56, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@332e355d, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@3e741efd, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@f15d39f, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@925159, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@925159, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@64e98820, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1ec93d59, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@2c14ba5e, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@15c6d4b6, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@5ef2e18d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@1a0a187d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@70efdd1a, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1d5112a9, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@80005d5, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@5ac72c60, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@366e3ea7, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@2f9e57ef, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1321d73e, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@1a901c60, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@20adbeb8, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@335f0acf, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1deda0, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@5dac3560, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1004628e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2cf9bc30, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@3f6040eb, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@5a3ca1ea, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1136681711], 0, 1): success
test SubList.testListIteratorSet([-1848048652], 0, 1): success
test SubList.testListIteratorSet([28311446], 0, 1): success
test SubList.testListIteratorSet([1417331651], 0, 1): success
test SubList.testListIteratorSet([-2120786047], 0, 1): success
test SubList.testListIteratorSet([-38072935], 0, 1): success
test SubList.testListIteratorSet([710674961], 0, 1): success
test SubList.testListIteratorSet([-1542474693], 0, 1): success
test SubList.testListIteratorSet([-1359345817], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@3804e6a9, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@3773f5f1, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@6c5faee9, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@b303c2c, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@607edf42, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6da88142, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@32cfc833, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@644ef13d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@60207dd1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1088cb37, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@4a4f7246, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7f5c6edd, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1149249672], 0, 1): success
test SubList.testListIteratorSetPrevious([-1075752618], 0, 1): success
test SubList.testListIteratorSetPrevious([843705620], 0, 1): success
test SubList.testListIteratorSetPrevious([-171116898], 0, 1): success
test SubList.testListIteratorSetPrevious([-1830439864], 0, 1): success
test SubList.testListIteratorSetPrevious([-1232540091], 0, 1): success
test SubList.testListIteratorSetPrevious([-1334108579], 0, 1): success
test SubList.testListIteratorSetPrevious([1720996425], 0, 1): success
test SubList.testListIteratorSetPrevious([-427889466], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@2d263b, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@560d967f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@53114de9, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@463b72e1, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@a485a2, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1c408271, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@7e83bbf0, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@6d145050, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@21ce4459, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@63797763, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@7ba2eadd, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7ee6cd8f, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@5b740e97, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@5c4abe08, 2, 5): success
test SubList.testModAdd(java.util.Vector@e10197c, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@51ebeaa0, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@777208ed, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@64adf09a, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@43326587, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@4f469c75, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3a691b91, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@21598d8b, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@3c18320, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@c4093e8, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@ddbeb7e, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@57f27f6d, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@4e2a3ab8, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@1e40c4ad, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@58130229, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@745badd9, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@6bc9d6e2, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@1d66686d, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@4f9e1156, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@478ee96, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@7cf0c3db, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@b8de756, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@77062128, 2, 5): success
test SubList.testModClear(java.util.LinkedList@f6a87be, 2, 5): success
test SubList.testModClear(java.util.Vector@5ce4e86c, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@6186112f, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@6c2a33f0, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@5620e9e5, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@4c8e34e6, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@6ec7ef0f, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@13f1bcf8, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@3725a375, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@2bec2edb, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@b80497f, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@12f48a8f, 2, 5): success
test SubList.testModGet(java.util.LinkedList@200f80d8, 2, 5): success
test SubList.testModGet(java.util.Vector@1062a105, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@2ec51aeb, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@2ae2e72f, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@5cff0573, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@26d95f78, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@236ef64, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@d6154bf, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@2bdeb21c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@3287502c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4385dfd8, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@d3afd5d, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@9c49908, 2, 5): success
test SubList.testModHashCode(java.util.Vector@1f4e4865, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@62f77ca9, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@6e1ed8a5, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@4d7d03df, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@23182bcc, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@23f3280e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@22d04a0c, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@33c05615, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@718a8f0c, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@4254f7c, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@d4e61c9, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@28b699a6, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@720b04f2, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@52a3d08f, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@5fd3615f, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7d48b635, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@62e74b49, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@72547cd5, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@5c47d30e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@6b42db1d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@1ea40466, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@5487a282, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@4bbb3458, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@6b671c64, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@7261f093, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@3dcf7226, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@70849b74, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1e911803, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@27d2b3be, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@21f7ad68, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@2e22aa33, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2763bb3, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@58aa9e48, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@47a733bb, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@4e48bdee, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@666bed74, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@515b1c55, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@3e124bab, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@565df970, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@25798879, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@2c70e887, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@1a4979e4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@5ccddb08, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2e4e1a1c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@7a504ef4, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@156a2d25, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@65851b67, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@422bb53, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@13c14274, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@100e6361, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@467f5b0e, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1913d4fa, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@5943e0a8, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@9efd7dc, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@6910aced, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@73b092f1, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@326eab80, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@76bf86b7, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@3e28dee4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@77ae6752, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@3c8a79a8, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@5d05c5dd, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@1c2f7ad3, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1bfce005, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@377fbe6f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@4cb9bd6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@13cb7e2a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6e68bf48, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@16da72d9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@27e78dc0, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@1d5d5436, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@3307319f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@4f44a90d, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@7ea436c3, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@51fe0c68, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@51193c93, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@d762234, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@3b6416d8, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@7cba3c39, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4e875325, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@2d52d176, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7e3ddf07, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@1977498d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@35f9702c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@3b7eaa00, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@17967ec2, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@74a0b7c1, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@39c3916e, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@73767a74, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@77de3fbd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@7bb40948, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@330f88b9, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@58c765b8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@715d50ae, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@44057504, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@51987961, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@924e282, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@5a37882a, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@2229787b, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@392ba50c, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@61f2c122, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@229e44d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@7187ca6f, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2bea35c0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@3d215962, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@44466cb6, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@22e69fb5, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@5b77f35b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@11c2c90e, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@191a7512, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@668b609e, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@4ce6e287, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@22f91e62, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@2ab036d9, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@7c8cf69, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3560b441, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@5f245eaf, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1b922942, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@3fda8de0, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@2671e26c, 2, 5): success
test SubList.testModRemove(java.util.Vector@183d91e, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@1b22d3a0, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@4e942a3a, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2ac9e49d, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@16e16ae2, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@8890b0a, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@369a5aec, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@14d15b62, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@57769244, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@1badc79c, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@5981491d, 2, 5): success
test SubList.testModSet(java.util.LinkedList@2167cd1b, 2, 5): success
test SubList.testModSet(java.util.Vector@327174ea, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@4fff5df1, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@4f410826, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@504e1568, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@16073e76, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@d75d108, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@73dd8f92, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@7eb91e33, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@a1df289, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@5aaa563a, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@4244df08, 2, 5): success
test SubList.testRemove(java.util.LinkedList@54061cd7, 2, 5): success
test SubList.testRemove(java.util.Vector@7b6d9982, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@49aff35b, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@3dcf49e8, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@71ef43c3, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@319794b7, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@1f8ed9f8, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@640be64b, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([388746065], 0, 1): success
test SubList.testSet([-542598250], 0, 1): success
test SubList.testSet([37005260], 0, 1): success
test SubList.testSet([140938904], 0, 1): success
test SubList.testSet([2085403310], 0, 1): success
test SubList.testSet([1957345415], 0, 1): success
test SubList.testSet([-469865704], 0, 1): success
test SubList.testSet([-1998466437], 0, 1): success
test SubList.testSet([1537277888], 0, 1): success
test SubList.testSet(java.util.ArrayList@19969f87, 2, 5): success
test SubList.testSet(java.util.LinkedList@3583251d, 2, 5): success
test SubList.testSet(java.util.Vector@69b64cb4, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@2033c9f9, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@33ca0fec, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@2460f0d0, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3e605788, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@13fa7fe1, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@46f0c410, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@49bf356e, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@73c340d2, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@1870b822, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@16c5cc33, 2, 5): success
test SubList.testSubList(java.util.LinkedList@5de1c073, 2, 5): success
test SubList.testSubList(java.util.Vector@4c3ace3c, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@396a6c7b, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@66de6942, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@380a4293, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@299e3570, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@5e364eee, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@44f8a838, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@8560433, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@3c95de60, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3b25f5db, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@20a87c11, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@59c3c9a1, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@684cc092, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@3a7d4758, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4d59d554, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@10098090, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@10098090, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@252fe41f, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@d2cbe91, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@55e9e391, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@33c03662, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@427e42d6, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@78cf88a3, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4cc0454e, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@780b7ff5, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@46a438fc, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@400904a0, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@400904a0, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@604667f5, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@265843e0, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@2afb6f53, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@345a8772, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@44dc5b, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@513c412b, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@77c7273, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@25decd9c, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@51b3cd2b, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@302d95e4, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@302d95e4, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@7555ef76, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@2800199c, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@272af87d, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@788642c2, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@648ee28d, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4653e7ba, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@874a533, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@17caabe7, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@3899bd8d, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@f039304, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@f039304, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@15d54c88, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@3e24ab21, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@75052605, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@3e7d2ec, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@6e726bc1, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2dfb323b, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@3721ddd7, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@2c72605a, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@166c69fb, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5b0ce368, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5b0ce368, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@7f2ab0c5, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@61efe9ae, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@62e1e1a6, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@37485e5b, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@70a5652f, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@50675898, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@474e070b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@726afcd2, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@480b9a77, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@3fe34644, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@3fe34644, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@733d56f6, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@501d1416, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7e93b83b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5fbb7168, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@dad2bc2, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@256e0b6, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@78b89462, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@1cfb8450, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@4fb2175e, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@44bb12a4, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@44bb12a4, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3aab5ab3, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@131b6437, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@73a84cde, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@5724e40b, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@578e4a71, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2533c67c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@5c75e961, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@2c54f514, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@16794a7, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@4826353e, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@4826353e, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1a8b56e, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@35b782a5, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@185ef3b4, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1ed93611, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@5f164cec, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@7359dfd, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5cd35ef, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@2508709c, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6d8dec6c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@2924b9e9, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@bfe8a51, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@677bfeaa, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@59aebc11, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2ac3b479, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@7618113f, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@54575946, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@10c9145d, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@498b849e, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@72f3dca7, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@4270388, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@4270388, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@e58c8b5, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@4bb8fa96, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@428f0bc5, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@1f26f56, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
