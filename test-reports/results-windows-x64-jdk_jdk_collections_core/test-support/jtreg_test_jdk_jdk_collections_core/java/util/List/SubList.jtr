#Test Results (version 2)
#Thu Feb 29 23:49:36 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\r\nUSER_SPECIFIED testng SubList\r\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=407 0\:00\:00.407
end=Thu Feb 29 23\:49\:36 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az522-336.tjljrzybawyutd3jaybg31kjtf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 23\:49\:35 UTC 2024
test=java/util/List/SubList.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=407
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\List

#section:script_messages
----------messages:(7/551)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-fdc8c16d00ca119b18b719a1ed8edb29414ae9be, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: D:\\a\\openjdk\\openjdk\\test\\lib
   class directory: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib

#section:build
----------messages:(7/282)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 23:49:35 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 23:49:35 UTC 2024
elapsed time (seconds): 0.017
result: Passed. Build successful

#section:compile
----------messages:(7/278)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:49:35 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 23:49:35 UTC 2024
elapsed time (seconds): 0.017
----------configuration:(12/805)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3662)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java'
result: Passed. Compilation successful

#section:build
----------messages:(7/211)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 23:49:35 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 23:49:35 UTC 2024
elapsed time (seconds): 0.062
result: Passed. Build successful

#section:compile
----------messages:(7/274)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 23:49:35 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 23:49:35 UTC 2024
elapsed time (seconds): 0.062
----------configuration:(15/1098)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/4060)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java'
result: Passed. Compilation successful

#section:testng
----------messages:(7/215)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 23:49:35 UTC 2024
Mode: agentvm
Agent id: 4
finished: Thu Feb 29 23:49:36 UTC 2024
elapsed time (seconds): 0.313
----------configuration:(15/1086)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
              D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
              D:\\a\\openjdk\\openjdk\\test\\lib

----------rerun:(28/3592)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91958)----------
Seed from RandomFactory = -4969841582884780481L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1316135482], 0, 1): success
test SubList.testAdd([42, -2138362035], 0, 1): success
test SubList.testAdd([42, 314895349], 0, 1): success
test SubList.testAdd([42, -1121209127], 0, 1): success
test SubList.testAdd([42, 2094965312], 0, 1): success
test SubList.testAdd([42, -1543225855], 0, 1): success
test SubList.testAdd([42, 1637908976], 0, 1): success
test SubList.testAdd([42, -987167560], 0, 1): success
test SubList.testAdd([42, -668113828], 0, 1): success
test SubList.testAdd(java.util.ArrayList@6491437, 2, 5): success
test SubList.testAdd(java.util.LinkedList@5a2448c3, 2, 5): success
test SubList.testAdd(java.util.Vector@3495287, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@7598aae, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@7bea3e51, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@52b2261c, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@3ec706d7, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@4adfd9f3, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@75b17b5d, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@3c160789, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@55b99b, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@16627b0d, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-412150546, 42], 0, 1): success
test SubList.testAddAtPos([786943595, 42], 0, 1): success
test SubList.testAddAtPos([42, 522793166], 0, 1): success
test SubList.testAddAtPos([-337503185, 42], 0, 1): success
test SubList.testAddAtPos([1011732876, 42], 0, 1): success
test SubList.testAddAtPos([43116473, 42], 0, 1): success
test SubList.testAddAtPos([1297410521, 42], 0, 1): success
test SubList.testAddAtPos([2073177167, 42], 0, 1): success
test SubList.testAddAtPos([42, -1593199780], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@48ea9e05, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@2652247b, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@6665e57b, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@1ed4d541, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@37e49be3, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@34642f1e, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@4675ec0f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@4bae5b6f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1d46182c, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@46543d92, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@4bdd42e5, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1007f57b, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@431d757, 2, 5): success
test SubList.testClear(java.util.LinkedList@1739708a, 2, 5): success
test SubList.testClear(java.util.Vector@36bb6a0, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@3488b7d, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@3c23319b, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@552450ce, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@5946f79b, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@3d64d147, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@4ad60619, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@3209ae7f, 2, 5): success
test SubList.testEquals(java.util.LinkedList@7caafe60, 2, 5): success
test SubList.testEquals(java.util.Vector@5d0f8b2b, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@5b278354, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@db723a8, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@33370f0e, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2e5e7e40, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1994c0ff, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5b9c5b51, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7163f6aa, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@22d6d75a, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@78b0bf0d, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@4881ee64, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@3caee875, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1f26c387, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@7dfa4896, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@71cd9f87, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@1d1a77b0, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@1d1a77b0, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@124893cd, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@6c883e97, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@297f00, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7f05e944, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@32a16453, 2, 5): success
test SubList.testGet(java.util.LinkedList@4b66c776, 2, 5): success
test SubList.testGet(java.util.Vector@75e4ada7, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@3d98b14e, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@57f97b6b, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@2b35496b, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@33125a02, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@1d9913f1, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@71eeed12, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@b8c2cde, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@36c090a4, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7f6ffcee, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@2827301b, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@57228459, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@6c0bedc2, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@c3359cd, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@5f9b7212, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@4906b1a3, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@4906b1a3, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@7ca95368, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@523c5b26, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@10b2c256, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@53bdad41, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@3acf33bb, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@223f4d67, 2, 5): success
test SubList.testIndexOf(java.util.Vector@162ed82c, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@3718fb09, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@79d8eb3c, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@408a35cc, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@5a3a2fc7, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@295433ac, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@6b9c8e15, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@51a7d791, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@20677600, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@24acbdad, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@5efc270a, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@18b86b7b, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6c03157, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@635ef31b, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5d31efa3, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@2e262346, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@2e262346, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@3ecfb04b, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@683649aa, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@74c4f769, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@6b8a0700, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@25ce510f, 2, 5): success
test SubList.testIterator(java.util.LinkedList@704fa027, 2, 5): success
test SubList.testIterator(java.util.Vector@617a8cef, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@142b3271, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@4829d09e, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5bd57108, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@29ba5c15, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@4caad355, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@1699c653, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@d7215e1, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@7bbfa873, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@3393b7fa, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@6e8428a9, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@6f215562, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5270a1db, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@31bbcf89, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@3928a712, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@105caef5, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@105caef5, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@1b8405cf, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@130662ee, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@fc84c08, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@10461304, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@771919bd, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@37e37548, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@1b9db511, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@700e10fe, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@160d5615, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1150fbe8, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7fdc37a8, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@3447bffe, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@42ec7cff, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1d2a0f49, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@7bd9778a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@7d47933d, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@298bf10d, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@1dcf0fec, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@883c815, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@513ce816, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@78da5eca, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6f9d36da, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6f9d36da, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@172b977a, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@2afec2c7, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@35fa0304, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@4aae96a6, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@125ff8d3, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@4e130500, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@57668208, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@7735e6f2, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@383edb17, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@7163c2a3, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@22f0f9d3, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@292cdb81, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@23c95161, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@218483f4, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@ea43abf, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@15d204f2, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@52246ab4, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@221ce689, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@787e671b, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7ea48e5b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@a0271d5, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@23cce992, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4729f6a0, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@79e2abe3, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4ab2d946, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@1d8349f7, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@682c65f9, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@67fbb042, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@5590bca7, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3acea299, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@2f7ba8a9, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@2f7ba8a9, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@7aa09f71, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@24f4d010, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@374c3d11, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5fcf255d, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@28ad3c83, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6570c330, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@620baff7, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@70895a6f, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@2ecaa6fd, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@41aeaca6, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@41aeaca6, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@66cd268, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@3d923fb4, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@12e9fada, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@10bbddd1, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@5729b201, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@46977402, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@b1c64b8, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4aa198c0, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@488ccb72, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6745add9, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3b80c3f, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@4a8b2dfa, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@28dc1d53, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@688845c0, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@7a85e905, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@516aeb17, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@6c05d9fd, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@21a31f52, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3471f17d, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@11cd2e85, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@14e87437, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2ba9919c, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1f688608, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@6a732fe8, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4929edb2, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@33754d67, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@35ea4e7, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@157ef2fb, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@1bf34dbd, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@2d890e43, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@6035528c, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@6035528c, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@4cc5f2eb, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@5942dcc9, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@39a04b9f, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3d60dbc, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@3c0cb5ea, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@70c078d6, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@4e30b675, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@21174348, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@10193608, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@44a95a0d, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6309bb5e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@4819f1ab, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@17f70e78, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@677e611d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@4de73401, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@61a63d8b, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@73c8f6e2, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@324dbcc6, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4126bb5a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7991a828, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@118f02cc, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6f99f89f, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([201030059], 0, 1): success
test SubList.testListIteratorSet([1164911856], 0, 1): success
test SubList.testListIteratorSet([1372384186], 0, 1): success
test SubList.testListIteratorSet([-964505251], 0, 1): success
test SubList.testListIteratorSet([1326500006], 0, 1): success
test SubList.testListIteratorSet([1873326234], 0, 1): success
test SubList.testListIteratorSet([-881293845], 0, 1): success
test SubList.testListIteratorSet([1357248177], 0, 1): success
test SubList.testListIteratorSet([-416180370], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@2866fe05, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@50b8b472, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@32f16bdd, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@45b27df, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@51ac3d1a, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@352d121c, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@3d3970a0, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@25a1cfaa, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@3002add1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6fba344e, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@4ff0d2eb, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5ecbd68f, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([1683573862], 0, 1): success
test SubList.testListIteratorSetPrevious([-1350583277], 0, 1): success
test SubList.testListIteratorSetPrevious([-1780344636], 0, 1): success
test SubList.testListIteratorSetPrevious([-958745576], 0, 1): success
test SubList.testListIteratorSetPrevious([-105682647], 0, 1): success
test SubList.testListIteratorSetPrevious([1604228660], 0, 1): success
test SubList.testListIteratorSetPrevious([-670757705], 0, 1): success
test SubList.testListIteratorSetPrevious([-725989041], 0, 1): success
test SubList.testListIteratorSetPrevious([-2024556773], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@4ba1b4d2, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@7ec19625, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@2061ccb8, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@4c294fb1, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@3de4407, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@6772b9bf, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@19ce379e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@b741cdd, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@60d7395, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1bd31f39, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@26b0bbd1, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@46e84fcb, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@10b1bdb9, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@638e66c8, 2, 5): success
test SubList.testModAdd(java.util.Vector@40093fed, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@32b35255, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@2675899d, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@725c1956, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@6f5b7a2, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@609d5fb2, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@7075594e, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@434f9699, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@773b1760, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@283c2d4f, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@5e00a09, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@cc9d118, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@486f8709, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@799a5133, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@53dad37c, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@b3af2ea, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@23d039e2, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@4ef2febc, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@68248032, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3c6955c5, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@77e37b4e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5ebca302, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@3ba87866, 2, 5): success
test SubList.testModClear(java.util.LinkedList@6bc23e01, 2, 5): success
test SubList.testModClear(java.util.Vector@129482d5, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@2710eb19, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@46915fcf, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@7c9f9760, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@6f0fe103, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@c01d092, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@5a903beb, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@7f02a2d0, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@5007a1cf, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6c6f2535, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@91dac67, 2, 5): success
test SubList.testModGet(java.util.LinkedList@149b5af1, 2, 5): success
test SubList.testModGet(java.util.Vector@f9b1042, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@30bc2bd1, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@329fe26, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@59fe539f, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@7e09edde, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@3572c9ab, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@590f8bfd, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@3c74df80, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@3e1e149c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@782af85a, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@5996d51f, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@1159704a, 2, 5): success
test SubList.testModHashCode(java.util.Vector@5e2a5382, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@4704065e, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@201a1fca, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@7588f6e0, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@2eeb1383, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@4744145e, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@1287e69c, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@4eebee61, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@3317d545, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@5c4558b6, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@1f63a953, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@453e01ce, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@ef925f9, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@51b3a58d, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@b0d8b19, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@147ef8d1, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@5ab5e2e3, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@c7a0cf5, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@7bb0708d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@46fce004, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@92a0e43, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@586a8bcc, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@417b4780, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@17c80a00, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@cab84df, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@356f34fb, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@4ed9a665, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@654f79b7, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@5abedaad, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@37de882d, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@7f016488, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3537b81, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@111d405e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@315f329f, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@70b5268d, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@1544e6d7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@5bf8d35f, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@1beee557, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@45536ef, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@37eb7978, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@50219f3b, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@78322ed0, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@28353b1f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@202bda0c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@58d88f94, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5ee9a44f, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@e55e121, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@672c56b0, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@7d56262, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@5a7d71d3, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@16c4510d, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@719b77c0, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@81295b0, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@29604de4, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@5e7a1780, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@e3383b5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@f06f476, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@79b4ca7, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@6b07a7e9, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@3203055f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@6abd6af6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@14339d37, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@3479d33f, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@d5afb7, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5852a23c, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@476f6807, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6ba3a345, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6b316c72, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@562f1b7e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@71364055, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@2a26704e, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@286328fa, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@7851854b, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@462d90, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@744ce343, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6b17a839, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@6225c6bf, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@f3055dd, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@31d7811d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@666bb4f2, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@4b13c4e6, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5fe4644f, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@7590b722, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@65a40d1b, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@4a9d14d0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@4a17e698, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@76bc9362, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@7b79b4ad, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@142129e5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@51110e29, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6ebab2ed, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@8d2d7e5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@e2b265c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1ee0c075, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@373cff1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@1f28912b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@7f3e6726, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@179ba6bf, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@2254f5, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@85bbc49, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@5e094154, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@33453fae, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@1a7f1b31, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2daff876, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@6885e81, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@baf8e13, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@7ab9f9e5, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@57aa87df, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@2e696d42, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@73b6d64b, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@5bff9293, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@67f9e2ca, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@31064c19, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@787a7b32, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@3c68c6ef, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@2e068283, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@264c3b2, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6bc60e27, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@543c6ecc, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@6ffc77a6, 2, 5): success
test SubList.testModRemove(java.util.Vector@ff309be, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@529a0dbb, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@44cadc30, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@35072d9e, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@689af1d4, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@43e09003, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@1ac1dcd2, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2b6a6f97, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@4e2dc200, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@365a38f4, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@31beef6d, 2, 5): success
test SubList.testModSet(java.util.LinkedList@5e67dcb9, 2, 5): success
test SubList.testModSet(java.util.Vector@11b5f2f, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@189e1f89, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@4491def4, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@304aebd5, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@2551c060, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@1c94b96e, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@36b9938c, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@4bf0277b, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@2c66041b, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@21ca8d2b, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@531bc87c, 2, 5): success
test SubList.testRemove(java.util.LinkedList@6e4e98d7, 2, 5): success
test SubList.testRemove(java.util.Vector@49ff8535, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@306ccdd5, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@132fbe4f, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@2270305e, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@1b82cf3d, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@6e6a1117, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@1806f9a6, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([2111717753], 0, 1): success
test SubList.testSet([324370670], 0, 1): success
test SubList.testSet([679088341], 0, 1): success
test SubList.testSet([-54743665], 0, 1): success
test SubList.testSet([-1935816549], 0, 1): success
test SubList.testSet([-1733895107], 0, 1): success
test SubList.testSet([-1017437205], 0, 1): success
test SubList.testSet([-179266809], 0, 1): success
test SubList.testSet([782928480], 0, 1): success
test SubList.testSet(java.util.ArrayList@4a1e0e14, 2, 5): success
test SubList.testSet(java.util.LinkedList@73ef1b27, 2, 5): success
test SubList.testSet(java.util.Vector@48a42f53, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@155c3e8, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@1dea1043, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@7e96dac5, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@2c48da4a, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@2db657da, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@4b964cfa, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@46e79c18, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@2c5abd76, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@f4d8e24, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@180223cd, 2, 5): success
test SubList.testSubList(java.util.LinkedList@1515e15f, 2, 5): success
test SubList.testSubList(java.util.Vector@3159e2e2, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@495debd7, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@6aefd9d0, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7899eb23, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@32654bf, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@fd57fdf, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@300c2adb, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@3e536ac1, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@1eb830d6, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@47966f63, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@1c7f025c, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@2dcc4da5, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@596f3722, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@120441d, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@4649168e, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@767d2f14, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@767d2f14, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@4eefbefd, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@7f3fd4b6, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@11adc76, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@78e1c0e6, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@67dd5bde, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@17646139, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@5d5352cf, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@65eb5ee2, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6e92c4f3, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@617855b9, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@617855b9, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@65f537ff, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@8c1b199, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@2996e017, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@711b1c71, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@4d87469c, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@22847d98, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@76d27b51, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@7ca7670a, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@4f3b4d68, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@8856370, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@8856370, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@322d6123, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@61ad4a73, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@52ab98b3, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4888c36f, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@43ea96dc, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@4eb4b8e5, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7b17bf9b, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@4728e3a8, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@24038b3e, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@ea34bb0, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@ea34bb0, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2585ae81, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@fdbc6c0, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@66bfa99f, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@7adbd1a7, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@189f9e6f, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@41b1afff, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@c2a543f, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@30b9394, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@3161c7ed, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@409240c, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@409240c, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@59a11dad, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@6b5819dd, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@17e853bf, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3f1db55, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@42dc64da, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@642632a7, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@b284f9a, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@1ad0659, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@66612fd3, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@7a7dd3da, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@7a7dd3da, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@370a3cbf, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@4926d2e8, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6ca98925, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5e03e886, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@35395774, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@205cbeb5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3adf83d4, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@52e6229d, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@4568a541, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@769b3aeb, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@769b3aeb, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@36e828d0, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@55eea947, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2885a4e1, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@49cf36aa, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@525b9024, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@441ebe42, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@4f221094, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@659c5ab3, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@26d11330, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@19aee75f, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@19aee75f, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@4ef356e2, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@21be093e, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@385533c3, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@7372e84, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@1a6f5238, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@28221042, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@669fa90f, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@48017523, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@78159c73, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@289c4c28, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4d2c879a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@27dc0c72, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@54e147fc, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@4f263b29, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@1428b03a, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@30f72a91, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4e011273, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@24498809, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@7ca27fbf, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@25bef352, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@25bef352, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@2c6cb84b, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@931b21f, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@59e0acd7, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@7421cd0b, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
