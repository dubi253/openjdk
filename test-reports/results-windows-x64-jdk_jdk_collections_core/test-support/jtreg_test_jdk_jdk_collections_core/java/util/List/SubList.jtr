#Test Results (version 2)
#Fri Mar 01 15:31:04 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\r\nUSER_SPECIFIED testng SubList\r\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=400 0\:00\:00.400
end=Fri Mar 01 15\:31\:04 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1565-145.emhdvhxhb1guvpscbeh31du44c.phxx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Fri Mar 01 15\:31\:04 UTC 2024
test=java/util/List/SubList.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=400
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\List

#section:script_messages
----------messages:(7/551)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-e22bbb87eb47c075e30a3ae770ba2979e9628e8f)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-e22bbb87eb47c075e30a3ae770ba2979e9628e8f, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: D:\\a\\openjdk\\openjdk\\test\\lib
   class directory: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib

#section:build
----------messages:(7/282)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Fri Mar 01 15:31:04 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Fri Mar 01 15:31:04 UTC 2024
elapsed time (seconds): 0.025
result: Passed. Build successful

#section:compile
----------messages:(7/278)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java
reason: .class file out of date or does not exist
started: Fri Mar 01 15:31:04 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 15:31:04 UTC 2024
elapsed time (seconds): 0.024
----------configuration:(12/805)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3662)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\lib\\jdk\\test\\lib\\RandomFactory.java'
result: Passed. Compilation successful

#section:build
----------messages:(7/210)----------
command: build SubList
reason: Named class compiled on demand
started: Fri Mar 01 15:31:04 UTC 2024
Test directory:
  compile: SubList
finished: Fri Mar 01 15:31:04 UTC 2024
elapsed time (seconds): 0.06
result: Passed. Build successful

#section:compile
----------messages:(7/273)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java
reason: .class file out of date or does not exist
started: Fri Mar 01 15:31:04 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 15:31:04 UTC 2024
elapsed time (seconds): 0.06
----------configuration:(15/1098)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\test\\lib
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/4060)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java'
result: Passed. Compilation successful

#section:testng
----------messages:(7/215)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Fri Mar 01 15:31:04 UTC 2024
Mode: agentvm
Agent id: 4
finished: Fri Mar 01 15:31:04 UTC 2024
elapsed time (seconds): 0.313
----------configuration:(15/1086)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List
              D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib
              D:\\a\\openjdk\\openjdk\\test\\lib

----------rerun:(28/3592)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List\\SubList.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\test\\lib' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\List\\SubList.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\List;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\test\\lib;D:\\a\\openjdk\\openjdk\\test\\lib;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91946)----------
Seed from RandomFactory = 3708618535396974396L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1166011666], 0, 1): success
test SubList.testAdd([42, -1047466442], 0, 1): success
test SubList.testAdd([42, 1331466751], 0, 1): success
test SubList.testAdd([42, -2021066426], 0, 1): success
test SubList.testAdd([42, -1880724623], 0, 1): success
test SubList.testAdd([42, 1554959748], 0, 1): success
test SubList.testAdd([42, 1022913666], 0, 1): success
test SubList.testAdd([42, -174383207], 0, 1): success
test SubList.testAdd([42, -118430460], 0, 1): success
test SubList.testAdd(java.util.ArrayList@29984ce0, 2, 5): success
test SubList.testAdd(java.util.LinkedList@117a1dca, 2, 5): success
test SubList.testAdd(java.util.Vector@4199e8ec, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@b584ddb, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@45b5b8ff, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@2a890f11, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@262d3401, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@129f075a, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@2b67ab17, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@52c93ebc, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@83c6dfb, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@194e1221, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 1603487054], 0, 1): success
test SubList.testAddAtPos([-2122425243, 42], 0, 1): success
test SubList.testAddAtPos([42, -1390761947], 0, 1): success
test SubList.testAddAtPos([889227708, 42], 0, 1): success
test SubList.testAddAtPos([-757831550, 42], 0, 1): success
test SubList.testAddAtPos([-1622262319, 42], 0, 1): success
test SubList.testAddAtPos([42, 1372883856], 0, 1): success
test SubList.testAddAtPos([1117312435, 42], 0, 1): success
test SubList.testAddAtPos([-1563401166, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@19006669, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@6883f4f6, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@88ba79a, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@44346d1d, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@16b73be5, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7a3ec94b, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@395b0228, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@8f4bf, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@1492b57d, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5f833a72, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@66275e42, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@744a7921, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@219a5b0, 2, 5): success
test SubList.testClear(java.util.LinkedList@6f016c90, 2, 5): success
test SubList.testClear(java.util.Vector@2ea12da2, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@6a04118d, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@ad924f3, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@4c485c4a, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@569a095b, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@b8c9151, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@229f36ca, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@3173df2a, 2, 5): success
test SubList.testEquals(java.util.LinkedList@a152c2, 2, 5): success
test SubList.testEquals(java.util.Vector@48be34d4, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@69cf76d, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@174365b, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@60087f0c, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5546cd38, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1922363, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@10d5558d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@2ce0ea60, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@2e4c4f37, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7326ebb3, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@6828333d, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1e03c6f2, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@620a1d27, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@5a66c816, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@238e99e, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@23470c20, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@23470c20, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@7abcfc68, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@6226c7f0, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@71242360, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4a4ff871, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@1da492e6, 2, 5): success
test SubList.testGet(java.util.LinkedList@1488ce36, 2, 5): success
test SubList.testGet(java.util.Vector@31e2ea2c, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@7eabc693, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@13ce9fec, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1dfd6537, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@121f42fb, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@4c4d25fe, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@1dcf61f8, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7bfe8897, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@1794b326, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@f2c5df7, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@7863e581, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@450c39a3, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@2fefba6b, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@3378849c, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@672f064f, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@66801301, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@66801301, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@50b5ec67, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@5dd7dc9b, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@4bebb811, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@41b2cf79, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@7aa62cd, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@4e99ef0f, 2, 5): success
test SubList.testIndexOf(java.util.Vector@11c9ec1, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@f180bee, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@1e026ae1, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1cdae643, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@2d2b14c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@c63585f, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@40441ef6, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@13c6f1a3, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@78f9c741, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@56eae2d6, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@1fb2c6bd, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@756ac3db, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5184969, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@1c85ebf6, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@48dbdd4, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@6969182, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@6969182, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@1dc864e3, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@7d68a0f1, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1c79d081, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@c843430, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@5f4548e4, 2, 5): success
test SubList.testIterator(java.util.LinkedList@5d8ad64, 2, 5): success
test SubList.testIterator(java.util.Vector@52241357, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@5930475f, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@17fa0ae7, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@4ebe2251, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5c2a777d, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@a17ceda, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@198bb603, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@3e3dfd7c, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@413d19bf, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@5e0387c7, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@6ed9d3b0, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@4d4e0f2f, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2df0f8c8, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@67b34bd2, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@70b34a5d, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@2dcb1fc0, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@2dcb1fc0, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@4c0ba56d, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@589b7868, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@772ccfee, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@11e8c730, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@78ddcd4a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@4542d80c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@1e1ea23c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@1da86729, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@248adc2, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@58d81c59, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@11f7e353, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@326dd3ee, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@79cada06, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@76b967f2, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@44ae95cb, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6a0e251b, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@4f70bbb7, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@dc2c65c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@64d5af03, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@5b21db4e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@7e464ac3, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@75941261, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@75941261, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@362a40f4, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@3a30a12e, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@64d9d78b, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@7adc9205, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@5393cadd, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@6bfdf762, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@649dae69, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@737b07e3, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@6889c709, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@794c6ce8, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6c3f18b8, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@3d8c6261, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@22ba65f6, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@4603c46b, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@4d7d9315, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@317d6224, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@31a73c89, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@2ccccb2c, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2bee232f, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@4036ec5e, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@11b041c9, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@22a2076a, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@15900be3, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@78c9e63d, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6a261d3, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@493422a3, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7cc7f462, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@73660491, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@45798f6e, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@6596a895, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1f44b03, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1f44b03, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4c5070a6, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@14480d0c, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@70acbda, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@40018ece, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@10b4e317, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@19fd406, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1baeefc1, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@7e39d9c9, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@50d988c, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@7ab9dc7c, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@7ab9dc7c, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@7599f89, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@2a780da2, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@619b5f3e, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@796d1d4, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@66a677c6, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@75d6e8d1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2d26a7c2, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6ad85e7b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@55ae2329, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@42649, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1daf3188, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@28de3739, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@122c9779, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@968e911, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@5790b6da, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@7a95f089, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@26ce84c, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@3e811bb9, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4e509a87, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3ec698fd, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@6a84b05, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@64d32982, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5f5bf2ab, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@ee3c22a, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6eb7327a, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@d6e2a9e, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1760b058, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@64574f47, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@c68b721, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@b73150e, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@539bb1a3, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@539bb1a3, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@4063cf70, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@34ee3ab, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@3ee884ba, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5fe21ea1, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@38f56daa, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@72f52d39, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@5dfdb5d8, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@d9c3c1f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@5636a215, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@240fcd6, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@600f25f1, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@95ebd43, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@43320d43, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@4c5d60bf, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@1fcf4c86, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@32acae1f, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2004a7e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@465c9845, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@3bc3d0fd, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1dc31f9d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@27a702e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@41cde51c, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([1005881647], 0, 1): success
test SubList.testListIteratorSet([1344710859], 0, 1): success
test SubList.testListIteratorSet([1839065307], 0, 1): success
test SubList.testListIteratorSet([-505545755], 0, 1): success
test SubList.testListIteratorSet([1750863377], 0, 1): success
test SubList.testListIteratorSet([2068902199], 0, 1): success
test SubList.testListIteratorSet([-1213816329], 0, 1): success
test SubList.testListIteratorSet([985239759], 0, 1): success
test SubList.testListIteratorSet([893336674], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@588cb871, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@55e64045, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@5fe8b71, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@4ee831f9, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@6076f2a8, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1b463e2a, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@4fe4dc8a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@423e890, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@71728dd5, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@354f2bea, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@10fb05c1, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6b2dc474, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-1448188750], 0, 1): success
test SubList.testListIteratorSetPrevious([418610182], 0, 1): success
test SubList.testListIteratorSetPrevious([-1112703655], 0, 1): success
test SubList.testListIteratorSetPrevious([-214495509], 0, 1): success
test SubList.testListIteratorSetPrevious([797267032], 0, 1): success
test SubList.testListIteratorSetPrevious([-150999608], 0, 1): success
test SubList.testListIteratorSetPrevious([1392591353], 0, 1): success
test SubList.testListIteratorSetPrevious([-529329010], 0, 1): success
test SubList.testListIteratorSetPrevious([1232145130], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@4b29ff9c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@627d4653, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@369a0136, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@73e0dbc5, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@79ddfd1a, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@4d59138c, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@268d76d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@29d932ed, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@27a1a7e4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@277a33c5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@58177b8a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@484bdfea, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@b8ea0b9, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@7137dd9, 2, 5): success
test SubList.testModAdd(java.util.Vector@168b5113, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@5abd78a0, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@beff6c3, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@1d1d7efb, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@2ff11abf, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@56ebfd18, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@4f3d2908, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@5b773423, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@6297e584, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@3a663fd2, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@3db79520, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@481779db, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@5e2d08db, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@5c9ed284, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@21fe4ea8, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@19884f1, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@5ad156cd, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@773476aa, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@60dfbe7a, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@701874d9, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@1aba1dfa, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@630e5233, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@5f49d4f9, 2, 5): success
test SubList.testModClear(java.util.LinkedList@17d6225c, 2, 5): success
test SubList.testModClear(java.util.Vector@5c94648a, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@46fd8228, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@28b69e7b, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1eb6590c, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1d887127, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@616ea22, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@520301d7, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@6c7c6bf1, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@484887bb, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@4c093dc1, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@660c70b2, 2, 5): success
test SubList.testModGet(java.util.LinkedList@56f6604f, 2, 5): success
test SubList.testModGet(java.util.Vector@414d9218, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@c07c24f, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@6ae37856, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@933070, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@2977a189, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@2692e8d6, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@50209235, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4448119, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@6c146c34, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@713d05fc, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@6cd2da79, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@680906c, 2, 5): success
test SubList.testModHashCode(java.util.Vector@75fae04b, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@94785a0, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@2b8a2063, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@269163cd, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@56b52f47, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@1c4a1b6d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@7bf86102, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@42f40019, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@3bfbeef8, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@189b1eb6, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@6c4bcc9, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@e5ac98b, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@381c9570, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@4fb7e028, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@62b1f07e, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@4efc27b7, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4f3b294f, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@fb79115, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@1b4d5942, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@462f397e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@696aa16a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@3a71ac32, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@3e2731a5, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@16fc8816, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@60d93956, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@11fe1e2, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@6b2281ef, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6db8281f, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@10ebe431, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@19972e56, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@7063f628, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7dc9c264, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@1f23e2c6, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@14ee1b13, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@3e6c5756, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@1045c72d, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@8fb6249, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@4cbb6aa1, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@41656181, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@69616f06, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@6c57c0d9, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@376d3562, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@451d334e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7d392776, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@352baa88, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2c137175, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@a469367, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@7ac97ccc, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@36a66df, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@225f685e, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@7129712, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@47c17679, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@713e73bb, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@c3737bd, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@525a06f8, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@68f8eb39, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@624331c6, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2d45fa83, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@61671999, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@43715be7, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@4cea4220, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@56ac0674, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@1c5309bc, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6b30b34e, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@582f9013, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@276a82e8, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@744504ab, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@3949e273, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@40d3b878, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@46e82d3e, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@679fc19d, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@3d3b87f9, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@4caa0fd2, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@521602e8, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@1e5032d9, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5510a138, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@b5e12bf, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@736f2b81, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@2595a42d, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3ea61a25, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@44b852d2, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6f25dfb, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@6de0d667, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@5554fbd2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@4b0ad5d0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@33064e67, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@1ddced45, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@285d1684, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@7a3a1f31, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@5bdef01a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@429735e3, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4c56d245, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@2c12f48d, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@134e9d9d, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@39f6815e, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@561d7265, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@68c46af, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@16793333, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@176b3046, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@34716765, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@3c6b5ce4, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@19c61900, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@68289be0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7f459734, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@4e948524, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5fcc719a, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@7ac19d49, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@39264608, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@6ea1715b, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@2bad1ce5, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@3205d71f, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@51db2ac9, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@4044f5a5, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@48a12c96, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@58ddb73d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@7fc21cde, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@69463985, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@a570402, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@328cee13, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@7e1aa6e7, 2, 5): success
test SubList.testModRemove(java.util.Vector@436748b5, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@5afa6cd6, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@6fb58e0f, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@13b5da5, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@26430e22, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@57d2502, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@777367f4, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@4188696a, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@1ef3e6bf, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@39c10a6d, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@40d516ae, 2, 5): success
test SubList.testModSet(java.util.LinkedList@6f94ea51, 2, 5): success
test SubList.testModSet(java.util.Vector@4ac1543f, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@403dde70, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@6889c579, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@55937d3e, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@133964c4, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@3909fd0b, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@3ac09d18, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@5357a9f5, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@31cc8ce3, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@7d176fc0, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@7c9aaf3, 2, 5): success
test SubList.testRemove(java.util.LinkedList@23a6e350, 2, 5): success
test SubList.testRemove(java.util.Vector@703286, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@492eaed8, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@37dd36ca, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@481be28c, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@2b00f2c, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@1f084ba1, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@697a27fc, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1353972724], 0, 1): success
test SubList.testSet([1342586423], 0, 1): success
test SubList.testSet([-574277051], 0, 1): success
test SubList.testSet([-130285760], 0, 1): success
test SubList.testSet([-1509618161], 0, 1): success
test SubList.testSet([-854968804], 0, 1): success
test SubList.testSet([1038220428], 0, 1): success
test SubList.testSet([-1802717509], 0, 1): success
test SubList.testSet([1187537093], 0, 1): success
test SubList.testSet(java.util.ArrayList@2e4a89f5, 2, 5): success
test SubList.testSet(java.util.LinkedList@3ea5fb18, 2, 5): success
test SubList.testSet(java.util.Vector@3d6cb0fa, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@5de6ad6c, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@5efbb433, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@2d99792e, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@69b48b90, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@2b53022c, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@6318ea28, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@377e5cd9, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@550bd5c0, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@6f4675b5, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@20e0f669, 2, 5): success
test SubList.testSubList(java.util.LinkedList@ff22540, 2, 5): success
test SubList.testSubList(java.util.Vector@2658f9db, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@5538c892, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@55232230, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7cecf74a, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@204c2880, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@4a00f963, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@72aecd76, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@6c90255, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@e3e7a01, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@725b1e4f, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@2edce5c9, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@48cda5fb, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@579037f4, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@f829303, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@6fa794fe, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@7a401db9, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@7a401db9, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1660c4e7, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@1dd3f2e6, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@33dbfb68, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@608924af, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@d43f95b, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@46a9c73, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@a0190c7, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@9ffa043, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@10344d45, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@3dc02a31, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@3dc02a31, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@303a862f, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@3620d3a1, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@207a500, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@331348d, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@2b25165c, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@23ba23e1, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@2d40fc36, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@189dd2d7, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@60db8c7e, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@46348e20, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@46348e20, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@2e8a258a, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@19245ef6, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@5641b30d, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4e78abd9, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@41ff9d5b, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7522fa21, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@9817f94, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@5cf379f0, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@433f1afa, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4f836177, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4f836177, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@4059a76c, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@2093849f, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@3428a73e, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@33ebbedb, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@66a06f1, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@49adf9e8, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2b61336d, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@23c81c0e, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@2f85a07b, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@7138d10a, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@7138d10a, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@21f07b19, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@3971207e, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@525797ec, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4e3b9c55, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@6fa05c88, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6cdca800, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7da59a1b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@79ef134c, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6f82959, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@7762f560, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@7762f560, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@20da3806, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@22445baa, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@7faf33a4, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@27998dd8, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@538a4676, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@27c84d3c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3e70046a, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@481e8b95, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@5017f41c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@c263a01, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@c263a01, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@1d95f8a5, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3d384ec3, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2faf3139, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@1e89ba9, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@7cb5aabd, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3fc7bc3c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2ccb9c1a, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@663f38a5, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@4885aac5, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7233ce0e, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7233ce0e, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@3d7f5a5e, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@3b123dc7, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@27a41969, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@597410c2, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@619debee, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5aad59b0, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@45a0b3a1, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@2b07538b, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@379b6806, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@47c688d0, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@638e1038, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@2604cbc2, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@45eed2f2, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@399119e2, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@3de7db8d, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@3db6ab52, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@58e3c672, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@2d1df36, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@b200cc0, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@795ad6ad, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@795ad6ad, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@26b6a890, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@14932cfd, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@7a9bf8e8, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@49401615, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
