#Test Results (version 2)
#Fri Apr 12 13:50:30 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Collisions.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug7126277 othervm testng
run=USER_SPECIFIED testng/othervm -Dtest.map.collisions.shortrun\=true Collisions\r\n
source=Collisions.java
title=Ensure Maps behave well with lots of hashCode() collisions.

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Map/Collisions.java
elapsed=4223 0\:00\:04.223
end=Fri Apr 12 13\:50\:30 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az657-7.i5gdedbi13oupdivqabz4h0k3h.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-04-11-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Fri Apr 12 13\:50\:26 UTC 2024
test=java/util/Map/Collisions.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=4223
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Map

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-54efea107035291fe2cd2e2957eb35359f52e6e5, mixed mode, sharing)

#section:build
----------messages:(7/217)----------
command: build Collisions
reason: Named class compiled on demand
started: Fri Apr 12 13:50:26 UTC 2024
Test directory:
  compile: Collisions
finished: Fri Apr 12 13:50:26 UTC 2024
elapsed time (seconds): 0.047
result: Passed. Build successful

#section:compile
----------messages:(7/276)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Collisions.java
reason: .class file out of date or does not exist
started: Fri Apr 12 13:50:26 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Apr 12 13:50:26 UTC 2024
elapsed time (seconds): 0.047
----------configuration:(13/910)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Collisions.d
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3638)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Map/Collisions.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Collisions.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Collisions.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Collisions.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Collisions.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Collisions.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Collisions.d;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Collisions.java'
result: Passed. Compilation successful

#section:testng
----------messages:(6/309)----------
command: testng -Dtest.map.collisions.shortrun=true Collisions
reason: User specified action: run testng/othervm -Dtest.map.collisions.shortrun=true Collisions 
started: Fri Apr 12 13:50:26 UTC 2024
Mode: othervm [/othervm specified]
finished: Fri Apr 12 13:50:30 UTC 2024
elapsed time (seconds): 4.176
----------configuration:(0/0)----------
----------System.out:(186/29014)----------
test Collisions.testEntriesIteratorRemove("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7aec3534, 2500): success
test Collisions.testEntriesIteratorRemove("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@3188a37f, 2500): success
test Collisions.testEntriesIteratorRemove("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@38bfe646, 2500): success
test Collisions.testEntriesIteratorRemove("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1c1fe5a9, 2500): success
test Collisions.testEntriesIteratorRemove("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e95d883, 2500): success
test Collisions.testEntriesIteratorRemove("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@42e081da, 2500): success
test Collisions.testEntriesIteratorRemove("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e560dc6, 2500): success
test Collisions.testEntriesIteratorRemove("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1da5544d, 2500): success
test Collisions.testEntriesIteratorRemove("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@28356f4, 2500): success
test Collisions.testEntriesIteratorRemove("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@32e230bb, 2500): success
test Collisions.testEntriesIteratorRemove("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@523e94d3, 2500): success
test Collisions.testEntriesIteratorRemove("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@63c99e5c, 2500): success
test Collisions.testEntriesIteratorRemove("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@51b8ad89, 2500): success
test Collisions.testEntriesIteratorRemove("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7a414bd0, 2500): success
test Collisions.testEntriesIteratorRemove("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@50e52d79, 2500): success
test Collisions.testEntriesIteratorRemove("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@68c0c7d8, 2500): success
test Collisions.testEntriesIteratorRemove("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6dbaea6f, 2500): success
test Collisions.testEntriesIteratorRemove("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6b14f4c9, 2500): success
test Collisions.testEntriesIteratorRemove("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@60bf558a, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@468117c1, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@768d20ab, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7ecdc09b, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@4b2b76c7, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6f5ad305, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@60f0c731, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7ab63611, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@76a4d13, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@11c0f1eb, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1d09237e, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@b6bea12, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6225455b, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@59661088, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e3350c9, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@14ca2c4a, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@36420713, "Extra Value"): success
test Collisions.testEntriesIteratorRemove("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7046d31c, "Extra Value"): success
test Collisions.testIntegerIteration("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7aec3534, 2500): success
test Collisions.testIntegerIteration("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@3188a37f, 2500): success
test Collisions.testIntegerIteration("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@38bfe646, 2500): success
test Collisions.testIntegerIteration("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1c1fe5a9, 2500): success
test Collisions.testIntegerIteration("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e95d883, 2500): success
test Collisions.testIntegerIteration("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@42e081da, 2500): success
test Collisions.testIntegerIteration("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e560dc6, 2500): success
test Collisions.testIntegerIteration("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1da5544d, 2500): success
test Collisions.testIntegerIteration("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@28356f4, 2500): success
test Collisions.testIntegerIteration("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@32e230bb, 2500): success
test Collisions.testIntegerIteration("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@523e94d3, 2500): success
test Collisions.testIntegerIteration("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@63c99e5c, 2500): success
test Collisions.testIntegerIteration("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@51b8ad89, 2500): success
test Collisions.testIntegerIteration("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7a414bd0, 2500): success
test Collisions.testIntegerIteration("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@50e52d79, 2500): success
test Collisions.testIntegerIteration("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@68c0c7d8, 2500): success
test Collisions.testIntegerIteration("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6dbaea6f, 2500): success
test Collisions.testIntegerIteration("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6b14f4c9, 2500): success
test Collisions.testKeysIteratorRemove("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7aec3534, 2500): success
test Collisions.testKeysIteratorRemove("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@3188a37f, 2500): success
test Collisions.testKeysIteratorRemove("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@38bfe646, 2500): success
test Collisions.testKeysIteratorRemove("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1c1fe5a9, 2500): success
test Collisions.testKeysIteratorRemove("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e95d883, 2500): success
test Collisions.testKeysIteratorRemove("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@42e081da, 2500): success
test Collisions.testKeysIteratorRemove("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e560dc6, 2500): success
test Collisions.testKeysIteratorRemove("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1da5544d, 2500): success
test Collisions.testKeysIteratorRemove("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@28356f4, 2500): success
test Collisions.testKeysIteratorRemove("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@32e230bb, 2500): success
test Collisions.testKeysIteratorRemove("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@523e94d3, 2500): success
test Collisions.testKeysIteratorRemove("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@63c99e5c, 2500): success
test Collisions.testKeysIteratorRemove("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@51b8ad89, 2500): success
test Collisions.testKeysIteratorRemove("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7a414bd0, 2500): success
test Collisions.testKeysIteratorRemove("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@50e52d79, 2500): success
test Collisions.testKeysIteratorRemove("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@68c0c7d8, 2500): success
test Collisions.testKeysIteratorRemove("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6dbaea6f, 2500): success
test Collisions.testKeysIteratorRemove("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6b14f4c9, 2500): success
test Collisions.testKeysIteratorRemove("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@60bf558a, "Extra Value"): success
test Collisions.testKeysIteratorRemove("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@468117c1, "Extra Value"): success
test Collisions.testKeysIteratorRemove("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@768d20ab, "Extra Value"): success
test Collisions.testKeysIteratorRemove("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7ecdc09b, "Extra Value"): success
test Collisions.testKeysIteratorRemove("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@4b2b76c7, "Extra Value"): success
test Collisions.testKeysIteratorRemove("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6f5ad305, "Extra Value"): success
test Collisions.testKeysIteratorRemove("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@60f0c731, "Extra Value"): success
test Collisions.testKeysIteratorRemove("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7ab63611, "Extra Value"): success
test Collisions.testKeysIteratorRemove("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@76a4d13, "Extra Value"): success
test Collisions.testKeysIteratorRemove("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@11c0f1eb, "Extra Value"): success
test Collisions.testKeysIteratorRemove("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1d09237e, "Extra Value"): success
test Collisions.testKeysIteratorRemove("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@b6bea12, "Extra Value"): success
test Collisions.testKeysIteratorRemove("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6225455b, "Extra Value"): success
test Collisions.testKeysIteratorRemove("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@59661088, "Extra Value"): success
test Collisions.testKeysIteratorRemove("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e3350c9, "Extra Value"): success
test Collisions.testKeysIteratorRemove("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@14ca2c4a, "Extra Value"): success
test Collisions.testKeysIteratorRemove("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@36420713, "Extra Value"): success
test Collisions.testKeysIteratorRemove("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7046d31c, "Extra Value"): success
test Collisions.testRemove("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7aec3534, 2500): success
test Collisions.testRemove("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@3188a37f, 2500): success
test Collisions.testRemove("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@38bfe646, 2500): success
test Collisions.testRemove("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1c1fe5a9, 2500): success
test Collisions.testRemove("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e95d883, 2500): success
test Collisions.testRemove("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@42e081da, 2500): success
test Collisions.testRemove("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e560dc6, 2500): success
test Collisions.testRemove("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1da5544d, 2500): success
test Collisions.testRemove("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@28356f4, 2500): success
test Collisions.testRemove("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@32e230bb, 2500): success
test Collisions.testRemove("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@523e94d3, 2500): success
test Collisions.testRemove("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@63c99e5c, 2500): success
test Collisions.testRemove("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@51b8ad89, 2500): success
test Collisions.testRemove("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7a414bd0, 2500): success
test Collisions.testRemove("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@50e52d79, 2500): success
test Collisions.testRemove("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@68c0c7d8, 2500): success
test Collisions.testRemove("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6dbaea6f, 2500): success
test Collisions.testRemove("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6b14f4c9, 2500): success
test Collisions.testRemove("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@60bf558a, "Extra Value"): success
test Collisions.testRemove("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@468117c1, "Extra Value"): success
test Collisions.testRemove("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@768d20ab, "Extra Value"): success
test Collisions.testRemove("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7ecdc09b, "Extra Value"): success
test Collisions.testRemove("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@4b2b76c7, "Extra Value"): success
test Collisions.testRemove("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6f5ad305, "Extra Value"): success
test Collisions.testRemove("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@60f0c731, "Extra Value"): success
test Collisions.testRemove("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7ab63611, "Extra Value"): success
test Collisions.testRemove("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@76a4d13, "Extra Value"): success
test Collisions.testRemove("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@11c0f1eb, "Extra Value"): success
test Collisions.testRemove("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1d09237e, "Extra Value"): success
test Collisions.testRemove("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@b6bea12, "Extra Value"): success
test Collisions.testRemove("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6225455b, "Extra Value"): success
test Collisions.testRemove("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@59661088, "Extra Value"): success
test Collisions.testRemove("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e3350c9, "Extra Value"): success
test Collisions.testRemove("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@14ca2c4a, "Extra Value"): success
test Collisions.testRemove("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@36420713, "Extra Value"): success
test Collisions.testRemove("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7046d31c, "Extra Value"): success
test Collisions.testStringIteration("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@60bf558a, "Extra Value"): success
test Collisions.testStringIteration("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@468117c1, "Extra Value"): success
test Collisions.testStringIteration("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@768d20ab, "Extra Value"): success
test Collisions.testStringIteration("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7ecdc09b, "Extra Value"): success
test Collisions.testStringIteration("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@4b2b76c7, "Extra Value"): success
test Collisions.testStringIteration("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6f5ad305, "Extra Value"): success
test Collisions.testStringIteration("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@60f0c731, "Extra Value"): success
test Collisions.testStringIteration("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7ab63611, "Extra Value"): success
test Collisions.testStringIteration("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@76a4d13, "Extra Value"): success
test Collisions.testStringIteration("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@11c0f1eb, "Extra Value"): success
test Collisions.testStringIteration("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1d09237e, "Extra Value"): success
test Collisions.testStringIteration("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@b6bea12, "Extra Value"): success
test Collisions.testStringIteration("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6225455b, "Extra Value"): success
test Collisions.testStringIteration("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@59661088, "Extra Value"): success
test Collisions.testStringIteration("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e3350c9, "Extra Value"): success
test Collisions.testStringIteration("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@14ca2c4a, "Extra Value"): success
test Collisions.testStringIteration("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@36420713, "Extra Value"): success
test Collisions.testStringIteration("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7046d31c, "Extra Value"): success
test Collisions.testValuesIteratorRemove("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7aec3534, 2500): success
test Collisions.testValuesIteratorRemove("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@3188a37f, 2500): success
test Collisions.testValuesIteratorRemove("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@38bfe646, 2500): success
test Collisions.testValuesIteratorRemove("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1c1fe5a9, 2500): success
test Collisions.testValuesIteratorRemove("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e95d883, 2500): success
test Collisions.testValuesIteratorRemove("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@42e081da, 2500): success
test Collisions.testValuesIteratorRemove("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e560dc6, 2500): success
test Collisions.testValuesIteratorRemove("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1da5544d, 2500): success
test Collisions.testValuesIteratorRemove("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@28356f4, 2500): success
test Collisions.testValuesIteratorRemove("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@32e230bb, 2500): success
test Collisions.testValuesIteratorRemove("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@523e94d3, 2500): success
test Collisions.testValuesIteratorRemove("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@63c99e5c, 2500): success
test Collisions.testValuesIteratorRemove("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@51b8ad89, 2500): success
test Collisions.testValuesIteratorRemove("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7a414bd0, 2500): success
test Collisions.testValuesIteratorRemove("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@50e52d79, 2500): success
test Collisions.testValuesIteratorRemove("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@68c0c7d8, 2500): success
test Collisions.testValuesIteratorRemove("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6dbaea6f, 2500): success
test Collisions.testValuesIteratorRemove("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6b14f4c9, 2500): success
test Collisions.testValuesIteratorRemove("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@60bf558a, "Extra Value"): success
test Collisions.testValuesIteratorRemove("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@468117c1, "Extra Value"): success
test Collisions.testValuesIteratorRemove("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@768d20ab, "Extra Value"): success
test Collisions.testValuesIteratorRemove("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7ecdc09b, "Extra Value"): success
test Collisions.testValuesIteratorRemove("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@4b2b76c7, "Extra Value"): success
test Collisions.testValuesIteratorRemove("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6f5ad305, "Extra Value"): success
test Collisions.testValuesIteratorRemove("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@60f0c731, "Extra Value"): success
test Collisions.testValuesIteratorRemove("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7ab63611, "Extra Value"): success
test Collisions.testValuesIteratorRemove("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@76a4d13, "Extra Value"): success
test Collisions.testValuesIteratorRemove("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@11c0f1eb, "Extra Value"): success
test Collisions.testValuesIteratorRemove("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1d09237e, "Extra Value"): success
test Collisions.testValuesIteratorRemove("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@b6bea12, "Extra Value"): success
test Collisions.testValuesIteratorRemove("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@6225455b, "Extra Value"): success
test Collisions.testValuesIteratorRemove("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@59661088, "Extra Value"): success
test Collisions.testValuesIteratorRemove("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@1e3350c9, "Extra Value"): success
test Collisions.testValuesIteratorRemove("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@14ca2c4a, "Extra Value"): success
test Collisions.testValuesIteratorRemove("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@36420713, "Extra Value"): success
test Collisions.testValuesIteratorRemove("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000002b323029a10@7046d31c, "Extra Value"): success

===============================================
java/util/Map/Collisions.java
Total tests run: 180, Passes: 180, Failures: 0, Skips: 0
===============================================

----------System.err:(1/16)----------
STATUS:Passed.
----------rerun:(38/3825)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
CLASSPATH='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Collisions.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Map/Collisions.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Collisions.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Collisions.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Collisions.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Collisions.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=25 \\
        '-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        '-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -XX:+CreateCoredumpOnCrash \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        '-Djava.library.path=d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.map.collisions.shortrun=true \\
        com.sun.javatest.regtest.agent.MainWrapper 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Map\\Collisions.d\\testng.0.jta' java/util/Map/Collisions.java false Collisions
result: Passed. Execution successful


test result: Passed. Execution successful
