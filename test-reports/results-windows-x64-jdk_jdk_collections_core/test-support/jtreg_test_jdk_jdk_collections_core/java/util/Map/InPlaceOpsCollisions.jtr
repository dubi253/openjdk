#Test Results (version 2)
#Fri Mar 01 19:03:57 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\InPlaceOpsCollisions.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
keywords=bug8005698 othervm testng
run=USER_SPECIFIED testng/othervm -Dtest.map.collisions.shortrun\=true InPlaceOpsCollisions\r\n
source=InPlaceOpsCollisions.java
title=Ensure overrides of in-place operations in Maps behave well with lots of collisions.

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Map/InPlaceOpsCollisions.java
elapsed=11197 0\:00\:11.197
end=Fri Mar 01 19\:03\:57 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1494-283.3ceprcbbckkebkz0gecq512nqb.bx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Fri Mar 01 19\:03\:46 UTC 2024
test=java/util/Map/InPlaceOpsCollisions.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=11197
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Map

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-cf0aa2677171ce7fb98232fdf4ca5082a3b5c4dd, mixed mode, sharing)

#section:build
----------messages:(7/236)----------
command: build InPlaceOpsCollisions
reason: Named class compiled on demand
started: Fri Mar 01 19:03:46 UTC 2024
Test directory:
  compile: InPlaceOpsCollisions
finished: Fri Mar 01 19:03:46 UTC 2024
elapsed time (seconds): 0.11
result: Passed. Build successful

#section:compile
----------messages:(7/285)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\InPlaceOpsCollisions.java
reason: .class file out of date or does not exist
started: Fri Mar 01 19:03:46 UTC 2024
Mode: agentvm
Agent id: 1
finished: Fri Mar 01 19:03:46 UTC 2024
elapsed time (seconds): 0.11
----------configuration:(13/920)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\InPlaceOpsCollisions.d
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3718)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Map/InPlaceOpsCollisions.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\InPlaceOpsCollisions.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\InPlaceOpsCollisions.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\InPlaceOpsCollisions.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\InPlaceOpsCollisions.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\InPlaceOpsCollisions.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\InPlaceOpsCollisions.d;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\InPlaceOpsCollisions.java'
result: Passed. Compilation successful

#section:testng
----------messages:(6/330)----------
command: testng -Dtest.map.collisions.shortrun=true InPlaceOpsCollisions
reason: User specified action: run testng/othervm -Dtest.map.collisions.shortrun=true InPlaceOpsCollisions 
started: Fri Mar 01 19:03:46 UTC 2024
Mode: othervm [/othervm specified]
finished: Fri Mar 01 19:03:57 UTC 2024
elapsed time (seconds): 11.087
----------configuration:(0/0)----------
----------System.out:(384/64009)----------
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@45a2176a, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33d888dc, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2a169f85, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@87569a0, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6b0b1d83, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@eed1cef, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2d1b5557, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@157f6277, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4d0af2b8, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@244c2af2, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@5fbe94f4, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@72913a8f, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@9f592fb, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@386f956b, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@34a0f7e4, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@65c6a109, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3d6166d7, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@68137465, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@49fef899, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4bfa02cc, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@719612fd, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7829d25, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3a354975, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4e867d2b, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1915e176, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4c910866, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@28ee4fc1, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@47f20522, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33497ba7, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@407dc268, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@ef4c4c4, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1288af12, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@75c72601, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6e5f809c, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@17300524, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNonNull("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7ebea506, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@45a2176a, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33d888dc, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2a169f85, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@87569a0, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6b0b1d83, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@eed1cef, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2d1b5557, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@157f6277, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4d0af2b8, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@244c2af2, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@5fbe94f4, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@72913a8f, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@9f592fb, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@386f956b, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@34a0f7e4, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@65c6a109, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3d6166d7, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@68137465, 2500): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@49fef899, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4bfa02cc, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@719612fd, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7829d25, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3a354975, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4e867d2b, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1915e176, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4c910866, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@28ee4fc1, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@47f20522, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33497ba7, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@407dc268, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@ef4c4c4, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1288af12, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@75c72601, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6e5f809c, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@17300524, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentNull("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7ebea506, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfAbsentOverwriteNull("HashMap", InPlaceOpsCollisions$$Lambda/0x000001cb0103a260@3be4cf23): success
test InPlaceOpsCollisions.testComputeIfAbsentOverwriteNull("LinkedHashMap", InPlaceOpsCollisions$$Lambda/0x000001cb0103a478@4aa75975): success
test InPlaceOpsCollisions.testComputeIfAbsentOverwriteNull("TreeMap", InPlaceOpsCollisions$$Lambda/0x000001cb0103a690@11e66ba9): success
test InPlaceOpsCollisions.testComputeIfAbsentOverwriteNull("TreeMap(cmp)", InPlaceOpsCollisions$$Lambda/0x000001cb0103a8a8@313056a6): success
test InPlaceOpsCollisions.testComputeIfAbsentOverwriteNull("TreeMap.descendingMap", InPlaceOpsCollisions$$Lambda/0x000001cb0103aac0@2ef4017e): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@45a2176a, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33d888dc, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2a169f85, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@87569a0, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6b0b1d83, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@eed1cef, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2d1b5557, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@157f6277, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4d0af2b8, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@244c2af2, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@5fbe94f4, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@72913a8f, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@9f592fb, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@386f956b, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@34a0f7e4, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@65c6a109, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3d6166d7, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@68137465, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@49fef899, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4bfa02cc, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@719612fd, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7829d25, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3a354975, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4e867d2b, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1915e176, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4c910866, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@28ee4fc1, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@47f20522, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33497ba7, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@407dc268, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@ef4c4c4, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1288af12, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@75c72601, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6e5f809c, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@17300524, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNonNull("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7ebea506, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@45a2176a, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33d888dc, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2a169f85, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@87569a0, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6b0b1d83, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@eed1cef, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2d1b5557, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@157f6277, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4d0af2b8, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@244c2af2, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@5fbe94f4, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@72913a8f, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@9f592fb, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@386f956b, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@34a0f7e4, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@65c6a109, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3d6166d7, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@68137465, 2500): success
test InPlaceOpsCollisions.testComputeIfPresentNull("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@49fef899, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4bfa02cc, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@719612fd, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7829d25, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3a354975, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4e867d2b, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1915e176, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4c910866, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@28ee4fc1, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@47f20522, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33497ba7, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@407dc268, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@ef4c4c4, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1288af12, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@75c72601, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6e5f809c, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@17300524, "Extra Value"): success
test InPlaceOpsCollisions.testComputeIfPresentNull("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7ebea506, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNonNull("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@560e2575, 2500): success
test InPlaceOpsCollisions.testComputeNonNull("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@51919eb2, 2500): success
test InPlaceOpsCollisions.testComputeNonNull("HashMap with collisions objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4ba08e4a, 2500): success
test InPlaceOpsCollisions.testComputeNonNull("LinkedHashMap with collisions objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2c3c2c3f, 2500): success
test InPlaceOpsCollisions.testComputeNull("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@45a2176a, 2500): success
test InPlaceOpsCollisions.testComputeNull("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33d888dc, 2500): success
test InPlaceOpsCollisions.testComputeNull("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2a169f85, 2500): success
test InPlaceOpsCollisions.testComputeNull("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@87569a0, 2500): success
test InPlaceOpsCollisions.testComputeNull("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6b0b1d83, 2500): success
test InPlaceOpsCollisions.testComputeNull("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@eed1cef, 2500): success
test InPlaceOpsCollisions.testComputeNull("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2d1b5557, 2500): success
test InPlaceOpsCollisions.testComputeNull("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@157f6277, 2500): success
test InPlaceOpsCollisions.testComputeNull("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4d0af2b8, 2500): success
test InPlaceOpsCollisions.testComputeNull("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@244c2af2, 2500): success
test InPlaceOpsCollisions.testComputeNull("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@5fbe94f4, 2500): success
test InPlaceOpsCollisions.testComputeNull("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@72913a8f, 2500): success
test InPlaceOpsCollisions.testComputeNull("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@9f592fb, 2500): success
test InPlaceOpsCollisions.testComputeNull("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@386f956b, 2500): success
test InPlaceOpsCollisions.testComputeNull("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@34a0f7e4, 2500): success
test InPlaceOpsCollisions.testComputeNull("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@65c6a109, 2500): success
test InPlaceOpsCollisions.testComputeNull("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3d6166d7, 2500): success
test InPlaceOpsCollisions.testComputeNull("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@68137465, 2500): success
test InPlaceOpsCollisions.testComputeNull("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@49fef899, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4bfa02cc, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@719612fd, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7829d25, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3a354975, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4e867d2b, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1915e176, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4c910866, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@28ee4fc1, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@47f20522, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33497ba7, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@407dc268, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@ef4c4c4, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1288af12, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@75c72601, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6e5f809c, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@17300524, "Extra Value"): success
test InPlaceOpsCollisions.testComputeNull("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7ebea506, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNonNull("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@560e2575, 2500): success
test InPlaceOpsCollisions.testMergeNonNull("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@51919eb2, 2500): success
test InPlaceOpsCollisions.testMergeNonNull("HashMap with collisions objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4ba08e4a, 2500): success
test InPlaceOpsCollisions.testMergeNonNull("LinkedHashMap with collisions objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2c3c2c3f, 2500): success
test InPlaceOpsCollisions.testMergeNull("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@45a2176a, 2500): success
test InPlaceOpsCollisions.testMergeNull("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33d888dc, 2500): success
test InPlaceOpsCollisions.testMergeNull("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2a169f85, 2500): success
test InPlaceOpsCollisions.testMergeNull("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@87569a0, 2500): success
test InPlaceOpsCollisions.testMergeNull("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6b0b1d83, 2500): success
test InPlaceOpsCollisions.testMergeNull("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@eed1cef, 2500): success
test InPlaceOpsCollisions.testMergeNull("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2d1b5557, 2500): success
test InPlaceOpsCollisions.testMergeNull("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@157f6277, 2500): success
test InPlaceOpsCollisions.testMergeNull("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4d0af2b8, 2500): success
test InPlaceOpsCollisions.testMergeNull("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@244c2af2, 2500): success
test InPlaceOpsCollisions.testMergeNull("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@5fbe94f4, 2500): success
test InPlaceOpsCollisions.testMergeNull("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@72913a8f, 2500): success
test InPlaceOpsCollisions.testMergeNull("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@9f592fb, 2500): success
test InPlaceOpsCollisions.testMergeNull("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@386f956b, 2500): success
test InPlaceOpsCollisions.testMergeNull("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@34a0f7e4, 2500): success
test InPlaceOpsCollisions.testMergeNull("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@65c6a109, 2500): success
test InPlaceOpsCollisions.testMergeNull("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3d6166d7, 2500): success
test InPlaceOpsCollisions.testMergeNull("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@68137465, 2500): success
test InPlaceOpsCollisions.testMergeNull("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@49fef899, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4bfa02cc, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@719612fd, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7829d25, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3a354975, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4e867d2b, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1915e176, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4c910866, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@28ee4fc1, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@47f20522, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33497ba7, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@407dc268, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@ef4c4c4, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1288af12, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@75c72601, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6e5f809c, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@17300524, "Extra Value"): success
test InPlaceOpsCollisions.testMergeNull("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7ebea506, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@45a2176a, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33d888dc, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2a169f85, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@87569a0, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6b0b1d83, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@eed1cef, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2d1b5557, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@157f6277, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4d0af2b8, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@244c2af2, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@5fbe94f4, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@72913a8f, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@9f592fb, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@386f956b, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@34a0f7e4, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@65c6a109, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3d6166d7, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@68137465, 2500): success
test InPlaceOpsCollisions.testPutIfAbsent("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@49fef899, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4bfa02cc, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@719612fd, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7829d25, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3a354975, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4e867d2b, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1915e176, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4c910866, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@28ee4fc1, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@47f20522, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33497ba7, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@407dc268, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@ef4c4c4, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1288af12, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@75c72601, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6e5f809c, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@17300524, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsent("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7ebea506, "Extra Value"): success
test InPlaceOpsCollisions.testPutIfAbsentOverwriteNull("HashMap", InPlaceOpsCollisions$$Lambda/0x000001cb0103a260@3be4cf23): success
test InPlaceOpsCollisions.testPutIfAbsentOverwriteNull("LinkedHashMap", InPlaceOpsCollisions$$Lambda/0x000001cb0103a478@4aa75975): success
test InPlaceOpsCollisions.testPutIfAbsentOverwriteNull("TreeMap", InPlaceOpsCollisions$$Lambda/0x000001cb0103a690@11e66ba9): success
test InPlaceOpsCollisions.testPutIfAbsentOverwriteNull("TreeMap(cmp)", InPlaceOpsCollisions$$Lambda/0x000001cb0103a8a8@313056a6): success
test InPlaceOpsCollisions.testPutIfAbsentOverwriteNull("TreeMap.descendingMap", InPlaceOpsCollisions$$Lambda/0x000001cb0103aac0@2ef4017e): success
test InPlaceOpsCollisions.testRemoveMapping("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@45a2176a, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33d888dc, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2a169f85, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@87569a0, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6b0b1d83, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@eed1cef, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2d1b5557, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@157f6277, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4d0af2b8, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@244c2af2, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@5fbe94f4, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@72913a8f, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@9f592fb, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@386f956b, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@34a0f7e4, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@65c6a109, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3d6166d7, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@68137465, 2500): success
test InPlaceOpsCollisions.testRemoveMapping("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@49fef899, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4bfa02cc, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@719612fd, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7829d25, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3a354975, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4e867d2b, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1915e176, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4c910866, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@28ee4fc1, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@47f20522, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33497ba7, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@407dc268, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@ef4c4c4, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1288af12, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@75c72601, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6e5f809c, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@17300524, "Extra Value"): success
test InPlaceOpsCollisions.testRemoveMapping("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7ebea506, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@45a2176a, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33d888dc, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2a169f85, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@87569a0, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6b0b1d83, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@eed1cef, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2d1b5557, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@157f6277, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4d0af2b8, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@244c2af2, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@5fbe94f4, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@72913a8f, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@9f592fb, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@386f956b, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@34a0f7e4, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@65c6a109, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3d6166d7, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@68137465, 2500): success
test InPlaceOpsCollisions.testReplaceIfMapped("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@49fef899, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4bfa02cc, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@719612fd, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7829d25, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3a354975, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4e867d2b, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1915e176, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4c910866, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@28ee4fc1, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@47f20522, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33497ba7, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@407dc268, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@ef4c4c4, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1288af12, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@75c72601, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6e5f809c, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@17300524, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceIfMapped("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7ebea506, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("HashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@45a2176a, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("LinkedHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33d888dc, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("Hashtable with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2a169f85, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("IdentityHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@87569a0, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6b0b1d83, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("Descending TreeMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@eed1cef, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("WeakHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@2d1b5557, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("ConcurrentHashMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@157f6277, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("ConcurrentSkipListMap with unique objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4d0af2b8, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("HashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@244c2af2, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("LinkedHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@5fbe94f4, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("Hashtable with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@72913a8f, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("IdentityHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@9f592fb, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@386f956b, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("Descending TreeMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@34a0f7e4, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("WeakHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@65c6a109, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("ConcurrentHashMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3d6166d7, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("ConcurrentSkipListMap with colliding objects", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@68137465, 2500): success
test InPlaceOpsCollisions.testReplaceOldValue("HashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@49fef899, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("LinkedHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4bfa02cc, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("Hashtable with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@719612fd, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("IdentityHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7829d25, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@3a354975, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("Descending TreeMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4e867d2b, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("WeakHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1915e176, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("ConcurrentHashMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@4c910866, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("ConcurrentSkipListMap with unique strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@28ee4fc1, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("HashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@47f20522, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("LinkedHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@33497ba7, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("Hashtable with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@407dc268, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("IdentityHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@ef4c4c4, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@1288af12, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("Descending TreeMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@75c72601, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("WeakHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@6e5f809c, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("ConcurrentHashMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@17300524, "Extra Value"): success
test InPlaceOpsCollisions.testReplaceOldValue("ConcurrentSkipListMap with colliding strings", MapWithCollisionsProviders$$Lambda/0x000001cb01026650@7ebea506, "Extra Value"): success

===============================================
java/util/Map/InPlaceOpsCollisions.java
Total tests run: 378, Passes: 378, Failures: 0, Skips: 0
===============================================

----------System.err:(1/16)----------
STATUS:Passed.
----------rerun:(38/3915)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
CLASSPATH='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\InPlaceOpsCollisions.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Map/InPlaceOpsCollisions.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\InPlaceOpsCollisions.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\InPlaceOpsCollisions.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\InPlaceOpsCollisions.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\InPlaceOpsCollisions.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -Xmx768m \\
        -XX:MaxRAMPercentage=25 \\
        '-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        '-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -XX:+CreateCoredumpOnCrash \\
        -ea \\
        -esa \\
        -XX:-CreateCoredumpOnCrash \\
        '-Djava.library.path=d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.map.collisions.shortrun=true \\
        com.sun.javatest.regtest.agent.MainWrapper 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Map\\InPlaceOpsCollisions.d\\testng.0.jta' java/util/Map/InPlaceOpsCollisions.java false InPlaceOpsCollisions
result: Passed. Execution successful


test result: Passed. Execution successful
