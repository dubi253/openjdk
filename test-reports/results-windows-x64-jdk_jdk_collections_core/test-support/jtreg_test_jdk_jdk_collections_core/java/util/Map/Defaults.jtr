#Test Results (version 2)
#Thu Feb 29 16:25:09 UTC 2024
#-----testdescription-----
$file=D\:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java
$root=D\:\\a\\openjdk\\openjdk\\test\\jdk
author=Mike Duigou
keywords=bug8010122 bug8004518 bug8024331 bug8024688 testng
run=USER_SPECIFIED testng Defaults\r\n
source=Defaults.java
title=Test Map default methods

#-----environment-----

#-----testresult-----
description=file\:/D\:/a/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
elapsed=317 0\:00\:00.317
end=Thu Feb 29 16\:25\:09 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=fv-az1201-883.bqzjtvoehc0u5c4z3cleewhyhf.dx.internal.cloudapp.net
javatestOS=Windows Server 2019 10.0 (amd64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Thu Feb 29 16\:25\:08 UTC 2024
test=java/util/Map/Defaults.java
testJDK=d\:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
testJDK_OS=[name\:Windows Server 2019,arch\:amd64,version\:10.0,family\:windows,simple_arch\:x64,simple_version\:10.0,processors\:4,maxMemory\:17179398144,maxSwap\:20266405888]
testJDK_os.arch=amd64
testJDK_os.name=Windows Server 2019
testJDK_os.version=10.0
totalTime=317
user.name=runneradmin
work=D\:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\java\\util\\Map

#section:script_messages
----------messages:(4/317)*----------
JDK under test: d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-d02c86d220b6ff45fa012372c4815e3ae33ea183, mixed mode, sharing)

#section:build
----------messages:(7/213)----------
command: build Defaults
reason: Named class compiled on demand
started: Thu Feb 29 16:25:08 UTC 2024
Test directory:
  compile: Defaults
finished: Thu Feb 29 16:25:09 UTC 2024
elapsed time (seconds): 0.125
result: Passed. Build successful

#section:compile
----------messages:(7/274)*----------
command: compile D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java
reason: .class file out of date or does not exist
started: Thu Feb 29 16:25:08 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 16:25:09 UTC 2024
elapsed time (seconds): 0.125
----------configuration:(13/908)*----------
Boot Layer (javac runtime environment)
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

javac compilation environment
  source path: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map
  class path:  D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map
               D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Defaults.d
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar
               D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar

----------rerun:(36/3622)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\javac' \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=25 \\
        -J'-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk' \\
        -J'-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp' \\
        -J-XX:+CreateCoredumpOnCrash \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -J-Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -J-Dtest.name=java/util/Map/Defaults.java \\
        -J-Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java' \\
        -J-Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -J-Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -J-Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Defaults.d' \\
        -J-Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Defaults.d' \\
        -J-Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Defaults.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -d 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Defaults.d' \\
        -sourcepath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map;D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Defaults.d;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar' 'D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java'
----------direct:(12/1018)*----------
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java:624: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(0L), map.compute(new Long(3L), fun));
                                                   ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java:625: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(3L), map.compute(new Long(3L), fun));
                                                   ^
D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java:626: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(6L), map.compute(new Long(3L), fun));
                                                   ^
Note: D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 warnings
result: Passed. Compilation successful

#section:testng
----------messages:(7/217)----------
command: testng Defaults
reason: User specified action: run testng Defaults 
started: Thu Feb 29 16:25:09 UTC 2024
Mode: agentvm
Agent id: 4
finished: Thu Feb 29 16:25:09 UTC 2024
elapsed time (seconds): 0.192
----------configuration:(13/899)*----------
Boot Layer
  class path: D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\junit-platform-console-standalone-1.9.2.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar 
              D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar 
  patch:      java.base D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\patches\\java.base

Test Layer
  class path: D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Defaults.d
              D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map

----------rerun:(28/3156)*----------
cd 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\scratch' && \\
PATH='C:\\hostedtoolcache\\windows\\msys2\\msys64\\usr\\bin;D:\\a\\_temp\\setup-msys2' \\
SystemDrive=C: \\
SystemRoot='C:\\Windows' \\
TEMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
TEST_IMAGE_DIR='d:\\a\\openjdk\\openjdk\\bundles\\tests' \\
TMP='C:\\Users\\RUNNER~1\\AppData\\Local\\Temp' \\
_NT_SYMBOL_PATH=' d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin;d:\\a\\openjdk\\openjdk\\bundles\\symbols\\jdk-23\\bin\\server' \\
windir='C:\\Windows' \\
    'd:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23\\bin\\java' \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=25 -Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -XX:+CreateCoredumpOnCrash -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=25 -J-Dtest.boot.jdk=d:\\a\\openjdk\\openjdk\\bootjdk\\jdk -J-Djava.io.tmpdir=d:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\tmp -J-XX:+CreateCoredumpOnCrash -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dcompile.jdk='d:\\a\\openjdk\\openjdk\\bundles\\jdk\\jdk-23' \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath='d:\\a\\openjdk\\openjdk\\bundles\\tests\\jdk\\jtreg\\native' \\
        -Dtest.root='D:\\a\\openjdk\\openjdk\\test\\jdk' \\
        -Dtest.name=java/util/Map/Defaults.java \\
        -Dtest.file='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map\\Defaults.java' \\
        -Dtest.src='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -Dtest.src.path='D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -Dtest.classes='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Defaults.d' \\
        -Dtest.class.path='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Defaults.d' \\
        -Dtest.class.path.prefix='D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Defaults.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map' \\
        -classpath 'D:\\a\\openjdk\\openjdk\\build\\run-test-prebuilt\\test-support\\jtreg_test_jdk_jdk_collections_core\\classes\\java\\util\\Map\\Defaults.d;D:\\a\\openjdk\\openjdk\\test\\jdk\\java\\util\\Map;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\testng-7.3.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\guice-5.1.0.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jcommander-1.82.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\javatest.jar;D:\\a\\openjdk\\openjdk\\jtreg\\installed\\lib\\jtreg.jar' \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/Map/Defaults.java false Defaults
----------System.out:(518/56896)----------
test Defaults.testCompute("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@44d60c54): success
test Defaults.testCompute("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@18760890): success
test Defaults.testCompute("Hashtable", java.util.Hashtable@5cbe9d82): success
test Defaults.testCompute("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@f1ccac9): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@29a491ec): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@35a9f27a): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2434eecf): success
test Defaults.testCompute("HashMap", java.util.HashMap@7859f7df): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@622da7b9): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@25c88bcd): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3f300189): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@1704841): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1165e719): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@1678d57): success
test Defaults.testCompute("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4e714fb2): success
test Defaults.testCompute("HashMap", java.util.HashMap@72ba8229): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@6cca6ca1): success
test Defaults.testCompute("TreeMap", java.util.TreeMap@65476920): success
test Defaults.testCompute("EnumMap", java.util.EnumMap@7c17eb27): success
test Defaults.testCompute("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@3626c396): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6f333586): success
test Defaults.testCompute("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@30bf7b6a): success
test Defaults.testCompute("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@46f84434): success
test Defaults.testCompute("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@79e7983): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4186a907): success
test Defaults.testComputeIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6a7aaf89): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@121ed4fc): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6d474d34): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@20ffe7b9): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2e052753): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@2eb75c09): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@37b0adc4): success
test Defaults.testComputeIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@389b933f): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@700d282): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@444c3d35): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@79a69904): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4a0a9d53): success
test Defaults.testComputeIfAbsent("EnumMap", java.util.EnumMap@1adaa6d1): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@48952135): success
test Defaults.testComputeIfAbsent("TreeMap", java.util.TreeMap@319d9b92): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1583d351): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1989664b): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@700cce47): success
test Defaults.testComputeIfAbsent("Hashtable", java.util.Hashtable@17820985): success
test Defaults.testComputeIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@105af50): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@428b8bd): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@31cebeb4): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@7002bd88): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@444bd044): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@1813c841): success
test Defaults.testComputeIfAbsentNullFunction("Hashtable", java.util.Hashtable@67515812): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@645cf97): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7e4717ad): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6aed737c): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@654378c0): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@47c5f63f): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@65d6b5e6): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@5bf614bd): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2a555c5d): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@7ada8146): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@712fef1f): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6ed00803): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@50260682): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@40a670b1): success
test Defaults.testComputeIfAbsentNullFunction("EnumMap", java.util.EnumMap@111b0cb9): success
test Defaults.testComputeIfAbsentNullFunction("TreeMap", java.util.TreeMap@1dca3e58): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@20c0f9a5): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@59994e1e): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@4b4a0de): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@318f2a75): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@2d0cf6d7): success
test Defaults.testComputeIfAbsentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@6278eb37): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@1405bd15): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@3b838d64): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@2eb2e1cc): success
test Defaults.testComputeIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@53626084): success
test Defaults.testComputeIfAbsentNulls("HashMap", java.util.HashMap@3a2d626d): success
test Defaults.testComputeIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@4dfc51ac): success
test Defaults.testComputeIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@191c9136): success
test Defaults.testComputeIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@a49ae89): success
test Defaults.testComputeIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4b061b30): success
test Defaults.testComputeIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1f8f4d34): success
test Defaults.testComputeIfPresent("Hashtable", java.util.Hashtable@159c8e0a): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@2443f813): success
test Defaults.testComputeIfPresent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6e79842e): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@75b37145): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@696ad374): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2f448e15): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@71fd6857): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@1ea102cb): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@df020a7): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@586d4a12): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@13ca3a2d): success
test Defaults.testComputeIfPresent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@47400c4a): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@22603610): success
test Defaults.testComputeIfPresent("EnumMap", java.util.EnumMap@67d0671): success
test Defaults.testComputeIfPresent("TreeMap", java.util.TreeMap@61a80bdd): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2cc4ea06): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@37310213): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4f6b715a): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@3ffcf31f): success
test Defaults.testComputeIfPresent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@446cb42b): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@7e2ca880): success
test Defaults.testComputeIfPresent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@48295674): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@3421521f): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@668c7913): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@7a68b834): success
test Defaults.testComputeIfPresentNullFunction("Hashtable", java.util.Hashtable@fde55a8): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@85646f): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@7eb8fd4a): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@27601043): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6524ae7): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5f056b8d): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@1398cfc1): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@1d56c505): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@37504cfc): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@7b0edfe3): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@e3a19f3): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@76e810c6): success
test Defaults.testComputeIfPresentNullFunction("EnumMap", java.util.EnumMap@4cd65d00): success
test Defaults.testComputeIfPresentNullFunction("TreeMap", java.util.TreeMap@6decbfba): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@9b746e2): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@360cd8d8): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@488a4cd9): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@26debaa): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@64b563cd): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@6873a472): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@30938cf7): success
test Defaults.testComputeIfPresentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1d4223a2): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@94b9fae): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@c93e7e7): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@102e21cf): success
test Defaults.testComputeIfPresentNulls("HashMap", java.util.HashMap@4d838456): success
test Defaults.testComputeIfPresentNulls("LinkedHashMap", java.util.LinkedHashMap@2b691fe8): success
test Defaults.testComputeIfPresentNulls("IdentityHashMap", java.util.IdentityHashMap@13f46304): success
test Defaults.testComputeIfPresentNulls("WeakHashMap", java.util.WeakHashMap@210526b): success
test Defaults.testComputeIfPresentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@47007f2e): success
test Defaults.testComputeIfPresentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6a9037e5): success
test Defaults.testComputeIfPresentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3421922c): success
test Defaults.testComputeNullFunction("Hashtable", java.util.Hashtable@1cd8474d): success
test Defaults.testComputeNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@64505e30): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@e7fef81): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7d8e017d): success
test Defaults.testComputeNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@300e5787): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3cb30b46): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@dc5f3e8): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@5c9cf409): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@12be119b): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@58d24c34): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3d35b9e6): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3a53357e): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5f63ee6b): success
test Defaults.testComputeNullFunction("EnumMap", java.util.EnumMap@5f14247a): success
test Defaults.testComputeNullFunction("TreeMap", java.util.TreeMap@1c69908b): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@66d9f884): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@23a62d9b): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@71335dbc): success
test Defaults.testComputeNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@67365aeb): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@899dbac): success
test Defaults.testComputeNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@230e9915): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@2f39c070): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@767e35bc): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@6c5a2c43): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@7b87f99d): success
test Defaults.testComputeNulls("HashMap", java.util.HashMap@341df59d): success
test Defaults.testComputeNulls("IdentityHashMap", java.util.IdentityHashMap@35d5802): success
test Defaults.testComputeNulls("LinkedHashMap", java.util.LinkedHashMap@799c4e2): success
test Defaults.testComputeNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7b8b335a): success
test Defaults.testComputeNulls("WeakHashMap", java.util.WeakHashMap@659898bd): success
test Defaults.testComputeNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@54f4fd74): success
test Defaults.testComputeNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3f3989f4): success
test Defaults.testConcurrentMap_computeIfAbsent_racy(): success
test Defaults.testConcurrentMap_computeIfPresent_racy(): success
test Defaults.testConcurrentMap_compute_racy(): success
test Defaults.testConcurrentMap_compute_simple(): success
test Defaults.testConcurrentMap_merge_racy(): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@260cbc46): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@694910d3): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@118a4c50): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@22cf9e93): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@a8ee278): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@598a0b54): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@19a271cf): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@43562c66): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@34afd037): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@4c73bda0): success
test Defaults.testForEach("HashMap", java.util.HashMap@589f7bf4): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@e8a6396): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@45730c32): success
test Defaults.testForEach("Hashtable", java.util.Hashtable@1cfd8c80): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2d89c688): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5dc086bb): success
test Defaults.testForEach("EnumMap", java.util.EnumMap@5626a57): success
test Defaults.testForEach("TreeMap", java.util.TreeMap@6cd77cf7): success
test Defaults.testForEach("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@3def79f4): success
test Defaults.testForEach("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2f4d4b0): success
test Defaults.testForEach("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3964b3cd): success
test Defaults.testForEach("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4cf43515): success
test Defaults.testForEach("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7a86bfa5): success
test Defaults.testForEach("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6ee4a4de): success
test Defaults.testForEach("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1e926cbd): success
test Defaults.testForEach("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@5420b53e): success
test Defaults.testForEach("HashMap", java.util.HashMap@56f29556): success
test Defaults.testGetOrDefault("Hashtable", java.util.Hashtable@5d4a7f0b): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@1c777530): success
test Defaults.testGetOrDefault("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5be52169): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@2da1e930): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@1ad82b52): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7c588a7f): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2b8896bb): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@7af7d41d): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1604cc4b): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@6c1c2a94): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@78169286): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@e94e91b): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@7eb94a43): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2d8c6641): success
test Defaults.testGetOrDefault("EnumMap", java.util.EnumMap@2a75d05a): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@20b99e2): success
test Defaults.testGetOrDefault("TreeMap", java.util.TreeMap@1766bc66): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@117f1e4c): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5da42824): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@1ce6eaad): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@794ddf2e): success
test Defaults.testGetOrDefault("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@30d9495c): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7bee8d54): success
test Defaults.testGetOrDefault("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1bde6974): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@43ae8200): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@bff728f): success
test Defaults.testGetOrDefault("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4347b972): success
test Defaults.testGetOrDefaultNulls("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@3df2151): success
test Defaults.testGetOrDefaultNulls("HashMap", java.util.HashMap@20b877f): success
test Defaults.testGetOrDefaultNulls("IdentityHashMap", java.util.IdentityHashMap@4b1e5cd6): success
test Defaults.testGetOrDefaultNulls("LinkedHashMap", java.util.LinkedHashMap@598f3693): success
test Defaults.testGetOrDefaultNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@62c9a4d8): success
test Defaults.testGetOrDefaultNulls("WeakHashMap", java.util.WeakHashMap@2aa8dfba): success
test Defaults.testGetOrDefaultNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2611f944): success
test Defaults.testGetOrDefaultNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5fbdf4ae): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7ec6c2bb, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@21702fb5, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1157e9a9, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@2497355d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@506ae392, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@56c513be, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@61f03608, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@65aa3f66, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@67596773, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@37812752, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@f950630, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@67c76e3, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@42e070aa, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@56304e73, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@30451cdd, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@170d4448, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@54051fe6, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3ebe5615, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@585c029, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@3dd7a91, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@1ff2689a, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@2650310a, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@1cbb90d, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7722bb07, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@4bca0b8c, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@1f028972, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@2690c728, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@18f90bed, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@736c2094, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@44a9f93c, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@293aa8dc, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2b6fc329, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@6686e025, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@55159288, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@12cf3cac, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@85ed02e, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@744585c4, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@57aed81d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@11a45b51, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@242e4bc2, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@25c6d816, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@3b6d806e, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@340b4029, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@55a20be9, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@17ce1a7d, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@c1ab80b, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@42581c15, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@425cd4ec, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@724fc2b1, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@32c0a802, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@60bde602, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@3e505d27, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@251cb8c, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@c243fcd, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@10687790, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@2adcdca, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@3009e50, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@12a5b580, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@7803e5cc, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6e36221b, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@46f63039, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4c7a221c, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@7e614f0d, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@6f7d1547, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@1c7984a1, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@3c9a9d96, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@69f68178, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5348455e, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@b137fdf, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@44116633, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@45fdefa1, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@474163c5, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@4f377e4d, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@54c19702, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@48131406, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3567643b): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@10fe3723): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@374750e3): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7d309170): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4f17fcc9): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@545998c): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@1d87891e): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@5413d192): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@4c11f8cc): success
test Defaults.testMergeNullMerger("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4932bff4): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1e419156): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@19cba340): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@72895402): success
test Defaults.testMergeNullMerger("EnumMap", java.util.EnumMap@6167b6eb): success
test Defaults.testMergeNullMerger("TreeMap", java.util.TreeMap@58b779a9): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@280aa899): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@3909cc9a): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@35eadba8): success
test Defaults.testMergeNullMerger("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@5549af0a): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@712dabd2): success
test Defaults.testMergeNullMerger("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@7dabd85): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@78fa2c27): success
test Defaults.testMergeNullMerger("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@c798988): success
test Defaults.testMergeNullMerger("Hashtable", java.util.Hashtable@7728165): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@84fc70a): success
test Defaults.testPutIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3392b6c2): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@72afbcf9): success
test Defaults.testPutIfAbsent("Hashtable", java.util.Hashtable@714b709e): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@43178efd): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@128043b6): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@20c69075): success
test Defaults.testPutIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@ff8277e): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@4ec52d45): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@7fc1c1a5): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@2eead20a): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@8d5d3e8): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@16ce3d87): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2aa40841): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@11bdd60e): success
test Defaults.testPutIfAbsent("EnumMap", java.util.EnumMap@32524341): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5d2949bd): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1d5a5de9): success
test Defaults.testPutIfAbsent("TreeMap", java.util.TreeMap@6abfaa0d): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7f7a076e): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@52253bcf): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@623fba6f): success
test Defaults.testPutIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7f088c63): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@13711b01): success
test Defaults.testPutIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@7f1377b9): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@5fcadd18): success
test Defaults.testPutIfAbsentNulls("HashMap", java.util.HashMap@15b2dedc): success
test Defaults.testPutIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@625b96a2): success
test Defaults.testPutIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@1efb1734): success
test Defaults.testPutIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@74cd4df2): success
test Defaults.testPutIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@22cfadb3): success
test Defaults.testPutIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@28958473): success
test Defaults.testPutIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@31c4db12): success
test Defaults.testRemove("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5a28f045): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@1b15fa7e): success
test Defaults.testRemove("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@33aca774): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7291ad4f): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4329b97c): success
test Defaults.testRemove("HashMap", java.util.HashMap@12be5200): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@48336d20): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@16f02c17): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@7d688ba8): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@6ea11b6e): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@74a638b4): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5b53d81d): success
test Defaults.testRemove("EnumMap", java.util.EnumMap@53fae65): success
test Defaults.testRemove("TreeMap", java.util.TreeMap@31079d0): success
test Defaults.testRemove("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@715ddc2b): success
test Defaults.testRemove("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1a4d849): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2a448383): success
test Defaults.testRemove("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@20b4adae): success
test Defaults.testRemove("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@3b4241d5): success
test Defaults.testRemove("Hashtable", java.util.Hashtable@bb83673): success
test Defaults.testRemove("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@6418e26d): success
test Defaults.testRemove("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@341765ea): success
test Defaults.testRemove("HashMap", java.util.HashMap@73f1761): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@afa2201): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@5c6a1c95): success
test Defaults.testRemoveNulls("HashMap", java.util.HashMap@64bcd79e): success
test Defaults.testRemoveNulls("IdentityHashMap", java.util.IdentityHashMap@2b0ca6b9): success
test Defaults.testRemoveNulls("LinkedHashMap", java.util.LinkedHashMap@58c99090): success
test Defaults.testRemoveNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@64910814): success
test Defaults.testRemoveNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@31da3b0f): success
test Defaults.testRemoveNulls("WeakHashMap", java.util.WeakHashMap@55ddb3f): success
test Defaults.testRemoveNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@68c538c8): success
test Defaults.testReplaceAll("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@effe829): success
test Defaults.testReplaceAll("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@28330a99): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@4b84d479): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@735838ff): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@140c619d): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@33217d15): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2a262143): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@6cc1148e): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@7b8af8a): success
test Defaults.testReplaceAll("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@66e71b55): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@7ae9e603): success
test Defaults.testReplaceAll("Hashtable", java.util.Hashtable@348e8190): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7fee43ff): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@346c5bec): success
test Defaults.testReplaceAll("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@31788ea7): success
test Defaults.testReplaceAll("EnumMap", java.util.EnumMap@7824cc5e): success
test Defaults.testReplaceAll("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@4868fbe9): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@bb3afce): success
test Defaults.testReplaceAll("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@4cefa423): success
test Defaults.testReplaceAll("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@250d5f9c): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@77c5bc89): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@1c386aaf): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@52889025): success
test Defaults.testReplaceAll("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@6f4bfd03): success
test Defaults.testReplaceAll("TreeMap", java.util.TreeMap@540a23ee): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4c3a8270): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@7b20da64): success
test Defaults.testReplaceAllNoNullReplacement("Hashtable", java.util.Hashtable@44c4923c): success
test Defaults.testReplaceAllNoNullReplacement("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1bd92c1b): success
test Defaults.testReplaceAllNoNullReplacement("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@1500935c): success
test Defaults.testReplaceAllNoNullReplacement("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@15cf67a2): success
test Defaults.testReplaceAllNoNullReplacement("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5b6010b9): success
test Defaults.testReplaceKV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@758f7ddd): success
test Defaults.testReplaceKV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7a685117): success
test Defaults.testReplaceKV("Hashtable", java.util.Hashtable@79e32183): success
test Defaults.testReplaceKV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@5e8f49e1): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@34b277e6): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5cc8634): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@549d88a9): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@25aad995): success
test Defaults.testReplaceKV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@186e8c1a): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@50d3309d): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3b555b2c): success
test Defaults.testReplaceKV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@7e44ce7): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@38de2bb8): success
test Defaults.testReplaceKV("EnumMap", java.util.EnumMap@46d946dc): success
test Defaults.testReplaceKV("TreeMap", java.util.TreeMap@9acb253): success
test Defaults.testReplaceKV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@77d5a652): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@59538621): success
test Defaults.testReplaceKV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@51fb1038): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1fb243da): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@57545d68): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@a244234): success
test Defaults.testReplaceKV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@58f1d4f7): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@3a1fa715): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@2cb52159): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@5c804c28): success
test Defaults.testReplaceKVNoNulls("Hashtable", java.util.Hashtable@6eaea6c5): success
test Defaults.testReplaceKVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6696351c): success
test Defaults.testReplaceKVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@3b9acf32): success
test Defaults.testReplaceKVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@45ea0b01): success
test Defaults.testReplaceKVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@4cd4ff23): success
test Defaults.testReplaceKVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4e588f08): success
test Defaults.testReplaceKVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@236ec533): success
test Defaults.testReplaceKVNulls("HashMap", java.util.HashMap@2258f00b): success
test Defaults.testReplaceKVNulls("LinkedHashMap", java.util.LinkedHashMap@3a2d39be): success
test Defaults.testReplaceKVNulls("IdentityHashMap", java.util.IdentityHashMap@86a6332): success
test Defaults.testReplaceKVNulls("WeakHashMap", java.util.WeakHashMap@a45c2a4): success
test Defaults.testReplaceKVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4c3546cb): success
test Defaults.testReplaceKVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@36b4a65a): success
test Defaults.testReplaceKVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@441c0348): success
test Defaults.testReplaceKVV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@e93cebd): success
test Defaults.testReplaceKVV("Hashtable", java.util.Hashtable@69a4fcc2): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@2899f6f9): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@197bb89a): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4faec486): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@48b609b6): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@7e2bcafc): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@63371aad): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@2f813bc9): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@4cf835b9): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@9bb7a88): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5601d581): success
test Defaults.testReplaceKVV("EnumMap", java.util.EnumMap@34c42b26): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2bcf60e1): success
test Defaults.testReplaceKVV("TreeMap", java.util.TreeMap@23e15165): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@694e220f): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@6b0a7ea9): success
test Defaults.testReplaceKVV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@44e03a48): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@216ae18d): success
test Defaults.testReplaceKVV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@491b85c6): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@34704ea3): success
test Defaults.testReplaceKVV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@656ffdb8): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@659f7ab8): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@7bdd1f43): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@50345532): success
test Defaults.testReplaceKVVNoNulls("Hashtable", java.util.Hashtable@249c738e): success
test Defaults.testReplaceKVVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@1697555d): success
test Defaults.testReplaceKVVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2e36b7f8): success
test Defaults.testReplaceKVVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@410e1277): success
test Defaults.testReplaceKVVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@56b744c3): success
test Defaults.testReplaceKVVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4b260b16): success
test Defaults.testReplaceKVVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@404ae151): success
test Defaults.testReplaceKVVNulls("HashMap", java.util.HashMap@5795e4e0): success
test Defaults.testReplaceKVVNulls("LinkedHashMap", java.util.LinkedHashMap@218ecef9): success
test Defaults.testReplaceKVVNulls("WeakHashMap", java.util.WeakHashMap@1b09cbeb): success
test Defaults.testReplaceKVVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3b60bf75): success
test Defaults.testReplaceKVVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@b96eac2): success
test Defaults.testReplaceKVVNulls("IdentityHashMap", java.util.IdentityHashMap@7e3a48d9): success
test Defaults.testReplaceKVVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@404a0528): success

===============================================
java/util/Map/Defaults.java
Total tests run: 512, Passes: 512, Failures: 0, Skips: 0
===============================================

----------System.err:(3/38)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
