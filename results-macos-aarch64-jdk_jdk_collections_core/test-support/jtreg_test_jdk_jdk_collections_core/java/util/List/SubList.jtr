#Test Results (version 2)
#Thu Feb 29 03:40:14 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=326 0\:00\:00.326
end=Thu Feb 29 03\:40\:14 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 14.3.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 03\:40\:14 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.3.1,family\:mac,simple_arch\:aarch64,simple_version\:14.3,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.3.1
totalTime=327
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-8d0cb4767400ce800d7d94c32d914bb6a3d3f4c5)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-8d0cb4767400ce800d7d94c32d914bb6a3d3f4c5, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 03:40:14 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 03:40:14 UTC 2024
elapsed time (seconds): 0.023
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 03:40:14 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 03:40:14 UTC 2024
elapsed time (seconds): 0.022
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 03:40:14 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 03:40:14 UTC 2024
elapsed time (seconds): 0.048
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 03:40:14 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 03:40:14 UTC 2024
elapsed time (seconds): 0.048
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 03:40:14 UTC 2024
Mode: agentvm
Agent id: 6
finished: Thu Feb 29 03:40:14 UTC 2024
elapsed time (seconds): 0.252
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91957)----------
Seed from RandomFactory = -3785737888259239883L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -2072861763], 0, 1): success
test SubList.testAdd([42, 106140743], 0, 1): success
test SubList.testAdd([42, 2067016113], 0, 1): success
test SubList.testAdd([42, 810549763], 0, 1): success
test SubList.testAdd([42, -1773998671], 0, 1): success
test SubList.testAdd([42, -1934710392], 0, 1): success
test SubList.testAdd([42, -512271613], 0, 1): success
test SubList.testAdd([42, 2108448738], 0, 1): success
test SubList.testAdd([42, -1673783145], 0, 1): success
test SubList.testAdd(java.util.ArrayList@3afc182a, 2, 5): success
test SubList.testAdd(java.util.LinkedList@a25ad0, 2, 5): success
test SubList.testAdd(java.util.Vector@4058a6c7, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@3cccfc1d, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@5d7b686d, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7a640c6c, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@200f058e, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@42fb60d4, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@35574ae1, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@47b1ab4, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@6581174, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@3e711ade, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-1636658718, 42], 0, 1): success
test SubList.testAddAtPos([42, 38153276], 0, 1): success
test SubList.testAddAtPos([42, -1869900076], 0, 1): success
test SubList.testAddAtPos([-1804587673, 42], 0, 1): success
test SubList.testAddAtPos([42, -598547486], 0, 1): success
test SubList.testAddAtPos([42, -1773310047], 0, 1): success
test SubList.testAddAtPos([42, -1121008740], 0, 1): success
test SubList.testAddAtPos([479045666, 42], 0, 1): success
test SubList.testAddAtPos([-1993192690, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@5e46fbc4, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@670ceb96, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@2364578a, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@55b192a7, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@36718f8b, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@362ad647, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@7977531b, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@4c2010f2, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@4802ccd5, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6b40d371, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@4be3120a, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5e01f19c, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@6abed463, 2, 5): success
test SubList.testClear(java.util.LinkedList@2d7cf361, 2, 5): success
test SubList.testClear(java.util.Vector@7715955, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@6dcf749a, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@6ed94d3f, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@2517a05, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@2fed1542, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@57859e40, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@5332997f, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@23c33935, 2, 5): success
test SubList.testEquals(java.util.LinkedList@14c0c7b0, 2, 5): success
test SubList.testEquals(java.util.Vector@4650ea94, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@1a9ce6d5, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@24b3acd4, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@4becfd9f, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@20517367, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@62d629ec, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@3d322eb1, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@713057b9, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@56690b8a, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@5381fca6, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@5da061bf, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@1c23ebb, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@287d1b43, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@411a7a29, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@56ce9208, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@58143be0, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@58143be0, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@79fea7c5, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@457d7f5f, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@2b5cdfb8, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@679a1e5c, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@4ef184c4, 2, 5): success
test SubList.testGet(java.util.LinkedList@9f2e5e1, 2, 5): success
test SubList.testGet(java.util.Vector@636512e3, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@5ce19145, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@35a7adc3, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@32a1de94, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@36a5e801, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@38e596cd, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@3b7aa290, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@4e3d6fb8, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@373515f1, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1ee8b6cc, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@366ec251, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@2f70df24, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@f2fbe2a, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@2329d07c, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@59a73f09, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@31d9a9e2, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@31d9a9e2, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@4e52cf84, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@595301cd, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@481e224e, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7c87291e, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@30a58459, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@4f53cd63, 2, 5): success
test SubList.testIndexOf(java.util.Vector@5fd471bd, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@59da044f, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@1b18205c, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@50ad2fc, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@579bd461, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@5242776a, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@e871780, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@28907ddd, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@2e05c439, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2921f1dc, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@16732f0e, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@34deeef4, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@53c54add, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@3cb76b02, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@2b8820c5, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@549f0959, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@549f0959, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6d38cbae, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@6dd3c6a7, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@2cd7aeb2, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@10d8a0d3, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@2639a04f, 2, 5): success
test SubList.testIterator(java.util.LinkedList@7e08beef, 2, 5): success
test SubList.testIterator(java.util.Vector@4f44caea, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@4433855f, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@283732aa, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@32df56b6, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@f92eaa9, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@5ccb1246, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@536f9896, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@fe7a127, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@6c3800d5, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@3daf483, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@2f60145c, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@3d72b5b4, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@37d26001, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@137253d4, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@59504ac1, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@372547cb, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@372547cb, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@454a3c9c, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@d8b413a, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5e3e9fec, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@309978a0, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@216a692c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@2c22418b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@1602b3e8, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@511f41d5, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@2a8064a4, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@157c877d, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@65cb7049, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@19726bc3, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@57f3021d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@17ad602d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@12bd885f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2ac3921f, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@dc64338, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@5bae1104, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@59bd5f14, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@3c49a1d, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@265c4ce7, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@5fcf26fa, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@5fcf26fa, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@4cc8b165, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@31034f83, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@75ca99ed, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@1e03d10, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@24d66d63, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@448c143, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@60a03513, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@e50690a, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@4bd1189, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@4138254f, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@59ea8f0e, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@7d9ec33c, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7a37a242, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@23a98e06, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@32dcd112, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@4b14b5b5, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@4627f0c3, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@1a545a28, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4e38c826, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@1deda909, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@26f0fed4, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@7245d09b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@769071cf, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@2c3a8527, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@37151eb1, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@136023c8, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@a1bca11, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@707e0256, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@4585dd3d, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@638f49e2, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@78c3e934, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@78c3e934, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@240b0bb4, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@220fdb1a, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@624f1bee, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4b355185, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@55d6db2c, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@37fd8583, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@503865e4, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@2309a1e6, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@6d7eb96d, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@7f48b09c, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@7f48b09c, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@3b1c51df, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@25618ce, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@20a4f9c4, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@45e8e8b5, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@73e451d7, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@1da96668, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@419f4996, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@366d24cd, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@3b52417c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@82f62cb, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@726ea9af, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@deefa6d, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@23ad017c, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@a50554, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@209695ce, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@67936221, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@468894bf, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@57a62d99, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@25c31bc0, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@2e5ffcab, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@5621c79b, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5139f481, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6c7956c9, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@65eb6918, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@15fe0a48, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@4ef4fa87, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@6d856005, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@769cd687, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@5c8726fa, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@2c6cc076, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@6d5dff2e, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@6d5dff2e, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@35ce4679, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@7598cfa, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1e82a506, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@2130992a, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@512e8c11, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@74b3f157, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@13e4f31e, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@28d5cffc, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@33adbfb3, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@5ea6baaf, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@5ce2a747, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@3edae22f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@134761d8, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@15e4613a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@5b79225b, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@1a256323, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@40bafb0d, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@c46f85a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@553dd828, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@62c06014, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@5a431afa, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@1c804404, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([411767019], 0, 1): success
test SubList.testListIteratorSet([-1025851686], 0, 1): success
test SubList.testListIteratorSet([449583567], 0, 1): success
test SubList.testListIteratorSet([1831426130], 0, 1): success
test SubList.testListIteratorSet([-1973210243], 0, 1): success
test SubList.testListIteratorSet([1847534245], 0, 1): success
test SubList.testListIteratorSet([-2123332061], 0, 1): success
test SubList.testListIteratorSet([-1162625004], 0, 1): success
test SubList.testListIteratorSet([-873836157], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@4ecee3bb, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@e65eedf, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@3a20cbb4, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@64e1992d, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@a221e24, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3bcac9f7, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@f3f852b, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@618ce356, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@346d8c7d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1e87ec5d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@43a7ea9f, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@430720ca, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([172169707], 0, 1): success
test SubList.testListIteratorSetPrevious([-2001653904], 0, 1): success
test SubList.testListIteratorSetPrevious([-686918585], 0, 1): success
test SubList.testListIteratorSetPrevious([-313499818], 0, 1): success
test SubList.testListIteratorSetPrevious([-1023053069], 0, 1): success
test SubList.testListIteratorSetPrevious([608025540], 0, 1): success
test SubList.testListIteratorSetPrevious([416018650], 0, 1): success
test SubList.testListIteratorSetPrevious([1335780813], 0, 1): success
test SubList.testListIteratorSetPrevious([451660065], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@73cb29b7, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@325c31d8, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@682639a4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@db9faf, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@4a46ed9a, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@10578f3c, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@5ead4562, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@541bddc9, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@119759e5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@2f59716d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@df5311a, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7c5c4fe5, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@64069e0b, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@6882e63, 2, 5): success
test SubList.testModAdd(java.util.Vector@5914c866, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@5908e662, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@38c0b5bc, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@19a9bc80, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@230090a3, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@137e372f, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@2f4b8edd, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@3487afc9, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@3f35844, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4d8dc233, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@5639736, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@79d34121, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@2ef2c4e4, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@275075ff, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@214a3d85, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@e03e9a1, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@5fae83a8, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@20b343f6, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@6593f510, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@9eb2ae1, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@61d6d4bd, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@69831bc9, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@7891d3f, 2, 5): success
test SubList.testModClear(java.util.LinkedList@1761880b, 2, 5): success
test SubList.testModClear(java.util.Vector@1334272f, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@485a8839, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@7bb4038c, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@371f2d7d, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@7fb21994, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@59e3fd1d, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@1cae8756, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@7151700, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@662fc47b, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@487da6fc, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@4a54c935, 2, 5): success
test SubList.testModGet(java.util.LinkedList@25c39852, 2, 5): success
test SubList.testModGet(java.util.Vector@1e6adb4, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@10a038b5, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@77b99d66, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@e9b1f41, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@469a9ea3, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@70ee66d5, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@4f048a4, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@69beece1, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@14618aa3, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@4fbb20e4, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@29220793, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@4a2a23ac, 2, 5): success
test SubList.testModHashCode(java.util.Vector@47883b80, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@114bfa30, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@149f6d5f, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@6ce607c4, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@79cec81d, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@10d3ae26, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@2c65d022, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@57294739, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@55f8365c, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@219c5c6e, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@28e3172d, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@10859c6f, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@66affa89, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@695ec91b, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@8a92ffc, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@60da6af8, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@6fef8275, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@38f65889, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@417fc945, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@332b11e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@6e50107a, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@253e5d89, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@7aeed11d, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@7b21644b, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@25a4e097, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@1649cc98, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@482d4f2f, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@212a0482, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@34112df4, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@45606b1c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@5489d78c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@5d9fe5c0, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@7f0cade9, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4c46bec1, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@e597783, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@11f36c0b, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@3fc65a37, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@53e3aeb1, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@12af2f1e, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@55116b0e, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@f60387a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@42c366c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@fb9ecc5, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6b0068f6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@f94471c, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3c9a017d, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@57512e44, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@122bd206, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@10aa2842, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@316f773e, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@6819442, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@703228fe, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@7f506568, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@57d37110, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1076657c, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@54f974da, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@1226ba76, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@630f269e, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@2aa49142, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@3c85fcb, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@484b3352, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@20da4df6, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@2b4901e5, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@53a9edbd, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@41d6fb43, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@9b8ab8f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4109be2f, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1b131f1e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@3a022375, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@37ca926f, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@595453f, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@5f1e5011, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@678717f1, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@df51455, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@3a95d65d, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@d873b0a, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@6fdc37ac, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@5debf4c6, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@51e49162, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3c288cf2, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@4b58e658, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@351f2126, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@68385e05, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@47f6b2a0, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@5167b984, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@1afddf7d, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@25289635, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@5925c281, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@cee611c, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@695e1216, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4dd7c6bf, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@d15e7bd, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@3936b94e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@1bb291ed, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@3d51e5ad, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@2f9867ee, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@532537e1, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@68d3e937, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@2db05ddf, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1c49ed97, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@632fe1be, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@7a6be33c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@5a2d6838, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3a945419, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@579cf9ad, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@49c3727e, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@7b6d7d91, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@5b7df5d5, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@3f3c16d7, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@677277f2, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@7cf49b00, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@74bc90a0, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@29f882f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@3f4b6697, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@422478b4, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1fb6fc95, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@602344c9, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@59f0629e, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@6d5b45d8, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@2b22a9ae, 2, 5): success
test SubList.testModRemove(java.util.Vector@161fe4c9, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@36d4b507, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@2bccf3aa, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@62b4fca7, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@f60fc85, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@639e0cee, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@40739dae, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@218b8b4f, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@4b2772f5, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@c94f21b, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@c28d603, 2, 5): success
test SubList.testModSet(java.util.LinkedList@5423f175, 2, 5): success
test SubList.testModSet(java.util.Vector@590f23e1, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@2cc3de7d, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@746c523c, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@20b56e12, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@12e7b84, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@232ea05c, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@6fe2da9e, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@15a158d7, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@628538db, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@67592e34, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@2811c4bb, 2, 5): success
test SubList.testRemove(java.util.LinkedList@5dc8686b, 2, 5): success
test SubList.testRemove(java.util.Vector@411c52ac, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@756443e0, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@d0b4d0b, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@61b31dc3, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@a9832bf, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@3c714a18, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@485cb1eb, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([1761075982], 0, 1): success
test SubList.testSet([-1692318207], 0, 1): success
test SubList.testSet([446297103], 0, 1): success
test SubList.testSet([-1643868251], 0, 1): success
test SubList.testSet([-1239327898], 0, 1): success
test SubList.testSet([883838094], 0, 1): success
test SubList.testSet([1790032855], 0, 1): success
test SubList.testSet([-67240746], 0, 1): success
test SubList.testSet([-1935773978], 0, 1): success
test SubList.testSet(java.util.ArrayList@73c0d599, 2, 5): success
test SubList.testSet(java.util.LinkedList@2e17cea0, 2, 5): success
test SubList.testSet(java.util.Vector@4cfb172b, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@35546fa4, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@bc6f0e2, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@e773e31, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@2af1b106, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@470cdfc8, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@163e09fd, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@284561a6, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@78beea66, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@4234897f, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@4fb65e10, 2, 5): success
test SubList.testSubList(java.util.LinkedList@5b487838, 2, 5): success
test SubList.testSubList(java.util.Vector@4f9d4d60, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@215f9eb0, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@311f63, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@1184cc3c, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@29935290, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@49ed6bf8, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@577b4fab, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@763ec5f8, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@6351bd2e, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@41fd940c, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@2465cfbe, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@85e86c9, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@9a759ee, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@2d9f9196, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@796d3a5f, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@951bdd2, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@951bdd2, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@2a0b5c26, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@dcb131b, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1e03fa47, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@63c1101c, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@3f73833d, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@7c3ba92e, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4ef25e90, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@2c46056e, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@3a9bc6c0, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@18edeafd, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@18edeafd, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@207d983c, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@4f521373, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@6aa87a56, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@637e70fe, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@2da6f03, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6cf05d39, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@61e2f5c9, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@513b58d3, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@60d8d58, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@4f695ff3, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@4f695ff3, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1ba729ef, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@1b2e08df, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@3583eb38, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@63d40e01, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@19e0874e, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@497371a9, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7428517, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@ca4ba8a, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@69365bf6, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@61b4c907, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@61b4c907, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@7fb5ca82, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@445d07b4, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@2d899ccf, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@4f414056, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@65596292, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@491c6bb6, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@16e2c17, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@67916bd3, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@e6697f1, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@9960861, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@9960861, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@4a68fb9b, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@305fdeca, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@13bcea7e, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@fb0e14f, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@4cdcb4b9, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7394aad2, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@6e08246c, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@31c0ece7, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@61745ad5, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@219d8b8f, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@219d8b8f, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@42ca8802, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@7d1226fd, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@5a88beee, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@c2c9f2d, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@4d515cd4, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@66c51d06, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@6e2f2943, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@615f3acf, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@7dc4f7dc, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@388984e9, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@388984e9, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@3c8d1563, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@7e9a4e4, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@6093385b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@59b5f550, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@583cdccc, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@5f376d36, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@3f8435da, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@1748b8f5, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@70d33e5f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@4620c5d5, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@4620c5d5, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@73ed1440, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@1ff7e3ad, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@37b5e220, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@3f3828da, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@24ac4e83, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2c4dd6c, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@32439e30, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@5d50c712, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@659fe74c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@38c27b95, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@313545cf, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@8f7461c, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@2a987fa7, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@6861e99, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@5b150938, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@4567a9b4, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@5f5d5379, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@5ea591b4, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@1c4e5130, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@78676d29, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@78676d29, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@66de12bc, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@7d8e8d76, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@6c58c4df, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@59b04e12, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
