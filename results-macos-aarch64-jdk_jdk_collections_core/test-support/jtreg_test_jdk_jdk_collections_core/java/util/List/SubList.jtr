#Test Results (version 2)
#Thu Feb 29 15:19:16 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=233 0\:00\:00.233
end=Thu Feb 29 15\:19\:16 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.23
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 15\:19\:16 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=233
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-d4d10516b37408a0fd168e0950e3ca30d0648b52)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-d4d10516b37408a0fd168e0950e3ca30d0648b52, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 15:19:16 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 15:19:16 UTC 2024
elapsed time (seconds): 0.016
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 15:19:16 UTC 2024
Mode: agentvm
Agent id: 2
finished: Thu Feb 29 15:19:16 UTC 2024
elapsed time (seconds): 0.016
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 15:19:16 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 15:19:16 UTC 2024
elapsed time (seconds): 0.041
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 15:19:16 UTC 2024
Mode: agentvm
Agent id: 2
finished: Thu Feb 29 15:19:16 UTC 2024
elapsed time (seconds): 0.041
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 15:19:16 UTC 2024
Mode: agentvm
Agent id: 6
finished: Thu Feb 29 15:19:16 UTC 2024
elapsed time (seconds): 0.174
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91949)----------
Seed from RandomFactory = 629881578094508330L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 231319880], 0, 1): success
test SubList.testAdd([42, 1442550685], 0, 1): success
test SubList.testAdd([42, -910624311], 0, 1): success
test SubList.testAdd([42, 1905545741], 0, 1): success
test SubList.testAdd([42, -81629211], 0, 1): success
test SubList.testAdd([42, 1051508513], 0, 1): success
test SubList.testAdd([42, -1999354974], 0, 1): success
test SubList.testAdd([42, -230246032], 0, 1): success
test SubList.testAdd([42, -1299589228], 0, 1): success
test SubList.testAdd(java.util.ArrayList@3c056939, 2, 5): success
test SubList.testAdd(java.util.LinkedList@7719a598, 2, 5): success
test SubList.testAdd(java.util.Vector@10894d3f, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@23244de2, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@6bdc9235, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@2b8d185d, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@23225c75, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@72262078, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@6eec99b6, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@480aac77, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@78b996e8, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@d0d3669, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, 1581992859], 0, 1): success
test SubList.testAddAtPos([42, -392278413], 0, 1): success
test SubList.testAddAtPos([42, 2129429336], 0, 1): success
test SubList.testAddAtPos([1051902500, 42], 0, 1): success
test SubList.testAddAtPos([-2099294191, 42], 0, 1): success
test SubList.testAddAtPos([42, 647458558], 0, 1): success
test SubList.testAddAtPos([780407426, 42], 0, 1): success
test SubList.testAddAtPos([42, 1961280716], 0, 1): success
test SubList.testAddAtPos([1552427152, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@1e43005, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@4c5c9ed4, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@46b239a3, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@54f6909, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@68ed9af, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3a3a50ac, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@2fa2354b, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@18999ca8, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@770af369, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@23858151, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@2ede2689, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3f93dff7, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@3fc35ad1, 2, 5): success
test SubList.testClear(java.util.LinkedList@46f0a59d, 2, 5): success
test SubList.testClear(java.util.Vector@aa4d06b, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@20f8cb01, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@51361129, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@29d20c99, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@112f130b, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@44edf358, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@52e6e954, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@20721a99, 2, 5): success
test SubList.testEquals(java.util.LinkedList@50a38566, 2, 5): success
test SubList.testEquals(java.util.Vector@75171543, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@1467d20f, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@17158e90, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@7a8a7ab1, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@326a77ef, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@724aa5c5, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1a8d357d, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6d663bc, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@410980c7, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@799904bd, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@1c12ec5e, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@5c024e70, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@38d6e921, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@4c0c8233, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@5db6e23d, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@62b7c79b, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@62b7c79b, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@668d8239, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@175d6d2b, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1e2431d4, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@80fce80, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@2de4135c, 2, 5): success
test SubList.testGet(java.util.LinkedList@1ee7b765, 2, 5): success
test SubList.testGet(java.util.Vector@6488e883, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@3c44aac8, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@2d224b89, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@70008439, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@2ad8674d, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@6cbdaf65, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@58b13bcb, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7c8b84a, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@31ae3797, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@adb2fca, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@3e3d7604, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@1fde2842, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@202bfe8a, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@8a22179, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@afee6a1, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@16553026, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@16553026, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@596cd2ad, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@6c1a2503, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@20f2b869, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@43497b0a, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@73cb0971, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@683f550f, 2, 5): success
test SubList.testIndexOf(java.util.Vector@f99c37, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@3d3bdfef, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@4e471354, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7103641a, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1c587581, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@442fdddb, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@69345e8f, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@4fc805ef, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@4c19392c, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2855862a, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@5cbac506, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@449773bc, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@9c5cacf, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@606db603, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@71869c9c, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@2a750367, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@2a750367, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@689dec1a, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@31339e8a, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@2d3cb0a1, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@6762ea5a, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@66cd76b6, 2, 5): success
test SubList.testIterator(java.util.LinkedList@247edd5e, 2, 5): success
test SubList.testIterator(java.util.Vector@767e120a, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@28e73aad, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@83a7ad3, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@6f2a0d2c, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@2c6d270d, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@263de409, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@456f11db, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1b26e124, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@5e214e80, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@32463e84, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@5dd29229, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@47fb50db, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@742a64a1, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@22cbf61b, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@51c1367, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@3481c624, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@3481c624, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@4b31202c, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@77dc2ea1, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@ad530e6, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@3607c29b, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@2f564d68, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@5ff6cb69, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@72714605, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@54793c8c, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@48a9a94b, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@ef7c7f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@312cf963, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@2aa44c2b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1f568b6c, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@5870f9da, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@662c4ad, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@6090dcac, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@5ac88dcf, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@ad58f2e, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@72d4ba1a, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@11b49557, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3c9ace8b, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@68eb3c46, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@68eb3c46, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@63d7523f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@b475021, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@35b38cf5, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2cdb83b3, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@31a2d17f, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@414dc376, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@46ffd35f, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@24e276c3, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@700e43a4, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@75b0eed1, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@69e540b1, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@47bfa541, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4e4a7587, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@282f9dd7, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@4567973c, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@68459975, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@15210b8d, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@6ed4b121, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2a91c7a2, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@3b1ac464, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@26a7eb5a, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@5a9909dc, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3dafaccd, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@766bbb97, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@49274505, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@2f45698c, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@bc759c5, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@43ad7227, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@370e5ae5, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@42ccb482, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1b9645c7, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@1b9645c7, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4bc5a821, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@44af3f9a, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@e65e545, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7239ce89, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@5a6eca86, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@3879a9b3, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1effda28, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@201d9b5e, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@2f25c5ac, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@56b4dc27, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@56b4dc27, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@1a63faa5, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@59653890, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@3c9e2ed9, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@1490a3d8, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@640c7ae4, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@78db36c4, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@1422c0d2, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@1ca927b8, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@7f887252, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3d65d355, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@cabee9c, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@524672d1, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@599e5c0c, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@2e65868a, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@1b5acf57, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@739d567f, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@7268e701, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@6cee5ea3, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4ba267f6, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6e43ea3e, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@763f861f, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@42912f70, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@30d9b5a8, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@59a16e67, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@783467f8, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@1ef12bf0, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3d2a48b7, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@ee04a90, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@2838a7d1, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@14719cce, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@438b084, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@438b084, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@422dc128, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@524ed21, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@62468800, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@4456f60f, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@75fec655, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@506414ba, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@35c8df7f, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@24c7f730, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@19efce0f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2fb99527, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@4194bce, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@3731a566, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@11c1f321, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@10380c57, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@4acd2985, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@416aeb03, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@253d36ec, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@4d99595a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@2572af9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@517b5119, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@2b6cb151, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@a1900e6, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([18466370], 0, 1): success
test SubList.testListIteratorSet([378139557], 0, 1): success
test SubList.testListIteratorSet([1753740534], 0, 1): success
test SubList.testListIteratorSet([-100266692], 0, 1): success
test SubList.testListIteratorSet([-266737460], 0, 1): success
test SubList.testListIteratorSet([205576635], 0, 1): success
test SubList.testListIteratorSet([524134870], 0, 1): success
test SubList.testListIteratorSet([204563262], 0, 1): success
test SubList.testListIteratorSet([-719230918], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@35a2e230, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@2d0934c6, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@951ad49, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@4b2f3394, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@67b3823e, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@5e3067be, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@24e374e8, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@1f35209c, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@2a84b66d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@739ec241, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@1712ddbe, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1ed385c9, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-1817941149], 0, 1): success
test SubList.testListIteratorSetPrevious([926951527], 0, 1): success
test SubList.testListIteratorSetPrevious([-497542812], 0, 1): success
test SubList.testListIteratorSetPrevious([-968140209], 0, 1): success
test SubList.testListIteratorSetPrevious([118148624], 0, 1): success
test SubList.testListIteratorSetPrevious([-1149921058], 0, 1): success
test SubList.testListIteratorSetPrevious([-803794568], 0, 1): success
test SubList.testListIteratorSetPrevious([-669753811], 0, 1): success
test SubList.testListIteratorSetPrevious([-1077949], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@59dd5828, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@6af4dcef, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@20a7d1e, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@41881371, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@afc8d1f, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@3ba54dd9, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@71fb6993, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@640179c4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@5d562795, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@1ec8178d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@5e51db85, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@355fa009, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@3e0b06e7, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@249322e2, 2, 5): success
test SubList.testModAdd(java.util.Vector@624fc9d3, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@dae7f58, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@3bd07895, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@4b1f76bb, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3d574d10, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@143efb9a, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@4a6b7fd9, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@2a9569af, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@6a36533f, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@75e13f2, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@1775fc49, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@44ec34c5, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@5c4e74c4, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@1abe865a, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@5b2b78d6, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4124117, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@1657ce95, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@6e77ccd5, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@74de845, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7657737b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@42ee3bb, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@5f3f5263, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@71d3c2fa, 2, 5): success
test SubList.testModClear(java.util.LinkedList@477e28b5, 2, 5): success
test SubList.testModClear(java.util.Vector@163ec658, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@406d7ceb, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@71390a0f, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@2ac0db80, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@2a6fcbf3, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@c9faafe, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@35bee605, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@1fbef49f, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@68d14d97, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@552ebaed, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@33716f0d, 2, 5): success
test SubList.testModGet(java.util.LinkedList@6059b907, 2, 5): success
test SubList.testModGet(java.util.Vector@424da897, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@7021fad9, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@402a7b50, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@d82bb92, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@12181bdf, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@2bf451db, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@20405e50, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@b3319c4, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@780fd78c, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@6e721f17, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@1439f108, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@704ddbec, 2, 5): success
test SubList.testModHashCode(java.util.Vector@110e51e, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@278bffcc, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@2cb5e021, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@53b50921, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@24be0384, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@335d2573, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@a12c664, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@4e70df2a, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@2e35271c, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@126fbe3b, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@6ab763c8, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@46a352ee, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@5a4a8c01, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@6c3614af, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@7907c033, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@65f51e4b, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4ef99c0b, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@6d52d1fb, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@20244ce5, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@3fd98745, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@6352528d, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@2edab417, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@254e2cb, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@7e21f2a9, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@2243e1a3, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@ce76369, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@16de1445, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@4f4f6880, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@6f8dc82e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@6ed829f, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@32c91df0, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@7d14ee1e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@17247427, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@61c94391, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@599e5585, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@44327025, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@7d269ca4, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@6e9100ee, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@f4098e7, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7f36f800, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@6518b10a, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@4a43c49, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@6e96ff9e, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@562b3681, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@7579c872, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@49c4d35f, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@380475a7, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@110a8131, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@29511915, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@349de780, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@38b617c6, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@4d25f804, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2da19202, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@24f7f460, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@2d24a82e, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@76d0ba9e, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@52f4ad93, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@34b40c97, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@3c24978d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@1326a17e, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@114a64fa, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@4d5b5672, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@56f2d137, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@2b0e14fb, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@174309c3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@791bd025, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@617dace8, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@29cce942, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@365988c6, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7ab0466a, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@1bd31892, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@3e6b492, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@24bcdf77, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@5a53a19c, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@7dbf05bd, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@6807d930, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@3d66190, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@49051fe, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@3ac5049e, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@28a62a74, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@497c053f, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@2f2a180, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@407519a6, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@11c41578, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@6b15c2c7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@1c66688f, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@70559b6f, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@34b74ff7, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@467fe7bc, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@bb0db5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@4fd00198, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@70df6bf1, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@131c753e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@38897911, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@5cf38053, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@2d95e7d3, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@3cb7e775, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@5a3cd9b3, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@1574e9ce, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@59ec0cc5, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@24117c27, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@756f52e4, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@21c4cf4, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@26b02612, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@74b398f3, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@470aefa1, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@5ac9dae0, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@37df660a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@72899cdf, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@586a5f92, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@1a6585eb, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@484903ab, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@7ed7dced, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@16ab3c86, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@44f435f6, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@64e9e0cf, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@207b7eef, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@6d01bb31, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@24ebc21a, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@5b178005, 2, 5): success
test SubList.testModRemove(java.util.Vector@6cec5a67, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@190b6641, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@4bef7361, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@65a627cf, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@613e884f, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@79c307ee, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@693e5754, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@5bd1cac1, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@2780909, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@f0ef551, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@fa7eece, 2, 5): success
test SubList.testModSet(java.util.LinkedList@2b6c060e, 2, 5): success
test SubList.testModSet(java.util.Vector@3acd37bb, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@3484bfb5, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@eaf45e7, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@7ce6977c, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@332da842, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@610f206c, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@32031357, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@530e8fb3, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@33c4825, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3938d8fd, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@4b7b5d3f, 2, 5): success
test SubList.testRemove(java.util.LinkedList@726db95a, 2, 5): success
test SubList.testRemove(java.util.Vector@1bdee96c, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@e46cf0a, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@4a4811f1, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@7fa16173, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@4b00c955, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@46402a26, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@265f8e8a, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([263508670], 0, 1): success
test SubList.testSet([-1156899193], 0, 1): success
test SubList.testSet([68393603], 0, 1): success
test SubList.testSet([-707376519], 0, 1): success
test SubList.testSet([-885885666], 0, 1): success
test SubList.testSet([1323385850], 0, 1): success
test SubList.testSet([-434058997], 0, 1): success
test SubList.testSet([648688296], 0, 1): success
test SubList.testSet([-25520244], 0, 1): success
test SubList.testSet(java.util.ArrayList@7eb27ea4, 2, 5): success
test SubList.testSet(java.util.LinkedList@30c09ab5, 2, 5): success
test SubList.testSet(java.util.Vector@5976fee1, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@2be512df, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@1689ce59, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@2b369723, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3e8c913b, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@399a77f2, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@7ef27a6f, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@615e2bc2, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@4166ca6b, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@55a675ed, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@5ae77e69, 2, 5): success
test SubList.testSubList(java.util.LinkedList@449a8a97, 2, 5): success
test SubList.testSubList(java.util.Vector@74964922, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@62d2e42a, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@2a68af25, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@4d46b656, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@478a4f26, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@cf3a29, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@1b373b25, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@44e6c03, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@2565e3f9, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@675f0eb8, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@3bada6f9, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@636ac08c, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1bf6e184, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@13418343, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@3bf6d564, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@74239506, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@74239506, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@523f9299, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@247132b7, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@fbe529e, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@7d479666, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@46bca925, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@6182709, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@710a6f1b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@4115e8cf, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@34c7c1ce, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@6defb1fa, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@6defb1fa, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@5d375596, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@797197fc, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@29b14610, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@2b47dcce, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@14dafb18, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@7c5e7a1f, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@6ef634fa, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@19c6f908, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3f7dae2, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@5cf7f70, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@5cf7f70, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@65b42269, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@4aee778e, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@4fea1825, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1ab9610e, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@16482a04, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@6f09faf0, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@6667d293, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@272c8828, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7066c30f, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@1677d309, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@1677d309, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1daeed9c, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@7714cb9b, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@2912ebaa, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@1cec1f3, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@af152a9, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@71376a25, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@41669f83, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@601a6a59, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@7c1a765a, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@36b3a2db, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@36b3a2db, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@cdb9b8e, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@13fabc0e, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@6cec428c, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@274588a1, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@143c7a32, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@2287ecf0, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@212f8461, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@14444647, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@73c988b6, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@6582d0f6, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@6582d0f6, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@5d24ec82, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@408981af, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@271a475b, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@11efe8f0, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@57777d2b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@7e8cc485, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@34663a78, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@6eb6e360, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@a9bec3b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6c1223ac, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@6c1223ac, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@71892cf1, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@41c0e1e7, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@1aaaa772, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@bfeb78e, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@537b0c34, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@24ca28c9, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@6a4eea52, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@441c5824, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@2ae3e771, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7df96d76, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7df96d76, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@6c9f47d2, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@362c7bd4, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@3fa1479c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@6890bf6e, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@2f49d57b, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@360f3d22, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5aa72954, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@72a765ad, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@20b043aa, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@28690cfa, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@32f18c89, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@5d87e7ec, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@54f79f88, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@1edd3ddc, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@22534721, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@64f81096, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@5aac3fdd, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@37b0398, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@35fee759, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1e96e342, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@1e96e342, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@1a720ec8, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@4296832f, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@4656036c, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@3861fa4c, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
