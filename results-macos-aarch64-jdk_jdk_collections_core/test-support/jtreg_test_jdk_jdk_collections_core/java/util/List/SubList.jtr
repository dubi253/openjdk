#Test Results (version 2)
#Thu Feb 29 03:04:04 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=260 0\:00\:00.260
end=Thu Feb 29 03\:04\:04 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.23
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 03\:04\:04 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=261
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-4ebb60e40d9a41e20dd3cc667045340097037f73)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-4ebb60e40d9a41e20dd3cc667045340097037f73, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 03:04:04 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 03:04:04 UTC 2024
elapsed time (seconds): 0.013
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 03:04:04 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 03:04:04 UTC 2024
elapsed time (seconds): 0.013
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/203)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 03:04:04 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 03:04:04 UTC 2024
elapsed time (seconds): 0.04
result: Passed. Build successful

#section:compile
----------messages:(7/271)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 03:04:04 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 03:04:04 UTC 2024
elapsed time (seconds): 0.04
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 03:04:04 UTC 2024
Mode: agentvm
Agent id: 6
finished: Thu Feb 29 03:04:04 UTC 2024
elapsed time (seconds): 0.207
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91959)----------
Seed from RandomFactory = 8468733140463373436L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, 44520680], 0, 1): success
test SubList.testAdd([42, 979931889], 0, 1): success
test SubList.testAdd([42, 632304284], 0, 1): success
test SubList.testAdd([42, 766576228], 0, 1): success
test SubList.testAdd([42, -1219988898], 0, 1): success
test SubList.testAdd([42, 1056291460], 0, 1): success
test SubList.testAdd([42, 766300999], 0, 1): success
test SubList.testAdd([42, -1334511170], 0, 1): success
test SubList.testAdd([42, -1700118135], 0, 1): success
test SubList.testAdd(java.util.ArrayList@6a2c3b65, 2, 5): success
test SubList.testAdd(java.util.LinkedList@63ebe06d, 2, 5): success
test SubList.testAdd(java.util.Vector@425d0c3a, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@fb3ae0d, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@63494d7f, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7c3682fd, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@61f34d28, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@7bf866d3, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@ef03cfd, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@c74c8a3, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@7b2e5b9d, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@72e4c214, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([-1294582827, 42], 0, 1): success
test SubList.testAddAtPos([1647578535, 42], 0, 1): success
test SubList.testAddAtPos([42, -773884195], 0, 1): success
test SubList.testAddAtPos([-1644803643, 42], 0, 1): success
test SubList.testAddAtPos([42, 1880329891], 0, 1): success
test SubList.testAddAtPos([1571844712, 42], 0, 1): success
test SubList.testAddAtPos([876972831, 42], 0, 1): success
test SubList.testAddAtPos([42, -1853357493], 0, 1): success
test SubList.testAddAtPos([42, 1240703679], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@173b8970, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@2b4ad8ac, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@1bfd1ba0, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@3c80f60b, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@2cb0216d, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4057df45, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@2a6c0e6f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@4d8e7976, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@5714499e, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@33457316, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@522413dc, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3055d2df, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@58c9de60, 2, 5): success
test SubList.testClear(java.util.LinkedList@6f7ef72e, 2, 5): success
test SubList.testClear(java.util.Vector@18c1fda6, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@6aecfec5, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@605f63ac, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@7d502b0a, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@4da9a331, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@7e9d3748, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@2f4eec56, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@65ab5060, 2, 5): success
test SubList.testEquals(java.util.LinkedList@76991fbe, 2, 5): success
test SubList.testEquals(java.util.Vector@3a5ce13, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@bbfc6cb, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@f51f680, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@650ea56c, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@ca7ef42, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1964e4fa, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@31bef780, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@e3827c5, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@4c03d4b7, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@19a5e57d, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@1e2da22f, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@18a36f9b, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@2407d3ba, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@4e95b7c7, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@5ba5caa8, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@3933898, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@3933898, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@324bc61d, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@1b9833b6, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@6471957f, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@25ca30dd, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@3f4e7d99, 2, 5): success
test SubList.testGet(java.util.LinkedList@6af80132, 2, 5): success
test SubList.testGet(java.util.Vector@31480c0b, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@7ea27f75, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@42b4849c, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@334f9723, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@9fdfef3, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@40ab9c2e, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@11c415f6, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@15bbf5b5, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@10c1ee33, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@3901d470, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@703c8189, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@7fc54a95, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@61bc7751, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@4b8eb538, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@2f6c84b3, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@802d580, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@802d580, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@2d1a34b0, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@3cd2221b, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@a1813ae, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@466e2550, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@19787523, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@7379e670, 2, 5): success
test SubList.testIndexOf(java.util.Vector@5f494348, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@8d0e7f3, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@f3b055c, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@2941dbd, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@25ed2e5d, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@2e8fd349, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@4efe5d2b, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@30b5e025, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@667e591e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@1a51f4d0, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@1d5e2d12, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@5c4460cc, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3cb887, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@1fa20bc7, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3de1ca68, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@370e857e, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@370e857e, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@7f503fd4, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@4e14423c, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@74df093, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@641cb907, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@89e59d5, 2, 5): success
test SubList.testIterator(java.util.LinkedList@67f6c9a, 2, 5): success
test SubList.testIterator(java.util.Vector@f1a8629, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@ec61d87, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@21bfeaab, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@69dbf10e, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@35a24ee3, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@2b82287d, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@5761a1e9, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@4f1580c2, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@7c39b7f3, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1ed8bb5e, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@24a7bedc, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@418ee7da, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@5dd5865e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@1cc8a42a, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2f4c536, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@1c120f8a, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@1c120f8a, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@50694278, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@410c82b7, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@203052fe, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@2cdce52, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@50fc8ebc, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@22bf6b73, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@70635468, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@418cea5f, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@1a101c97, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@2bb833df, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@17fddc73, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@778aaf24, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@1f008641, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@12b4b40f, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@5127e16d, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@780a2459, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@3b6f96c7, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@3cd9f1d8, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@688c5027, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@4119e6c0, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@c171495, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6dc68ca7, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@6dc68ca7, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@34fd51fb, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@544738bc, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@3f2fd64, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@39ced175, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@4b549bdb, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@10c5a545, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@3d54d134, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@5cca5513, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@6172d25b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@17e70ad8, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4deb4d8d, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@268b9a29, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6e3ce34e, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@259bf2c1, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@7b203e71, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@74d95ee7, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@2b09a971, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@6e8c607b, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@5f6b4b87, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@63530bf0, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@2691283b, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@3a5f14b7, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@2d7ee5fc, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@6ab497e3, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@3c999594, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@440da040, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@f1b2ec3, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3e3a36e1, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@4065e51e, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@65f674cf, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6e1dcca7, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6e1dcca7, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@4fca5bea, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@101d9e13, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@66d9f5a8, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@43d19b10, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@8fe8ea9, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@55fc6545, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@93f4db2, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@1f4df9af, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1c03fdc2, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@213de491, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@213de491, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@73ba7ef1, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@31d1cdc6, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@5e2dc4ec, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@343e97c3, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@85a9a98, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@4cf4e72, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@8ee4e40, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@26f60bea, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@6c1ccb58, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@17ee2a0, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4d52c2f5, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@248644ed, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4c0f767a, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@56906965, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@7ccf4ae7, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@567cf1f8, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@390559c3, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@18f8dd44, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@69fce9a4, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4e26bc5f, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@1907f40f, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@209f10b2, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@55814b71, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@52625719, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7de3cac7, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@10c08658, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@43b1a82c, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@427f0275, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@53c4c428, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@6085e74, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@4324f76b, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@4324f76b, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@396c0bac, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@1e05a243, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@6b9c3ce9, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@3ca97cd3, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@5134f84b, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@445a9304, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@1bd7e93e, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@64a1d2c4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@145dca9f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@4be9d31, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@2f85b32f, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@2b1b3fda, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@4883f150, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@2855c621, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@3ad8a90, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@4444c096, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4a69b50a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@afc355e, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@4168cba9, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@21f60252, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@17e7df30, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@100b3c2b, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([986464701], 0, 1): success
test SubList.testListIteratorSet([1653179631], 0, 1): success
test SubList.testListIteratorSet([1429008369], 0, 1): success
test SubList.testListIteratorSet([-1500590147], 0, 1): success
test SubList.testListIteratorSet([-1300440524], 0, 1): success
test SubList.testListIteratorSet([-574510750], 0, 1): success
test SubList.testListIteratorSet([-1525219725], 0, 1): success
test SubList.testListIteratorSet([-1136889890], 0, 1): success
test SubList.testListIteratorSet([-1944418986], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@4c3ff835, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@6d28fcea, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@673ff0de, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@5dc1139e, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@3759d4b, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@27ce294, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@179d9bf0, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@72105e9, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@2ad056ae, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@26655175, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@177316fb, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1243244f, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-1305426064], 0, 1): success
test SubList.testListIteratorSetPrevious([-2145993472], 0, 1): success
test SubList.testListIteratorSetPrevious([-467127611], 0, 1): success
test SubList.testListIteratorSetPrevious([-644898050], 0, 1): success
test SubList.testListIteratorSetPrevious([-1160379492], 0, 1): success
test SubList.testListIteratorSetPrevious([2134822759], 0, 1): success
test SubList.testListIteratorSetPrevious([1201344932], 0, 1): success
test SubList.testListIteratorSetPrevious([-355370435], 0, 1): success
test SubList.testListIteratorSetPrevious([-773689856], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@4e2abdd3, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@d1c0e61, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@75aa1dce, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@7beb6319, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@1fb1e9aa, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@61900675, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@4d2a6170, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@77c7bd1f, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@52c3fb8, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@7467d591, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@14a7be37, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@75cf0f6d, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@13ee9316, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@11fa51db, 2, 5): success
test SubList.testModAdd(java.util.Vector@1cd03204, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@1a48a04f, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@77665fae, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@b1ed120, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@7cce37e7, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@fe8cb90, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@3f9bb4b9, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@101bd707, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@7e4cb7fa, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@58b02cc3, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@dc19675, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@3286697c, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@6efb2b57, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@d3779cf, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@165213ea, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@75567b3c, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@73f18c8b, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@3a724fd7, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@6063e086, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6efdffea, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@43afb83f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@4c9bb939, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@38c4d2b8, 2, 5): success
test SubList.testModClear(java.util.LinkedList@539d684d, 2, 5): success
test SubList.testModClear(java.util.Vector@7fe211a9, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@77ff9454, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@13a81116, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@15fcf42e, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@7bd9a9f0, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@436261c5, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@c7b2c54, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@a4330c, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@33f3e375, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@282e6b0, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@62f7d38d, 2, 5): success
test SubList.testModGet(java.util.LinkedList@210e5589, 2, 5): success
test SubList.testModGet(java.util.Vector@2542097c, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@3497be33, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@563af4c6, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@80e67b6, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@5a8772f5, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@299a95ce, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@42f759b7, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@7e72ce13, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@119ef91f, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@22ee1011, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@7124526a, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@678bb711, 2, 5): success
test SubList.testModHashCode(java.util.Vector@3eda6093, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@27afbecb, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@517bcf38, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@23fce06d, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@573462c6, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@1070511b, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@77ab794c, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@6864b599, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@2ff2d1a1, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@6eafaa9f, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@4598ae3e, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@55091c60, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@36ff37e0, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@165b31dd, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@5bf2641a, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@799f1902, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@4d8e167e, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@525d7350, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@49ec4b0c, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@7a2a3b35, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@4139ecdc, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@9e91c90, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@31457b04, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@1c86b56c, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@5a25101e, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@3543f24f, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@11929b52, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1fc1b185, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@57125a49, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@27f21bb1, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@4898d237, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@243e09e3, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@4fcf9c26, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@3d577ca9, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@13e4636d, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@79709de9, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@2a6580d2, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@1b5e7211, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@54e7e2f6, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3b5d39f0, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@1659f158, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@4f522cbb, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@79179f83, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2ac3f92f, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@24746f10, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@34e3f1e2, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@11d7d9d6, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@630f2bd, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@d7a084d, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@51808040, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@4d8dddcf, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@69a077fe, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@1e631384, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@73738b53, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@5618705e, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@10f10971, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@5875d0f5, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@6c0a614, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@62c62717, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@3359fdda, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@1eafe0ba, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@6d049ba3, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@5550d410, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@75fdbc11, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@48ebde9a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@3dd1cf4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4d89c29d, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7c6fd4df, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@226fbbb2, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@457cafda, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@13a268d7, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@3d72195b, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@16a47182, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@45b3c0df, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@64c0de53, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@62f7e062, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@3d2b7708, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@12bc7bb1, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@73f26b93, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@662538e6, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@2daf22df, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@584f9002, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@67102a04, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@a922532, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@2e57604a, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@5fde4b1d, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@bb42eeb, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@10bf6ee1, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@65cca92, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@72132021, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@151db13e, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@63a54982, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@410cb550, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@630fa29d, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@666606a2, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@24248930, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@4e69ab2b, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@a7a6481, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@76b65549, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@1d1b384a, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@5e661c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@60eaec2d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@64785d31, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@4de1ab8c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@5133b8fc, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6df81ec, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@6b84612a, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@400f524a, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@4f37da24, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@580af1a, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@60c70b61, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@66a39166, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@2f0a5d01, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@6b6b1412, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@175f15f5, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@793c08ad, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@79f39081, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@8cc6562, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@2c13c806, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@7751be3a, 2, 5): success
test SubList.testModRemove(java.util.Vector@1e468af1, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@21b0d9ab, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@67dc75ee, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@46279152, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@34bc9432, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@44968730, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@7bd99a52, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@3c9564d8, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@4826655, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@95d66e5, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@5c18c336, 2, 5): success
test SubList.testModSet(java.util.LinkedList@303b41dc, 2, 5): success
test SubList.testModSet(java.util.Vector@5ae72761, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@cb0619c, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@4d38962a, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@5b349735, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@47a3989f, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@51ba45e0, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@5a00f8de, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@30269614, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@b9f4fcf, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@3e8ab7e2, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@62671260, 2, 5): success
test SubList.testRemove(java.util.LinkedList@1db66a79, 2, 5): success
test SubList.testRemove(java.util.Vector@72be2844, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@bac4295, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@180cd9bb, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@a934322, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@3229b922, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@516bf0b8, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@519d10f4, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([771836395], 0, 1): success
test SubList.testSet([-1095865592], 0, 1): success
test SubList.testSet([-1638048090], 0, 1): success
test SubList.testSet([566409737], 0, 1): success
test SubList.testSet([1555353814], 0, 1): success
test SubList.testSet([-1176167294], 0, 1): success
test SubList.testSet([1015868563], 0, 1): success
test SubList.testSet([1807475397], 0, 1): success
test SubList.testSet([48929641], 0, 1): success
test SubList.testSet(java.util.ArrayList@67708a64, 2, 5): success
test SubList.testSet(java.util.LinkedList@57a977a9, 2, 5): success
test SubList.testSet(java.util.Vector@5329a15c, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@14c3673e, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@731a41d6, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@2e9bc545, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@5b2e28db, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@7fb3520d, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@715beab6, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@b0abfef, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@35eca6fc, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@6058a285, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@43ce3472, 2, 5): success
test SubList.testSubList(java.util.LinkedList@5be26f28, 2, 5): success
test SubList.testSubList(java.util.Vector@28effd67, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@6b19fb71, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@275ea959, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@72dbb75b, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@3b3c4dcb, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@2a9571d1, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4b72200b, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@141777ad, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@17338640, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@41fb3f58, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@1d3c0b95, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@b898106, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@168fcb6d, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@4eed46c0, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@728bee8f, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@574f69fd, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@574f69fd, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@5edf318a, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@4c1bceff, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@4ab0d808, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@370b76d7, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@51fc4eb1, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@1504e27c, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@77aa7a65, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@342a36b1, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@4367a3b8, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@20210b3b, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@20210b3b, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@5370fdcf, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@495eecd3, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@1ea7a263, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@599ab7be, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@36219ba6, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@67412503, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@79f07e80, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@4422301, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@18aa7b85, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@2b01884f, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@2b01884f, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@3ee973cc, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@7fa0549e, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@71ca19b7, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@7b74b06c, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@56bd28cc, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@7fc57bb3, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@2b5f2a14, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@4b07b98e, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@57ab25ae, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4478d0f7, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@4478d0f7, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@e360134, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@8d6b92, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@28367015, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@13ac5ffa, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@697e3519, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@c0b98e4, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@179ceec0, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@147e0503, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@5d0cfd2b, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@38e5a931, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@38e5a931, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@57a57841, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@4446d8b8, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@146cd5fd, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@43597c97, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@55df2779, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@55ca4b91, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@384c56eb, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@143810e0, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@25259566, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@74c55591, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@74c55591, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@25a701d1, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@21c41429, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@3b6fe44c, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@446c3225, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@7ad42d1, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@7d98866c, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@31d517c3, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@6781b465, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@191c0c58, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1781d227, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@1781d227, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@beda934, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@7ed54796, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@75cf4ed5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@11b2445a, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@e146d88, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@108d9c06, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@564b99c, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@6d273247, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@36d11214, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7a8bbb1c, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@7a8bbb1c, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@4dafcd18, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@382eda66, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@1975f6f0, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@63cec79b, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@5748ae3a, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6c5eb3db, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@2166591b, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@2e810dce, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@6cd0cc24, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@4e9fbbab, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@b2fe56, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@5e22a08a, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@4a7be834, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@28048f7b, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@57528c96, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@3228dae1, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@76a1d4e6, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@474f9ce6, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@20c3b6a2, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@21228063, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@21228063, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@43a66a84, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@6258fbda, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@7a0c21ad, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@3f2579c5, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
