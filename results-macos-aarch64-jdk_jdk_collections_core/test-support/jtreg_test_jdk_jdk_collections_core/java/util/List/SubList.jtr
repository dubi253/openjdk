#Test Results (version 2)
#Thu Feb 29 14:41:19 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
keywords=bug8079136 randomness testng
library=/test/lib
run=USER_SPECIFIED build jdk.test.lib.RandomFactory\nUSER_SPECIFIED testng SubList\n
source=SubList.java
title=Basic functionality of sublists

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
elapsed=316 0\:00\:00.316
end=Thu Feb 29 14\:41\:19 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 14.2.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile build compile testng
start=Thu Feb 29 14\:41\:19 UTC 2024
test=java/util/List/SubList.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.2.1,family\:mac,simple_arch\:aarch64,simple_version\:14.2,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.2.1
totalTime=316
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/List

#section:script_messages
----------messages:(7/587)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-f7bb023b497c7ef17edb2a68a9daa77a5ace3137)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-f7bb023b497c7ef17edb2a68a9daa77a5ace3137, mixed mode, sharing)
Library /test/lib; kind: packages
   source directory: /Users/runner/work/openjdk/openjdk/test/lib
   class directory: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib

#section:build
----------messages:(7/275)----------
command: build jdk.test.lib.RandomFactory
reason: User specified action: run build jdk.test.lib.RandomFactory 
started: Thu Feb 29 14:41:19 UTC 2024
Library /test/lib:
  compile: jdk.test.lib.RandomFactory
finished: Thu Feb 29 14:41:19 UTC 2024
elapsed time (seconds): 0.025
result: Passed. Build successful

#section:compile
----------messages:(7/276)----------
command: compile /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
reason: .class file out of date or does not exist
started: Thu Feb 29 14:41:19 UTC 2024
Mode: agentvm
Agent id: 2
finished: Thu Feb 29 14:41:19 UTC 2024
elapsed time (seconds): 0.025
----------configuration:(12/848)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3457)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/lib/jdk/test/lib/RandomFactory.java
result: Passed. Compilation successful

#section:build
----------messages:(7/204)----------
command: build SubList
reason: Named class compiled on demand
started: Thu Feb 29 14:41:19 UTC 2024
Test directory:
  compile: SubList
finished: Thu Feb 29 14:41:19 UTC 2024
elapsed time (seconds): 0.044
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
reason: .class file out of date or does not exist
started: Thu Feb 29 14:41:19 UTC 2024
Mode: agentvm
Agent id: 2
finished: Thu Feb 29 14:41:19 UTC 2024
elapsed time (seconds): 0.044
----------configuration:(15/1154)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/test/lib
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3873)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/List/SubList.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java
result: Passed. Compilation successful

#section:testng
----------messages:(7/208)----------
command: testng SubList
reason: User specified action: run testng SubList 
started: Thu Feb 29 14:41:19 UTC 2024
Mode: agentvm
Agent id: 4
finished: Thu Feb 29 14:41:19 UTC 2024
elapsed time (seconds): 0.245
----------configuration:(15/1143)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/List
              /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib
              /Users/runner/work/openjdk/openjdk/test/lib

----------rerun:(26/3445)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/List/SubList.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List/SubList.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/test/lib \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/java/util/List/SubList.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/List:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/0/test/lib:/Users/runner/work/openjdk/openjdk/test/lib:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/List/SubList.java false SubList
----------System.out:(1259/91956)----------
Seed from RandomFactory = 7195645837669027146L
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42], 0, 1): success
test SubList.testAdd([42, -1151527846], 0, 1): success
test SubList.testAdd([42, 116056898], 0, 1): success
test SubList.testAdd([42, 728746154], 0, 1): success
test SubList.testAdd([42, -1629254054], 0, 1): success
test SubList.testAdd([42, -2075628389], 0, 1): success
test SubList.testAdd([42, -226411362], 0, 1): success
test SubList.testAdd([42, -424116607], 0, 1): success
test SubList.testAdd([42, -1234273105], 0, 1): success
test SubList.testAdd([42, 991578813], 0, 1): success
test SubList.testAdd(java.util.ArrayList@5dd2e518, 2, 5): success
test SubList.testAdd(java.util.LinkedList@bbb9db0, 2, 5): success
test SubList.testAdd(java.util.Vector@5b2c1882, 2, 5): success
test SubList.testAdd(java.util.ArrayList$SubList@4c43b54a, 1, 4): success
test SubList.testAdd(java.util.AbstractList$SubList@57de91, 1, 4): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@5dcd78b0, 1, 4): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@79052027, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedList@6845e06c, 2, 5): success
test SubList.testAdd(java.util.Collections$CheckedRandomAccessList@39e0d93b, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@7843682b, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedList@8ef748c, 2, 5): success
test SubList.testAdd(java.util.Collections$SynchronizedRandomAccessList@412f193d, 2, 5): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42], 0, 1): success
test SubList.testAddAtPos([42, -1222232213], 0, 1): success
test SubList.testAddAtPos([42, -607183566], 0, 1): success
test SubList.testAddAtPos([-1388847900, 42], 0, 1): success
test SubList.testAddAtPos([534063518, 42], 0, 1): success
test SubList.testAddAtPos([-1864969607, 42], 0, 1): success
test SubList.testAddAtPos([317615620, 42], 0, 1): success
test SubList.testAddAtPos([-1893040380, 42], 0, 1): success
test SubList.testAddAtPos([-1395390336, 42], 0, 1): success
test SubList.testAddAtPos([1384434279, 42], 0, 1): success
test SubList.testAddAtPos(java.util.ArrayList@7385430e, 2, 5): success
test SubList.testAddAtPos(java.util.LinkedList@6459f522, 2, 5): success
test SubList.testAddAtPos(java.util.Vector@490175e2, 2, 5): success
test SubList.testAddAtPos(java.util.ArrayList$SubList@18ae11da, 1, 4): success
test SubList.testAddAtPos(java.util.AbstractList$SubList@64f7b72d, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1742b920, 1, 4): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@33f0df2f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedList@1c605bc8, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$CheckedRandomAccessList@79f7cf0f, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@323f57f7, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedList@62eb7eba, 2, 5): success
test SubList.testAddAtPos(java.util.Collections$SynchronizedRandomAccessList@795266a4, 2, 5): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([42], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear([], 0, 1): success
test SubList.testClear(java.util.ArrayList@14946d5a, 2, 5): success
test SubList.testClear(java.util.LinkedList@6db40f54, 2, 5): success
test SubList.testClear(java.util.Vector@31f7776c, 2, 5): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear([41, 45, -1, -2147483648], 1, 4): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@104ac898, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedList@398327f6, 2, 5): success
test SubList.testClear(java.util.Collections$CheckedRandomAccessList@1a37889c, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@4c8689e0, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedList@4a20c884, 2, 5): success
test SubList.testClear(java.util.Collections$SynchronizedRandomAccessList@bcac27b, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.ArrayList@52c25cc9, 2, 5): success
test SubList.testEquals(java.util.LinkedList@6f33a4a1, 2, 5): success
test SubList.testEquals(java.util.Vector@54a2262b, 2, 5): success
test SubList.testEquals(java.util.ArrayList$SubList@581c6405, 1, 4): success
test SubList.testEquals(java.util.AbstractList$SubList@398b8c52, 1, 4): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@6e42a036, 1, 4): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1c70608d, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedList@1ca0cde3, 2, 5): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@1efdf3d6, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@27025611, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedList@63488ad9, 2, 5): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@51435ed9, 2, 5): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(SubList$MyList@1b11d4fa, 3, 6): success
test SubList.testEquals([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@6d8396e0, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@2e18e2c, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableList@5846b945, 3, 6): success
test SubList.testEquals(java.util.Collections$UnmodifiableRandomAccessList@2f4c6c52, 3, 6): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals([42], 0, 1): success
test SubList.testEquals(java.util.Arrays$ArrayList@6b2f4d30, 0, 4): success
test SubList.testEquals(java.util.Arrays$ArrayList@6b2f4d30, 4, 6): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@20338e7, 1, 4): success
test SubList.testEquals(java.util.AbstractList$RandomAccessSubList@74afc04f, 0, 7): success
test SubList.testEquals(java.util.Collections$CheckedRandomAccessList@5ddf6436, 3, 6): success
test SubList.testEquals(java.util.Collections$SynchronizedRandomAccessList@61804a27, 3, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.ArrayList@6f4fdc41, 2, 5): success
test SubList.testGet(java.util.LinkedList@376ad499, 2, 5): success
test SubList.testGet(java.util.Vector@3c663bdd, 2, 5): success
test SubList.testGet(java.util.ArrayList$SubList@4ba4b1ca, 1, 4): success
test SubList.testGet(java.util.AbstractList$SubList@390bff8b, 1, 4): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@26051711, 1, 4): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@7a73b0, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedList@48e7740c, 2, 5): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@24fd514c, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@330b269a, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedList@40990a5f, 2, 5): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@1124d21e, 2, 5): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(SubList$MyList@6d3402ed, 3, 6): success
test SubList.testGet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@4e9fe80a, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@3a3a8ccd, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableList@2d207108, 3, 6): success
test SubList.testGet(java.util.Collections$UnmodifiableRandomAccessList@4daf33e0, 3, 6): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet([42], 0, 1): success
test SubList.testGet(java.util.Arrays$ArrayList@6efdf329, 0, 4): success
test SubList.testGet(java.util.Arrays$ArrayList@6efdf329, 4, 6): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@63e91ee3, 1, 4): success
test SubList.testGet(java.util.AbstractList$RandomAccessSubList@229678f4, 0, 7): success
test SubList.testGet(java.util.Collections$CheckedRandomAccessList@6ecfe8f4, 3, 6): success
test SubList.testGet(java.util.Collections$SynchronizedRandomAccessList@7b6fa8f5, 3, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.ArrayList@5299a08b, 2, 5): success
test SubList.testIndexOf(java.util.LinkedList@7f678485, 2, 5): success
test SubList.testIndexOf(java.util.Vector@4de8b5f1, 2, 5): success
test SubList.testIndexOf(java.util.ArrayList$SubList@2413c55a, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$SubList@286421fc, 1, 4): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@6cbe1b47, 1, 4): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@1f749bed, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedList@3c605d6e, 2, 5): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@20593c24, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@7e64b8a9, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedList@47161a29, 2, 5): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@5442a203, 2, 5): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(SubList$MyList@58c1bbaa, 3, 6): success
test SubList.testIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@7a2b4f84, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@318529be, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableList@348b0dbf, 3, 6): success
test SubList.testIndexOf(java.util.Collections$UnmodifiableRandomAccessList@163fe2b3, 3, 6): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf([42], 0, 1): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@2b8069e4, 0, 4): success
test SubList.testIndexOf(java.util.Arrays$ArrayList@2b8069e4, 4, 6): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@2d370faa, 1, 4): success
test SubList.testIndexOf(java.util.AbstractList$RandomAccessSubList@8415726, 0, 7): success
test SubList.testIndexOf(java.util.Collections$CheckedRandomAccessList@33d1ac6, 3, 6): success
test SubList.testIndexOf(java.util.Collections$SynchronizedRandomAccessList@f33484, 3, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.ArrayList@3d0e4995, 2, 5): success
test SubList.testIterator(java.util.LinkedList@6c61ef2c, 2, 5): success
test SubList.testIterator(java.util.Vector@5938758b, 2, 5): success
test SubList.testIterator(java.util.ArrayList$SubList@3498c4f9, 1, 4): success
test SubList.testIterator(java.util.AbstractList$SubList@163a626f, 1, 4): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@29149f79, 1, 4): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@46b47d38, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedList@59222e20, 2, 5): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@7d720150, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@659dfefa, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedList@479bd007, 2, 5): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@54d68584, 2, 5): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(SubList$MyList@de703d, 3, 6): success
test SubList.testIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@2a6e804c, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@6e6b331e, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableList@1f5b1dfb, 3, 6): success
test SubList.testIterator(java.util.Collections$UnmodifiableRandomAccessList@63039193, 3, 6): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator([42], 0, 1): success
test SubList.testIterator(java.util.Arrays$ArrayList@6397b23f, 0, 4): success
test SubList.testIterator(java.util.Arrays$ArrayList@6397b23f, 4, 6): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@6931f84f, 1, 4): success
test SubList.testIterator(java.util.AbstractList$RandomAccessSubList@385bb026, 0, 7): success
test SubList.testIterator(java.util.Collections$CheckedRandomAccessList@4215ee, 3, 6): success
test SubList.testIterator(java.util.Collections$SynchronizedRandomAccessList@1fa6b856, 3, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList@792aeb47, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.LinkedList@2b5a773b, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Vector@7d9ae853, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.ArrayList$SubList@fa7a8fe, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$SubList@546d7eec, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@76c7be4a, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@4935c417, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedList@6ec11ab2, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@7da6fa8a, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@409d2037, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedList@34ca7629, 2, 5): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@469d6a92, 2, 5): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(SubList$MyList@23c41bb7, 3, 6): success
test SubList.testIteratorForEachRemaining([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@f149cab, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@4862749, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableList@d14e1b9, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$UnmodifiableRandomAccessList@45d456a4, 3, 6): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining([42], 0, 1): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@77731cc1, 0, 4): success
test SubList.testIteratorForEachRemaining(java.util.Arrays$ArrayList@77731cc1, 4, 6): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@6d21fc39, 1, 4): success
test SubList.testIteratorForEachRemaining(java.util.AbstractList$RandomAccessSubList@2f7e6cfa, 0, 7): success
test SubList.testIteratorForEachRemaining(java.util.Collections$CheckedRandomAccessList@121d812c, 3, 6): success
test SubList.testIteratorForEachRemaining(java.util.Collections$SynchronizedRandomAccessList@17585622, 3, 5): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([42], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove([], 0, 1): success
test SubList.testIteratorRemove(java.util.ArrayList@20564327, 2, 5): success
test SubList.testIteratorRemove(java.util.LinkedList@1e2795f7, 2, 5): success
test SubList.testIteratorRemove(java.util.Vector@339aec15, 2, 5): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@7dc86a29, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedList@39fa228b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$CheckedRandomAccessList@6fdf5205, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@7204c72b, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedList@71296a40, 2, 5): success
test SubList.testIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2dce4f6f, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.ArrayList@7fc63d00, 2, 5): success
test SubList.testLastIndexOf(java.util.LinkedList@e9dc953, 2, 5): success
test SubList.testLastIndexOf(java.util.Vector@2326601a, 2, 5): success
test SubList.testLastIndexOf(java.util.ArrayList$SubList@65fbfb9e, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$SubList@2ba15270, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@777f824d, 1, 4): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@53e3fbf5, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedList@84a9b1, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@3e5edd16, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@1b15053, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedList@4e81d620, 2, 5): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@c4f7721, 2, 5): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(SubList$MyList@46047f03, 3, 6): success
test SubList.testLastIndexOf([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@3db1733d, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@78631015, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableList@6213d730, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$UnmodifiableRandomAccessList@1dd85f1c, 3, 6): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf([42], 0, 1): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6f418553, 0, 4): success
test SubList.testLastIndexOf(java.util.Arrays$ArrayList@6f418553, 4, 6): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@107b2bfb, 1, 4): success
test SubList.testLastIndexOf(java.util.AbstractList$RandomAccessSubList@511663cd, 0, 7): success
test SubList.testLastIndexOf(java.util.Collections$CheckedRandomAccessList@cbaba5c, 3, 6): success
test SubList.testLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@7b7b593, 3, 5): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(SubList$MyList@7ce8b59, 3, 6): success
test SubList.testListIterator([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@3c459cc7, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@1634729d, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableList@65c467ef, 3, 6): success
test SubList.testListIterator(java.util.Collections$UnmodifiableRandomAccessList@dcc62fa, 3, 6): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator([42], 0, 1): success
test SubList.testListIterator(java.util.Arrays$ArrayList@30a8609f, 0, 4): success
test SubList.testListIterator(java.util.Arrays$ArrayList@30a8609f, 4, 6): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@34cd2ab3, 1, 4): success
test SubList.testListIterator(java.util.AbstractList$RandomAccessSubList@1b20cef2, 0, 7): success
test SubList.testListIterator(java.util.Collections$CheckedRandomAccessList@1a793359, 3, 6): success
test SubList.testListIterator(java.util.Collections$SynchronizedRandomAccessList@50b78348, 3, 5): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd([42], 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@6bfb2b37, 0, 1): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@15e9e649, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@6c34145a, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@21a6269b, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@12d65034, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@4352ef75, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@5d5cd9d4, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@5e6d6fac, 0, 1): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@43c4ff3d, 0, 1): success
test SubList.testListIteratorAdd(java.util.ArrayList@7cfd87e1, 2, 5): success
test SubList.testListIteratorAdd(java.util.LinkedList@8856da1, 2, 5): success
test SubList.testListIteratorAdd(java.util.Vector@1589bbc4, 2, 5): success
test SubList.testListIteratorAdd(java.util.ArrayList$SubList@38c0e18a, 1, 4): success
test SubList.testListIteratorAdd(java.util.AbstractList$SubList@3afe23ec, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@45bfb3f9, 1, 4): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@63966910, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedList@4752e88b, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$CheckedRandomAccessList@59db8114, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@239a3323, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedList@2033147, 2, 5): success
test SubList.testListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@67628fdd, 2, 5): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(SubList$MyList@663f731f, 3, 6): success
test SubList.testListIteratorPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3064bfd0, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@1d09b0b2, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableList@3284de28, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$UnmodifiableRandomAccessList@3b75c812, 3, 6): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious([42], 0, 1): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@7d1c1c56, 0, 4): success
test SubList.testListIteratorPrevious(java.util.Arrays$ArrayList@7d1c1c56, 4, 6): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@6aa8e9a7, 1, 4): success
test SubList.testListIteratorPrevious(java.util.AbstractList$RandomAccessSubList@2ad869f4, 0, 7): success
test SubList.testListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@72b486eb, 3, 6): success
test SubList.testListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@311b4072, 3, 5): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([42], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext([], 0, 1): success
test SubList.testListIteratorRemoveNext(java.util.ArrayList@415c1f8e, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.LinkedList@41393634, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Vector@1025afe8, 2, 5): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@2a8cb276, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedList@47476e5, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@6489b2c0, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@2f0e95a4, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedList@60517986, 2, 5): success
test SubList.testListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@6353df13, 2, 5): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([42], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious([], 0, 1): success
test SubList.testListIteratorRemovePrevious(java.util.ArrayList@5458f227, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.LinkedList@6b5bb375, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Vector@7ed93aff, 2, 5): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious([41, 45, -1, -2147483648], 1, 4): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@61670f82, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedList@1ad2344, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@b431472, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@2c8ba51a, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedList@65f67c70, 2, 5): success
test SubList.testListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@705a8de6, 2, 5): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([42], 0, 1): success
test SubList.testListIteratorSet([936665107], 0, 1): success
test SubList.testListIteratorSet([2071677598], 0, 1): success
test SubList.testListIteratorSet([285927583], 0, 1): success
test SubList.testListIteratorSet([-1030219602], 0, 1): success
test SubList.testListIteratorSet([552945529], 0, 1): success
test SubList.testListIteratorSet([-2004073526], 0, 1): success
test SubList.testListIteratorSet([1109997787], 0, 1): success
test SubList.testListIteratorSet([239753997], 0, 1): success
test SubList.testListIteratorSet([-911256498], 0, 1): success
test SubList.testListIteratorSet(java.util.ArrayList@3a839f22, 2, 5): success
test SubList.testListIteratorSet(java.util.LinkedList@2a7f415e, 2, 5): success
test SubList.testListIteratorSet(java.util.Vector@2300cc7d, 2, 5): success
test SubList.testListIteratorSet(java.util.ArrayList$SubList@2a16ecd8, 1, 4): success
test SubList.testListIteratorSet(java.util.AbstractList$SubList@6ba34105, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@152526c2, 1, 4): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@2007efe, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedList@75f5404d, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$CheckedRandomAccessList@52681ae3, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@17e494ac, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedList@2538854a, 2, 5): success
test SubList.testListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@3cbaad4e, 2, 5): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([42], 0, 1): success
test SubList.testListIteratorSetPrevious([-137817474], 0, 1): success
test SubList.testListIteratorSetPrevious([-1579141971], 0, 1): success
test SubList.testListIteratorSetPrevious([362701011], 0, 1): success
test SubList.testListIteratorSetPrevious([-2098348171], 0, 1): success
test SubList.testListIteratorSetPrevious([1419789305], 0, 1): success
test SubList.testListIteratorSetPrevious([33674106], 0, 1): success
test SubList.testListIteratorSetPrevious([49119674], 0, 1): success
test SubList.testListIteratorSetPrevious([-1251253724], 0, 1): success
test SubList.testListIteratorSetPrevious([-1738066131], 0, 1): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList@39d929b6, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.LinkedList@45d1f57c, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Vector@6e363ece, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.ArrayList$SubList@6aa66ee4, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.AbstractList$SubList@3a654acc, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@73470091, 1, 4): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@50ea62a5, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedList@4d28b58d, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$CheckedRandomAccessList@450c7160, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@48d784b4, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedList@2ea43caa, 2, 5): success
test SubList.testListIteratorSetPrevious(java.util.Collections$SynchronizedRandomAccessList@44c8a0b5, 2, 5): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd([42, 42], 0, 1): success
test SubList.testModAdd(java.util.ArrayList@406fba6d, 2, 5): success
test SubList.testModAdd(java.util.LinkedList@4ba35d14, 2, 5): success
test SubList.testModAdd(java.util.Vector@ddd65a0, 2, 5): success
test SubList.testModAdd(java.util.ArrayList$SubList@32495335, 1, 4): success
test SubList.testModAdd(java.util.AbstractList$SubList@4bb4555, 1, 4): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@71b678, 1, 4): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@5279f469, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedList@6bcee0af, 2, 5): success
test SubList.testModAdd(java.util.Collections$CheckedRandomAccessList@4e4d5c14, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@3eb41017, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedList@1830fe3e, 2, 5): success
test SubList.testModAdd(java.util.Collections$SynchronizedRandomAccessList@3efa1ac6, 2, 5): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos([42, 42], 0, 1): success
test SubList.testModAddAtPos(java.util.ArrayList@727f955b, 2, 5): success
test SubList.testModAddAtPos(java.util.LinkedList@77de1e1, 2, 5): success
test SubList.testModAddAtPos(java.util.Vector@6c3f92a5, 2, 5): success
test SubList.testModAddAtPos(java.util.ArrayList$SubList@7d5e3fef, 1, 4): success
test SubList.testModAddAtPos(java.util.AbstractList$SubList@2f750a23, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@131e4212, 1, 4): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@535be82f, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedList@303feab5, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$CheckedRandomAccessList@2e67729e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@3120b66e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedList@9f9c43e, 2, 5): success
test SubList.testModAddAtPos(java.util.Collections$SynchronizedRandomAccessList@6f834d4d, 2, 5): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear([42, 42], 0, 1): success
test SubList.testModClear(java.util.ArrayList@1629ef60, 2, 5): success
test SubList.testModClear(java.util.LinkedList@5e73e5ea, 2, 5): success
test SubList.testModClear(java.util.Vector@39df669a, 2, 5): success
test SubList.testModClear(java.util.ArrayList$SubList@1e36b808, 1, 4): success
test SubList.testModClear(java.util.AbstractList$SubList@1ab53e51, 1, 4): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@34938476, 1, 4): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@3c83a58b, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedList@7ff5d83a, 2, 5): success
test SubList.testModClear(java.util.Collections$CheckedRandomAccessList@6b1582b6, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@7941ec3, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedList@5490288d, 2, 5): success
test SubList.testModClear(java.util.Collections$SynchronizedRandomAccessList@2c3ab75a, 2, 5): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet([42, 42], 0, 1): success
test SubList.testModGet(java.util.ArrayList@484ca253, 2, 5): success
test SubList.testModGet(java.util.LinkedList@28598a50, 2, 5): success
test SubList.testModGet(java.util.Vector@6ff7c3c3, 2, 5): success
test SubList.testModGet(java.util.ArrayList$SubList@11512b34, 1, 4): success
test SubList.testModGet(java.util.AbstractList$SubList@27f591da, 1, 4): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@3b79f643, 1, 4): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@2b379f51, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedList@37052b95, 2, 5): success
test SubList.testModGet(java.util.Collections$CheckedRandomAccessList@3d0b0a0a, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@30d7b45e, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedList@71b43d76, 2, 5): success
test SubList.testModGet(java.util.Collections$SynchronizedRandomAccessList@512d6e61, 2, 5): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode([42, 42], 0, 1): success
test SubList.testModHashCode(java.util.ArrayList@2f481dac, 2, 5): success
test SubList.testModHashCode(java.util.LinkedList@74af132, 2, 5): success
test SubList.testModHashCode(java.util.Vector@196b301e, 2, 5): success
test SubList.testModHashCode(java.util.ArrayList$SubList@24f5a396, 1, 4): success
test SubList.testModHashCode(java.util.AbstractList$SubList@1db628d0, 1, 4): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@500e0140, 1, 4): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@49bf77c8, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedList@47dc2e09, 2, 5): success
test SubList.testModHashCode(java.util.Collections$CheckedRandomAccessList@968afa9, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@9012ba2, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedList@229599de, 2, 5): success
test SubList.testModHashCode(java.util.Collections$SynchronizedRandomAccessList@5293de74, 2, 5): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf([42, 42], 0, 1): success
test SubList.testModIndexOf(java.util.ArrayList@107b5523, 2, 5): success
test SubList.testModIndexOf(java.util.LinkedList@6c80da2c, 2, 5): success
test SubList.testModIndexOf(java.util.Vector@39edc771, 2, 5): success
test SubList.testModIndexOf(java.util.ArrayList$SubList@4a2b1d87, 1, 4): success
test SubList.testModIndexOf(java.util.AbstractList$SubList@44b587b5, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@71479b0a, 1, 4): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@2a478de5, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedList@17595ec2, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$CheckedRandomAccessList@7aaa10aa, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@25db6125, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedList@470150fc, 2, 5): success
test SubList.testModIndexOf(java.util.Collections$SynchronizedRandomAccessList@dcdf6cf, 2, 5): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext([42, 42], 0, 1): success
test SubList.testModIteratorNext(java.util.ArrayList@79836285, 2, 5): success
test SubList.testModIteratorNext(java.util.LinkedList@51cf7030, 2, 5): success
test SubList.testModIteratorNext(java.util.Vector@64dd33d7, 2, 5): success
test SubList.testModIteratorNext(java.util.ArrayList$SubList@5560502f, 1, 4): success
test SubList.testModIteratorNext(java.util.AbstractList$SubList@19b1c80b, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@16539f90, 1, 4): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@6d304801, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedList@c6ee34c, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$CheckedRandomAccessList@285a8c1e, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@f5aa049, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedList@19968751, 2, 5): success
test SubList.testModIteratorNext(java.util.Collections$SynchronizedRandomAccessList@1d57888d, 2, 5): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove([42, 42], 0, 1): success
test SubList.testModIteratorRemove(java.util.ArrayList@301d6e0a, 2, 5): success
test SubList.testModIteratorRemove(java.util.LinkedList@7676a7a7, 2, 5): success
test SubList.testModIteratorRemove(java.util.Vector@5ddf3a9b, 2, 5): success
test SubList.testModIteratorRemove(java.util.ArrayList$SubList@fff3b, 1, 4): success
test SubList.testModIteratorRemove(java.util.AbstractList$SubList@69cfc464, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@6c203d6c, 1, 4): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@37d255e0, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedList@6715792, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$CheckedRandomAccessList@4921e1e2, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@10044446, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedList@741154c6, 2, 5): success
test SubList.testModIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@709abcb9, 2, 5): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf([42, 42], 0, 1): success
test SubList.testModLastIndexOf(java.util.ArrayList@24401504, 2, 5): success
test SubList.testModLastIndexOf(java.util.LinkedList@5c22dbe8, 2, 5): success
test SubList.testModLastIndexOf(java.util.Vector@3fa01594, 2, 5): success
test SubList.testModLastIndexOf(java.util.ArrayList$SubList@2110dd42, 1, 4): success
test SubList.testModLastIndexOf(java.util.AbstractList$SubList@636cd289, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@12726415, 1, 4): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@307634a2, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedList@7eec8810, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$CheckedRandomAccessList@10da292a, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@d9d021b, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedList@1b74ba06, 2, 5): success
test SubList.testModLastIndexOf(java.util.Collections$SynchronizedRandomAccessList@345a7cfd, 2, 5): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd([42, 42], 0, 1): success
test SubList.testModListIteratorAdd(java.util.ArrayList@3df81da0, 2, 5): success
test SubList.testModListIteratorAdd(java.util.LinkedList@3ae81f02, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Vector@354e66a4, 2, 5): success
test SubList.testModListIteratorAdd(java.util.ArrayList$SubList@6daa4fff, 1, 4): success
test SubList.testModListIteratorAdd(java.util.AbstractList$SubList@50726c73, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@7add5e1b, 1, 4): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@55b6f0c0, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedList@39674839, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$CheckedRandomAccessList@6d5b9900, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@106e506a, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedList@64c64dc3, 2, 5): success
test SubList.testModListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@4a6be333, 2, 5): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext([42, 42], 0, 1): success
test SubList.testModListIteratorNext(java.util.ArrayList@e85fa3f, 2, 5): success
test SubList.testModListIteratorNext(java.util.LinkedList@22cdf29, 2, 5): success
test SubList.testModListIteratorNext(java.util.Vector@332616b5, 2, 5): success
test SubList.testModListIteratorNext(java.util.ArrayList$SubList@3c120035, 1, 4): success
test SubList.testModListIteratorNext(java.util.AbstractList$SubList@374f2b37, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@595dc651, 1, 4): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@5b13b868, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedList@ad49fa7, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$CheckedRandomAccessList@3e195a, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@76a529a1, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedList@1c6b500, 2, 5): success
test SubList.testModListIteratorNext(java.util.Collections$SynchronizedRandomAccessList@13fbb600, 2, 5): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious([42, 42], 0, 1): success
test SubList.testModListIteratorPrevious(java.util.ArrayList@3978eea2, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.LinkedList@191b2c6f, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Vector@27e32562, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.ArrayList$SubList@68d0b5ee, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.AbstractList$SubList@98196fc, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@871f3cf, 1, 4): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@1d3fad7, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedList@798ddd38, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$CheckedRandomAccessList@66a19ee8, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@22d18bab, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedList@66ca19b5, 2, 5): success
test SubList.testModListIteratorPrevious(java.util.Collections$SynchronizedRandomAccessList@6ac96597, 2, 5): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove([42, 42], 0, 1): success
test SubList.testModListIteratorRemove(java.util.ArrayList@163e5b58, 2, 5): success
test SubList.testModListIteratorRemove(java.util.LinkedList@48ab73af, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Vector@4a59325c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.ArrayList$SubList@5e4e27c0, 1, 4): success
test SubList.testModListIteratorRemove(java.util.AbstractList$SubList@3979d1ed, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@3c62a24, 1, 4): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@403b5c3d, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedList@15227e4c, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$CheckedRandomAccessList@6893ffc0, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@76e6fe63, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedList@6fb9dd00, 2, 5): success
test SubList.testModListIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@5f5df702, 2, 5): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet([42, 42], 0, 1): success
test SubList.testModListIteratorSet(java.util.ArrayList@43664f68, 2, 5): success
test SubList.testModListIteratorSet(java.util.LinkedList@751bf849, 2, 5): success
test SubList.testModListIteratorSet(java.util.Vector@27ff1efb, 2, 5): success
test SubList.testModListIteratorSet(java.util.ArrayList$SubList@13ec19e9, 1, 4): success
test SubList.testModListIteratorSet(java.util.AbstractList$SubList@2d499b1, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@33603a09, 1, 4): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@52fae44d, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedList@220f7337, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$CheckedRandomAccessList@7c5f30a8, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@587aae6f, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedList@3717f20b, 2, 5): success
test SubList.testModListIteratorSet(java.util.Collections$SynchronizedRandomAccessList@1415cb1c, 2, 5): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove([42, 42], 0, 1): success
test SubList.testModRemove(java.util.ArrayList@1997a080, 2, 5): success
test SubList.testModRemove(java.util.LinkedList@6cca46bf, 2, 5): success
test SubList.testModRemove(java.util.Vector@1d56c75c, 2, 5): success
test SubList.testModRemove(java.util.ArrayList$SubList@9f4cb, 1, 4): success
test SubList.testModRemove(java.util.AbstractList$SubList@7e86cada, 1, 4): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@2e414f83, 1, 4): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@3f195421, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedList@704cd48c, 2, 5): success
test SubList.testModRemove(java.util.Collections$CheckedRandomAccessList@7efba687, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@110f32e8, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedList@bf0fdfc, 2, 5): success
test SubList.testModRemove(java.util.Collections$SynchronizedRandomAccessList@6f8c1847, 2, 5): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet([42, 42], 0, 1): success
test SubList.testModSet(java.util.ArrayList@6fa16a53, 2, 5): success
test SubList.testModSet(java.util.LinkedList@25cd2092, 2, 5): success
test SubList.testModSet(java.util.Vector@23f69b74, 2, 5): success
test SubList.testModSet(java.util.ArrayList$SubList@2a72815b, 1, 4): success
test SubList.testModSet(java.util.AbstractList$SubList@76733480, 1, 4): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@11be10c8, 1, 4): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@56105696, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedList@59fe6661, 2, 5): success
test SubList.testModSet(java.util.Collections$CheckedRandomAccessList@71ca1984, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@5b45331a, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedList@d551555, 2, 5): success
test SubList.testModSet(java.util.Collections$SynchronizedRandomAccessList@1a4c622d, 2, 5): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([42], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove([], 0, 1): success
test SubList.testRemove(java.util.ArrayList@30e1c188, 2, 5): success
test SubList.testRemove(java.util.LinkedList@48697539, 2, 5): success
test SubList.testRemove(java.util.Vector@342bb532, 2, 5): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove([41, 45, -1, -2147483648], 1, 4): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@49fd1468, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedList@3f7f9505, 2, 5): success
test SubList.testRemove(java.util.Collections$CheckedRandomAccessList@3322a407, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@3aa5608e, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedList@6340f331, 2, 5): success
test SubList.testRemove(java.util.Collections$SynchronizedRandomAccessList@3984017, 2, 5): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([42], 0, 1): success
test SubList.testSet([-1040296574], 0, 1): success
test SubList.testSet([-510193211], 0, 1): success
test SubList.testSet([-1360914348], 0, 1): success
test SubList.testSet([237475570], 0, 1): success
test SubList.testSet([1096256867], 0, 1): success
test SubList.testSet([1059529971], 0, 1): success
test SubList.testSet([702932298], 0, 1): success
test SubList.testSet([159748858], 0, 1): success
test SubList.testSet([-1564984472], 0, 1): success
test SubList.testSet(java.util.ArrayList@2b90201d, 2, 5): success
test SubList.testSet(java.util.LinkedList@22ec6043, 2, 5): success
test SubList.testSet(java.util.Vector@2b92fede, 2, 5): success
test SubList.testSet(java.util.ArrayList$SubList@2f0a18c, 1, 4): success
test SubList.testSet(java.util.AbstractList$SubList@7af58cbf, 1, 4): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@47155822, 1, 4): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@3822dfc3, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedList@66ad3dd0, 2, 5): success
test SubList.testSet(java.util.Collections$CheckedRandomAccessList@742ebf5, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@2632f2e7, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedList@180fea1d, 2, 5): success
test SubList.testSet(java.util.Collections$SynchronizedRandomAccessList@70f18c09, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.ArrayList@4adeac7d, 2, 5): success
test SubList.testSubList(java.util.LinkedList@6c261bf8, 2, 5): success
test SubList.testSubList(java.util.Vector@13b9db64, 2, 5): success
test SubList.testSubList(java.util.ArrayList$SubList@7936070d, 1, 4): success
test SubList.testSubList(java.util.AbstractList$SubList@51f9f291, 1, 4): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@249d5a3a, 1, 4): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@54382f8, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedList@7710101f, 2, 5): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@71c1289d, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@2917e228, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedList@58f630e3, 2, 5): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@14c46e25, 2, 5): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(SubList$MyList@298593c0, 3, 6): success
test SubList.testSubList([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@1b5f013c, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@198a48be, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableList@49ae02fa, 3, 6): success
test SubList.testSubList(java.util.Collections$UnmodifiableRandomAccessList@10295c12, 3, 6): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList([42], 0, 1): success
test SubList.testSubList(java.util.Arrays$ArrayList@c4d77f4, 0, 4): success
test SubList.testSubList(java.util.Arrays$ArrayList@c4d77f4, 4, 6): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@45541cfc, 1, 4): success
test SubList.testSubList(java.util.AbstractList$RandomAccessSubList@4c4f3823, 0, 7): success
test SubList.testSubList(java.util.Collections$CheckedRandomAccessList@13f0aac6, 3, 6): success
test SubList.testSubList(java.util.Collections$SynchronizedRandomAccessList@d2ac255, 3, 5): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(SubList$MyList@25d4f5bb, 3, 6): success
test SubList.testUnmodAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@3fa6fd, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@45030c6b, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableList@a21c9a5, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$UnmodifiableRandomAccessList@72eebcda, 3, 6): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd([42], 0, 1): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@51eac5c8, 0, 4): success
test SubList.testUnmodAdd(java.util.Arrays$ArrayList@51eac5c8, 4, 6): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@5f4f1cdb, 1, 4): success
test SubList.testUnmodAdd(java.util.AbstractList$RandomAccessSubList@25fe29da, 0, 7): success
test SubList.testUnmodAdd(java.util.Collections$CheckedRandomAccessList@7ef9ad20, 3, 6): success
test SubList.testUnmodAdd(java.util.Collections$SynchronizedRandomAccessList@10186282, 3, 5): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(SubList$MyList@689e08c3, 3, 6): success
test SubList.testUnmodAddAtPos([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@3f796e12, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@2a05e86a, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableList@7d558ce4, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$UnmodifiableRandomAccessList@124c9e82, 3, 6): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos([42], 0, 1): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@5e20d9fc, 0, 4): success
test SubList.testUnmodAddAtPos(java.util.Arrays$ArrayList@5e20d9fc, 4, 6): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@50372f0d, 1, 4): success
test SubList.testUnmodAddAtPos(java.util.AbstractList$RandomAccessSubList@6848f35f, 0, 7): success
test SubList.testUnmodAddAtPos(java.util.Collections$CheckedRandomAccessList@3bdeb85a, 3, 6): success
test SubList.testUnmodAddAtPos(java.util.Collections$SynchronizedRandomAccessList@1bb2edb1, 3, 5): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(SubList$MyList@7f4e192d, 3, 6): success
test SubList.testUnmodClear([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@5edc16d8, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@67028136, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableList@77afff54, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$UnmodifiableRandomAccessList@722fd6d0, 3, 6): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear([42], 0, 1): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@3b5e525a, 0, 4): success
test SubList.testUnmodClear(java.util.Arrays$ArrayList@3b5e525a, 4, 6): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@1cdf5607, 1, 4): success
test SubList.testUnmodClear(java.util.AbstractList$RandomAccessSubList@40b68cb4, 0, 7): success
test SubList.testUnmodClear(java.util.Collections$CheckedRandomAccessList@2d5470f5, 3, 6): success
test SubList.testUnmodClear(java.util.Collections$SynchronizedRandomAccessList@5cf634a2, 3, 5): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(SubList$MyList@2a7aa58f, 3, 6): success
test SubList.testUnmodIteratorRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@6220375f, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@3be1ea13, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableList@7c08ad18, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$UnmodifiableRandomAccessList@185697c3, 3, 6): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove([42], 0, 1): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5a5628e5, 0, 4): success
test SubList.testUnmodIteratorRemove(java.util.Arrays$ArrayList@5a5628e5, 4, 6): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@1f7c6f6d, 1, 4): success
test SubList.testUnmodIteratorRemove(java.util.AbstractList$RandomAccessSubList@4b48f015, 0, 7): success
test SubList.testUnmodIteratorRemove(java.util.Collections$CheckedRandomAccessList@66f8afc2, 3, 6): success
test SubList.testUnmodIteratorRemove(java.util.Collections$SynchronizedRandomAccessList@2d968f48, 3, 5): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(SubList$MyList@4311e974, 3, 6): success
test SubList.testUnmodListIteratorAdd([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@2c1a9f35, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@27c203cf, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableList@4ece7ee7, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$UnmodifiableRandomAccessList@7de14881, 3, 6): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd([42], 0, 1): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@2f3d73de, 0, 4): success
test SubList.testUnmodListIteratorAdd(java.util.Arrays$ArrayList@2f3d73de, 4, 6): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@10231017, 1, 4): success
test SubList.testUnmodListIteratorAdd(java.util.AbstractList$RandomAccessSubList@5499c2a5, 0, 7): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$CheckedRandomAccessList@29b5d7fc, 3, 6): success
test SubList.testUnmodListIteratorAdd(java.util.Collections$SynchronizedRandomAccessList@46803b1b, 3, 5): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(SubList$MyList@70dab3a5, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@3c16a560, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@5751cc33, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableList@18239f7b, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$UnmodifiableRandomAccessList@7b726019, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext([42], 0, 1): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@24516b44, 0, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Arrays$ArrayList@24516b44, 4, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@643b7ac1, 1, 4): success
test SubList.testUnmodListIteratorRemoveNext(java.util.AbstractList$RandomAccessSubList@63643bc, 0, 7): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$CheckedRandomAccessList@47674806, 3, 6): success
test SubList.testUnmodListIteratorRemoveNext(java.util.Collections$SynchronizedRandomAccessList@4167056d, 3, 5): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(SubList$MyList@55f20779, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@73cb8374, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@447c6f8f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableList@50012b3d, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$UnmodifiableRandomAccessList@7d36f41f, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious([42], 0, 1): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@675d70a2, 0, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Arrays$ArrayList@675d70a2, 4, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@5bd89bc6, 1, 4): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.AbstractList$RandomAccessSubList@16b256d5, 0, 7): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$CheckedRandomAccessList@7b5ab632, 3, 6): success
test SubList.testUnmodListIteratorRemovePrevious(java.util.Collections$SynchronizedRandomAccessList@4923d579, 3, 5): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet([42], 0, 1): success
test SubList.testUnmodListIteratorSet(SubList$MyList@30ac9222, 3, 6): success
test SubList.testUnmodListIteratorSet([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@49c16497, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@5f2f8a34, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableList@4cf8c0c, 3, 6): success
test SubList.testUnmodListIteratorSet(java.util.Collections$UnmodifiableRandomAccessList@7c71c1cb, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious([42], 0, 1): success
test SubList.testUnmodListIteratorSetPrevious(SubList$MyList@2df61294, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@744e144b, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@762880cf, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableList@5930cb01, 3, 6): success
test SubList.testUnmodListIteratorSetPrevious(java.util.Collections$UnmodifiableRandomAccessList@cad9dd8, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(SubList$MyList@7db8cf33, 3, 6): success
test SubList.testUnmodRemove([42, 42, 42, 42, 42, 42], 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@74cc18e4, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@7eceb971, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableList@78b1c3b9, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$UnmodifiableRandomAccessList@8f216c1, 3, 6): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove([42], 0, 1): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@3cf092b9, 0, 4): success
test SubList.testUnmodRemove(java.util.Arrays$ArrayList@3cf092b9, 4, 6): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@12a95399, 1, 4): success
test SubList.testUnmodRemove(java.util.AbstractList$RandomAccessSubList@25df626f, 0, 7): success
test SubList.testUnmodRemove(java.util.Collections$CheckedRandomAccessList@13d8e5e, 3, 6): success
test SubList.testUnmodRemove(java.util.Collections$SynchronizedRandomAccessList@56a3ca23, 3, 5): success

===============================================
java/util/List/SubList.java
Total tests run: 1252, Passes: 1252, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
